













Core Data - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Core_Data";
		var wgTitle = "Core Data";
		var wgAction = "view";
		var wgArticleId = "2400228";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 266731677;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Core Data

From Wikipedia, the free encyclopedia

Jump to: navigation, search 





This article may require cleanup to meet Wikipedia's quality standards. Please improve this article if you can. (December 2008)







This article may require copy-editing for grammar, style, cohesion, tone or spelling. You can assist by editing it now. A how-to guide is available. (December 2008)


Core Data is part of the Cocoa API in Mac OS X first introduced with Mac OS X 10.4 Tiger. It allows data organised by the relational entity-attribute model to be serialised into XML, binary, or SQLite stores. The data can be manipulated using higher level objects representing entities and their relationships. Core Data manages the serialised version, providing object lifecycle and object graph management, including persistence. Core Data interfaces directly with SQLite, insulating the developer from the underlying SQL.
Just as Cocoa Bindings handles many of the duties of the Controller in a Model-View-Controller design, Core Data handles many of the duties of the data Model. Among other tasks, it handles change management, serializing to disk, memory footprint minimization, and queries against the data.




Contents


1 Usage
2 Storage formats
3 History and genesis
4 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Usage
Core Data describes data with a high level data model expressed in terms of entities and their relationships plus fetch requests that retrieve entities meeting specific criteria. Code can retrieve and manipulate this data on a purely object level without having to worry about the details of storage and retrieval. The controller objects available in Interface Builder can retrieve and manipulate these entities directly. When combined with Cocoa bindings the UI can display many components of the data model without needing background code.
For example: a developer might be writing a program to handle vCards. In order to manage these, the author intends to read the vCards into objects, and then store them in a single larger XML file. Using Core Data the developer would drag their schema from the data designer in Xcode into an interface builder window to create a GUI for their schema. They could then write standard Objective-C code to read vCard files and put the data into Core Data managed entities. From that point on the author's code manipulates these Core Data objects, rather than the underlying vCards. Connecting the Save menu item to the appropriate method in the controller object will direct the controller to examine the object stack, determine which objects are dirty, and then re-write a Core Data document file with these changes.

[edit] Storage formats
Core Data can serialize objects into XML, Binary, or SQLite for storage. With the release of Mac OS X 10.5 Leopard, developers can also create their own custom atomic store types. The details of how these are stored vary between formats - the XML store tries to make a file readable by other programs, while the SQLite store generates rather opaque files. This portion of Core Data is similar to the original EOF system, in that one can write fairly sophisticated queries. Unlike EOF, it is not possible to write your own SQL, likely because this would not be supported by the XML and Binary storage types.
Core Data schemas are standardized. If you have the Xcode Data Model file, you can read and write files in that format freely. Unlike EOF, though, Core Data is not currently designed for multiuser or simultaneous access. Schema migration is also non-trivial, virtually always requiring code. If other developers have access to and depend upon your data model, you may need to provide version translation code in addition to a new data model if your schema changes.

[edit] History and genesis





This article may contain original research or unverified claims. Please improve the article by adding references. See the talk page for details. (September 2007)


Core Data owes much of its design to an early NeXT product, Enterprise Objects Framework (EOF).
EOF was specifically aimed at object-relational mapping for high-end SQL database engines such as Microsoft SQL Server and Oracle. EOF's purpose was twofold, one to connect to the database engine and hide the implementation details, and two to read the data out of the simple relational format and translate that into a set of objects. Developers typically interacted with the objects only, dramatically simplifying development of complex programs for the cost of some "setup". The EOF object model was deliberately set up to make the resulting programs "document like", in that the user could edit the data locally in memory, and then write out all changes with a single Save command.
Throughout its history EOF "contained" a number of bits of extremely useful code that were not otherwise available under NeXTSTEP/OpenStep. For instance, EOF required the ability to track which objects were "dirty" so the system could later write them out, and this was presented to the developer not only as a document-like system, but also in the form of an unlimited Undo command stack. Many developers complained that this state management code was far too useful to be isolated in EOF, and it was moved into the Cocoa API during the transition to Mac OS X.
Oddly what was not translated was EOF itself. EOF was used primarily along with another OpenStep-era product, WebObjects, an application server originally based on Objective-C that was in the process of being ported to the Java programming language. As part of this conversion EOF was also converted to Java, and thus became much more difficult to use from Cocoa. Enough developers complained about this that Apple apparently decided to do something about it.
One critical realization is that the object state management system in EOF did not really have anything to do with relational databases. The same code could, and was, used by developers to manage graphs of other objects as well. In this role the really useful parts of EOF were those that automatically built the object sets from the raw data, and then tracked them. It is this concept, and perhaps code, that forms the basis of Core Data.

[edit] External links

developer.apple.com Core Data Page
CocoaDev WikiWikiWeb for the Mac OS X Developer Community
Core Data Class Overview, by Scott Stevenson
Build a Core Data Application, by Scott Stevenson








v • d • e

Mac OS X Core Foundation






Core Animation · Core Audio · Core Data · Core Image · Core Location · Core OpenGL · Core Services · Core Text · Core Video













v • d • e

Mac OS X





Applications

Address Book · Automator · Calculator · Chess · Dashboard · Dictionary · DVD Player · Finder · Front Row · Grapher · iCal · iChat · iSync · iTunes · Mail · Photo Booth · Preview · QuickTime · Safari · Stickies · TextEdit






Utilities

Activity Monitor · AirPort Utility · Archive Utility · Audio MIDI Setup · Bluetooth File Exchange · ColorSync · Console · Crash Reporter · DigitalColor Meter · Directory Utility · DiskImageMounter · Disk Utility · Font Book · Grab · Help Viewer · Image Capture · Installer · Keychain Access · Migration Assistant · Network Utility · ODBC Administrator · Remote Install Mac OS X · Screen Sharing · Software Update · System Preferences · System Profiler · Terminal · Universal Access · VoiceOver · X11






Technology and
user interface

Command key · Option key · Apple menu · AppleScript · Aqua · Audio Units · Bonjour · Boot Camp · BootX · Carbon · Cocoa · ColorSync · Core Animation · Core Audio · Core Data · Core Foundation · Core Image · Core OpenGL · Core Text · Core Video · CUPS · Darwin · Dock · Exposé · FileVault · Grand Central · icns · Inkwell · I/O Kit · Kernel panic · Keychain · Mach-O · MacRuby · Menu extra · OpenCL · Preference Pane · Property list · Quartz · QuickTime · Quick Look · Rosetta · Smart Folders · Spaces · Speakable items · Spotlight · Stacks · Time Machine · Uniform Type Identifier · Universal binary · WebKit · Xgrid · XNU · ZFS









Retrieved from "http://en.wikipedia.org/wiki/Core_Data"
Categories: Mac OS X APIsHidden categories: Cleanup from December 2008 | All pages needing cleanup | Wikipedia articles needing copy edit from December 2008 | All articles needing copy edit | Articles that may contain original research since September 2007 | All articles that may contain original research 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Italiano
日本語









 This page was last modified on 27 January 2009, at 12:02 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
