













POV-Ray - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "POV-Ray";
		var wgTitle = "POV-Ray";
		var wgAction = "view";
		var wgArticleId = "159350";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 278116182;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-c .de1, .source-c .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-c  {}
.source-c .head {}
.source-c .foot {}
.source-c .imp {font-weight: bold; color: red;}
.source-c .ln-xtra {color: #cc0; background-color: #ffc;}
.source-c li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-c li.li2 {font-weight: bold;}
.source-c .kw1 {color: #b1b100;}
.source-c .kw2 {color: #000000; font-weight: bold;}
.source-c .kw3 {color: #000066;}
.source-c .kw4 {color: #993333;}
.source-c .co1 {color: #808080; font-style: italic;}
.source-c .co2 {color: #339933;}
.source-c .coMULTI {color: #808080; font-style: italic;}
.source-c .es0 {color: #000099; font-weight: bold;}
.source-c .br0 {color: #66cc66;}
.source-c .st0 {color: #ff0000;}
.source-c .nu0 {color: #cc66cc;}
.source-c .me1 {color: #202020;}
.source-c .me2 {color: #202020;}

/*]]>*/

/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
 <!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); POV-Ray

From Wikipedia, the free encyclopedia

Jump to: navigation, search 

POV-Ray







Developed by
The POV-Team


Latest release
3.6 / 2004-10-03; 1641 days ago


Preview release
3.7.beta.29b / 2008-10-03; 180 days ago


Operating system
Cross-platform


Type
Ray tracer


License
POV-Ray License


Website
www.povray.org


The Persistence of Vision Raytracer, or POV-Ray, is a ray tracing program available for a variety of computer platforms. It was originally based on DKBTrace, written by David Kirk Buck and Aaron A. Collins. There are also influences from the earlier Polyray raytracer contributed by its author Alexander Enzmann. POV-Ray is freeware with the source code available.




Contents


1 History
2 Features

2.1 Current version
2.2 Primitives
2.3 Examples of the Scene Description Language


3 Modeling
4 Software

4.1 Development and maintenance
4.2 Platform Support
4.3 Licensing


5 See also
6 References
7 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] History
Some time in the 1980s, David Kirk Buck downloaded the source code for a Unix raytracer to his Amiga. He experimented with it for a while, eventually deciding to write his own raytracer, named DKBTrace after his initials. He posted it to his bulletin board system, thinking others might be interested in it. In 1987, Aaron A. Collins downloaded DKBTrace and began working on an x86-based port of it. He and David Buck collaborated to add several more features. When the program proved to be more popular than anticipated, they could not keep up with demand for more features. Thus, in July 1991 David turned over the project to a team of programmers. At the same time, he felt that it was inappropriate to use his initials on a program he no longer maintained. The name "STAR" (Software Taskforce on Animation and Rendering) was considered, but eventually the name became the "Persistence of Vision Raytracer", or "POV-Ray" for short.[1]
POV-Ray was the first ray tracer to render an image in orbit, rendered by Mark Shuttleworth inside the International Space Station.[2]
Features of the application and a summary of its history are discussed in an interview with David Kirk Buck and Chris Cason on episode 24 of FLOSS Weekly.[3]

[edit] Features




Glass scene rendered in POV-Ray, demonstrating radiosity, photon mapping, focal blur, and other photorealistic capabilities.


POV-Ray has matured substantially since it was created. Recent versions of the software include the following features:

A Turing-complete scene description language (SDL) that supports macros and loops.[4]
Library of ready-made scenes, textures, and objects
Support for a number of geometric primitives and constructive solid geometry
Several kinds of light sources
Atmospheric effects such as fog and media (smoke, clouds)
Reflections, refractions, and light caustics using photon mapping
Surface patterns such as wrinkles, bumps, and ripples, for use in procedural textures and bump mapping
Radiosity
Image format support for textures and rendered output, including TGA, PNG, JPEG (only input) among others
Extensive user documentation

One of POV-Ray's main attractions is its large collection of third party support. A large number of tools, textures, models, scenes, and tutorials can be found on the web. It is also a useful reference for those wanting to learn how ray tracing and related geometry and graphics algorithms work.

[edit] Current version
The current official version of POV-Ray is 3.6. Some of the main features of this release:

Extends UV-mapping to more primitives.
Adds 16 and 32 bit integer data to density file.
Various bugfixes and speed-ups.
Improved 64 bit compatibility.

Beta-testing of version 3.7 is underway as of July 2008. The main improvement over 3.6 will be SMP support to allow the renderer to take advantage of multiple processors. Additionally, support has been added for HDRI, including the OpenEXR and Radiance file formats, and improved bounding using BSP trees.
In July 2006, Intel corporation started using the beta version to demonstrate their new dual-core Conroe processor due to the efficiency of the 3.7 beta's SMP implementation.[5]

[edit] Primitives




Some dice rendered in POV-Ray. Constructive solid geometry, refraction and focal blur are demonstrated.


POV-Ray, in addition to standard geometric shapes like tori, spheres and heightfields, supports mathematically defined primitives such as the isosurface (a finite approximation of an arbitrary function), the polynomial primitive (an infinite object defined by a 15th order or lower polynomial), the julia fractal (a 3-dimensional slice of a 4-dimensional fractal), the superquadratic ellipsoid (intermediate between a sphere and a cube), and the parametric primitive (using equations that represent its surface, rather than its interior).
POV-Ray internally represents objects using their mathematical definitions; all POV-Ray primitive objects can be described by mathematical functions. This is different from many 3D computer modeling packages, which typically use triangle meshes to compose all objects.
This fact provides POV-Ray with several advantages and disadvantages over other rendering / modeling systems. POV-Ray primitives are more accurate than their polygonal counterparts. Objects that can be described in terms of spheres, planar surfaces, cylinders, tori and the like are perfectly smooth and mathematically accurate in POV-Ray renderings, whereas polygonal artifacts may be visible in mesh-based modeling software. POV-Ray primitives are also simpler to define than most of their polygonal counterparts. In POV-Ray, a sphere is described simply by its center and radius; in a mesh-based environment, a sphere must be described by a multitude of small polygons.
On the other hand, primitive-, script-based modeling is not always a practical method to create objects such as realistic characters or complex man-made artifacts like cars. Those objects have to be created in mesh-based modeling applications such as Wings 3D or Blender and then converted to POV-Ray's own mesh format.

[edit] Examples of the Scene Description Language
The following is an example of the scene description language used by POV-Ray to describe a scene to render. It demonstrates the use of a background colour, camera, lights, a simple box shape having a surface normal and finish, and the transforming effects of rotation.




POV-Ray image output based on the script to the left




 #version 3.6;
 #include "colors.inc"                                      //Includes a separate file defining a number of common colours
 global_settings { assumed_gamma 1.0 }
 
 background   { color rgb <0.25, 0.25, 0.25> }              //Sets a background colour for the image (dark grey)
 
 camera       { location  <0.0, 0.5, -4.0>                  //Places a camera
                direction 1.5*z                             //Sets, among other things, the field of view of the camera
                right     x*image_width/image_height        //Sets the aspect ratio of the image
                look_at   <0.0, 0.0, 0.0> }                 //Tells the camera where to look
 
 light_source { <0, 0, 0>                                   //Places a light source
                color rgb <1, 1, 1>                         //Sets the color of the light source (white)
                translate <-5, 5, -5> }                     //Moves the light source to a desired location
 
 light_source { <0, 0, 0>                                   //Places a light source        
                color rgb <0.25, 0.25, 0.25>                //Sets the color of the light source (dark grey)
                translate <6, -6, -6> }                     //Moves the light source to a desired location
 
 box          { <-0.5, -0.5, -0.5>,                         //Sets a first corner of a cuboid
                <0.5, 0.5, 0.5>                             //Sets a second corner of a cuboid
                texture { pigment { color Red }             //Sets a color for the box ("Red" as defined in "colors.inc")
                          finish  { specular 0.6 }          //Sets how the surface of the box reflects light
                          normal  { agate 0.25 scale 1/2 }  //Sets a bumpiness for the box using the in-built model, "agate"
                        } 
                rotate <45,46,47> }                         //Rotates the box

The following script fragment shows the use of variable declaration, assignment, comparison and the while loop construct:




POV-Ray image output based on the script to the left




 #declare the_angle = 0;
 
 #while (the_angle < 360)
 	box {   <-0.5, -0.5, -0.5>
 		<0.5, 0.5, 0.5>
                texture { pigment { color Red }
                          finish  { specular 0.6 }
                          normal  { agate 0.25 scale 1/2 } }
 		rotate the_angle }
 	#declare the_angle = the_angle + 45;
 #end


[edit] Modeling
The POV-ray program itself does not include a modeling feature; it is essentially a pure renderer with a sophisticated model description language. To accompany this feature set, third parties have developed a large variety of modeling software, some specialized for POV-Ray, others supporting import and export of its data structures.
A number of POV-Ray compatible modelers are linked from Povray.org: Modelling Programs.

[edit] Software

[edit] Development and maintenance
Official modifications to the POV-Ray source tree are done and/or approved by the POV-Team. Most patch submission and/or bug reporting is done in the POV-Ray newsgroups on the povray.org news server. Since POV-Ray's source is available there are unofficial forks and patched versions of POV-Ray available from third parties; however, these are not officially supported by the POV-Team.
Official POV-Ray versions currently do not support shader plug-ins[6]. Some features, like radiosity and splines are still in development and may be subject to syntactical change.

[edit] Platform Support
POV-Ray is distributed in compiled format for Macintosh, Windows and Linux. Support for Intel Macs is not available in the Macintosh version, but since Mac OS X is a version of Unix the Linux version can be compiled on it. POV-Ray also could be ported to any platform which has compatible C++ compiler.
People with Intel Macs can use MegaPOV though, as that is compiled as Universal Binary.[citation needed]

[edit] Licensing
POV-Ray is distributed under the POV-Ray License, which permits free distribution of the program source code and binaries, but restricts commercial distribution and the creation of derivative works other than fully functional versions of POV-Ray.
Although the source code is available for modification, due to specific restrictions, it is not open source according to the OSI definition of the term. One of the reasons that POV-Ray is not licensed under the free software GNU General Public License (GPL), or other open source licenses, is that POV-Ray was developed before the GPL-style licenses became widely used; the developers wrote their own license for the release of POV-Ray, and contributors to the software have worked under the assumption that their contributions would be licensed under the POV-Ray License.
The whereabouts of some of the contributors to the source code are unknown, and therefore the license cannot be changed, since the permission of all contributors would be required.
A complete rewrite of POV-Ray ("POV-Ray 4.0") is currently under discussion, which would use a more liberal license, most likely GPL v3[7].

[edit] See also



Wikimedia Commons has media related to: POV-Ray



YafRay (Yet Another Free Raytracer)
Kerkythea Free ray tracing program with enhanced Sketchup compatibility
Sunflow an open source rendering system for photo-realistic image synthesis written in Java
Blender (software) a free and open-source software program for 3D modeling, animation, and rendering


[edit] References


^ POV-Ray: Documentation: 1.1.5 The Early History of POV-Ray
^ Reach for the stars
^ The TWiT Netcast Network with Leo Laporte
^ Paul Bourke: Supershape in 3D are examples of POV-Ray images made with very short code
^ http://www.intel.com/performance/desktop/extreme/high_end_rendering.htm
^ for such an implementation, see e.g. http://www.aetec.ee/fv/vkhomep.nsf/pages/povman2
^ Cason, Chris (2007-09-06). "Re: Status of Moray? (The answer is about POVRay)". http://news.povray.org/povray.general/message/%3C46e091ef%241%40news.povray.org%3E/#%3C46e091ef%241%40news.povray.org%3E. Retrieved on 2007-12-09.  "Now that process has been completed, as a group we feel the GPL3 is the way to go and have informally decided that 4.0 will be GPL3-licensed." 



[edit] External links

POV-Ray homepage
POV-Ray at the Open Directory Project




Retrieved from "http://en.wikipedia.org/wiki/POV-Ray"
Categories: Freeware 3D graphics software | Domain-specific programming languages | Global illumination software | Articles with example code | Cross-platform softwareHidden categories: All articles with unsourced statements | Articles with unsourced statements since March 2009 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Afrikaans
Català
Česky
Deutsch
Español
Français
한국어
Hrvatski
Italiano
Nederlands
日本語
Polski
Português
Русский
Suomi
Svenska
Türkçe
中文









 This page was last modified on 18 March 2009, at 15:03.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
