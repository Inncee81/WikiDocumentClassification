













XForms - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "XForms";
		var wgTitle = "XForms";
		var wgAction = "view";
		var wgArticleId = "424362";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281035317;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); XForms

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
For other uses, see XForms (disambiguation).
XForms is an XML format for the specification of a data processing model for XML data and user interface(s) for the XML data, such as web forms. XForms was designed to be the next generation of HTML / XHTML forms, but is generic enough that it can also be used in a standalone manner or with presentation languages other than XHTML to describe a user interface and a set of common data manipulation tasks.
XForms, much like XHTML 2.0 which is currently under development as of 2008[update] and within which XForms will be embedded, differs from previous versions of XHTML.
XForms 1.0 (Third Edition) was published on 29 October 2007. The original XForms specification was made an official W3C Recommendation on 14 October 2003.
XForms 1.1, which introduces a number of improvements, reached the status of W3C Candidate Recommendation on 29 November 2007.




Contents


1 Differences from HTML forms
2 Software support
3 Implementation technologies compared
4 XForms as part of the XRX Application Architecture
5 XForms for Mobile Devices

5.1 Benefits
5.2 Mobile Implementations


6 See also
7 References
8 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Differences from HTML forms
Unlike the original HTML forms, the creators of XForms have used a Model-View-Controller approach. The "model" consists of one or more XForms models describing form data, constraints upon that data, and submissions. The "view" describes what controls appear in the form, how they are grouped together, and what data they are bound to. CSS can be used to describe a form's appearance.
An XForms document can be as simple as an HTML form (by only specifying the submission element in the model section, and placing the controls in the body), but XForms includes many advanced features. For example, new data can be requested and used to update the form while it is running, much like using XmlHttpRequest/AJAX except without scripting. The form author can validate user data against XML Schema data types, require certain data, disable input controls or change sections of the form depending on circumstances, enforce particular relationships between data, input variable length arrays of data, output calculated values derived from form data, prefill entries using an XML document, respond to actions in real time (versus at submission time), and modify the style of each control depending on the device they are displayed on (browser versus mobile versus text only, etc.). There is often no need for any scripting with languages such as JavaScript.
Like legacy forms, XForms can use various non-XML submission protocols (multipart/form-data, application/x-www-form-urlencoded), but a new feature is that XForms can send data to a server in XML format. XML documents can also be used to prefill data in the form. Because XML is a standard, many tools exist that can parse and modify data upon submission, unlike the case with legacy forms where in general the data needs to be parsed and manipulated on a case by case basis. XForms is itself an XML dialect, and therefore can create and be created from other XML documents using XSLT. Using transformations, XForms can be automatically created from XML Schemas, and XForms can be converted to legacy XHTML forms: this is basically how server side XForms work today.

[edit] Software support
At the time of this writing, no widely used web browser supports XForms natively. However, various browser plugins and client-side extensions exist. The following lists some client-side implementations:

The Firefox XForms extension is part of the Mozilla Project, and is compatible with releases of Firefox and Mozilla, and is built with nightly builds on most platforms as well as of version 0.8.4 (February 6th, 2008). Full XForms 1.0 SE support is not complete but covers most of the specification with a notable exception of attribute-based repeating used in HTML tables. The extension is available for both Firefox 2 and Firefox 3.


IBM Lotus Forms supports development and deployment of XForms-based pure XML forms. Trial downloads are available of an Eclipse-based visual design environment and a client-side viewer that can run XForms-based forms both in the web browser and as a standalone desktop application.
formsPlayer extends Internet Explorer 6+ to include not only support for the full XForms standard, but also to provide DOM 2 Events, DOM 3 XPath, XML Events and the DOM 3 Implementation Registry.
FormFaces (Latest release is 2007-01-19) is a pure JavaScript processor. This means that XForms+HTML can be sent directly to the browser where JavaScript translates XForms controls into regular HTML form controls and processes the bindings directly within the browser. FormFaces is compatible with browsers that implement XHTML 1.0, ECMAScript-262 3rd Edition, and DOM Level 2 which includes Internet Explorer, Mozilla, Firefox, Opera, Konqueror, Safari, and NetFront.


Convex is another client-side solution for IE6. It uses a hidden Java applet and is available as open source from the Chiba project. It uses the same engine as the server-side solution (see below) while offering the experience of a local implementation.
The Ubiquity XForms processor (at Google Code) allows developers to use XForms markup to create interactive web applications. Ubiquity XForms adds new APIs to a number of popular Ajax libraries, making XForms processing available in standard browsers, without the need for a download.
XSLTForms is based on XSLT 1.0. It produces almost the same XHTML with Javascript as AJAXForms but can be used on any browser with an XSLT engineÂ : Internet Explorer, Mozilla, Firefox, Opera and Safari (open source license)

The following implementations are pure client-side implementations that do not reside in a web browser:

IBM Lotus Forms supports the use of XForms-based pure XML forms within a web browser but also as a standalone application.


OpenOffice.org versions 2.0 and greater support XForms [1].
X-Smiles is a client-side Java implementation (open source license). X-Smiles supports XForms along with a lot of current XML languages, such as XHTML, CSS, and SVG.
DENG is a lightweight XML Browser Engine that compiles XForms into Flash. DENG has support for CSS-3 and XForms.
PicoForms has a client-side Java browser implementation supporting XForms. They have demonstration versions of their processor with support for XHTML, CSS, XML Events, and XForms for J2ME-compatible mobile devices.
DataMovil has a client-side implementation of Xforms for mobile devices supporting J2ME CDC/Personal Profile and CLDC/MIDP.

XForms can also be used today through various server-side technologies which convert XForms to HTML forms and other widgets (typically based on Ajax technology) on the fly and transparently to users. Implementations include:

Chiba (open source license)
Orbeon Forms (open source license) (Latest release is 3.6.0 December 7, 2007. Beta is 3.7 beta 2008-08-26)

The following implementations provide a server-side compiler that produces HTML and JavaScript from XHTML/XForms documents:

IBM Lotus Forms WebForm Server supports development and deployment of XForms-based pure XML forms with a zero footprint on the client-side by transforming to HTML and JavaScript and AJAX calls to facilitate dynamic behaviors described by the XForms-based document. (Commercial product)
AJAXForms transforms XHTML/XForms to HTML with Javascript (open source license - inactive since November 2006)
eXtremeBuilder (Korean only) RIA solution based on XHTML/XForms with Javascript


[edit] Implementation technologies compared
FormFaces, AJAXForms, XSLTForms, Chiba and Orbeon Forms are based on Ajax technology. The amount of server-side and client-side processing varies across these implementations. For example, FormFaces and XSLTForms provides 100% XForms client-side processing and data model updates via pure Ajax processing on the XForms standard. The others use server-side Java XForms processing transcoding to Ajax markup prior to delivering the content to the browser. Both techniques can work across browsers. Each implementation is significantly different with respect to dependencies, scalability, performance, licensing, maturity, network traffic, offline capability, and cross browser compatibility. System architects should evaluate these constraints against their need to determine potential risks and objectives.
Plugins like FormsPlayer and other client-side technology can have some benefits as well: because they integrate themselves into the browser, they will work with existing server architectures, can be more responsive, require fewer server fetches. They can also present themselves in more user-friendly ways (i.e. controls that do not already exist in the browser, like sliding scales, can be added to a page), although the advent of JavaScript widgets is currently offsetting that benefit.
The tradeoff between server-side and client plug-in solutions is where the software is maintained; either each client must install the required plug-in, or the server architecture must change to accommodate the XForms transcoder engine language technology. It is in theory possible to mix both of these solutions, for instance testing the browser for a client-side XForms implementation and serving native XForms in that case, and defaulting to a server solution in other cases.
FormFaces and XSLTForms provide a "zero software" solution on either the client or server: no new software needs to be installed on the client and the solution can be used in conjunction with any server-side architecture. This is possible because FormFaces is written 100% in Ajax and because XSLTForms is written in XSLT and in Ajax. The tradeoff is that compared to other solutions, more code is initially downloaded to the client (code can be cached on the client), and XML Schema validation is not yet supported.

[edit] XForms as part of the XRX Application Architecture
Because XForms makes it easy to edit complex XML data there are many advantages to using XForms with native XML databases that frequently leverage REST interfaces. The combination of three technologies (XForms on the client, REST interfaces and XQuery on the server) is collectively known as XRX application development. XRX is known for its simple architecture that uses XML both on the client and in the database and avoids the transformations to object or relational data structures. See XRX:Simple, Elegant, Disruptive

[edit] XForms for Mobile Devices

[edit] Benefits
XForms provides specific benefits when used on mobile devices:

User interfaces using XForms require fewer round trips with the server and are in that sense more self contained than user interfaces using HTML 4 forms.
Capabilities of mobile devices vary greatly; consequently the amount of the work involved in generating different user interfaces for different devices is of particular concern in the mobile world. XForms has been designed from the ground up to allow forms to be described independently of the device, which reduces the amount of work required to target multiple devices.
XForms reduces the need for JavaScript, which is particularly interesting as JavaScript support varies greatly on mobile devices and cannot be widely relied upon. This also allows systems on which JavaScript is disabled for security concerns to continue to operate flawlessly.


[edit] Mobile Implementations
Despite the benefits of XForms for mobile devices, XForms on mobile devices is still an emerging technology at best. So far, PicoForms, SATEC(DataMovil), IBM, Oracle and FormFaces have produced significant initiatives:

PicoForms Micro Edition Browser supports XForms and runs on cell phones supporting MIDP 2.0 and CLDC 1.x. It also supports PDAs including Palm and Pocket PCs.
DataMovil is a platform for the development and deployment of mobile applications that includes a client that encapsulates a XForms processors. It runs on a variety of devices including TabletPC, UMPC, PDAs and advanced phones. It is Java based and runs on J2ME CDC/Personal Profile and CLDC/MIDP Java Virtual Machines.
IBM Forms for Mobile Devices was an implementation of XForms that run on Palm-powered devices and showed how XForms could be used to create form-based enterprise applications running on mobile devices. This package was been released by IBM on alphaWorks, their site showcasing emerging technologies but has since been retired.
Oracle Wireless Client has released a preview of their Wireless Client in March 2004. Despite its name, the preview contains no software that run on a mobile device. Instead, it is delivered in the form of a plug-in for Internet Explorer, hence maybe the "preview" in the name. The plug-in run XForms client-side, just like the browser would if it supported XForms natively.
FormFaces Mobile Solution is a 100% JavaScript implementation targeted to run within NetFront browser (any ECMA-262 3rd Edition, and DOM Level 2 compatible browser) which supports many OS deployments including Palm and Pocket PC mobile devices.
[1]The Yahoo go application's technology is called Blueprint, and it is based on XForms, according to its documentation.


[edit] See also

IBM Lotus Forms
Infopath Form Services


[edit] References



Wikibooks has a book on the topic of
XForms




W3C Candidate Recommendation


T. V. Raman (2004). XForms: XML Powered Web Forms. Boston: Addison-Wesley. ISBN 0-321-15499-1.Â 
Dubinko, Micah (2003). XForms Essentials. Sebastopol, CA; Farnham: O'Reilly & Associates. ISBN 0-596-00369-2. http://xformsinstitute.com/essentials/.Â  (text available under the GNU Free Documentation License)


^ Editing XForms, http://wiki.services.openoffice.org/wiki/Documentation/OOoAuthors_User_Manual/Writer_Guide/XForms, 13/10/2008


[edit] External links

XForms Resources at W3C

The Forms Working Group
XForms 1.0 Frequently Asked Questions
XForms 1.0 (Third Edition) was a W3C Recommendation on 29 October 2007
A quick introduction to XForms for HTML Authors by Steven Pemberton
XForms Quick Reference
XForms 1.1 was a W3C Candidate Recommendation on 29 November 2007


XML:Forms at the Open Directory Project








vÂ â¢Â dÂ â¢Â e

Standards of the World Wide Web Consortium





Recommendations

Canonical XMLÂ Â· CDFÂ Â· CSSÂ Â· DOMÂ Â· HTMLÂ Â· MathMLÂ Â· OWLÂ Â· P3PÂ Â· PLSÂ Â· RDFÂ Â· RDF SchemaÂ Â· SISRÂ Â· SMILÂ Â· SOAPÂ Â· SRGSÂ Â· SSMLÂ Â· SVGÂ Â· SPARQLÂ Â· Timed TextÂ Â· VoiceXMLÂ Â· WSDLÂ Â· XFormsÂ Â· XHTMLÂ Â· XLinkÂ Â· XMLÂ Â· XML BaseÂ Â· XML EncryptionÂ Â· XML EventsÂ Â· XML Information SetÂ Â· XML SchemaÂ Â· XML SignatureÂ Â· XPathÂ Â· XPointerÂ Â· XQueryÂ Â· XSLÂ Â· XSL-FOÂ Â· XSLT






Notes

XAdESÂ Â· XHTML+SMIL






Working Drafts

CCXMLÂ Â· CURIEÂ Â· HTML 5Â Â· InkMLÂ Â· WICDÂ Â· XFDLÂ Â· XFramesÂ Â· XBLÂ Â· XHTML+MathML+SVGÂ Â· XProc Â Â· OWL 2






Guidelines

Web Content Accessibility Guidelines






deprecated

HDMLÂ Â· JSSSÂ Â· PGMLÂ Â· VML









Retrieved from "http://en.wikipedia.org/wiki/XForms"
Categories: World Wide Web Consortium standards | XML-based standards | User interface markup languagesHidden categories: Articles containing potentially dated statements from 2008 | All articles containing potentially dated statements 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




Â 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


CatalÃ 
Deutsch
EspaÃ±ol
FranÃ§ais
Ãslenska
æ¥æ¬èª
Polski
PortuguÃªs
Ð ÑÑÑÐºÐ¸Ð¹
Svenska
Ð£ÐºÑÐ°ÑÐ½ÑÑÐºÐ°
ä¸­æ









 This page was last modified on 1 April 2009, at 07:22.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  WikipediaÂ® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
