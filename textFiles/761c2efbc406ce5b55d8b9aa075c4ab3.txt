













Dynamic memory allocation - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Dynamic_memory_allocation";
		var wgTitle = "Dynamic memory allocation";
		var wgAction = "view";
		var wgArticleId = "547117";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 275270337;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Dynamic memory allocation

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
In computer science, dynamic memory allocation is the allocation of memory storage for use in a computer program during the runtime of that program. It can be seen also as a way of distributing ownership of limited memory resources among many pieces of data and code.
Dynamically allocated memory exists until it is released either explicitly by the programmer, exiting a block, or by the garbage collector. This is in contrast to static memory allocation, which has a fixed duration. It is said that an object so allocated has a dynamic lifetime.




Contents


1 Details
2 Implementations

2.1 Fixed-size-blocks allocation
2.2 Buddy blocks


3 See also
4 References
5 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Details

The task of fulfilling allocation request

Finding a block of unused memory of sufficient size




Problems during fulfilling allocation request

Internal and external fragmentation.

Reduction needs special care, thus making implementation more complex (see algorithm efficiency).


Allocator's metadata can inflate the size of (individually) small allocations;

Chunking attempts to reduce this effect.





Usually, memory is allocated from a large pool of unused memory area called the heap (also called the free store). Since the precise location of the allocation is not known in advance, the memory is accessed indirectly, usually via a reference. The precise algorithm used to organize the memory area and allocate and deallocate chunks is hidden behind an abstract interface and may use any of the methods described below.

[edit] Implementations

[edit] Fixed-size-blocks allocation
Main article: memory pool
Fixed-size-blocks allocation, also called memory pool allocation, uses a free list of fixed-size blocks of memory (often all of the same size). This works well for simple embedded systems.

[edit] Buddy blocks
For more details on this topic, see Buddy memory allocation.
In this system, memory is allocated from a large block in memory that is a power of two in size. If the block is more than twice as large as desired, it is broken in two. One of the halves is selected, and the process repeats (checking the size again and splitting if needed) until the block is just large enough.
All the blocks of a particular size are kept in a sorted linked list or tree. When a block is freed, it is compared to its buddy. If they are both free, they are combined and placed in the next-largest size buddy-block list. (When a block is allocated, the allocator will start with the smallest sufficiently large block avoiding needlessly breaking blocks)

[edit] See also

Automatic memory allocation
Hazard pointer
Heap overflow
Hoard memory allocator
malloc
Memory pool
mmap
obstack
Slab allocation
Stack-based memory allocation
new (C++)
Java Virtual Machine heap


[edit] References

Donald Knuth. Fundamental Algorithms, Third Edition. Addison-Wesley, 1997. ISBN 0-201-89683-4. Section 2.5: Dynamic Storage Allocation, pp.435–456.
Herbert Glarner's visualized Dynamic Storage Allocation, describing efficient techniques
Simple Memory Allocation Algorithms on OSDEV Community
Wilson, P.R.; Johnstone, M.S.; Neely, M.; Boles, D. (1995). "Dynamic Storage Allocation: A Survey and Critical Review". Memory Management: International Workshop, Iwmm'95, Kinross, Uk, September 27-29, 1995: Proceedings. http://books.google.com/books?hl=en&lr=&ie=UTF-8&id=m0yZN2bA3TcC&oi=fnd&pg=PA1&dq=paul+wilson&ots=H28axwHr6U&sig=cCCwN72PZFqLtnjRWhIvpbXbc0c. Retrieved on 2008-01-06. 
Berger, E.D.; Zorn, B.G.; McKinley, K.S. (2001). "Composing high-performance memory allocators". ACM SIGPLAN Notices 36 (5): 114–124. doi:10.1145/381694. http://portal.acm.org/citation.cfm?id=381694.378821. 
Berger, E.D.; Zorn, B.G.; McKinley, K.S. (2002). "Reconsidering custom memory allocation". Proceedings of the 17th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications: 1-12, ACM Press New York, NY, USA. 


[edit] External links

Sample bit-mapped arena memory allocator in C
TLSF: a constant time allocator for real-time systems
Slides for knowing about Dynamic memory allocation




Retrieved from "http://en.wikipedia.org/wiki/Dynamic_memory_allocation"
Categories: Memory management 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Deutsch
Español
한국어
Italiano
עברית
Latviešu
日本語
Polski
Português
Русский









 This page was last modified on 5 March 2009, at 22:51.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
