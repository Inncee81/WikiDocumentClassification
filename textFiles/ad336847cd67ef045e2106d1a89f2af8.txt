













Code 39 - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Code_39";
		var wgTitle = "Code 39";
		var wgAction = "view";
		var wgArticleId = "309418";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 280244554;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
/*<![CDATA[*/
.source-python {line-height: normal;}
.source-python li, .source-python pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for python
 * CSS class: source-python, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-python .de1, .source-python .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-python  {}
.source-python .head {}
.source-python .foot {}
.source-python .imp {font-weight: bold; color: red;}
.source-python .ln-xtra {color: #cc0; background-color: #ffc;}
.source-python li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-python li.li2 {font-weight: bold;}
.source-python .kw1 {color: #ff7700;font-weight:bold;}
.source-python .kw2 {color: #008000;}
.source-python .kw3 {color: #dc143c;}
.source-python .kw4 {color: #0000cd;}
.source-python .co1 {color: #808080; font-style: italic;}
.source-python .coMULTI {color: #808080; font-style: italic;}
.source-python .es0 {color: #000099; font-weight: bold;}
.source-python .br0 {color: #66cc66;}
.source-python .st0 {color: #483d8b;}
.source-python .nu0 {color: #ff4500;}
.source-python .me1 {color: black;}

/*]]>*/

/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
/*<![CDATA[*/
.source-vb {line-height: normal;}
.source-vb li, .source-vb pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for vb
 * CSS class: source-vb, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-vb .de1, .source-vb .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-vb  {}
.source-vb .head {}
.source-vb .foot {}
.source-vb .imp {font-weight: bold; color: red;}
.source-vb .ln-xtra {color: #cc0; background-color: #ffc;}
.source-vb li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-vb li.li2 {font-weight: bold;}
.source-vb .kw1 {color: #b1b100;}
.source-vb .co1 {color: #808080;}
.source-vb .es0 {color: #000099;}
.source-vb .br0 {color: #66cc66;}
.source-vb .st0 {color: #ff0000;}
.source-vb .nu0 {color: #cc66cc;}
.source-vb .me1 {color: #66cc66;}

/*]]>*/

/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
/*<![CDATA[*/
.source-java {line-height: normal;}
.source-java li, .source-java pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for java
 * CSS class: source-java, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-java .de1, .source-java .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-java  {}
.source-java .head {}
.source-java .foot {}
.source-java .imp {font-weight: bold; color: red;}
.source-java .ln-xtra {color: #cc0; background-color: #ffc;}
.source-java li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-java li.li2 {font-weight: bold;}
.source-java .kw1 {color: #b1b100;}
.source-java .kw2 {color: #000000; font-weight: bold;}
.source-java .kw3 {color: #aaaadd; font-weight: bold;}
.source-java .kw4 {color: #993333;}
.source-java .co1 {color: #808080; font-style: italic;}
.source-java .co2 {color: #a1a100;}
.source-java .coMULTI {color: #808080; font-style: italic;}
.source-java .es0 {color: #000099; font-weight: bold;}
.source-java .br0 {color: #66cc66;}
.source-java .st0 {color: #ff0000;}
.source-java .nu0 {color: #cc66cc;}
.source-java .me1 {color: #006600;}
.source-java .me2 {color: #006600;}

/*]]>*/

/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
/*<![CDATA[*/
.source-csharp {line-height: normal;}
.source-csharp li, .source-csharp pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for csharp
 * CSS class: source-csharp, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-csharp .de1, .source-csharp .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-csharp  {}
.source-csharp .head {}
.source-csharp .foot {}
.source-csharp .imp {font-weight: bold; color: red;}
.source-csharp .ln-xtra {color: #cc0; background-color: #ffc;}
.source-csharp li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-csharp li.li2 {font-weight: bold;}
.source-csharp .kw1 {color: #0600FF;}
.source-csharp .kw2 {color: #FF8000; font-weight: bold;}
.source-csharp .kw3 {color: #008000;}
.source-csharp .kw4 {color: #FF0000;}
.source-csharp .kw5 {color: #000000;}
.source-csharp .co1 {color: #008080; font-style: italic;}
.source-csharp .co2 {color: #008080;}
.source-csharp .coMULTI {color: #008080; font-style: italic;}
.source-csharp .es0 {color: #008080; font-weight: bold;}
.source-csharp .br0 {color: #008000;}
.source-csharp .st0 {color: #808080;}
.source-csharp .nu0 {color: #FF0000;}
.source-csharp .me1 {color: #0000FF;}
.source-csharp .me2 {color: #0000FF;}

/*]]>*/

/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
/*<![CDATA[*/
.source-perl {line-height: normal;}
.source-perl li, .source-perl pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for perl
 * CSS class: source-perl, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-perl .de1, .source-perl .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-perl  {}
.source-perl .head {}
.source-perl .foot {}
.source-perl .imp {font-weight: bold; color: red;}
.source-perl .ln-xtra {color: #cc0; background-color: #ffc;}
.source-perl li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-perl li.li2 {font-weight: bold;}
.source-perl .kw1 {color: #b1b100;}
.source-perl .kw2 {color: #000000; font-weight: bold;}
.source-perl .kw3 {color: #000066;}
.source-perl .co1 {color: #808080; font-style: italic;}
.source-perl .coMULTI {color: #808080; font-style: italic;}
.source-perl .es0 {color: #000099; font-weight: bold;}
.source-perl .br0 {color: #66cc66;}
.source-perl .st0 {color: #ff0000;}
.source-perl .nu0 {color: #cc66cc;}
.source-perl .me1 {color: #006600;}
.source-perl .me2 {color: #006600;}
.source-perl .re0 {color: #0000ff;}
.source-perl .re4 {color: #009999;}

/*]]>*/

/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
/*<![CDATA[*/
.source-php {line-height: normal;}
.source-php li, .source-php pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for php
 * CSS class: source-php, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-php .de1, .source-php .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-php  {}
.source-php .head {}
.source-php .foot {}
.source-php .imp {font-weight: bold; color: red;}
.source-php .ln-xtra {color: #cc0; background-color: #ffc;}
.source-php li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-php li.li2 {font-weight: bold;}
.source-php .kw1 {color: #b1b100;}
.source-php .kw2 {color: #000000; font-weight: bold;}
.source-php .kw3 {color: #000066;}
.source-php .co1 {color: #808080; font-style: italic;}
.source-php .co2 {color: #808080; font-style: italic;}
.source-php .coMULTI {color: #808080; font-style: italic;}
.source-php .es0 {color: #000099; font-weight: bold;}
.source-php .br0 {color: #66cc66;}
.source-php .st0 {color: #ff0000;}
.source-php .nu0 {color: #cc66cc;}
.source-php .me1 {color: #006600;}
.source-php .me2 {color: #006600;}
.source-php .sc0 {}
.source-php .sc1 {}
.source-php .sc2 {}
.source-php .sc3 {}
.source-php .re0 {color: #0000ff;}
.source-php .re1 {color: #ff0000}

/*]]>*/

/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
 <!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Code 39

From Wikipedia, the free encyclopedia

Jump to: navigation, search 




A Code 39 Barcode Label






"WIKIPEDIA" encoded in Code 39


Code 39 (also known as "USS Code 39", "Code 3/9", "Code 3 of 9", "USD-3", "Alpha39", "Type 39") is a barcode symbology that can encode uppercase letters (A through Z), digits (0 through 9) and a handful of special characters like the $ sign. The barcode itself does not contain a check digit (in contrast to—for instance—Code 128), but it can be considered self-checking by some, on the grounds that a single erroneously interpreted bar cannot generate another valid character. Possibly the most serious drawback of Code 39 is its low data density: It requires more space to encode data in Code 39 than, for example, in Code 128. This means that very small goods cannot be labeled with a Code 39 based barcode. However, Code 39 is still widely used and can be decoded with virtually any barcode reader. One advantage of Code 39 is that since there is no need to generate a check digit, it can easily be integrated into existing printing system by adding a barcode font to the system or printer and then printing the raw data in that font.
The name Code 39 is derived from the fact that three of the nine elements that constitute a codeword are wide elements, the remaining six are narrow. Code 39 was developed by Dr. David Allais and Ray Stevens of Intermec in 1974. It was later standardised as ANSI MH 10.8 M-1983 and MIL-STD-1189.
The width ratio between narrow and wide can be chosen between 1:2 and 1:3.




Contents


1 Encoding
2 Code 39 mod 43
3 Full ASCII Code 39
4 External Links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Encoding
The * character presented below is not a true encodable character, but is the start and stop 'symbol' for Code 39. The asymmetry of the symbol allows the reader to determine the direction of the barcode being scanned. This code is traditionally mapped to the * character in barcode fonts and will often appear with the human-readable representation alongside the barcode.
These tables outline the 3 of 9 specification:




3 of 9 Characters




Legend


Format1
Format2
Desc


W
B
Wide - Black


N
b
Narrow - Black


w
W
Wide - White


n
w
Narrow - White





Code Details


Char
Format1
Format2


*
NwNnWnWnN
bWbwBwBwb


-
NwNnNnWnW
bWbwbwBwB


$
NwNwNwNnN
bWbWbWbwb


%
NnNwNwNwN
bwbWbWbWb


(space)
NwWnNnWnN
bWBwbwBwb


.
WwNnNnWnN
BWbwbwBwb


/
NwNwNnNwN
bWbWbwbWb


+
NwNnNwNwN
bWbwbWbWb


0
NnNwWnWnN
bwbWBwBwb


1
WnNwNnNnW
BwbWbwbwB


2
NnWwNnNnW
bwBWbwbwB


3
WnWwNnNnN
BwBWbwbwb


4
NnNwWnNnW
bwbWBwbwB


5
WnNwWnNnN
BwbWBwbwb


6
NnWwWnNnN
bwBWBwbwb


7
NnNwNnWnW
bwbWbwBwB


8
WnNwNnWnN
BwbWbwBwb


9
NnWwNnWnN
bwBWbwBwb


A
WnNnNwNnW
BwbwbWbwB


B
NnWnNwNnW
bwBwbWbwB


C
WnWnNwNnN
BwBwbWbwb


D
NnNnWwNnW
bwbwBWbwB


E
WnNnWwNnN
BwbwBWbwb


F
NnWnWwNnN
bwBwBWbwb


G
NnNnNwWnW
bwbwbWBwB


H
WnNnNwWnN
BwbwbWBwb


I
NnWnNwWnN
bwBwbWBwb


J
NnNnWwWnN
bwbwBWBwb


K
WnNnNnNwW
BwbwbwbWB


L
NnWnNnNwW
bwBwbwbWB


M
WnWnNnNwN
BwBwbwbWb


N
NnNnWnNwW
bwbwBwbWB


O
WnNnWnNwN
BwbwBwbWb


P
NnWnWnNwN
bwBwBwbWb


Q
NnNnNnWwW
bwbwbwBWB


R
WnNnNnWwN
BwbwbwBWb


S
NnWnNnWwN
bwBwbwBWb


T
NnNnWnWwN
bwbwBwBWb


U
WwNnNnNnW
BWbwbwbwB


V
NwWnNnNnW
bWBwbwbwB


W
WwWnNnNnN
BWBwbwbwb


X
NwNnWnNnW
bWbwBwbwB


Y
WwNnWnNnN
BWbwBwbwb


Z
NwWnWnNnN
bWBwBwbwb



Please Note: In between each character (the start and stop characters included) there is a thin space[citation needed] (shown as w below). For example, if you wanted a Code 39 barcode composed of the letter "A", you would need the following to be encoded: "*A*". [bWbwBwBwb]w[BwbwbWbwB]w[bWbwBwBwb]
The code will not be read without these spaces. Barcode fonts, however are likely to include this space within the glyph for the character.

[edit] Code 39 mod 43
Code 39 is sometimes used with an optional modulo 43 check digit. Using it requires this feature to be enabled in the barcode reader. The code with check digit is referred to as Code 39 mod 43.
Here is how to do the checksum calculation:

Take the value (0 through 42) of each character in the barcode excluding start and stop codes.
Sum the values.
Divide the result by 43.
The remainder is the value of the checksum character to be appended.

This can be expressed in Python as:


def append_c39_checksum(st):
    charset = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%"
    return st + charset[ sum(charset.index(c) for c in st) % 43 ]

or inVisual Basic as:


Const charSet As String = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%"
Function Mod43(C39 As String) As String
  For i = 1 To Len(C39)
    total = InStr(charSet, Mid(C39, i, 1)) - 1 + total
  Next i
  Mod43 = C39 & Mid$(charSet, (total Mod 43 + 1), 1)
End Function

or in Java as (with checking for invalid characters):


public static final String charSet = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%";
public static char getChecksum(String barCode) throws Exception {
  int total = 0;
  CharacterIterator it = new StringCharacterIterator(barCode);
  for (char ch = it.current(); ch != CharacterIterator.DONE; ch = it.next()) {
    int charValue = charSet.indexOf(ch);
    if (charValue == -1) {
      // Invalid character.
      throw new Exception("Input String '" +barCode+ "' contains characters that are invalid in a Code39 barcode.");
    }
    total += charValue;
  }
  int checksum = total % 43;
  return charSet.charAt(checksum);
}

or in C# as


public string ValidateMod43(string barcode)
{
   int subtotal = 0;
   const string charSet = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%"; 
 
   for (int i = 0; i < barcode.Length; i++)
   {
      subtotal += charSet.IndexOf(barcode.Substring(i, 1));
   }
 
   return charSet.Substring(subtotal%43, 1);
}

or in Perl as


use feature 'state';
 
sub checksum {
    my $total = 0;
    state $charset = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%';
 
    $total += index( $charset, $_ ) for split //, shift;
 
    return substr( $charset, $total % 43, 1 );
}

or in PHP as


function checksum( $string )
{
	$checksum = 0;
	$length   = strlen( $string );
	$charset  = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%';
 
	for( $i=0; $i < $length; ++$i )
	{
		$checksum += strpos( $charset, $string[$i] );
	}
 
	return substr( $charset, ($checksum % 43), 1 );
}


[edit] Full ASCII Code 39
Code 39 is restricted to 44 characters. In Full ASCII Code 39 Symbols 0-9, A-Z, "." ,and "-" are the same as their representations in Code 39. Lower case letters, additional punctuation characters and control characters are represented by sequences of two characters of Code 39.


Code Details


Nr
Character
Encoding
   
Nr
Character
Encoding
   
Nr
Character
Encoding
   
Nr
Character
Encoding


0
NUL
%U

32
[space]
[space]

64
@
%V

96
`
%W


1
SOH
$A

33
!
/A

65
A
A

97
a
+A


2
STX
$B

34
"
/B

66
B
B

98
b
+B


3
ETX
$C

35
#
/C

67
C
C

99
c
+C


4
EOT
$D

36
$
/D

68
D
D

100
d
+D


5
ENQ
$E

37
%
/E

69
E
E

101
e
+E


6
ACK
$F

38
&
/F

70
F
F

102
f
+F


7
BEL
$G

39
'
/G

71
G
G

103
g
+G


8
BS
$H

40
(
/H

72
H
H

104
h
+H


9
HT
$I

41
)
/I

73
I
I

105
i
+I


10
LF
$J

42
*
/J

74
J
J

106
j
+J


11
VT
$K

43
+
/K

75
K
K

107
k
+K


12
FF
$L

44
,
/L

76
L
L

108
l
+L


13
CR
$M

45
-
-

77
M
M

109
m
+M


14
SO
$N

46
.
.

78
N
N

110
n
+N


15
SI
$O

47
/
/O

79
O
O

111
o
+O


16
DLE
$P

48
0
0

80
P
P

112
p
+P


17
DC1
$Q

49
1
1

81
Q
Q

113
q
+Q


18
DC2
$R

50
2
2

82
R
R

114
r
+R


19
DC3
$S

51
3
3

83
S
S

115
s
+S


20
DC4
$T

52
4
4

84
T
T

116
t
+T


21
NAK
$U

53
5
5

85
U
U

117
u
+U


22
SYN
$V

54
6
6

86
V
V

118
v
+V


23
ETB
$W

55
7
7

87
W
W

119
w
+W


24
CAN
$X

56
8
8

88
X
X

120
x
+X


25
EM
$Y

57
9
9

89
Y
Y

121
y
+Y


26
SUB
$Z

58
:
/Z

90
Z
Z

122
z
+Z


27
ESC
%A

59
;
%F

91
[
%K

123
{
%P


28
FS
%B

60
<
%G

92
\
%L

124
|
%Q


29
GS
%C

61
=
%H

93
]
%M

125
}
%R


30
RS
%D

62
>
%I

94
^
%N

126
~
%S


31
US
%E

63
?
%J

95
_
%O

127
DEL
%T, %X, %Y, %Z



[edit] External Links

EAN MediaWiki extension, a MediaWiki extension, visualizing Code39/Codabar/EAN-13/EAN-8/UPC-A barcodes by specifying only the numbers/symbols in the wiki-text.


Search for free Code 39 fonts using Google








v • d • e

Barcodes





Linear Barcodes

Code 39 - Code 93 - Code 128 - Codabar - European Article Number - ITF-14 - MSI Barcode - UPC






Post Office Barcodes

CPC Binary Barcode - PostBar - POSTNET - RM4SCC (2D Matrix) - MaxiCode - OneCode






2D Barcodes (Stacked)

Codablock-F - PDF417






2D Barcodes (Matrix)

Aztec Code - Datamatrix - QR Code - Semacode






Polar Coordinate Barcodes

MaxiCode - ShotCode






Next Generation

DataGlyphs - High Capacity Color Barcode (Microsoft Tag) - Sony Dynamic Digital Sound






Technological issues

Barcode scanner - Barcode printer






Related topics

Supply Chain Management - RFID









Retrieved from "http://en.wikipedia.org/wiki/Code_39"
Categories: BarcodesHidden categories: All articles with unsourced statements | Articles with unsourced statements since June 2008 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Deutsch
Español
Français
Hrvatski
Nederlands
日本語
Polski
Українська









 This page was last modified on 28 March 2009, at 17:18 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
