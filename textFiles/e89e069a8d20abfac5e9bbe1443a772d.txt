













ROM hacking - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "ROM_hacking";
		var wgTitle = "ROM hacking";
		var wgAction = "view";
		var wgArticleId = "1163729";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281804350;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); ROM hacking

From Wikipedia, the free encyclopedia

Jump to: navigation, search 





This article may not meet the general notability guideline. Please help to establish notability by adding reliable, secondary sources about the topic. If notability cannot be established, the article is likely to be merged or deleted. (March 2009)







This article may contain original research or unverified claims. Please improve the article by adding references. See the talk page for details. (November 2007)







This article needs additional citations for verification. Please help improve this article by adding reliable references (ideally, using inline citations). Unsourced material may be challenged and removed. (October 2007)






Screenshot of Lunar Magic, a level editor for Super Mario World, illustrating how a user can modify the game.


ROM hacking is the process of modifying a video game ROM image to alter the game's graphics, dialogue, levels, gameplay, or other gameplay elements. This is usually done by technically-inclined video game fans to breathe new life into a cherished old game, as a creative outlet, or to make essentially new unofficial games using an old game as a foundation.
ROM hacking is generally accomplished through use of a hex editor (a program for editing non-textual data) and various specialized tools such as tile editors, and game-specific tools which are generally used for editing levels, items, and the like, although more advanced tools such as assemblers and debuggers are occasionally used. Once ready, they are usually distributed on the Internet for others to play on an emulator.[1]
Fan translation (known as "translation hacking" within the ROM hacking community[1]) is a type of ROM hacking; there are also anti-censorship hacks that exist to restore a game to its original state, which is often seen with older games that were imported, as publishers' content policies for video games (most notably, Nintendo's) were much stricter in the United States than Japan or Europe. Although much of the methodology applies to both types of hacking, this article focuses on "creative hacking" such as editing game levels.




Contents


1 Communities
2 Methodology

2.1 Hex editing
2.2 Graphics editing
2.3 Level editing
2.4 Data editing
2.5 ASM hacking
2.6 Music hacking
2.7 ROM expansion


3 Distribution
4 Systems and games
5 Related articles
6 Notes
7 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Communities


Screenshots comparing the world maps in Pokemon Red (original game, left) and Pokemon Brown (hacked game, right)


Many ROM hackers form or join groups for various reasons, such as for web space to host hacks and/or screenshots, for the support of or collaboration with other members of the group, for privileged status on the group's message board (if it has one), for the prestige associated with the group, or just for the comradeship. Many hackers, however, choose to go solo. Not all group members are necessarily ROM hackers themselves; some have "retired" from the craft, others offer services such as website and/or message board administration, and some simply offer guidance to aspiring ROM hackers.
Most hacking groups offer web space for hosting hacks and screenshots (sometimes only hosting hacks by the group's members, sometimes hosting almost any hack), a message board, and often have an IRC channel. [2]

[edit] Methodology
Having been created by many different programmers or programming teams, ROM data can be very diverse. Thus there aren't really any standardized ways of hacking, but some of the more generally-accepted methods and utilities are described here.[1]

[edit] Hex editing
A hex editor is one of the most fundamental tools in any ROM hacker's repertoire. Hex editors are usually used for editing text, for editing other data for which the structure is known (for example, item properties), and ASM hacking.
Editing text is one of the most basic forms of hacking. Many games do not store their text in ASCII form, and because of this, some specialized hex editors have been developed, which can be told what byte values correspond to what letter(s) of the alphabet, to facilitate text editing; a file that defines these byte=letter relationships is called a "table" file. Other games use simple text compression techniques (such as Dual-Tile Encoding or DTE, in which certain combinations of two or more letters are encoded as one byte) which a suitably-equipped hex editor can facilitate editing.
Another common form of hacking is palette hacking, where color values are modified to change the colors a player sees in the game (this often goes hand-in-hand with graphics hacking). This is fairly easy for NES games, the graphics of which use a pre-defined set of colors among which a game selects; palette hacking in this case entails changing which of those colors are selected. The matter is slightly more complicated with Super NES games and games for other systems, which store absolute RGB color values.
A hex editor is the tool of choice for editing things such as character/item properties, if the structure and location of this data is known and there is no game-specific editor for the game that can edit this information. Some intrepid hackers also perform level editing with a hex editor, although one would be hard-pressed to find someone (including those who have done it) who consider it easy, except on games whose level storage format closely resembles how it is presented in a hex editor.

[edit] Graphics editing




Comparison of battle graphics in Dragon Warrior (above) and a hack of it, Dragoon X Omega (below).


Another basic hacking skill is graphics hacking, which is changing the appearance of the game's environs, characters, fonts, or other such things. The format of graphics data varies from console to console, but most of the early ones (NES, Super NES, Game Boy, etc) store graphics in tiles, which are 8x8-pixel units of data, which are arranged on-screen to produce the desired result. Editing these tiles is also possible with a hex editor, but is generally accomplished with a tile editor (such as Tile Layer or Tile Molester), which can display the ROM data in a graphical way and let you find and edit tiles.
Graphics hacks can range from simple edits (such as giving Mario an afro) to "porting" characters from one game to another, to full-blown thematic changes (usually with accompanying palette changes; see above).
More sophisticated graphics hacking involves changing more than just tiles and colors, but also the way in which the tiles are arranged, or tile groups generated, giving more flexibility and control over the final appearance. This is accomplished through hex editing or a specialized tool (either for the specific game or a specific system).

[edit] Level editing
One of the most popular forms of ROM hacking, level editing entails modifying or redesigning a game's levels or maps. This is almost exclusively done with an editor specially-tailored for a particular game (called a level editor). Level edits can be done to make the game more challenging, to alter the flow of the game's plot, or just to give something new to an old game. Combined with extensive graphics hacking, the game can take on a very different look and feel.

[edit] Data editing




Final Fantasy Hackster editing FF1


A core component of many hacks (especially of RPGs) is editing data such as character, item, and enemy properties. This is usually done either "by hand" (with a hex editor) if the location and structure of the data is known, or with a game-specific editor that has this functionality. Through this, a hacker can alter how weapons work, how strong enemies are or how they act, etc. This can be done to make the game easier or harder, or to create new scenarios for the player to face.

[edit] ASM hacking
The most powerful, and arguably the most difficult, hacking technique is editing the game's actual code, a process called ASM hacking ("ASM" means "assembly", referring to the type of programming language used for early console games)[1]. There is no set pattern for ASM hacking, as the code varies widely from game to game, but most skilled ASM hackers either use an emulator equipped with a built-in debugger or tracer, or run the ROM through a disassembler, then analyze the code and modify it using a hex editor or assembler according to their needs. While quite challenging compared to the relatively-simple methods listed above, anything is possible with ASM hacking (of course, within the limits of the hardware/software of the gaming platform), ranging from altering enemy AI to changing how graphics are generated. (Of course, the possibilities are still limited by the hacker's ability to comprehend and modify the existing code.)

[edit] Music hacking
Music hacks are relatively rare, due to the wide variety of ways games store music data (hence the difficulty in locating and modifying this data) and the difficulties in composing new music (or porting music from another game). As music hacking is very uncommon, many hacks do not have any ported/composed music added in.

[edit] ROM expansion
Generally speaking, a ROM hacker cannot add content to a game, but merely change existing content. This limit can be overcome through ROM expansion, whereby the total size of the ROM image is increased, making room for more content and a larger game. The difficulty in doing this varies depending on the system for which the game was made. For example, expanding an NES ROM may be difficult or even impossible due to the mapper used by the game. For example, if a mapper allows 16 ROM banks and all of them are used, expanding the ROM further is impossible without somehow converting the game to another mapper, which could be easy or extremely difficult. On the other hand, expanding a Super NES game is (relatively) straightforward. To utilize the added space, parts of the game code have to be modified or re-written (see ASM hacking above) so the game knows where to look. The Game Boy Advance is generally considered the easiest to expand.

[edit] Distribution
Once a hack is completed (or an incomplete version is deemed suitable for an interim release) it is released onto the Internet for others to play. The generally-accepted way to do this is by making a patch (in IPS format or others) that can be applied to the unmodified ROM[1]. This, and usually some form of documentation, is put in an archive file and uploaded somewhere. IPS is a format for recording the differences between two binary files (in this case, between the unmodified and hacked ROMs) and is suitable for ROM hacks. IPS is still used today for small patches — however, as ROMs became larger in size, this format became useless, leading to quite a few file formats being created — such as NINJA and PPF ("PlayStation Patch Format"). PPF is still used today, particularly to patch large files such as ISO CD images. A new patch format, UPS, has also been developed by the ROM hacking community, designed to be the successor to IPS and PPF.[3]
The purpose of distributing a hack in patch form is to avoid the legal aspects of distributing entire ROM images; the patch records only what has changed in the ROM, hence distributing it does not distribute parts of the original game. A patch is also smaller than the full ROM image (an NES ROM can run anywhere from 40KB-512KB; a Super NES ROM can run from 256k-6MB). The use of patches does not eliminate copyright issues because the patches may be considered derivative works; however, corporations generally ignore them as long as they are not distributed with the ROMs.

[edit] Systems and games
The majority of ROM hacking is done on NES and Super NES games, since such games are small and simple compared to games of more advanced consoles such as the Nintendo 64. Also, many ROM hackers grew up with the NES and Super NES games, so they hold fonder memories for hackers than more contemporary games. Games for the Game Boy are also popular for hacking, as well as games for the Sega Mega Drive to a lesser extent. But by no means are games for more recent consoles exempt from hacking, and indeed as computers get faster and more programs and utilities are written, one might expect to see more PlayStation and Nintendo 64 hacks.
Of these, popular games to play are popular games to hack; many hacks have been released of games of the Sonic the Hedgehog series, Super Mario Bros. series, Super Mario World, Final Fantasy, The Legend of Zelda, games from the Mega Man series, Pokémon, EarthBound, and many others.

[edit] Related articles

Fan translation of video games
Undubbing
Mod (computer gaming)


[edit] Notes

^ a b c d e Dictionary of ROMhacking Terms
^ ROMHacking.net
^ New patching format, UPS, debuts today


[edit] External links

ROMhacking.net A repository of hacks, utilities, documents, and patches.
Zophar's Domain A site with some information and resources related to ROM hacking.
Hacking CulT A site with some documentation on general programming related to ROM hacking.
ROM Hack City,  an external wiki.
Data Crystal Wiki Another Wiki dedicated to ROM hacking.
GBAtemp.net Hosts various patches, including translations.




Retrieved from "http://en.wikipedia.org/wiki/ROM_hacking"
Categories: Video game mods | Hacking (hobbyist)Hidden categories: Articles with topics of unclear notability from March 2009 | Articles that may contain original research since November 2007 | All articles that may contain original research | Articles needing additional references from October 2007 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Català
Español
Français
Latina
Polski
Português
Русский
Tagalog









 This page was last modified on 5 April 2009, at 00:33.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
