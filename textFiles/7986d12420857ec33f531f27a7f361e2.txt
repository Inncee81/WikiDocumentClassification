













Jini - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Jini";
		var wgTitle = "Jini";
		var wgAction = "view";
		var wgArticleId = "185398";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 283022474;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Jini

From Wikipedia, the free encyclopedia

Jump to: navigation, search 





This article or section contains information about computer software currently in development.
The content may change as the software development progresses.





Jini (pronounced like genie and also called Apache River) is a network architecture for the construction of distributed systems in the form of modular co-operating services.
Originally developed by Sun, responsibility for Jini is being transferred to Apache under the project name River.




Contents


1 Overview
2 History
3 Using a service
4 Limitations
5 See also
6 References
7 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Overview
Jini provides facilities for dealing with some of the fallacies of distributed computing, problems of system evolution, resiliency, security and the dynamic assembly of service components. Code mobility is a core concept of the platform and provides many benefits including non-protocol dependence.
The Jini team at Sun Microsystems has always stated that Jini is not an acronym. Some have joked that it meant Jini Is Not Initials, but it's always been just Jini. The word "Jini" means "the devil" in Swahili; this is a loan from an Arabic word for a mythological spirit, which is also the origin of the English word 'genie'.
One of the goals of Jini is to shift the emphasis of computing away from the traditional disk-drive oriented approach, to a more network oriented approach. Thus resources can be used across a network as if they were available locally. Jini is based on Java, and is similar to Java Remote Method Invocation but more advanced. Jini allows more advanced searching for services, through a process of discovery of published services (making Jini akin to the service-oriented architecture concept).
There are three main parts to a Jini scenario. These are the client, the server, and the lookup service.[1]
The service is the resource which is to be made available in the distributed environment. This can include physical devices (such as printers or disk drives) and software services (for example a database query or message service). The client is the entity which uses the service.

[edit] History
Jini was first developed circa 1999 by Sun.

[edit] Using a service
The first step in creating a Jini service is for the service to find the lookup service (LUS) - a process called discovery. Once the LUS is found, it returns a Service Registrar object to the service, which is used to register the service in the lookup (the join process). This involves providing information about the service to be provided, such as the ID of the service, the object which actually implements it and other attributes of the service.
When a client wishes to make use of a service, it too uses discovery to find the LUS - either by unicast interaction, when it knows the actual location of the LUS, or by dynamic multicast discovery. After contacting the LUS, the client is returned a Service Registrar object, which it uses to look up a particular service. It does this by consulting the lookup catalog on the LUS and searching based on the type, name or description of a service. The LUS will return a Java proxy, specifying how to connect directly to the service. This is one of the ways in which Jini is more powerful than RMI, which requires the service to know the location of the remote service in advance.
Using the Proxy, the client may connect directly to the service implementation (without further interaction with the LUS), and use it as if it were a local service. However, there are some differences to the event model, in that the order of events occurring across a network cannot be guaranteed.
Services in Jini will not necessarily be permanently available, which leads to the concept of leasing. When a service registers with a LUS, a lease is granted, with a certain duration. This can be manually decided, or set to a default (such as 'forever'). Leases will need to be periodically renewed, to check a service is still 'alive', which means if a service fails or becomes unreachable, it can be timed out.
Jini uses serialization to send Java objects across the network. This means an entire Java object can be saved and sent, and used remotely as if it were local, as opposed to creating a specific format for sending data in each new implementation.
Jini services can be grouped together, to allow a client to search for specific groups. A group of services in Jini is called a federation.

[edit] Limitations
Jini uses a lookup service to broker communication between the client and service. Many falsely believe that, because of this, it is essentially a centralized model (though the communication between client and service can be seen as decentralized) and that it does not scale well to very large systems. In a Jini network, one scales the lookup service by running multiple instances that listen to the same multicast group. As such, the lookup service is, indeed, scalable.
Because Jini is implemented in Java, many applications require a Java virtual machine to be present.

[edit] See also

Java RMI
Ken Arnold, one of the original Jini architects
Juxtapose (JXTA)
Java Management Extensions (JMX)
JavaSpaces
Simple Network Management Protocol (SNMP)
Zero Configuration Networking
OSGi Alliance
Service Location Protocol
Salutation
Universal Plug and Play (UPnP)


[edit] References


^ Taylor, Ian J. From P2P to Web Services and Grids - Peers in a Client/Server World. Springer, 2005



[edit] External links

Jini.org
Apache River Project
The Jini Technology Vision
Citations from CiteSeer
technique comparison
Article "Jini: Out of the Bottle and Into the Box" by Daniel H. Steinberg
Project Rio
Jan Newmarch's Guide to Jini Technologies
Newton Open source Jini & OSGi based distributed component framework
Bantam - an open-source web framework for distributed systems








v • d • e

Apache Software Foundation





Top level projects

ActiveMQ · Ant · Apache HTTP Server · APR · Beehive · Buildr · Camel · Cayenne · Cocoon · Commons · CouchDB · CXF · Derby · Directory · Excalibur · Felix · Forrest · Geronimo · Gump · Hadoop · Harmony · HiveMind · iBATIS · Jackrabbit · James · Lenya · Maven · mod_perl · MyFaces · OFBiz · OpenEJB · OpenJPA · POI · Roller · Shale · SpamAssassin · stdcxx · Struts · Tapestry · Tomcat · Tuscany · Velocity · Wicket · XMLBeans






Other projects

Jakarta Project · Apache Lucene · Apache XML · Apache Incubator






Sub-projects

BCEL · BSF · Cactus · Chainsaw · JMeter · Slide · Xerces · Batik · FOP · Log4j · XAP · River · ServiceMix · Log4Net · Abdera · Ivy · ODE · JSPWiki






License: Apache License · Website: http://apache.org/








Retrieved from "http://en.wikipedia.org/wiki/Jini"
Categories: Beta software | Java platform 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Deutsch
Français
日本語
Polski
Português
Русский
Suomi
Svenska









 This page was last modified on 10 April 2009, at 18:33 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
