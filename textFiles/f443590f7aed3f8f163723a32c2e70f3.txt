













ZK Framework - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "ZK_Framework";
		var wgTitle = "ZK Framework";
		var wgAction = "view";
		var wgArticleId = "3280586";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 282300609;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); ZK Framework

From Wikipedia, the free encyclopedia

Jump to: navigation, search 

ZK


An example web application created with ZK


Developed by
Potix


Latest release
3.6.0 / 2009-03-02; 36 days ago


Operating system
Cross-platform (JVM)


Type
Ajax Web Framework


License
GNU General Public License / Commercial


Website
zkoss.org






Free software portal



ZK is an open-source Ajax Web application framework, written in Java, that enables creation of rich graphical user interfaces for Web applications with no JavaScript and little programming knowledge.
The core of ZK consists of an Ajax-based event-driven mechanism, over 123 XUL and 83 XHTML-based components, and a markup language for designing user interfaces. Programmers design their application pages in feature-rich XUL/XHTML components, and manipulate them upon events triggered by end user's activity. It is similar to the programming model found in desktop GUI-based applications.
ZK takes the so called server-centric approach that the content synchronization of components and the event pipelining between clients and servers are automatically done by the engine and Ajax plumbing codes are completely transparent to web application developers. Therefore, the end users get the similar engaged interactivity and responsiveness as a desktop application, while programmers' development retains a similar simplicity to that of desktop applications.
In addition to component-based programming in a manner similar to Swing, ZK supports a markup language for rich user interface definition called ZUML.

ZUML is designed for non-programmer developers to design user interfaces intuitively.
ZUML allows developer to meld different markup languages, such as Mozilla XUL language and XHTML, seamlessly into the same page.
ZUML allows developers to embed script in pure Java language (interpreted by BeanShell) and use EL expressions to manipulate the components and access data.





Contents


1 Features
2 Differences to XUL
3 System requirements
4 Prerequisites of programming skills

4.1 Required
4.2 Optional


5 ZUML
6 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Features

Declarative high level specification of rich (rather than plain HTML) user interfaces. For example the XUL widget set includes support for trees, comboboxes, bandboxes and sliders [1].
Embedding scripting support with Java (Beanshell [2]). This is an important benefit as you can use a unified programming language for both user interface and backend programming. Optional support for other serverside Java scripting in other languages such as JavaScript (Rhino [3]), Ruby (JRuby [4]), Python (Jython [5]) and Groovy [6]
High level Ajax support. User input passes from the browser to the serverside desktop model over Ajax.
Event-driven component-based model (similar to desktop programming models)
Support for creating user interfaces using different patterns. A MVC programming approach can be adopted with all events forwarded to a central controller class [7]. Alternatively event handlers can be defined within the page using zscript [8]. The MVC page approach is analogous to Swing programming and the in-page approach is analogous to DHTML programming on the server.
Support for integrating with existing web frameworks via a JSP custom tag library, JSF support and a Servlet Filter. Has support for Spring and Hibernate.
Extensible in that programmers that can create new custom UI controls. Groups of controls can be re-used as a macro component.
Databinding capability via in-page annotations that transparently bind screen controls to the fields of POJOs on the server.


[edit] Differences to XUL

ZK is a server side framework which emits HTML and thus does not depend on client side presence of Gecko making it portable to any browser. ZK takes ZUML (xul and xhtml) serverside pages as input and outputs dhtml for the browser.
ZK processes user interface logic on the server in Java. This increases choice in the scripting engines and application libraries that can be used to create logic. Presentation effects can be delegated to the browser using the Client-side Actions feature to reduce server load for dhtml effects. Running the application logic on the server in a single application container reduces the amount of cross browser and browser version testing when compared to extensively programming the DOM at the browser.
While ZK and XUL have an overlapping subset of components ZK has their own unique component sets. The component library can be extended with custom components. Macro components can be defined that are composites of components.
ZK provides serverside databinding annotations to declaratively bind UI components to serverside data.
Look and Feel differences.


[edit] System requirements

JRE version 1.4 or later
A Web server supporting Servlet 2.3 or later


[edit] Prerequisites of programming skills

[edit] Required

Basic knowledge of Java or a Java scripting engine language such as Groovy (Java JavaScript), Rhino, JRuby (Java Ruby) or Jython (Java Python)
Basic knowledge of HTML and XUL


[edit] Optional

Knowledge of a scripting language to write the glue logic (running on the server):

BeanShell (Java interpreter), JavaScript, Groovy, Ruby, and Python currently supported.


Object Oriented Programming. You can choose to do AWT/Swing style programming against the ZK API. You can choose to program one or more custom UI controller classes in Java. This is entirely optional. Alternatively you can choose to use zscript script tags for user interface logic which is similar to dhtml programming.
Servlet Programming. ZK is built on top of the Servlet API. You can choose to do regular Servlet programming and use ZUML as the page language.
Ajax. ZK is built on top of Ajax but it automatically converts user input at the browser to Java events at the server so you do not have to either program nor understand browser Ajax.
JavaScript (on the client side). You can choose to use client side actions on your components for performing dhtml logic but most user interfaces do not require this.
Declarative Databindings. ZK has an optional syntax for binding user interface controls to your POJO Java Beans. ZK will automatically call your POJO setter/getter methods with zero programming in response to use input at the browser.
EL language. ZK supports JSTL style EL.


[edit] ZUML
ZUML (ZK User Interface Markup Language) is a markup language for rich user interfaces definition.

ZUML is designed for non-programmers to design user interfaces efficiently with the ZUML markup
ZUML allows developer to meld different markup languages, such as Mozilla XUL language and XHTML, seamlessly into the same page.
ZUML allows developers to embed script in pure Java language (interpreted by BeanShell) and use EL expressions to manipulate the components and access data.
ZUML is supported by ZK.


[edit] External links



Wikibooks has a book on the topic of
ZK




ZK Home
ZK Live Demo
An Interview with ZK Creator Tom Yeh
Tutorial: ZK Rich Client Framework and Agile Development
Tutorial I from IBM developerWorks II III IV V VI
Tutorial from BEA dev2dev I II III
Small talks








v • d • e

List of Web Application Frameworks





Actionscript

PureMVC






ASP.NET

ASP.NET MVC · BFC · DotNetNuke · MonoRail · Umbraco






ColdFusion

ColdSpring · Fusebox · Mach-II · Model-Glue · onTap






Common Lisp

ABCL-web · blow · BKNR · SymbolicWeb · UnCommon Web






Java

Apache Struts · AppFuse · Flexive · Google Web Toolkit · IT Mill Toolkit · ItsNat · JavaServer Faces · JBoss Seam · Makumba · OpenXava · Reasonable Server Faces · RIFE · Restlet · Spring · Stripes · Tapestry · WebWork · Wicket · ZK






JavaScript (client-side)

Ample SDK · Clean AJAX · CougarXML · Dojo · Echo · Ext · jQuery · midori · MochiKit · MooTools · OpenLink AJAX · Prototype JavaScript · Pyjamas · qooxdoo · Rialto · Rico · script.aculo.us · SmartClient · SproutCore · Spry · Yahoo! UI Library · Google Web Toolkit






JavaScript (server-side)

AppJet · Jaxer






Perl

Catalyst · Interchange · Mason






PHP

Akelos · CakePHP · Chisimba · CodeIgniter · Drupal · Horde · Kohana · Kolibri · KumbiaPHP · Midgard · PEAR · PHPNuke · PHPonTrax · Seagull · Simplicity · Symfony · Zend · Zoop






Python

CherryPy · Django · Karrigell · Nevow · Pyjamas · Pylons · Quixote · Spyce · TurboGears · Twisted · web2py · Zope






Ruby

Adhearsion · Camping · eRuby (RHTML) · Merb · Nitro · RubyCocoa · Ruby on Rails






Smalltalk

AIDA/Web · Seaside






Other languages

Application Express (PL/SQL) · Fusebox (ColdFusion and PHP) · OpenACS (Tcl) · Yaws (Erlang) · HAppS (Haskell) · Cappuccino (Objective-J)









Retrieved from "http://en.wikipedia.org/wiki/ZK_Framework"
Categories: Java libraries | User interface markup languages | Web application frameworks | Ajax (programming) 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Deutsch
Español
Français
Română
Русский
中文









 This page was last modified on 7 April 2009, at 08:38.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
