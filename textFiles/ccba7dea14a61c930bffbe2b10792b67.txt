













Application virtualization - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Application_virtualization";
		var wgTitle = "Application virtualization";
		var wgAction = "view";
		var wgArticleId = "5299251";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 284460070;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Application virtualization

From Wikipedia, the free encyclopedia

Jump to: navigation, search 





This article needs additional citations for verification. Please help improve this article by adding reliable references (ideally, using inline citations). Unsourced material may be challenged and removed. (March 2008)


Application virtualization is an umbrella term that describes software technologies that improve portability, manageability and compatibility of applications by encapsulating them from the underlying operating system on which they are executed. A fully virtualized application is not installed in the traditional sense[1], although it is still executed as if it is. The application is fooled at runtime into believing that it is directly interfacing with the original operating system and all the resources managed by it, when in reality it is not. Application virtualization differs from operating system virtualization in that in the latter case, the whole operating system is virtualized rather than only specific applications.




Contents


1 Description
2 Technologies
3 Benefits of application virtualization
4 Disadvanges of application virtualization
5 See also

5.1 Similar application schemes


6 References





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Description
Limited application virtualization is used in modern operating systems such as Microsoft Windows and Linux. For example, IniFileMappings were introduced with Windows NT to virtualize (into the Registry) the legacy INI files of applications originally written for Windows 3.1.[2] Similarly, Windows Vista implements limited file and Registry virtualization so that legacy applications that try to save user data in a system location that was writeable in older versions of Windows, but is now only writeable by highly privileged system software, can work on the new Windows system without the obligation of the program having higher-level security privileges (which would carry security risks).[3]
Full application virtualization requires a virtualization layer.[4] This layer must be installed on a machine to intercept all file and Registry operations of virtualized applications and transparently redirect these operations into a virtualised location.[5] The application performing the file operations never knows that it's not accessing the physical resource it believes it is. In this way, applications with many dependent files and settings can be made portable by redirecting all their input/output to a single physical file, and traditionally incompatible applications can be executed side-by-side. Novell ZENworks Application Virtualization, Microsoft Application Virtualization, Software Virtualization Solution, and VMware ThinApp are examples of this technology for the Windows platform.
A common misconception is that a runtime environment is application virtualization. However a runtime layer is required for an application to be able to execute, while a virtualization layer is not.
A similar, but different principle is Operating system virtualizations which encapsulate the entire operating system from the hardware, as opposed to only the applications from the operating system.

[edit] Technologies
Technology categories that fall under application virtualization include:

Application Streaming. The application is delivered in a package, that may include a subset of OS files and configuration settings. Running the package requires the installation of a lightweight client application. Packages are usually delivered over a protocol such as HTTP or RTSP. Application virtualization is commonly paired with application streaming to deliver applications on demand.[6]


Desktop Virtualization/Virtual Desktop Infrastructure (VDI). The application is hosted in a VM or blade PC that also includes the operating system (OS). These solutions include a management infrastructure for automating the creation of virtual desktops, and providing for access control to target virtual desktop. VDI solutions can usually fill the gaps where application streaming falls short.


[edit] Benefits of application virtualization

Allows applications to run in environments that do not suit the native application (e.g. Wine allows Microsoft Windows applications to run on Linux).
May protect the operating system and other applications from poorly written or buggy code.
Uses fewer resources than a separate virtual machine.
Run applications that are not written correctly, for example applications that try to store user data in a read-only system-owned location.
Run incompatible applications side-by-side, at the same time[6] and with minimal regression testing against one another.[7]
Maintain a standard configuration in the underlying operating system across multiple computers in an organization, regardless of the applications being used, thereby keeping costs down.
Implement the security principle of least privilege by removing the requirement for end-users to have Administrator privileges in order to run poorly written applications.
Simplified operating system migrations.[6]
Accelerated application deployment, through on-demand application streaming.[6]
Improved security, by isolating applications from the operating system.[6]
Enterprise can track easily license usage. Application usage history can then be used to save on license cost.
Fast application provisioning to the desktop based upon user's roaming profile.


[edit] Disadvanges of application virtualization

Applications have to be "packaged" or "sequenced" before they will run in a virtualized way.[8]


Minimal increased resource requirements (memory and disk storage).
Not all software can be virtualized. Some examples include applications that require a device driver and 16-bit applications that need to run in shared memory space.[9]
Some types of software such as anti-virus packages and application that require heavy OS integration, such as Windowblinds or StyleXP are difficult to virtualize.
Only file and Registry-level compatibility issues between legacy applications and newer operating systems can be addressed by application virtualization. For example, applications that don't manage the heap correctly will not execute on Windows Vista as they still allocate memory in the same way, regardless of whether they are virtualized or not.[10] For this reason, specialist application compatibility fixes ("SHIMs") may still be needed, even if the application is virtualized.[11]


[edit] See also

Virtualization
Comparison of Application Virtual Machines
Software emulation
AIX 6.1 Live Application Mobility
Software as a service
Shim (computing)


[edit] Similar application schemes

AppZero
BoxedApp, www.boxedapp.com
InstallFree
klik (packaging method)
Application directory
Altiris Software Virtualization Solution
Zero Install
VMware ThinApp
Microsoft Application Virtualization
Citrix XenApp
Xenocode


Novell ZENworks Application Virtualization


[edit] References


^ "Introducing Microsoft SoftGrid Application Virtualization". Microsoft. http://www.microsoft.com/windows/products/windowsvista/enterprise/softgrid.mspx. 
^ "WritePrivateProfileString Function". Microsoft. http://msdn.microsoft.com/en-us/library/ms725501(VS.85).aspx. Retrieved on 2008-06-18. 
^ Mark Russinovich (June 2007). "Inside Windows Vista User Account Control". Microsoft. http://www.microsoft.com/technet/technetmag/issues/2007/06/UAC/default.aspx. 
^ Amir Husain. "How to build an Application Virtualization Framework". VDIworks. http://vdiworks.com/wp/?p=15. Retrieved on 2008-07-01. 
^ Coby Gurr (2008-01-28). "Facilitating Microsoft Windows Vista Migration Through Application Virtualization" (PDF). Dell. http://www.dell.com/downloads/global/power/ps1q08-20080154-LANDesk.pdf. Retrieved on 2008-06-19. 
^ a b c d e "Desktop Virtualization Comes of Age" (PDF). Credit Suisse. 2007-11-26. http://www.dabcc.com/documents/DesktopVirtualization_11_26_07.pdf. Retrieved on 2008-03-03. 
^ "Overview Series: Windows Vista Application Compatibility". Microsoft. http://technet2.microsoft.com/WindowsVista/en/library/006bca87-10df-4174-94b9-ed568a3faf991033.mspx?mfr=true. Retrieved on 2008-06-19. 
^ Mayank Johri (2008-02-28). "Guidelines for Application Sequencing". http://mayankjohri.wordpress.com/2008/02/08/guidelines-for-application-to-be-sequenced/. Retrieved on 2008-06-24. 
^ Peter Varhol (September 2007). "Application Virtualization Hits Its Stride". Redmondmag.com. http://redmondmag.com/features/article.asp?editorialsid=1776. Retrieved on 2008-06-19. 
^ Adrian Marinescu (2006-07-14). "Windows Vista Heap Management Enhancements" (PDF). Microsoft. http://www.blackhat.com/presentations/bh-usa-06/BH-US-06-Marinescu.pdf. Retrieved on 2008-06-19. 
^ Chris Jackson (2008-05-01). "Can You Shim Applications Virtualized in SoftGrid?". Microsoft. http://blogs.msdn.com/cjacks/archive/2008/04/30/can-you-shim-applications-virtualized-in-softgrid.aspx. Retrieved on 2008-06-24. 





Retrieved from "http://en.wikipedia.org/wiki/Application_virtualization"
Categories: Virtualization software | Windows software | Mac OS software | Linux software | Unix softwareHidden categories: Articles needing additional references from March 2008 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Svenska









 This page was last modified on 17 April 2009, at 17:39 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
