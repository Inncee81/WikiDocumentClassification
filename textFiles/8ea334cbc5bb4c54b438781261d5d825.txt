













Microsoft Silverlight - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Microsoft_Silverlight";
		var wgTitle = "Microsoft Silverlight";
		var wgAction = "view";
		var wgArticleId = "9731719";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281996916;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Microsoft Silverlight

From Wikipedia, the free encyclopedia

Jump to: navigation, search 

Microsoft Silverlight




Developed by
Microsoft Corporation


Initial release
April 2007


Stable release
2.0.40115.0  (19 February 2009) [+/−]


Preview release
3.0.40307.0  (18 March 2009) [+/−]


Written in
Combination of C++ and C#


Operating system
Microsoft Windows,
Mac OS X


Type
Web Application framework


License
MS-EULA, with MS-PL components


Website
Microsoft Silverlight
silverlight.net


Microsoft Silverlight is a programmable web browser plugin that enables features such as animation, vector graphics and audio-video playback that characterizes rich Internet applications. Version 2.0, released October 2008, brought additional interactivity features and support for .NET languages and development tools. Microsoft made the beta of Silverlight 3.0 available on 2009-03-18.
It is compatible with multiple web browser products used on Microsoft Windows and Mac OS X operating systems. Mobile devices, starting with Windows Mobile 6 and Symbian (Series 60) phones, will also be supported.[1] A third-party free software implementation named Moonlight is under development to bring compatible functionality to GNU/Linux.




Contents


1 Overview
2 Releases

2.1 Silverlight 1.0
2.2 Silverlight 2
2.3 Silverlight 3
2.4 Release history


3 Compatibility

3.1 Operating Systems and Web Browsers


4 Development tools
5 Licensing
6 Mono Moonlight implementation
7 Relationship to existing Web standards
8 See also
9 References
10 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Overview
Silverlight provides a retained mode graphics system similar to Windows Presentation Foundation, and integrates multimedia, graphics, animations and interactivity into a single runtime environment. It is being designed to work in conjunction with XAML and is scriptable with JavaScript. XAML can be used for marking up the vector graphics and animations. Textual content created with Silverlight is searchable and indexable by search engines as it is not compiled, but represented as text (XAML).[2] Silverlight can also be used to create Windows Sidebar gadgets for Windows Vista.[3]
Silverlight supports playback of WMV, WMA and MP3 media content[4] across all supported browsers without requiring Windows Media Player, the Windows Media Player ActiveX control or Windows Media browser plugins. Because Windows Media Video 9 is an implementation of the SMPTE VC-1 standard, Silverlight also supports VC-1 video, though still only in an ASF container format. Furthermore, the Software license agreement says VC-1 is only licensed for the "personal and non-commercial use of a consumer".[5] Silverlight, since version 3, supports the playback of H.264 video.[6] Silverlight makes it possible to dynamically load XML content that can be manipulated through a DOM interface, a technique that is consistent with conventional Ajax techniques. Silverlight exposes a Downloader object which can be used to download content, like scripts, media assets or other data, as may be required by the application.[7] With version 2.0, the programming logic can be written in any .NET language, including some derivatives of common dynamic programming languages like Iron Ruby and Iron Python.[8]

[edit] Releases

[edit] Silverlight 1.0




A Silverlight 1.0 application hosted in Internet Explorer. Interactivity is provided by Silverlight, but user input controls are HTML controls overlaid on top of Silverlight content


Silverlight 1.0, which was developed under the codename Windows Presentation Foundation/Everywhere (WPF/E), consists of the core presentation framework, which is responsible for UI, interactivity and user input, basic UI controls, graphics and animation, media playback, Digital rights management, and DOM integration.[9] It is made up of the following components:

Input – handling input from devices like keyboard, mouse, stylus etc.
UI core – managing rendering of bitmap images (including compressed raster images like JPEG), vector graphics, text and animations.
Media – playback of MP3, WMA Standard, WMV7, WMV8 and WMV9/VC-1 streams.
XAML – to allow the UI layout to be created using XAML markup language.

A Silverlight application starts by invoking the Silverlight control from the HTML page, which then loads up a XAML file. The XAML file contains a Canvas object, which acts as placeholder for other elements. Silverlight provides various geometrical primitives like lines, ellipses and other shapes, to elements like text, images, and media etc. The elements are properly positioned to achieve the desired layout. Any arbitrary shape can be created as well. These elements can be animated using Event triggers; some animation effects are predefined, others can be created as composite of the pre-defined effects. Events like keyboard or mouse movements can also raise Events which can be handled by custom scripts.[10]
Programmatic manipulation of the UI is achieved by using scripting languages to modify the Document Object Model of the Silverlight Canvas object.[9] To facilitate this, Silverlight exposes a DOM API, accessible from any scripting language supported by Silverlight, which in version 1.0 release is limited to JavaScript running in the browser. However, there are no UI widgets built in. The native widgets of the browser must be overlaid on top of the Silverlight Canvas for user input. Support for data formats is limited to XML and JSON only.[9]

[edit] Silverlight 2




A Silverlight 2 application hosted in Internet Explorer. Version 2.0 brings improved interactivity and support for .NET languages and development tools


Silverlight 2.0 (previously referred to as version 1.1)[11] includes a version of the .NET Framework, implementing the same full Common Language Runtime version as .NET Framework 3.0; so it can execute programs written in any .NET language (however you cannot reference assemblies compiled with the regular .NET Framework by default). Unlike the CLR included with .NET Framework, multiple instances of the CoreCLR included in Silverlight can be hosted in one process.[12] With this, the XAML layout markup file (.xaml file) can be augmented by code-behind code, written in any .NET language, which contains the programming logic. It can be used to programmatically manipulate both the Silverlight application and the HTML page which hosts the Silverlight control. The XAML markup as well as the code, is compiled into .NET assemblies which are then compressed using ZIP and stored in a .xap file.[13]
Silverlight ships with a lightweight class library which includes features such as extensible controls, XML Web Services, networking components and LINQ APIs. This class library is a subset of, and is considerably smaller than, .NET Framework's Base Class Library. Silverlight code runs in a sandbox, thus preventing the invocation of platform APIs.[14]




Silverlight 2 Architecture


The version of .NET Framework in Silverlight adds[9] a subset of WPF UI-programming model, including support for shapes, documents, media and animation objects of WPF. Beta 2 onwards,[15] it ships with more than 30 UI controls[16] (including TextBox, CheckBox, Slider, ScrollViewer, and Calendar controls),[17] for two-way databinding support, automated layout management (by means of StackPanel, Grid etc)[17] as well as data-manipulation controls, such as DataGrid[11][18] and ListBox.[17] UI controls are skinnable using a template-based approach.[17] Third-party libraries of expanded UI-control sets are also available.[19]




A set of Silverlight controls rendered with different skins


The included Base-Class Library (BCL) provides classes for collections, reflection, regular expressions, string handling and data access. It also supports LINQ, with full support for LINQ to Objects and expression trees. Almost all of the System.Linq and System.Linq.Expression namespaces are exposed. It also supports serialization of objects, for data persistence. Silverlight can handle data in RSS or JSON format, in addition to XML. The BCL provides enhanced support for working with XML data, including the XMLReader and XMLWriter classes. Silverlight 2 also supports asynchronous programming via the use of the threading libraries.[18]
Silverlight also includes classes for data access over XML-based Web services, REST, WCF Services and ADO.NET Data Services.[15] The networking support in Silverlight can be used by Silverlight applications to communicate using HTTP, or at the lower socket level. Cross-domain communication is supported. [16] Silverlight uses an XML-based configuration file to control the cross-domain resource-access policy, for both HTTP and socket connections. It can be used by site administrators to control which resources a Silverlight application can access, when that application did not originate in the domain of the site. In addition, Silverlight also supports the Adobe Flash Cross-domain policy file format.[20] Silverlight sockets can only initiate a connection; they cannot listen for connections.[21]
Silverlight 2 includes[15] the Dynamic Language Runtime (DLR) which allows dynamic compilation and execution of dynamic (scripting) languages. Compilers for the languages based on the DLR (including IronPython and IronRuby) are [to be?] packaged with the Dynamic Languages application in the .xap package.[22] The Dynamic Languages SDK includes a web server named Chiron, that can dynamically package all the dependencies for the Dynamic Languages application and serve it to the browser.[22] The first upcoming languages written for the DLR are Managed JScript, IronPython 2.0, and IronRuby. Microsoft also plans to build Visual Basic .NET 10.0 (VBx) on the DLR. All four languages share the same infrastructure, to allow Silverlight to compile and execute the language source. Conversely, other .NET languages must be compiled ahead-of-time and delivered to Silverlight as .NET assemblies. The implementation of Managed JScript conforms to the ECMAScript 3.0 specification, and Microsoft claims that it is 250 times faster than interpreted JScript.[18]




A Python interpreter in Silverlight 2 hosted in Mozilla Firefox


With the integration of .NET Framework, Silverlight also allows HTML-managed code interaction, which enables the manipulation of HTML DOM elements from managed code,[9] and permits JavaScript code to call managed code and use objects instantiated by managed code. Silverlight encloses JavaScript objects and DOM elements in managed wrappers to make them available from managed code.[23] While there is no provision for calling JavaScript code directly in the 1.1 alpha release, managed-code events can fire JavaScript handlers. A Silverlight instance does not need to have a UI component in order to manipulate the HTML DOM from managed code.[24] It is done by creating an XAML Canvas with both width and height set to zero, and using its code-behind code to modify the Document Object Model of the HTML page via the APIs in the System.Browser namespace.[25]
Silverlight 2 includes Deep Zoom, a technology derived from Microsoft Live Labs Seadragon. It allows users to zoom into, or out of, an image (or a collage of images), with smooth transitions, using the mouse wheel.[26] The images can scale from 2 or 3 megapixels in resolution into the gigapixel range, but the user need not wait for it to be downloaded entirely; rather, Silverlight downloads only the parts in view, optimized for the zoom level being viewed.[27] Beta 2 onwards, Deep Zoom uses an XML-based file format.[15]




A Silverlight 2 application using DeepZoom, running in Safari 3.1, on Windows XP


Media features in Silverlight 2 include:[28]

WMA Professional support, including WMA 10 Pro low-bitrate modes. However, multi-channel audio content is still down-converted to stereo output.
Content protection powered by Microsoft PlayReady DRM client.
Server-side playlists in Windows Media Services.
Media Stream Source API.

The Media Stream Source is the API responsible for enabling adaptive streaming of media. Adaptive streaming allows the player application to choose the bit rate of the media based on available client bandwidth and CPU resources.[15] Media Stream Source allows the developer to specify a custom method of retrieving media data, the only requirement being that the final video and audio streams be presented to Silverlight runtime in a format that Silverlight can decode (VC-1, H.264, WMA, MP3, etc). This allows extensible support for otherwise natively unsupported file formats (i.e. MP4, Matroska, Ogg), protocols (i.e. Shoutcast) and delivery methods (i.e. adaptive streaming, P2P). Microsoft first publicly showcased the power of Media Stream Source by powering the NBC Olympics website with their own implementation of adaptive streaming.[29]




Third-party open source Chart Control(Visifire) in action.


Silverlight 2 also allows limited filesystem access to Silverlight applications.[23] It can use the operating system's native file dialog box to browse to any file (to which the user has access). The file is sanitized of path information, to prevent the application from getting access to information such as user name, and can be opened only in read-only mode. For local storage of data, Silverlight provides isolated local storage (isostorage),[23] namely, outside the browser cache, in a folder hidden inside the private user-profile folder. It is set to 1 MB per URL by default,[23] but this can be changed by the user.[15] Data stored by a Silverlight application in the isostorage is identified by the URL from which it loads, and can be accessed by that application only. All instances of Silverlight share the same isostorage, so all instances of the same Silverlight application can share the saved data, even if they are running on different browsers.
Silverlight CoreCLR uses an attribute-based security model, as opposed to the Code Access Security (CAS) model of the desktop version of .NET Framework.[30] Assemblies are marked with a security attribute, which can be transparent (SecurityTransparentAttribute), safecritical (SecuritySafeCriticalAttribute) or critical (SecurityCriticalAttribute). Methods in transparent assemblies run with partial trust, and codes within such assemblies cannot call critical methods (methods which can cause system-wide changes); neither can transparent assemblies contain unverifiable code (use the unsafe C# keyword or use pointers) or invoke system functions by means of P/Invoke. Code in both critical and safecritical assemblies run with full trust, and are therefore not subject to such limitations. However, a transparent method can call a safecritical method, and a safecritical method can call a critical method. In such a case, the safecritical method will verify that the call is both safe and within the limited rights of the caller; if so, then the safecritical method will proxy the call to the requested critical method. In fact, the IsoStorage APIs are exposed as safecritical methods.[30] An assembly whose security attribute is unset is run as a transparent method. Analogous limitations also apply to type-inheritance; namely, in the cases of virtual-method calls and interface-method calls.[31] Silverlight assemblies can contain members that are not usable by CoreCLR, as long as they can be processed by the .NET Framework CLR; such methods will not be loaded when the assembly is being executed by CoreCLR.[32]
However, only platform code is allowed to be marked as critical or safecritical. The Silverlight runtime ensures that platform assemblies are loaded only from the Silverlight installation directory, and are digitally signed by Microsoft. This effectively means that user-application assemblies can only be transparent code (run under partial trust and limited rights).[33] Platform code can be marked with either attribute. The BCL methods of the .NET Framework, which have the Internet attribute set, allowing them to be called from untrusted code originating from Internet, are exposed in Silverlight BCL as transparent methods.[33]

[edit] Silverlight 3





This article or section contains information about scheduled or expected future software.
The content may change as the software release approaches and more information becomes available.









A Silverlight 3 application, with one instance running in a browser (Google Chrome) as well as installed locally. The start menu icon is also shown.


Silverlight 3 was first announced at the IBC 2008 show in Amsterdam on September 12, 2008. It was unveiled at MIX09 in Las Vegas on March 18, 2009. A beta version was made available for download the same day.
Silverlight 3 includes an increased number of controls[34] - including but not limited to DataGrid, TreeView, various layout panels, DataForm for forms-driven applications and DataPager for viewing paginated data. Some of these controls are from the Silverlight Toolkit. In addition, Silverlight 3 includes a navigation framework to let Silverlight applications use the hyperlinked navigation model as well as enabling deep-linking (linking directly to specific pages) within Silverlight applications.[34]
On the media front, Silverlight 3 supports AAC audio decoding as well as hardware-accelerated H.264 video decoding.[34] The native multimedia pipeline is also programmatically exposed, so that other formats can also be supported by third-parties using managed code decoders.[34] Silverlight 3 supports perspective 3D[34] which enables 3D transformations of 2D elements.[35] These transformations, as well as many 2D operations like stretches, alpha blending etc are hardware accelerated.[35] Custom animations, including transforms and blends, can be created on Silverlight elements using HLSL to make use of pixel shaders.[35] A Bitmap API is provided to let Silverlight 3 applications manipulate bitmaps.[35] Silverlight now uses the GPU to accelerate the composition of Visual Trees (like WPF, Silverlight elements correspond to Visual elements, which, when coupled with the layout information, forms a Composition Tree or Visual Tree which is then rendered to form the final display; see WPF architecture).[34] Visual trees can now be cached;[34] this increases performance in cases like transforms, which creates lots of throw-away intermediate states, by not making the state transitions on the main Visual tree. Silverlight 3, on release, will support ClearType text rendering.[34]




A Silverlight 3 application demonstrating local file access.


UI elements in Silverlight 3 supports element-to-element binding - which allows one element to be bound to the state of another element,[35] as well as a validation mechanism for data binding.[34] Unlike Silverlight 2, which allowed the applications to save files only to the local isostorage, Silverlight 3 applications can save to any location on the file system via the system Save File dialog. However, the path where the file is saved will still be hidden from the Silverlight application.[34] Any external assemblies used by Silverlight applications are cached to so that they need not be redownloaded for subsequent instantiations of the application.[34]
Silverlight 3 also includes a LocalConnection API to communicate (using a named pipe style model) among multiple running applications on the same machine, irrespective of the browser [34][35] and can monitor for network connectivity events.[34] Silverlight 3 can optionally use Binary XML to communicate with WCF services.[34]
Silverlight 3 supports Out-of-Browser experiences, i.e., Silverlight applications can be installed to the system for offline access (provided the application manifest is designed to allow local installation) where they run outside the browser. They are launched using the Start Menu or desktop shortcuts, and run without the browser window.[34] Applications can check whether they are running inside a browser or not.[36] When running out of browser, HTML interop is disabled. In addition, access to the Function Keys are enabled.[37] Locally installed Silverlight applications still run in a sandbox.[37]
Installed Silverlight 3 applications automatically check for updates asynchronously on every launch and updates are automatically installed.[38] Running instances of the applications are informed when updates are available.[36]

[edit] Release history


Version name
Version number
Release date


1.0 CTP
1.0.?
2006-12


1.0 RTW
1.0.20816
2007-09-05


2.0 Pre-Release
(As 1.1 Alpha Refresh)
1.1.20926.0
2007-09-05


1.0 service release
1.0.21115.0
2007-11-20


1.0 service release
1.0.30109.0
2008-01-15


2 Beta 1[39]
2.0.30226.2
2008-03-05


1.0 service release[40]
1.0.30401.0
2008-04-08


2 Beta 2
2.0.30523.6
2008-06-06[41]


2.0.30523.8
2008-07-16


1.0 service release
1.0.30715.0
2008-07-27


2.0 RC0
2.0.30523.9
2008-09-25


2 RTW[42]
2.0.31005.0
2008-10-14[43]


2 GDR 1
2.0.40115.0
2009-02-19


3 Beta
3.0.40307.0
2009-03-18 at MIX09



[edit] Compatibility

[edit] Operating Systems and Web Browsers
The following table presents an availability and compatibility matrix of Silverlight versions for various operating systems and web browsers.


OS/browser
IE 6 SP1
IE 6 SV1
IE 7
IE 8
Firefox
SeaMonkey
Safari
Konqueror
Opera
Google Chrome


Windows Vista/2008
N/A
N/A
1.0, 2.0, 3.0
1.0, 2.0, 3.0
1.0, 2.0, 3.0
1.0, 2.0
1.0, 2.0; via NPAPI
N/A
Unofficially[44][45]
2.0


Windows XP/2003/Home Server
N/A
1.0, 2.0, 3.0
1.0, 2.0, 3.0
1.0, 2.0, 3.0
1.0, 2.0, 3.0
N/A
1.0, 2.0; via NPAPI
N/A
Unofficially[44][45]
2.0


Windows 2000
2.0
N/A
N/A
N/A
2.0 Unofficially[46]
N/A
2.0; via NPAPI
N/A
Planned[44]
N/A


Windows Mobile 6
2.0[citation needed]
N/A
N/A
N/A
N/A
N/A
N/A
N/A
N/A
N/A


Mac OS 10.4/10.5 PowerPC
N/A
N/A
N/A
N/A
1.0
N/A
1.0
N/A
Planned[44]
N/A


Mac OS 10.4/10.5 Intel
N/A
N/A
N/A
N/A
1.0, 2.0
N/A
1.0, 2.0
N/A
Planned[44]
N/A



Opera will be officially supported with future builds.[44] Unofficially, Silverlight support is already available to Opera via a hack.[45]
On Linux^, the functionality will be made available via the compatible third-party Moonlight runtime.[47][48] Moonlight will be available for the major Linux distributions, with support for Firefox, Konqueror, and Opera browsers, provided it was obtained through Novell.[49] Miguel de Icaza has expressed an interest in working with developers from other operating systems (BSD, Solaris) and other browsers (Konqueror, WebKit and Opera) to ensure that Moonlight works fine on their systems.[50]
Silverlight for Mobile will be used to run Silverlight content on mobile devices. The first CTP for Windows Mobile 6 will be released in 2nd Quarter of 2008.[1] Nokia has announced plans to make Silverlight for Mobile available for S60 on Symbian OS, as well as for Series 40 devices and Nokia Internet tablets.[51] Silverlight for Mobile will initially support Silverlight 1.0 content.[1]
Silverlight requires an x86 processor with SSE support. Supported processors include the Intel Pentium III and up, and the AMD Athlon XP and up. Some AMD Duron models are also supported.
Additional platforms are being considered as well.[52]


[edit] Development tools




A Silverlight application being edited in Microsoft Visual Studio.


Silverlight applications can be written in any .NET programming language. As such, any development tools which can be used with .NET languages can work with Silverlight, provided they can target the Silverlight CoreCLR for hosting the application, instead of the .NET Framework CLR. Microsoft has positioned Microsoft Expression Blend versions 2.0 and 2.1 (2SP1) for designing the UI of Silverlight 1.0 and 2 applications respectively. Visual Studio 2008 can be used to develop and debug Silverlight applications. To create Silverlight projects and let the compiler target CoreCLR, Visual Studio 2008 requires the Silverlight Tools for Visual Studio.[53]
A Silverlight project contains the Silverlight.js and CreateSilverlight.js files which initializes the Silverlight plugin for use in HTML pages, a XAML file for the UI, and code-behind files for the application code. Silverlight applications are debugged in a manner similar to ASP.NET applications. Visual Studio's CLR Remote Cross Platform Debugging feature can be used to debug Silverlight applications running on a different platform as well.[54]
In conjunction with the release of Silverlight 2.0, Eclipse was added as a development tool option.[55]

[edit] Licensing
A pcworld report claimed[56] that Microsoft aims to release certain parts of Silverlight source code as open source software, but Sam Ramji, director of platform technology strategy at Microsoft, said the company has no plans to do so.[clarification needed][57] Some controls that ship with Silverlight are available under the Microsoft Public License as a part of a separate project known as the Silverlight Toolkit.[58]
The fact that Silverlight is proprietary is a concern to competition since it may harm the open nature of the World Wide Web. Advocates of free software are also concerned Silverlight could be another example of Microsoft's Embrace, extend and extinguish strategy. Both Microsoft Silverlight and Adobe Flash are proprietary,[59][60] however Flash's file formats are publicly documented standards,[61][62] unlike Silverlight's. Both use patent-encumbered audio and video codecs.

[edit] Mono Moonlight implementation
Main article: Moonlight (runtime)
The Mono team is currently developing Moonlight, a free and open-source implementation of both the Silverlight 1.0 and 2.0 runtimes[63].
The project is officially supported by Microsoft who,[47] under an agreement with Novell, has made additional specifications, access to the Silverlight Base Class Library APIs, binary codecs and test cases available to the Mono team,[48] none of which are available to other members of the public.[64]
The 'covenant' under which Novell has been granted this exclusive access also specifies conditions that are incompatible with the licencing that covers most other free and open source software. As examples, it specifically requires that the software must have been "obtained directly from Novell or through an Intermediate Recipient" and that it must be "not licensed under GPLv3 or a Similar License".[49] Free software proponents Groklaw have criticized the covenant,[65] although Novell, Inc. is enthusiastic.[66]
Silverlight has been criticized for keeping Linux out of their official offering. Even with Microsoft's official support of the Moonlight project, Bruce Chizen, former CEO of Adobe, and maker of direct competitor Flash, has questioned "the commitment of Microsoft to keep the Silverlight platform compatible with other OS than Windows".[67] His concerns are based on "examples from history" where Microsoft has launched products with promises of ongoing cross-platform compatibility that no longer apply, such as Internet Explorer for UNIX and Windows Media Player.

[edit] Relationship to existing Web standards
California and several other U.S. states also have asked a District Judge to extend most of Microsoft's antitrust case settlement for another five years,[68] citing "a number of concerns, including the fear that Microsoft could use the next version of Windows to 'tilt the playing field' toward Silverlight, its new Adobe Flash competitor," says a Seattle Post-Intelligencer article. The final judgement on the motion extended the settlement two years, to November 2009, but for reasons unrelated to Silverlight. [69]. In Windows 7 betas the Silverlight webbrowser plugin is not installed automatically but is an optionally downloadable update through Windows update. [70]
Microsoft has been criticized for not using the Scalable Vector Graphics standard for Silverlight, which, according to Ryan Paul of Ars Technica, is consistent with Microsoft's ignoring of open standards in other products, as well.[71] However, according to David Betz, a .NET specialist and Microsoft MVP, "While this seems to some to be a valid criticism and a good point to some of the web standards world, it is absolutely groundless and carries no weight." Microsoft would have altered the SVG specification to integrate it with .NET, rather than the reverse. Consequently, he thinks the "choice by Microsoft to use XAML over SVG, served to retain the SVG standard by not adding proprietary technology [to SVG]".[72]

[edit] See also

Adobe Flash Player
Adobe AIR
Curl Surge RTE
JavaFX
Rich Internet application
Windows Live Silverlight Streaming
OpenLaszlo - An open source platform for rich Internet applications. Deploys in Adobe Flash, or as cross browser DHTML as of version 4.


[edit] References


^ a b c "Silverlight for Mobile". Silverlight.net. http://silverlight.net/learn/mobile.aspx. Retrieved on 2008-03-09. 
^ Rafe Needleman. "What is Silverlight, really?". http://www.webware.com/8301-1_109-9714748-2.html. Retrieved on 2007-05-05. 
^ Charles Sterling. "Writing a Windows Sidebar Gadget in Silverlight dead simple". MSDN Blogs. http://blogs.msdn.com/charles_sterling/archive/2007/05/14/writing-a-windows-sidebar-gadget-in-silverlight-dead-simple.aspx. Retrieved on 2008-03-09. 
^ Silverlight FAQs
^ "Microsoft Silverlight 1.0 beta license". http://www.microsoft.com/silverlight/license-win.aspx. Retrieved on 2007-06-14. 
^ "Discussed on Microsoft's web site in Q&A with Scott Guthrie". http://www.microsoft.com/presspass/features/2008/sep08/09-09silverlight.mspx. 
^ "Using a Downloader Object". http://msdn2.microsoft.com/en-us/library/bb232904.aspx. Retrieved on 2007-05-25. 
^ Mono developers to bring Silverlight to Linux
^ a b c d e "Silverlight architecture". http://msdn2.microsoft.com/en-us/library/bb404713.aspx. Retrieved on 2007-06-05. 
^ "Silverlight 1.0 Beta QuickStart". http://silverlight.net/quickstarts/silverlight10/default.aspx. Retrieved on 2007-06-05. 
^ a b ".NET Web-Product Roadmap (ASP.NET, Silverlight, IIS7)". http://weblogs.asp.net/scottgu/archive/2007/11/29/net-web-product-roadmap-asp-net-silverlight-iis7.aspx. Retrieved on 2007-11-30. 
^ "Side by Side In Process CLRs Start with Silverlight". http://blogs.msdn.com/jasonz/archive/2007/05/10/side-by-side-in-process-clrs-start-with-silverlight.aspx. Retrieved on 2007-05-12. 
^ Scott Guthrie. "Silverlight Tutorial Part 1: Creating "Hello World" with Silverlight 2 and VS 2008". http://weblogs.asp.net/scottgu/pages/silverlight-tutorial-part-1-creating-quot-hello-world-quot-with-silverlight-2-and-vs-2008.aspx. Retrieved on 2008-02-24. 
^ "Microsoft Polishes the Silverlight". http://www.channelregister.co.uk/2007/05/01/ms_silverlight_v_adobe_flash/. Retrieved on 2007-05-02. 
^ a b c d e f Silverlight SDK Team. "What's new in Silverlight 2 Beta 2?". MSDN Blogs. http://blogs.msdn.com/silverlight_sdk/archive/2008/06/04/what-s-new-in-silverlight-2-beta-2.aspx. Retrieved on 2008-07-06. 
^ a b Scott Guthrie. "Silverlight 2 Beta2 Released". http://weblogs.asp.net/scottgu/archive/2008/06/06/silverlight-2-beta2-released.aspx. Retrieved on 2008-07-06. 
^ a b c d Scott Guthrie. "First Look at Silverlight 2". http://weblogs.asp.net/scottgu/archive/2008/02/22/first-look-at-silverlight-2.aspx. Retrieved on 2008-02-24. 
^ a b c "Silverlight". http://weblogs.asp.net/scottgu/archive/2007/05/07/silverlight.aspx. Retrieved on 2007-05-12. 
^ Tim Sneath. "Some Great Silverlight Controls". http://blogs.msdn.com/tims/archive/2007/06/22/some-great-silverlight-controls.aspx. Retrieved on 2007-06-30. 
^ Scott Guthrie. "Silverlight Tutorial Part 3: Using Networking to Retrieve Data and Populate a DataGrid". http://weblogs.asp.net/scottgu/pages/silverlight-tutorial-part-3-using-networking-to-retrieve-data-and-populate-a-datagrid.aspx. Retrieved on 2008-02-24. 
^ Michael Schwarz. "Silverlight Socket Comments". http://weblogs.asp.net/mschwarz/archive/2008/03/10/silverlight-socket-comments.aspx. Retrieved on 2008-03-12. 
^ a b John Lam. "Dynamic Silverlight, Part 1: Hello World". MSDN Blogs. http://www.iunknown.com/2008/03/dynamic-silverl.html. Retrieved on 2008-03-12. 
^ a b c d Danny Thorpe (2007-05-02). "MIX07: Extending the Browser Programming Model with Silverlight". http://blogs.msdn.com/dthorpe/archive/2007/05/02/mix07-extending-the-browser-programming-model-with-silverlight.aspx. Retrieved on 2007-05-03. 
^ Tim Sneath (2007-06-07). "Silverlight Isn't Just about Presentation". http://blogs.msdn.com/tims/archive/2007/06/07/silverlight-isn-t-just-about-presentation.aspx. Retrieved on 2007-06-13. 
^ Tim Sneath (2007-06-13). "Programming HTML with C#". http://blogs.msdn.com/tims/archive/2007/06/13/programming-html-with-c.aspx. Retrieved on 2007-06-30. 
^ "Silverlight 2 and Deep Zoom - Get ready to Build Your Own Photozooming collections". LiveSide. http://www.liveside.net/blogs/main/archive/2008/03/06/silverlight-2-and-deep-zoom-get-ready-to-build-your-own-photozooming-collections.aspx. Retrieved on 2008-03-06. 
^ "Silverlight 2 'Deep Zoom'". Microsoft Live Labs. http://labs.live.com/Silverlight+2+Deep+Zoom.aspx. Retrieved on 2008-03-09. 
^ "Media Features in Silverlight 2 Beta 2". Ben Waggoner. http://on10.net/blogs/benwagg/Silverlight-2-Beta-2-is-out. Retrieved on 2008-08-29. 
^ "An Inside Look at NBC Olympics Video Player". Alex Zambelli. http://alexzambelli.com/blog/2008/08/21/an-inside-look-at-nbc-olympics-video-player/. Retrieved on 2008-08-29. 
^ a b Shawn Farkas. "The Silverlight Security Model". http://blogs.msdn.com/shawnfa/archive/2007/05/09/the-silverlight-security-model.aspx. Retrieved on 2007-06-08. 
^ Shawn Farkas. "Silverlight Security III: Inheritance". http://blogs.msdn.com/shawnfa/archive/2007/05/11/silverlight-security-iii-inheritance.aspx. Retrieved on 2007-06-08. 
^ "How to: Explore Silverlight Assemblies with the Visual Studio Object Browser". http://silverlight.net/quickstarts/Start/BrowseApi.aspx. Retrieved on 2007-06-08. 
^ a b Shawn Farkas. "Silverlight Security II: What Makes a Method Critical?". http://blogs.msdn.com/shawnfa/archive/2007/05/10/silverlight-security-ii-what-makes-a-method-critical.aspx. Retrieved on 2007-06-08. 
^ a b c d e f g h i j k l m n o Tim Heuer. "A guide to Silverlight 3 new features". http://timheuer.com/blog/archive/2009/03/18/silverlight-3-whats-new-a-guide.aspx. Retrieved on 2009-03-23. 
^ a b c d e f Kevin Hoffman. "What's New in Silverlight 3?". http://dotnetaddict.dotnetdevelopersjournal.com/new_silverlight3.htm. Retrieved on 2009-03-23. 
^ a b Kevin Hoffman. "Creating an Out-of-Browser Application in Silverlight 3". http://dotnetaddict.dotnetdevelopersjournal.com/sl3_outofbrowser_walkthrough.htm. Retrieved on 2009-03-23. 
^ a b Mike Harsh. "Silverlight 3 Out of the Browser". http://blogs.msdn.com/jonbox/archive/2009/03/22/silverlight-3-out-of-the-browser.aspx. Retrieved on 2009-03-23. 
^ Tim Heuer. "Silverlight 3 Out-of-browser Update Model". http://timheuer.com/blog/archive/2009/03/18/silverlight-3-offline-update-framework.aspx. Retrieved on 2009-03-23. 
^ "Quick update on Silverlight". http://blogs.msdn.com/somasegar/archive/2007/11/29/quick-update-on-silverlight.aspx. Retrieved on 2007-11-30. 
^ MSFN - Microsoft rolls out Silverlight maintenance release
^ Emil Protalinski. "Silverlight 2 Beta 2 arrives on time, available now". Ars Technica. http://arstechnica.com/journals/microsoft.ars/2008/06/06/silverlight-2-beta-2-arrives-on-time-available-now. Retrieved on 2008-06-06. 
^ Knom. "Silverlight 2 Released". blogs.msdn.com. http://blogs.msdn.com/knom/archive/2008/10/14/silverlight-2-released.aspx. Retrieved on 2008-10-21. 
^ "Microsoft Releases Silverlight 2 On Tuesday, Oct. 14". LiveSide. http://www.liveside.net/main/archive/2008/10/13/microsoft-releases-silverlight-2-on-tuesday-oct-14.aspx. Retrieved on 2008-10-13. 
^ a b c d e f "Opera Watch: More details on Silverlight support in Opera". http://operawatch.com/news/2007/05/more-details-on-silverlight-support-in-opera.html. Retrieved on 2007-05-02. 
^ a b c "Silverlight in Opera". http://blog.crazyboomerang.com/2007/12/silverlight-in-opera.html. Retrieved on 2008-03-10. 
^ Install Silverlight : Unsupported platform, system requirements
^ a b "Silverlight 1.0 Released and Silverlight for Linux Announced". http://weblogs.asp.net/scottgu/archive/2007/09/04/silverlight-1-0-released-and-silverlight-for-linux-announced.aspx. Retrieved on 2007-09-05. 
^ a b "Microsoft/Novell Collaboration on Silverlight.". http://tirania.org/blog/archive/2007/Sep-05.html. Retrieved on 2007-09-05. 
^ a b "Covenant to Downstream Recipients of Moonlight - Microsoft & Novell Interoperability Collaboration". Microsoft. 2007-09-28. http://www.microsoft.com/interop/msnovellcollab/moonlight.mspx. Retrieved on 2008-03-08.  "“Downstream Recipient” means an entity or individual that uses for its intended purpose a Moonlight Implementation obtained directly from Novell or through an Intermediate Recipient… Microsoft reserves the right to update (including discontinue) the foregoing covenant… “Moonlight Implementation” means only those specific portions of Moonlight 1.0 or Moonlight 1.1 that run only as a plug-in to a browser on a Personal Computer and are not licensed under GPLv3 or a Similar License." 
^ "Microsoft/Novell Collaboration on Silverlight". Miguel de Icaza. 2007-09-05. http://tirania.org/blog/archive/2007/Sep-05.html. Retrieved on 2008-11-09.  "We will be supporting Firefox and Linux initially (that is our first goal) but we are looking forward to work with developers from other operating systems (BSD, Solaris) and other browsers (Konqueror, WebKit and Opera) to ensure that Moonlight works fine on their systems." 
^ "Nokia to enable Silverlight". blog.anta.net. 2008-03-04. ISSN 1797-1993. http://blog.anta.net/2008/03/04/nokia-to-enable-silverlight/. Retrieved on 2008-03-04. 
^ Joe Stegman. "MSDN Forums Silverlight General Discussion: Linux support". http://forums.microsoft.com/MSDN/ShowPost.aspx?PostID=988552&SiteID=1. Retrieved on 2007-04-29. 
^ "Microsoft® Silverlight™ Tools for Visual Studio 2008 SP1". http://www.microsoft.com/downloads/details.aspx?FamilyId=c22d6a7b-546f-4407-8ef6-d60c8ee221ed&displaylang=en. Retrieved on 2009-01-22. 
^ Nigel Parker. "MIX07 Your Product is a feature of the Web!". http://blogs.msdn.com/nigel/archive/2007/05/09/mix07-your-product-is-a-feature-of-the-web.aspx. Retrieved on 2007-06-08. 
^ "Eclipse for Silverlight". http://www.eclipse4sl.org/. Retrieved on 2008-10-14. 
^ Elizabeth Montalbano. "Microsoft Goes Open Source?". http://www.pcworld.com/article/id,131331-c,graphicsmultimedia/article.html. Retrieved on 2007-04-29. 
^ Gavin Clarke. "Silverlight glow dimmed by cross-platform concerns". http://www.theregister.co.uk/2007/05/01/microsoft_open_source_mix/. Retrieved on 2007-05-05. 
^ http://www.microsoft.com/downloads/details.aspx?FamilyID=EB83ED4C-AC85-4DE9-8395-285628EE2254&displaylang=en Sample Source Code for Silverlight 2 Runtime and SDK Controls
^ Markoff, John (2008-08-11). "Microsoft leveraging Silverlight and riling critics". International Herald Tribune. http://www.iht.com/articles/2008/08/11/technology/stream11.php. Retrieved on 2009-01-11.  "Others take a darker view of Microsoft's intentions and argue that Silverlight is simply a rehash of the company's 1990s-era "embrace and extend" strategy for pre-empting Web competition. "They're still playing the same games," said Michael Nelson, professor of Internet studies at Georgetown University. "It's a way to lock up the content, and it's not enabling as much innovation as we would like to see."" 
^ Meyer, David (2008-04-30). "Mozilla warns of Flash and Silverlight 'agenda'". ZDNet. http://news.zdnet.com/2424-3515_22-199508.html. Retrieved on 2009-01-11.  "Companies building websites should beware of proprietary rich-media technologies like Adobe's Flash and Microsoft's Silverlight, the founder of Mozilla Europe has warned." 
^ http://www.adobe.com/devnet/swf http://www.adobe.com/devnet/swf/pdf/swf_file_format_spec_v9.pdf
^ http://www.adobe.com/devnet/flv http://www.adobe.com/devnet/flv/pdf/video_file_format_spec_v9.pdf -- http://www.iso.org/iso/catalogue_detail?csnumber=41828 as official ISO standard
^ "Mono Moonlight". Mono Project. http://www.mono-project.com/Moonlight. Retrieved on 2008-06-22. 
^ "Pre-Mix 08: Moonlight Updates". 2008-03-03. http://tirania.org/blog/archive/2008/Mar-03.html. Retrieved on 2008-03-08. 
^ Pamela Jones (28 May 2008). "Shining Some Light on Microsoft's Moonlight Covenant". Groklaw. http://www.groklaw.net/article.php?story=20080528133529454. Retrieved on 2008-08-25.  "Moonlight is safe from threat only if you get it from Novell AND DO NOT PASS IT ON, as there are no protections for downstream recipients... unless those downstream recipients get it from an 'Intermediate Recipient' defined to only include authorized resellers... It's like walking into a store and saying "I'm only going to pay half of the amount I owe and I hereby disclaim my duty to pay full price." You can try that, but the law supersedes whatever intent or desire you've expressed. At minimum, this shows how clearly they DO NOT want to coexist with GPL'd code." 
^ "Moonlight: Frequently asked questions". Novell, Inc. http://www.novell.com/products/desktop/moonlight_faq.html. Retrieved on 2008-08-25. 
^ gautam (April 20, 2007). "Adobe CEO questions Microsoft Silverlight cross-platform commitment". Java Entrepreneur. http://www.java-entrepreneur.com/50226711/adobe_ceo_questions_microsoft_silverlight_crossplatform_commitment.php. Retrieved on 2007-12-06. 
^ Todd Bishop (October 17, 2007). "Antitrust filing cites Microsoft Silverlight concern". Seattle Post-Intelligencer. http://blog.seattlepi.nwsource.com/microsoft/archives/123837.asp. Retrieved on 2007-12-06. 
^ "Anitrust motion Executive Summary". http://www.microsoft-antitrust.gov/pdf/Jan292008ExecSummary.pdf. Retrieved on 2008-09-07. 
^ " "Silverlight on Windows Update (Windows 7)". 2008-11-30. http://geekswithblogs.net/lbugnion/archive/2008/11/30/silverlight-on-windows-update-windows-7.aspx". 
^ Ryan Paul. "Microsoft's Flash-killer Silverlight steals the show at MIX07". http://arstechnica.com/news.ars/post/20070501-microsofts-flash-killer-steals-the-show-at-mix07.html. Retrieved on 2007-05-06.  "[Microsoft]'s perpetual unwillingness (or perhaps inability) to build on existing standards is deeply detrimental to users and developers. Internet Explorer 7 is still the only major web browser that has no native support for SVG. By neglecting to use the SVG standard in Silverlight and XAML in favor of a limited and incompatible facsimile, Microsoft has once again needlessly ignored what could have been an opportunity to empower developers and help Internet Explorer catch up with browsers that are more functional and standards-compliant." 
^ David Betz. "Silverlight's Adoption as Public De-Facto Standard". http://www.netfxharmonics.com/2007/06/Silverlights-Adoption-as-Public-De-Facto-Standard.aspx. Retrieved on 2007-06-20.  "Silverlight can be viewed as a web extension of the Windows Presentation Foundation (WPF), a .NET 3.0 technology and not simply as a new web technology. As such, it makes sense that Silverlight uses XAML, not SVG. If Silverlight were based on SVG, then there would be a chasm between Silverlight and the .NET Framework, but as it stands Silverlight's use of XAML makes it part of the .NET family. In fact, it’s important to note that elements in XAML usually represent objects in the .NET Framework; this would simply not be possible in SVG." 



[edit] External links

Silverlight.net
Microsoft Silverlight
List of new and improved features in Silverlight 3
MSDN Silverlight Developer Center
An Series of Articles on Asynchronous Communications in Silverlight
Silverlight Articles and Tutorials
Free Silverlight Controls
Silverlight: Get Started Building A Deeper Experience Across The Web
WPFdev - Information about Silverlight Design and Development
Programming Silverlight with CoreCLR
PDC 2008 Silverlight presentations
All books on Microsoft Silverlight rated and reviewed








v • d • e

.NET Framework





Architecture

Base Class Library · Common Language Runtime · Code Access Security · Assembly · Metadata · COM Interop






Common Language
Infrastructure (CLI)

Common Language Infrastructure · Common Type System · Common Intermediate Language · Virtual Execution System






CLI Languages





Common1


C# · Visual Basic .NET · C++/CLI (Managed) · F#  · J#  · JScript .NET · Windows PowerShell







Other2


A# · Boo · M · Oxygene  · IronLisp · IronPython · IronRuby · IronScheme · Nemerle · Phalanger · P#









Components

ADO.NET (Entity Framework · Data Services) · ASP.NET (AJAX · MVC · Dynamic Data) · Language Integrated Query · CardSpace · ClickOnce · Communication Foundation · Dynamic Language Runtime · Forms · Presentation Foundation · Remoting · Workflow Foundation  · XAML






Other implementations

Mono · Compact Framework · XNA Framework · Micro Framework · Portable.NET · Silverlight · SSCLI






Comparisons

Java and C# · C# and Visual Basic .NET · Java and .NET platforms






Upcoming

"Acropolis" · "Jasper" · Parallel Extensions






1 Languages that are, will be, or have been included with Visual Studio or Microsoft Windows.
2 Non-academic or research languages with relatively large user-bases.












v • d • e

Microsoft development tools





Development
environments

Visual Studio (Team System · Express) · Visual Studio Tools for Office · Visual Studio Tools for Applications · Expression Web · Expression Blend






Languages and
compilers

Visual Basic (VB.NET) · Visual C++ · Visual C# · Visual J# · Visual FoxPro · IronPython · IronRuby · PowerShell · XAML · F#






Major APIs and
frameworks

Windows API / SDK · .NET Framework · Managed code frameworks (Presentation · Communication · Workflow · CardSpace) · Silverlight · XNA · ASP.NET (ASP.NET AJAX) · LINQ · ADO.NET · DirectX · Robotics Studio






Database tools
and languages





SQL Server


Express · Compact · Management Studio · Business Intelligence Development Studio · MSDE







SQL services


Analysis · Reporting · Integration · Notification







Other


Visual FoxPro · Microsoft Access · Extensible Storage Engine









Source control

Team Foundation Server · Visual SourceSafe






Driver development

Windows Driver Model · Windows Driver Foundation (KMDF · UMDF) · Windows Driver Kit · Windows Logo Kit













v • d • e

Rich Internet applications





Basic frameworks

Adobe Flex · Curl · JavaFX · Microsoft Silverlight · Cappuccino






SSB platforms

Bubbles · Adobe Integrated Runtime · Mozilla Prism · Elements SBM · Google Chrome  · Fluid






Related

Web application framework · Fat client · Vector graphics · JavaScript · Layout engine · Runtime · Widget engine









Retrieved from "http://en.wikipedia.org/wiki/Microsoft_Silverlight"
Categories: Upcoming software | Microsoft application programming interfaces | Graphics software | Web development software | Vector graphics editors | Animation software | 2D Animation software | Rich Internet application frameworks | Pocket PC software | Windows Mobile Standard softwareHidden categories: All articles with unsourced statements | Articles with unsourced statements since March 2009 | All pages needing cleanup | Wikipedia articles needing clarification from March 2009 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


العربية
Česky
Deutsch
Español
Français
한국어
Hrvatski
Íslenska
Italiano
עברית
Magyar
Nederlands
日本語
O'zbek
Polski
Português
Русский
Svenska
ไทย
Türkçe
Українська
中文









 This page was last modified on 6 April 2009, at 00:19.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
