













High Level Shader Language - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "High_Level_Shader_Language";
		var wgTitle = "High Level Shader Language";
		var wgAction = "view";
		var wgArticleId = "2338657";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 279179574;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); High Level Shader Language

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
The High Level Shader Language or High Level Shading Language (HLSL) is a proprietary shading language developed by Microsoft for use with the Microsoft Direct3D API. It is analogous to the GLSL shading language used with the OpenGL standard. It is very similar to the NVIDIA Cg shading language, as it was developed alongside it.[1]
HLSL programs come in three forms, vertex shaders, geometry shaders, and pixel (or fragment) shaders. A vertex shader is executed for each vertex that is submitted by the application, and is primarily responsible for transforming the vertex from object space to view space, generating texture coordinates, and calculating lighting coefficients such as the vertex's tangent, binormal and normal vectors. When a group of vertices (normally 3, to form a triangle) come through the vertex shader, their output position is interpolated to form pixels within its area, this process is known as rasterisation. Each of these pixels comes through the pixel shader, whereby the resultant screen colour is calculated.
Optionally, an application using a Direct3D10 interface and Direct3D10 hardware may also specify a geometry shader. This shader takes as its input the three vertices of a triangle and uses this data to generate (or tessellate) additional triangles, which are each then sent to the rasterizer.




Contents


1 Shader model comparison

1.1 Pixel shader comparison
1.2 Vertex shader comparison


2 Footnotes
3 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Shader model comparison

[edit] Pixel shader comparison


Pixel shader version
2.0
2.0a
2.0b
3.0[2]
4.0[3]


Dependent texture limit
8
Unlimited
8
Unlimited
Unlimited


Texture instruction limit
32
Unlimited
Unlimited
Unlimited
Unlimited


Position register
No
No
No
Yes
Yes


Instruction slots
32 + 64
512
512
≥ 512
≥ 65536


Executed instructions
32 + 64
512
512
65536
Unlimited


Texture indirections
4
No limit
4
No Limit
No Limit


Interpolated registers
2 + 8
2 + 8
2 + 8
10
32


Instruction predication
No
Yes
No
Yes
No


Index input registers
No
No
No
Yes
Yes


Temp registers
12
22
32
32
4096


Constant registers
32
32
32
224
16x4096


Arbitrary swizzling
No
Yes
No
Yes
Yes


Gradient instructions
No
Yes
No
Yes
Yes


Loop count register
No
No
No
Yes
Yes


Face register (2-sided lighting)
No
No
No
Yes
Yes


Dynamic flow control
No
No
No
24
Yes


Bitwise Operators
No
No
No
No
Yes


Native Integers
No
No
No
No
Yes



PS 2.0 = DirectX 9.0 original Shader Model 2 specification.
PS 2.0a = NVIDIA GeForce FX-optimized model.
PS 2.0b = ATI Radeon X700, X800, X850 shader model, DirectX 9.0b.
PS 3.0 = Shader Model 3.
PS 4.0 = Shader Model 4.

"32 + 64" for Executed Instructions means "32 texture instructions and 64 arithmetic instructions."

[edit] Vertex shader comparison


Vertex shader version
VS 2.0
VS 2.0a
VS 3.0[2]
VS 4.0[3]


# of instruction slots
256
256
≥ 512
4096


Max # of instructions executed
65536
65536
65536
65536


Instruction Predication
No
Yes
Yes
Yes


Temp Registers
12
13
32
4096


# constant registers
≥ 256
≥ 256
≥ 256
16x4096


Static Flow Control
Yes
Yes
Yes
Yes


Dynamic Flow Control
No
Yes
Yes
Yes


Dynamic Flow Control Depth
No
24
24
Yes


Vertex Texture Fetch
No
No
Yes
Yes


# of texture samplers
N/A
N/A
4
128


Geometry instancing support
No
No
Yes
Yes


Bitwise Operators
No
No
No
Yes


Native Integers
No
No
No
Yes



VS 2.0 = DirectX 9.0 original Shader Model specification.
VS 2.0a = NVIDIA GeForce FX-optimized model.
VS 3.0 = Shader Model 3.
VS 4.0 = Shader Model 4.


[edit] Footnotes


^ Fusion Industries :: Cg and HLSL FAQ ::
^ a b Shader Model 3.0, Ashu Rege, NVIDIA Developer Technology Group, 2004.
^ a b The Direct3D 10 System, David Blythe, Microsoft Corporation, 2006.



[edit] External links

Riemer's HLSL Introduction & Tutorial (includes sample code)
Simple HLSL Shader Tutorial
HLSL Introduction
SlimDX, a .NET DirectX wrapper alternative to the now defunct Managed DirectX with support for DirectX 10 / Shader Model 4.

 This computer language-related article is a stub. You can help Wikipedia by expanding it.



Retrieved from "http://en.wikipedia.org/wiki/High_Level_Shader_Language"
Categories: Computer language stubs | 3D computer graphics | Microsoft application programming interfaces | DirectX 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Deutsch
Español
Français
한국어
Italiano
Nederlands
日本語
Русский
中文









 This page was last modified on 23 March 2009, at 16:49 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
