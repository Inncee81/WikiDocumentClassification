













Microsoft Visual Studio - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Microsoft_Visual_Studio";
		var wgTitle = "Microsoft Visual Studio";
		var wgAction = "view";
		var wgArticleId = "13980768";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 282391092;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Microsoft Visual Studio

From Wikipedia, the free encyclopedia

Jump to: navigation, search 

Microsoft Visual Studio


Visual Studio 2008 SP1 editing a C# program


Developed by
Microsoft


Stable release
2008 SP1 (9.0.30729.1)
(August 11, 2008)[1] [+/−]


Preview release
[+/−]


Operating system
Microsoft Windows


Available in
Chinese (Simplified), Chinese (Traditional), English, French, German, Italian, Japanese, Korean, Spanish, Russian


Type
Integrated Development Environment


License
Microsoft EULA


Website
msdn.microsoft.com/vstudio


Microsoft Visual Studio is an integrated development environment (IDE) from Microsoft. It can be used to develop console and graphical user interface applications along with Windows Forms applications, web sites, web applications, and web services in both native code together with managed code for all platforms supported by Microsoft Windows, Windows Mobile, Windows CE, .NET Framework, .NET Compact Framework and Microsoft Silverlight.
Visual Studio includes a code editor supporting IntelliSense as well as code refactoring. The integrated debugger works both as a source-level debugger and a machine-level debugger. Other built-in tools include a forms designer for building GUI applications, web designer, class designer, and database schema designer. It allows plug-ins to be added that enhance the functionality at almost every level - including adding support for source control systems (like Subversion and Visual SourceSafe) to adding new toolsets like editors and visual designers for domain-specific languages or toolsets for other aspects of the software development lifecycle (like the Team Foundation Server client: Team Explorer).
Visual Studio supports languages by means of language services, which allow any programming language to be supported (to varying degrees) by the code editor and debugger, provided a language-specific service has been authored. Built-in languages include C/C++ (via Visual C++), VB.NET (via Visual Basic .NET), and C# (via Visual C#). Support for other languages such as Chrome, F#, Python, and Ruby among others has been made available via language services which are to be installed separately. It also supports XML/XSLT, HTML/XHTML, JavaScript and CSS. Language-specific versions of Visual Studio also exist which provide more limited language services to the user. These individual packages are called Microsoft Visual Basic, Visual J#, Visual C#, and Visual C++.
Currently, Visual Studio 2008 and 2005 Professional Editions, along with language-specific versions (Visual Basic, C++, C#, J#) of Visual Studio 2005 are available for free to students as downloads via Microsoft's DreamSpark program. Visual Studio 2010 is currently in development.




Contents


1 Architecture
2 Features

2.1 Code editor
2.2 Debugger
2.3 Designer
2.4 Other tools
2.5 Extensibility


3 Supported products

3.1 Included products
3.2 Previous products


4 Editions
5 Version history

5.1 Visual Studio 97
5.2 Visual Studio 6.0
5.3 Visual Studio .NET (2002)
5.4 Visual Studio .NET 2003
5.5 Visual Studio 2005
5.6 Visual Studio 2008
5.7 Visual Studio 2010


6 Pre-Installed Virtual Machines
7 References
8 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Architecture
Visual Studio does not support any programming language, solution or tool intrinsically. Instead, it allows various functionality to be plugged in. Specific functionality is coded as a VSPackage. When installed, the functionality is available as a Service. The IDE provides three services: SVsSolution, which provides the ability to enumerate projects and solutions; SVsUIShell, which provides windowing and UI functionality (including tabs, toolbars and tool windows); and SVsShell, which deals with registration of VSPackages. In addition, the IDE is also responsible for coordinating and enabling communication between services.[2] All editors, designers, project types and other tools are implemented as VSPackages. Visual Studio uses COM to access the VSPackages. The Visual Studio SDK also includes the Managed Package Framework (MPF), which is a set of managed wrappers around the COM-interfaces that allow the Packages to be written in .NET languages.[3] However, MPF does not provide all the functionality exposed by the Visual Studio COM interfaces.[4] The services can then be consumed for creation of other packages, which add functionality to the Visual Studio IDE.
Support for programming languages is added by using a specific VSPackage called a Language Service. A language service defines various interfaces which the VSPackage implementation can implement to add support for various functionality.[5] Functionality that can be added this way includes syntax coloring, statement completion, brace matching, parameter information tooltips, member lists and error markers for background compilation.[5] If the interface is implemented, the functionality will be available for the language. Language services are to be implemented on a per-language basis. The implementations can reuse code from the parser or the compiler for the language.[5] Language services can be implemented either in native code or managed code. For native code, either the native COM interfaces can be used, or the Babel Framework (part of Visual Studio SDK) be used.[6] For managed code, the MPF includes wrappers for writing managed language services.[7]
Visual Studio does not include any source control support built in but it defines the MSSCCI (Microsoft Source Code Control Interface) by implementing which source control systems can integrate with the IDE.[8] MSSCCI defines a set of functions that are used to implement various source control functionality.[9] MSSCCI was first used to integrate Visual SourceSafe with Visual Studio 6.0 but was later opened up via the Visual Studio SDK. Visual Studio .NET 2002 used MSSCCI 1.1, and Visual Studio .NET 2003 used MSSCCI 1.2. Both Visual Studio 2005 and 2008 use MSSCCI Version 1.3, which adds support for rename and delete propagation as well as asynchronous opening.[8]
Visual Studio supports running multiple instances of the environment (each with its own set of VSPackages). The instances use different registry hives (see MSDN's definition of the term "registry hive" in the sense used here) to store their configuration state and are differentiated by their AppId (Application ID). The instances are launched by an AppId-specific .exe that selects the AppId, sets the root hive and launches the IDE. VSPackages registered for one AppId are integrated with other VSPackages for that AppId. The various product editions of Visual Studio are created using the different AppIds. The Visual Studio Express edition products are installed with their own AppIDs, but the Standard, Professional and Team Suite products share the same AppId. Consequently, the Express editions can be installed side-by-side with other editions, unlike the other editions which update the same installation. The professional edition includes a superset of the VSPackages in the standard edition and the team suite includes a superset of the VSPackages in both other editions. The AppId system is leveraged by the Visual Studio Shell in Visual Studio 2008.[10]

[edit] Features

[edit] Code editor




The Visual Studio code editor showing IntelliSense suggestions and a docked Task List window


Visual Studio, like any other IDE, includes a code editor that supports syntax highlighting and code completion using IntelliSense for not only variables, functions and methods but also language constructs like loops and queries.[11] IntelliSense is supported for the included languages, as well as for XML and for Cascading Style Sheets and JavaScript when developing web sites and web applications.[12][13] Autocomplete suggestions are popped up in a modeless list box, overlaid on top of the code editor. In Visual Studio 2008 onwards, it can be made temporarily semi-transparent to see the code obstructed by it.[11] The code editor is used for all supported languages.
The Visual Studio code editor also supports setting bookmarks in code for quick navigation. Other navigational aids include collapsing code blocks and incremental search, in addition to normal text search and regex search.[14] The code editor also includes a multi-item clipboard and a task list.[14] The code editor supports code snippets, which are saved templates for repetitive code and can be inserted into code and customized for the project being worked on. A management tool for code snippets is built in as well. These tools are surfaced as floating windows which can be set to automatically hide when unused or docked to the side of the screen. The Visual Studio code editor also supports code refactoring including parameter reordering, variable and method renaming, interface extraction and encapsulation of class members inside properties, among others.
Visual Studio features background compilation (also called incremental compilation).[15][16] As code is being written, Visual Studio compiles it in the background with in order to provide feedback about syntax and compilation errors, which are flagged with a red wavy underline. Warnings are marked with a green underline. Background compilation does not generate executable code, since it requires a different compiler than the one used to generate executable code.[17] Background compilation was initially introduced with Microsoft Visual Basic but has now been expanded for all included languages.[16]

[edit] Debugger
Main article: Microsoft Visual Studio Debugger
Visual Studio includes a debugger that works both as a source-level debugger as well as machine-level debugger. It works with both managed code as well as native code and can be used for debugging applications written in any language supported by Visual Studio. In addition, it can also attach to running processes and monitor and debug those processes.[18] If source code for the running process is available, it displays the code as it is being run. If source code is not available, it can show the disassembly. The Visual Studio debugger can also create memory dumps as well as load them later for debugging.[19] Multi-threaded programs are also supported. The debugger can be configured to be launched when an application running outside the Visual Studio environment crashes.




Data tooltips in Visual Studio


The debugger allows setting breakpoints (which allow execution to be stopped temporarily at a certain position) and watches (which monitor the values of variables as the execution progresses).[20] Breakpoints can be conditional, meaning they get triggered when the condition is met. Code can be stepped over, i.e., run one line (of source code) at a time.[21] It can either step into functions to debug inside it, or step over it, i.e., the execution of the function body isn't available for manual inspection.[21] The debugger supports Edit and Continue, i.e., it allows code to be edited as it is being debugged.[22] When debugging, if any variable is hovered over by the mouse pointer, its current value is displayed in a tooltip ("data tooltips"), where it can also be modified if desired. During coding, the Visual Studio debugger lets certain functions be invoked manually from the Immediate tool window. The parameters to the method are supplied at the Immediate window.[23]

[edit] Designer





This section needs additional citations for verification. Please help improve this article by adding reliable references (ideally, using inline citations). Unsourced material may be challenged and removed. (May 2008)


Visual Studio includes a host of visual designers to aid in the development of applications. These tools include:




Visual Studio 2005 in Designer view






The WPF Designer in Visual Studio 2008






Visual Studio Web Designer in code editor view






Visual Studio 2005 in Class Designer view



WinForms Designer
The WinForms designer is used to build GUI applications using WinForms. It includes a palette of UI widgets and controls (including buttons, progress bars, labels, layout containers and other controls) that can be dragged and dropped on a form surface. Layout can be controlled by housing the controls inside other containers or locking them to the side of the form. Controls that display data (like textbox, list box, grid view, etc.) can be data bound to data sources like databases or queries. The UI is linked with code using an event-driven programming model. The designer generates either C# or VB.NET code for the application.


WPF Designer
The WPF designer, codenamed Cider,[24] was introduced with Visual Studio 2008. Like the WinForms designer it supports uses the drag and drop metaphor. It is used to author user interfaces targeting Windows Presentation Foundation. It supports all WPF functionality including databinding and automatic layout management. It generates XAML code for the UI. The generated XAML file is compatible with Microsoft Expression Design, the designer-oriented product. The XAML code is linked with code using a code-behind model.


Web designer
Visual Studio also includes a web site editor and designer that allows web pages to be authored by dragging and dropping widgets. It is used for developing ASP.NET applications and supports HTML, CSS and JavaScript. It uses a code-behind model to link with ASP.NET code. From Visual Studio 2008 onwards, the layout engine used by the web designer is shared with Microsoft Expression Web.


Class designer
The Class Designer is used to author and edit the classes (including its members and their access) using UML modeling. The Class Designer can generate C# and VB.NET code outlines for the classes and methods. It can also generate class diagrams from hand-written classes.


Data designer
The data designer can be used to graphically edit database schemas, including typed tables, primary and foreign keys and constraints. It can also be used to design queries from the graphical view.


Mapping designer
From Visual Studio 2008 onwards, the mapping designer is used by LINQ to SQL to design the mapping between database schemas and classes that encapsulate the data.


[edit] Other tools





This section needs additional citations for verification. Please help improve this article by adding reliable references (ideally, using inline citations). Unsourced material may be challenged and removed. (May 2008)



Open Tabs Browser
The open tabs browser is used to list all open tabs and switch between them. It is invoked using CTRL+TAB.


Properties Editor
The Properties Editor tool is used to edit properties in a GUI pane inside Visual Studio. It lists all available properties (both read-only and those which can be set) for all objects including classes, forms, web pages and other items.





Open Tab Browser and Properties Editor



Object Browser
The Object Browser is a namespace and class library browser for Microsoft .NET. It can be used to browse the namespaces (which are arranged hierarchically) in managed assemblies. The hierarchy may or may not reflect the organization in the file system.


Solution Explorer
In Visual Studio parlance, a solution is a set of code files and other resources that are used to build an application. The files in a solution are arranged hierarchically, which might or might not reflect the organization in the file system. The Solution Explorer is used to manage and browse the files in a solution.


Team Explorer
Team Explorer is used to integrate the capabilities of Team Foundation Server, the Revision Control System into the IDE (and the basis for Microsoft's CodePlex hosting environment for open source projects). In addition to source control it provides the ability to view and manage individual work items (including bugs, tasks and other documents) and to browse TFS statistics. It is included as part of a TFS install and is also available as a download for Visual Studio 2005[25] and 2008.[26]. Team Explorer is also available as a stand-alone environment solely to access TFS services.


Data Explorer
Data Explorer is used to manage databases on Microsoft SQL Server instances. It allows creation and alteration of database tables (either by issuing T-SQL commands or using the Data designer). It can also be used to create queries and stored procedures, with the latter in either T-SQL or in managed code via SQL CLR. Debugging and IntelliSense support is available as well.


Server Explorer
The Server Explorer tool is used to manage database connections on an accessible computer. It is also used to browse running Windows Services, performance counters, Windows Event Log and message queues and use them as datasource.[27]


[edit] Extensibility


See also: List of Microsoft Visual Studio Add-ins


Visual Studio allows developers to write extensions for Visual Studio to extend its capabilities. These extensions "plug into" Visual Studio and extend its functionality. Extensions come in the form of macros, add-ins, and packages. Macros represent repeatable tasks and actions that developers can record programmatically for saving, replaying, and distributing. Macros, however, cannot be used to implement new commands or create tool windows. They are written using Visual Basic and are not compiled.[4] Add-Ins provide access to the Visual Studio object model and can interact with the IDE tools. Add-Ins can be used to implement new functionality and can add new tool windows. Add-Ins are plugged in to the IDE via COM and can be created in any COM-compliant languages.[4] Packages are created using the Visual Studio SDK and provide the highest level of extensibility. It is used to create designers and other tools, as well as to integrate other programming languages. The Visual Studio SDK provides both unmanaged as well as a managed API to accomplish these tasks. However, the managed API isn't as comprehensive as the unmanaged one.[4] Extensions are supported in the Standard (and higher) versions of Visual Studio 2005. Express Editions do not support hosting extensions.
Visual Studio 2008 introduced the Visual Studio Shell that allows for development of a customized version of the IDE. The Visual Studio Shell defines a set of VSPackages that provide the functionality required in any IDE. On top of that, other packages can be added to customize the installation. The Isolated mode of the shell creates a new AppId where the packages are installed. These are to be started with a different executable. It is aimed for development of custom development environments, either for a specific language or a specific scenario. The Integrated mode installs the packages into the AppId of the Professional/Standard/Team System editions, so that the tools integrate into these editions.[10] The Visual Studio Shell is available as a free download.
After the release of Visual Studio 2008, Microsoft created the Visual Studio Gallery. It serves as the central location for posting information about extensions to Visual Studio. Community developers as well as commercial developers can upload information about their extensions to Visual Studio .NET 2002 through Visual Studio 2008. Users of the site can rate and review the extensions to help assess the quality of extensions being posted. RSS feeds to notify users on updates to the site and tagging features are also planned. [28]

[edit] Supported products

[edit] Included products

Microsoft Visual C++
Microsoft Visual C++ is Microsoft's implementation of the C and C++ compiler and associated languages services and specific tools for integration with the Visual Studio IDE. It can compile either in C mode or C++ mode. For C, it follows the ISO C standard with parts of C99 spec along with MS-specific additions in the form of libraries.[29] For C++, it follows the ANSI C++ spec along with a few C++0x features.[30] It also supports the C++/CLI spec to write managed code, as well as mixed mode code (a mix of native and managed code). Microsoft positions Visual C++ for development in native code or code that contains both native as well as managed components. Visual C++ supports COM as well as the MFC library. For MFC development, it provides a set of wizards for creating and customizing MFC boilerplate code, and creating GUI applications using MFC. Visual C++ can also use the Visual Studio forms designer to design UI graphically. Visual C++ can also be used with the Windows API. It also supports the use of intrinsic functions,[31] which are functions recognized by the compiler itself and not implemented as a library. Intrinsic functions are used to expose the SSE instruction set of modern CPUs. Visual C++ also includes the OpenMP (version 2.0) spec.[32]






This section needs additional citations for verification. Please help improve this article by adding reliable references (ideally, using inline citations). Unsourced material may be challenged and removed. (May 2008)



Microsoft Visual C#
Microsoft Visual C# is Microsoft's implementation of the C# language, that targets the .NET Framework, along with the language services that lets the Visual Studio IDE support C# projects. While the language services are a part of Visual Studio, the compiler is available separately as a part of the .NET Framework. The Visual C# 2008 compiler supports version 3.0 of the C# language specifications. Visual C# supports the Visual Studio Class designer, Forms designer, and Data designer among others.


Microsoft Visual Basic
Microsoft Visual Basic is Microsoft's implementation of the VB.NET language and associated tools and language services. It was introduced with Visual Studio .NET (2002). Microsoft has positioned Visual Basic for Rapid Application Development. Visual Basic can be used to author both console applications as well as GUI applications. Like Visual C#, Visual Basic also supports the Visual Studio Class designer, Forms designer, and Data designer among others. Like C#, the VB.NET compiler also is available as a part of .NET Framework but the language services, that let VB.NET projects be developed with Visual Studio, are available as a part of the latter.


Microsoft Visual Web Developer
Microsoft Visual Web Developer is used to create web sites, web application and web services using ASP.NET. Either C# or VB.NET languages can be used. Visual Web Developer can use the Visual Studio Web Designer to graphically design web page layouts.


Team Foundation Server
Included only with Visual Studio Team System, Team Foundation Server is intended for collaborative software development projects and acts as the server side backend providing source control, data collection, reporting, and project tracking functionality. It also includes the Team Explorer, the client tool for TFS services, which is integrated inside Visual Studio Team System.


[edit] Previous products

Visual FoxPro
Visual FoxPro is a data-centric object-oriented and procedural programming language produced by Microsoft. It is derived from FoxPro (originally known as FoxBASE) which was developed by Fox Software beginning in 1984. Visual FoxPro is tightly integrated with its own relational database engine, which extends FoxPro's xBase capabilities to support SQL query and data manipulation. Visual FoxPro is a full-featured, dynamic programming language that does not require the use of an additional general-purpose programming environment. Microsoft announced in 2007 that Visual FoxPro has been discontinued after version 9 Service Pack 2, but will remain supported until 2015.[33]


Visual SourceSafe
Microsoft Visual SourceSafe is a source control software package oriented towards small software development projects. The SourceSafe database is a multi-user, multi-process file-system database, using the Windows file system database primitives to provide locking and sharing support. All versions are multi-user, using SMB (file server) networking[34] [35][36]. However, with Visual SourceSafe 2005, other client-server modes were added (Lan Booster and VSS Internet), possibly using some other protocol? Visual SourceSafe 6.0 was available as a stand alone product[37] and was included with Visual Studio 6.0, and other products such as Office Developer Edition. Visual SourceSafe 2005 was available as a stand-alone product and included with the 2005 Team Suite. Visual Studio Team System included Team Foundation Server for source control.


Microsoft Visual J++/Microsoft Visual J#
Microsoft Visual J++ was Microsoft's implementation of the Java language (with Microsoft-specific extensions) and associated language services. It was discontinued as a result of a litigation from Sun Microsystems, and the technology was recycled into Visual J#, Microsoft's Java compiler for .NET Framework. J# was available with Visual Studio 2005 but has been discontinued in Visual Studio 2008.


Visual InterDev
Visual InterDev is used to create web applications using Microsoft Active Server Pages (ASP) technologies. It supports code completion and includes database server management tools. It has been replaced with Microsoft Visual Web Developer.


[edit] Editions




Diagram showing the relationship of various Visual Studio Editions


Microsoft Visual Studio is available in the following editions:[38]

Visual Studio Express
Visual Studio Express Editions are a set of free lightweight individual IDEs which are provided as stripped-down versions of the Visual Studio IDE on a per-language basis, i.e., it installs the language services for the supported languages onto individual Visual Studio Shell AppIds. It includes only a small set of tools as compared to the other systems - devoid of remote database support for data designer, class designer and several other tools and features as well as support for plug-ins. x64 compilers are not available for the Visual Studio Express edition IDEs. Microsoft targets the Express IDEs at students and hobbyists. Express editions also do not use the full MSDN Library but use the MSDN Express Library. The languages available as part of the Express IDEs are:



Visual Basic Express
Visual C++ Express
Visual C# Express
Visual Web Developer Express






Visual Studio Standard
Visual Studio Standard Edition provides an IDE for all supported products and can support the entire MSDN library. It supports XML and XSLT editing, object test benches, and can create deployment packages that only use ClickOnce. However, it does not include tools like Server Explorer or include integration with Microsoft SQL Server. Visual Studio Standard can only consume Add-Ins for extensibility. Mobile development support was included in Visual Studio 2005 Standard, however, with Visual Studio 2008, it is only available in Professional and higher editions. Remote debugging support is included in Visual Studio 2008 Professional and Team Edition only.


Visual Studio Professional
Visual Studio Professional Edition includes the tools in Visual Studio Standard and augments it with other functionality such as Microsoft SQL Server integration (which allows databases to be created from within Visual Studio) and a remote debugger (for 2005 Editions) (that allows debugging a remote system from within Visual Studio debugger provided a debugging server is running on the remote system). Visual Studio Professional accepts all three extensibility mechanisms.


Visual Studio Tools for Office
Visual Studio Tools for Office is an SDK and an add-in for Visual Studio that includes tools for developing for the Microsoft Office platform. Previously, that is, for Visual Studio .NET 2003 and Visual Studio 2005, it was a separate SKU that supported only Visual C# and Visual Basic languages or was included in the Team Suite. With Visual Studio 2008, it is no longer a separate SKU but is included with Professional and higher editions. A separate runtime is required when deploying VSTO solutions.


Visual Studio Team System
Visual Studio Team System provides a set of software development, collaboration, metrics, and reporting tools in addition to the features provided by Visual Studio Professional. VSTS offers different toolsets based on the software development role it is being used for. The role-specific flavors are:[39] [40]



Team Explorer (basic TFS client)
Architecture Edition
Database Edition
Development Edition
Test Edition






The combined functionality of the four Team System Editions is provided in a Team Suite Edition. The Database Edition, codenamed "DataDude", was initially released as a separate edition after Visual Studio 2005's initial release. It is included with Visual Studio 2008 as a separate edition, but the functionality will be rolled into the Development Edition for the upcoming 2010 release.[41]


Along with the client SKUs, Visual Studio Team System also includes Team Foundation Server for source code control, work-item tracking, reporting and team management. Team Explorer is the TFS client, which is integrated into the VSTS IDE, with other application development functionality.



Editions feature grid[42]



Product
Extensions
External Tools
Setup Projects
MSDN Integration
Class Designer
Refactoring
Debugging
Target Native 64 bit
Target Itanium Processors
Visual Studio Tools for Office


Visual Studio Express
No
minimal
reduced functionality
MSDN Express
No
reduced functionality
reduced functionality
No
No
No


Visual Studio Standard
Yes
Yes
reduced functionality
Yes
Yes
Yes
Yes
Yes
No
No


Visual Studio Professional
Yes
Yes
Yes
Yes
Yes
Yes
Yes
Yes
No
Yes


Visual Studio Team System editions
Yes
Yes
Yes
Yes
Yes
Yes
Yes
Yes
Yes
Yes



[edit] Version history

[edit] Visual Studio 97





This article may contain inappropriate or misinterpreted citations that do not verify the text. Please help improve this article by checking for inaccuracies. (help, talk, get involved!) (May 2008)


Microsoft first released Visual Studio in 1997, bundling many of its programming tools together for the first time. Visual Studio 97 was released in two editions, Professional and Enterprise. It included Visual Basic 5.0 and Visual C++ 5.0, primarily for Windows programming; Visual J++ 1.1 for Java and Windows programming; and Visual FoxPro 5.0 for database, specifically xBase programming. It introduced Visual InterDev for creating dynamically generated web sites using Active Server Pages. A snapshot of the Microsoft Developer Network library was also included.
Visual Studio 97 was Microsoft's first attempt at using the same development environment for multiple languages. Visual C++, Visual J++, InterDev, and the MSDN Library all used one environment, called Developer Studio. Visual Basic and Visual FoxPro used separate environments.[10]

[edit] Visual Studio 6.0
The next version, version 6.0, was released in June 1998 and is the last version to run on the Windows 9x platform.[43] The version numbers of all of its constituent parts also moved to 6.0, including Visual J++ which jumped from 1.1, and Visual InterDev which was at 1.0. This version was the basis of Microsoft's development system for the next four years, as Microsoft transitioned their development focus to the .NET Framework.
Visual Studio 6.0 was the last version to include the COM-based version of Visual Basic; subsequent versions would include the version of the language based on .NET. It was also the last version to include Visual J++, which was removed as part of a settlement with Sun Microsystems that required Microsoft to stop producing programming tools that targeted the Java Virtual Machine.
Visual Basic, Visual C++, and Visual FoxPro had separate IDEs, while Visual J++ and Visual InterDev shared a common new environment. This new IDE was designed with extensibility in mind, and would go on (after several internal revisions) to become the common environment for all languages with the release of Visual Studio .NET.[10] Visual Studio 6.0 was also the last version to include Visual FoxPro.

[edit] Visual Studio .NET (2002)




The Microsoft Visual Studio .NET logo.


Microsoft released Visual Studio .NET, codenamed Rainier (for Washington's Mount Rainier), in February 2002 (the beta version was released on the Microsoft developer network in 2001). The biggest change was the introduction of a managed code development environment using the .NET Framework. Programs developed using .NET are not compiled to machine language (like C++ is, for example) but instead to a format called Microsoft Intermediate Language (MSIL) or Common Intermediate Language (CIL). When an MSIL application is executed, it is compiled while being executed into the appropriate machine language for the platform it is being executed on, thereby making code portable across several platforms. Programs compiled into MSIL can be executed only on platforms which have an implementation of Common Language Infrastructure. It is possible to run MSIL programs in Linux or Mac OS X using non-Microsoft .NET implementations like Mono and DotGNU.
This was the first version of Visual Studio to require an NT-based Windows platform.[44] The installer enforces this requirement.
Microsoft introduced C# (C-sharp), a new programming language, that targets .NET. It also introduced the successor to Visual J++ called Visual J#. Visual J# programs use Java's language syntax. However, unlike Visual J++ programs, Visual J# programs can only target the .NET Framework, not the Java Virtual Machine that all other Java tools target.
Visual Basic was drastically changed to fit the new framework, and the new version was called Visual Basic .NET. Microsoft also added extensions to C++, called Managed Extensions for C++, so that C++ programmers could create .NET programs.
Visual Studio .NET can be used to make applications targeting Windows (using Windows Forms, part of the .NET Framework), Web (using ASP.NET and Web Services) and, with an add-in, portable devices (using the .NET Compact Framework).
The Visual Studio .NET environment was rewritten to partially use .NET. All languages are unified under one environment. Compared to previous versions of Visual Studio, it has a cleaner interface and greater cohesiveness. It is also more customizable with tool windows that automatically hide when not in use. While Visual FoxPro 7 started out as part of Visual Studio 7, and early VS betas allowed debugging inside VFP-based DLLs, it was removed before release to follow its own development track.
The internal version number of Visual Studio .NET is version 7.0. Microsoft released Service Pack 1 for Visual Studio .NET 2002 in March, 2005.[45].

[edit] Visual Studio .NET 2003
In April 2003, Microsoft introduced a minor upgrade to Visual Studio .NET called Visual Studio .NET 2003, codenamed Everett (for the city of the same name). It includes an upgrade to the .NET Framework, version 1.1, and is the first release to support for developing programs for mobile devices, using either ASP.NET or the .NET Compact Framework. The Visual C++ compiler's standards-compliance was improved, especially in the area of partial template specialization. Visual C++ Toolkit 2003 is a free version of the same C++ compiler shipped with Visual Studio .NET 2003 without the IDE, though it is no longer available and now superseded by the Express Editions. The internal version number of Visual Studio .NET 2003 is version 7.1 while the file format version is 8.0.[46]
Visual Studio .NET 2003 shipped in four editions: Academic, Professional, Enterprise Developer, and Enterprise Architect. The Visual Studio .NET 2003 Enterprise Architect edition includes an implementation of Microsoft Visio 2002's modeling technologies, which focuses on creating Unified Modeling Language-based visual representations of an application's architecture. "Enterprise Templates" were also introduced, to help larger development teams standardize coding styles and enforce policies around component usage and property settings.
Service Pack 1 was released September 13, 2006.[47]

[edit] Visual Studio 2005
Visual Studio 2005, codenamed Whidbey (a reference to Whidbey Island in Puget Sound), was released online in October 2005 and hit the stores a few weeks later. Microsoft removed the ".NET" moniker from Visual Studio 2005 (as well as every other product with .NET in its name), but it still primarily targets the .NET Framework, which was upgraded to version 2.0. It is the last version available for Windows 2000. Visual Studio 2005's internal version number is 8.0 while the file format version is 9.0.[46] Microsoft released Service Pack 1 for Visual Studio 2005 on 14 December 2006.[48]. An additional update for Service Pack 1 that offers Windows Vista compatibility was made available on 3 June 2007.[49]
Visual Studio 2005 was upgraded to support all the new features introduced in .NET Framework 2.0, including generics and ASP.NET 2.0. The IntelliSense feature in Visual Studio was upgraded for generics and new project types were added to support ASP.NET web services. Visual Studio 2005 also includes a local web server, separate from IIS, that can be used to host ASP.NET applications during development and testing. It also supports all SQL Server 2005 databases. Database designers were upgraded to support the ADO.NET 2.0, which is included with .NET Framework 2.0. C++ also got a similar upgrade with the addition of C++/CLI which is slated to replace the use of Managed C++.[50] Other new features of Visual Studio 2005 include the "Deployment Designer" which allows application designs to be validated before deployments, an improved environment for web publishing when combined with ASP.NET 2.0 and load testing to see application performance under various sorts of user loads. Visual Studio 2005 also added extensive 64-bit support. While the development environment itself is only available as a 32-bit application, Visual C++ 2005 supports compiling for x86-64 (AMD64 and Intel 64) as well as IA-64 (Itanium).[51] The Platform SDK included 64-bit compilers and 64-bit versions of the libraries.
Microsoft also announced Visual Studio Tools for Applications as the successor to Visual Basic for Applications (VBA) and VSA (Visual Studio for Applications). VSTA 1.0 was released to manufacturing along with Office 2007. It is included with Office 2007 and is also part of the Visual Studio 2005 SDK. VSTA consists of a customized IDE, based on the Visual Studio 2005 IDE, and a runtime that can be embedded in applications to expose its features via the .NET object model. Office 2007 applications continue to integrate with VBA, except for InfoPath 2007 which integrates with VSTA. The next version of VSTA (version 2.0, based on Visual Studio 2008) will be released in mid-2008. It will be significantly different from the first version, including features such as dynamic programming and support for WPF, WCF, WF, LINQ, and .NET 3.5.

[edit] Visual Studio 2008
Visual Studio 2008,[52] codenamed Orcas, was released to MSDN subscribers on 19 November 2007 alongside .NET Framework 3.5. The codename Orcas is, like Whidbey, a reference to an island in Puget Sound, Orcas Island. The source code for the Visual Studio 2008 IDE will be available under a shared source license to some of Microsoft's partners and ISVs.[53] Microsoft released Service Pack 1 for Visual Studio 2008 on 11 August 2008.[54]
Visual Studio 2008 is focused on development of Windows Vista, 2007 Office system, and Web applications. For visual design, a new Windows Presentation Foundation visual designer and a new HTML/CSS editor influenced by Microsoft Expression Web are included. J# is not included. Visual Studio 2008 requires .NET Framework 3.5 and by default configures compiled assemblies to run on .NET Framework 3.5, but it also supports multi-targeting which lets the developers choose which version of the .NET Framework (out of 2.0, 3.0, 3.5, Silverlight CoreCLR or .NET Compact Framework) the assembly runs on. Visual Studio 2008 also includes new code analysis tools, including the new Code Metrics tool.[55] For Visual C++, Visual Studio adds a new version of Microsoft Foundation Classes (MFC 9.0) that adds support for the visual styles and UI controls introduced with Windows Vista.[56] For native and managed code interoperability, Visual C++ introduces the STL/CLR, which is a port of the C++ Standard Template Library (STL) containers and algorithms to managed code. STL/CLR defines STL-like containers, iterators and algorithms that work on C++/CLI managed objects.[57][58]
Visual Studio 2008 features a XAML based designer (codenamed Cider), workflow designer, LINQ to SQL designer (for defining the type mappings and object encapsulation for SQL Server data), XSLT debugger, JavaScript Intellisense support, JavaScript Debugging support, support for UAC manifests, a concurrent build system, among others.[59] It ships with an enhanced set of UI widgets, both for WinForms and WPF. It also includes a multithreaded build engine (MSBuild) to compile multiple source files (and build the executable file) in a project across multiple threads simultaneously. It also includes support for compiling PNG compressed icon resources introduced in Windows Vista. An updated XML Schema designer will ship separately some time after the release of Visual Studio 2008. [60]
The Visual Studio debugger includes features targeting easier debugging of multi-threaded applications. In debugging mode, in the Threads window, which lists all the threads, hovering over a thread will display the stack trace of that thread in tooltips.[61] The threads can directly be named and flagged for easier identification from that window itself.[62] In addition, in the code window, along with indicating the location of the currently executing instruction in the current thread, the currently executing instructions in other threads are also pointed out.[62][63] The Visual Studio debugger supports integrated debugging of the .NET Framework 3.5 BCL. It can dynamically download the BCL source code and debug symbols and allow stepping into the BCL source during debugging.[64] Currently a limited subset of the BCL source is available, with more library support planned for later in the year.

[edit] Visual Studio 2010





This article or section contains information about computer software currently in development.
The content may change as the software development progresses.









Visual Studio 2010 features a new UI developed using WPF


Visual Studio 2010, codenamed "Hawaii",[65] is under development. Though the full feature set has not been finalized,[66] some features that the teams are considering have been made public. The Visual C++ team is considering using a SQL Server Compact database to store information about the source code, including IntelliSense information, for better IntelliSense and code-completion support.[67] For managed code, a Call Hierarchy feature, which will show all the code-paths from any method at design time, is being designed.[66] The Visual Studio 10 IDE is also slated to be redesigned to be more modular and with more extensibility points than the current version.[68]
Visual Studio Team System 2010, codenamed "Rosario", is the next version of Visual Studio Team System and is being touted as an "integrated Application Life-cycle Management" tool.[69] It is intended to enable and enhance development at every step of an application’s life-cycle from conceptualization to release and maintenance.
Currently a CTP version of the Visual Studio is available as a pre-installed Virtual Hard Disk containing Windows Server 2008 as the OS.
The new multi-paradigm programming language and ML-variant F# will also be a part of Visual Studio 2010.[70]

[edit] Pre-Installed Virtual Machines
Microsoft is offering virtual machines with Visual Studio Team System 2008 and 2005 pre-installed in the documented Virtual Hard Disk format for trial use.[71]

[edit] References


^ "Visual Studio 2008 build version 9.0.30729.1". The Moth. http://www.danielmoth.com/Blog/2007/11/visual-studio-2008-build-version.html. Retrieved on 2008-11-08. 
^ Visual Studio 2005 SDK. "Visual Studio Development Environment Model". Microsoft. http://msdn.microsoft.com/en-us/library/bb165114(VS.80).aspx. Retrieved on 2008-01-01. 
^ Visual Studio 2005 SDK. "VSPackages and Managed Package Framework (MPF)". Microsoft. http://msdn.microsoft.com/en-us/library/bb166554(VS.80).aspx. Retrieved on 2008-01-01. 
^ a b c d Vijay Mehta. "Extending Visual Studio 2005". CodeGuru. http://www.codeguru.com/csharp/.net/net_vs_addins/visualstudioadd-ins/article.php/c11835/. Retrieved on 2008-01-01. 
^ a b c Visual Studio 2005 SDK. "Language Service Essentials". Microsoft. http://msdn.microsoft.com/en-us/library/bb166391(VS.80).aspx. Retrieved on 2008-01-01. 
^ Visual Studio SDK. "Babel Package Overview". Microsoft. http://msdn.microsoft.com/en-us/library/bb165670(VS.80).aspx. Retrieved on 2008-01-01. 
^ Visual Studio SDK. "Managed Language Services overview". Microsoft. http://msdn.microsoft.com/en-us/library/bb166360(VS.80).aspx. Retrieved on 2008-01-01. 
^ a b Alin Constantin. "Microsoft Source Code Control Interface". http://alinconstantin.dtdns.net/webdocs/scc/MSSCCI.htm. Retrieved on 2008-01-03. 
^ Visual Studio SDK. "Source Control Plug-ins". MSDN. http://msdn.microsoft.com/en-us/library/bb166170(VS.80).aspx. Retrieved on 2008-01-03. 
^ a b c d "Visual Studio Extensibility". CoDe Magazine. http://www.code-magazine.com/focus/vsx/. Retrieved on 2008-01-01. 
^ a b Scott Guthrie. "Nice VS 2008 Code Editing Improvements". http://weblogs.asp.net/scottgu/archive/2007/07/28/nice-vs-2008-code-editing-improvements.aspx. Retrieved on 2007-12-31. 
^ Scott Guthrie. "VS 2008 JavaScript IntelliSense". http://weblogs.asp.net/scottgu/archive/2007/06/21/vs-2008-javascript-intellisense.aspx. Retrieved on 2007-12-31. 
^ Scott Guthrie. "VS 2008 Web Designer and CSS Support". http://weblogs.asp.net/scottgu/archive/2007/07/25/vs-2008-web-designer-and-css-support.aspx. Retrieved on 2007-12-31. 
^ a b "Visual Studio .NET - Top 10 Code Editor Tips and Tricks". MSDN TV. http://msdn.microsoft.com/msdntv/transcripts/20030327VSNETABTranscript.aspx. Retrieved on 2007-12-31. 
^ "Background compilation, part 1". http://www.panopticoncentral.net/archive/2004/02/25/276.aspx. Retrieved on 2007-12-31. 
^ a b Matthew Gertz. "Scaling Up: The Very Busy Background Compiler". MSDN Magazine. http://msdn.microsoft.com/msdnmag/issues/05/06/AdvancedBasics/. Retrieved on 2007-12-31. 
^ Thomas F. Abraham. "Background Compilation in Visual Studio 2002, 2003 and 2005". http://blogs.digineer.com/blogs/tabraham/archive/2005/12/09/14.aspx. Retrieved on 2007-12-31. 
^ "Attaching to Running Processes". MSDN. http://msdn.microsoft.com/en-us/library/3s68z0b3(VS.80).aspx. Retrieved on 2007-12-31. 
^ "Dumps". MSDN. http://msdn.microsoft.com/en-us/library/d5zhxt22(VS.80).aspx. Retrieved on 2007-12-31. 
^ "Breakpoint Overview". MSDN. http://msdn.microsoft.com/en-us/library/5557y8b4(VS.80).aspx. Retrieved on 2007-12-31. 
^ a b "Code Stepping Overview". MSDN. http://msdn.microsoft.com/en-us/library/ek13f001(VS.80).aspx. Retrieved on 2007-12-31. 
^ "Edit and Continue". MSDN. http://msdn.microsoft.com/en-us/library/bcew296c(VS.80).aspx. Retrieved on 2007-12-31. 
^ "Debugging at Design Time". MSDN. http://msdn.microsoft.com/en-us/library/83hd8f1e(VS.80).aspx. Retrieved on 2007-12-31. 
^ "MSDN TV: Introducing "Cider" - The Visual Studio Designer for WPF ("Avalon")". MSDN TV. http://www.microsoft.com/downloads/details.aspx?FamilyId=950D1EEC-5D4F-4A15-8250-D26E24B80A5D. Retrieved on 2008-01-01. 
^ "Team Explorer 2005 (.img file)". Microsoft. http://download.microsoft.com/download/2/a/d/2ad44873-8ccb-4a1b-9c0d-23224b3ba34c/VSTFClient.img. Retrieved on 2007-03-05. 
^ "Visual Studio Team System 2008 Team Explorer". Microsoft. http://www.microsoft.com/downloads/details.aspx?familyid=0ed12659-3d41-4420-bbb0-a46e51bfca86&displaylang=en. Retrieved on 2007-03-05. 
^ "How to use the Server Explorer in Visual Studio .NET and Visual Studio 2005". Microsoft. http://support.microsoft.com/kb/316649. Retrieved on 2008-01-01. 
^ The Visual Studio Gallery gets a little more community friendly
^ Visual C++ Team. "ISO C Standard Update". MSDN Blogs. http://blogs.msdn.com/vcblog/archive/2007/11/05/iso-c-standard-update.aspx. Retrieved on 2008-01-02. 
^ Visual C++ team. "Update On The C++-0x Language Standard". MSDN Blogs. http://blogs.msdn.com/vcblog/archive/2007/06/04/update-on-the-c-0x-language-standard.aspx. 
^ "Compiler Intrinsics". MSDN. http://msdn.microsoft.com/en-us/library/26td21ds(VS.80).aspx. Retrieved on 2008-01-02. 
^ "OpenMP in Visual C++". MSDN. http://msdn.microsoft.com/en-us/library/tt15eb9t(VS.80).aspx. Retrieved on 2008-01-02. 
^ "A Message to the Community". MSDN. http://msdn.microsoft.com/en-us/vfoxpro/bb308952.aspx. Retrieved on 2008-01-02. 
^ http://www.highprogrammer.com/alan/windev/sourcesafe.html
^ http://support.microsoft.com/kb/q131022/
^ http://msdn.microsoft.com/en-us/library/bb509342.aspx
^ http://www.ecostsoftware.com/microsoft/microsoft-visual-sourcesafe-6_p2051
^ "Visual Studio Editions". TechNet. http://technet.microsoft.com/en-us/library/zcbsd3cz(VS.80).aspx. Retrieved on 2008-01-03. 
^ "Visual Studio Team System". TechNet. http://msdn.microsoft.com/en-us/vsts2008/products/bb933734.aspx. Retrieved on 2008-01-03. 
^ Name changes for Team System products
^ "Norman Guadagno: Announcing Visual Studio Team System 2010". Channel9. Microsoft. September 29, 2008. http://channel9.msdn.com/posts/Dan/Norman-Guadagno-Announcing-Visual-Studio-Team-System-2010/. Retrieved on 2008-09-30. 
^ "Visual Studio 2008 Product Comparison". http://msdn.microsoft.com/en-us/vs2008/products/cc149003.aspx. Retrieved on 2008-02-07. 
^ "System Requirements (Visual Studio 6.0)". MSDN. http://msdn.microsoft.com/en-us/vstudio/aa700918.aspx. Retrieved on 2008-01-02. 
^ "System Requirements (Visual Studio .NET)". MSDN. http://msdn.microsoft.com/en-us/vstudio/aa700866.aspx. Retrieved on 2008-01-02. 
^ "Visual Studio .NET 2002 SP1". Microsoft. http://www.microsoft.com/downloads/details.aspx?FamilyID=c41d8159-b42f-4d06-a797-e510494976ee&displaylang=en. Retrieved on 2008-01-02. 
^ a b "Hacking Visual Studio". http://www.ondotnet.com/pub/a/dotnet/excerpt/vshacks_chap1/index.html?page=4. Retrieved on 2008-01-01. 
^ "Microsoft Visual Studio .NET 2003 Service Pack 1". Microsoft. http://www.microsoft.com/downloads/details.aspx?familyid=69D2219F-CE82-46A5-8AEC-072BD4BB955E&displaylang=en. Retrieved on 2008-01-02. 
^ "Visual Studio 2005 Service Pack 1". Microsoft. http://www.microsoft.com/downloads/details.aspx?FamilyID=BB4A75AB-E2D4-4C96-B39D-37BAF6B5B1DC&displaylang=en. Retrieved on 2008-01-01. 
^ "Visual Studio Service Pack 1 Update". http://www.microsoft.com/downloads/details.aspx?FamilyID=90e2942d-3ad1-4873-a2ee-4acc0aace5b6&displaylang=en. Retrieved on 2008-01-01. 
^ "New Language Features in Visual C++". Visual Studio 2005 Visual C++ Language Reference. MSDN. http://msdn.microsoft.com/en-us/library/xey702bw(VS.80).aspx. Retrieved on 2006-12-28. 
^ "64-bit and Visual Studio 2005". April 11, 2006. http://blogs.msdn.com/deeptanshuv/archive/2006/04/11/573795.aspx. Retrieved on 2006-12-28. 
^ "Microsoft Details Dynamic IT Strategy at Tech-Ed 2007". http://www.earthtimes.org/articles/show/news_press_release,115898.shtml. Retrieved on 2007-06-04. 
^ "Microsoft to Give Partners More Access to Orcas IDE Code". http://www.eweek.com/article2/0,1895,2212505,00.asp. Retrieved on 2007-11-06. 
^ "Download Details: Microsoft Visual Studio 2008 Service Pack 1 (exe)". http://www.microsoft.com/downloads/details.aspx?FamilyID=fbee1648-7106-44a7-9649-6d9f6d58056e&DisplayLang=en. Retrieved on 2008-08-11. 
^ Darryl K. Taft. "Microsoft Pushes Secure, Quality Code". eWeek. http://www.eweek.com/article2/0,1759,2192515,00.asp?kc=EWRSS03119TX1K0000594. Retrieved on 2007-10-06. 
^ Kirants. "Whats New in MFC 9.0 (Orcas)". CodeGuru. http://www.codeguru.com/cpp/controls/buttonctrl/advancedbuttons/article.php/c14407/. Retrieved on 2008-01-02. 
^ Nikola Dudla. "What Is STL/CLR?". MSDN Blogs. http://blogs.msdn.com/nikolad/archive/2006/06/16/STLCLR-Intro.aspx. Retrieved on 2008-01-02. 
^ Visual C++ Team. "Libraries Work In Orcas". MSDN Blogs. http://blogs.msdn.com/vcblog/archive/2006/08/02/686894.aspx. Retrieved on 2008-01-02. 
^ "Download Visual Studio 03/07 CTP". http://blog.csharp-online.net/?p=108. Retrieved on 2007-06-14. 
^ "XSD Designer in Visual Studio". http://www.msdner.com/dev-archive/204/153-1021-2046403.shtm. Retrieved on 2008-01-01. 
^ S. Somasegar. "Debugging and Profiling Features in VS 2008". MSDN Blogs. http://blogs.msdn.com/somasegar/archive/2007/09/14/debugging-and-profiling-features-in-vs-2008.aspx. Retrieved on 2007-07-24. 
^ a b John Robbin. "Neat New Multithreaded Debugging Features in VS 2008". http://www.wintellect.com/cs/blogs/jrobbins/archive/2007/08/01/neat-new-multithreaded-debugging-features-in-vs-2008.aspx. Retrieved on 2007-09-24. 
^ Scott Hanselman. "Multi-threaded Debugging in Visual Studio 2008". http://www.hanselman.com/blog/MultithreadedDebuggingInVisualStudio2008.aspx. Retrieved on 2007-09-24. 
^ Scott Guthrie. "Releasing the Source Code for the .NET Framework Libraries". http://weblogs.asp.net/scottgu/archive/2007/10/03/releasing-the-source-code-for-the-net-framework-libraries.aspx. Retrieved on 2007-10-04. 
^ "'Hawaii': A Visual Studio Paradise for Developers?". http://www.devsource.com/c/a/Using-VS/Hawaii-A-Visual-Studio-Paradise-for-Developers/. Retrieved on 2008-03-12. 
^ a b Charlie Calvert. "Call Hierarchy". http://code.msdn.microsoft.com/vslangfutures/Wiki/View.aspx?title=Call%20Hierarchy&referringTitle=Home. Retrieved on 2008-03-12. 
^ Visual C++ Team Blog. "IntelliSense, part 2: The Future". http://blogs.msdn.com/vcblog/archive/2008/02/29/intellisense-part-2-the-future.aspx. Retrieved on 2008-03-12. 
^ Mary Jo Foley. "A (Microsoft) codename a day: Hawaii". http://blogs.zdnet.com/microsoft/?p=152. Retrieved on 2008-03-12. 
^ "'Visual Studio Team System Rosario'". http://msdn.microsoft.com/en-us/vstudio/bb725993.aspx. Retrieved on 2008-04-05. 
^ "F# to ship as part of Visual Studio 2010". http://blogs.msdn.com/dsyme/archive/2008/12/10/fsharp-to-ship-as-part-of-visual-studio-2010.aspx. Retrieved on 2008-12-10. 
^ "Visual Studio VMs". http://msdn.microsoft.com/en-us/vsts2008/products/cc268311.aspx. Retrieved on 2008-04-05. 



[edit] External links

Microsoft Visual Studio Official Website
Microsoft Visual Studio Official Forums
Visual Studio Product Line Feature Comparisons
Visual Studio Express Editions download
MSDN Library for Visual Studio 2008
Microsoft Visual Studio Team System page
Microsoft Visual Studio Team System Official Forums
Microsoft Visual Studio SDK
Visual Studio 2003 SP1
Visual Studio 2005 SP1
Visual Studio 2008 SP1
Microsoft Visual Studio Products and Extensions Gallery
Microsoft Silverlight Official Website








v • d • e

Integrated development environments for C/C++





Open source

Anjuta · Code::Blocks · CodeLite · Dev-C++ · Eclipse · Geany · GNAT Programming Studio · KDevelop · MonoDevelop · NetBeans · wxDev-C++






Freeware

Visual Studio Express · Pelles C · Sun Studio · Turbo C++ Explorer · Xcode






Retail

C++ Builder · Visual Studio · Turbo C++ Professional






Category  • Comparison












v • d • e

Microsoft development tools





Development
environments

Visual Studio (Team System · Express) · Visual Studio Tools for Office · Visual Studio Tools for Applications · Expression Web · Expression Blend






Languages and
compilers

Visual Basic (VB.NET) · Visual C++ · Visual C# · Visual J# · Visual FoxPro · IronPython · IronRuby · PowerShell · XAML · F#






Major APIs and
frameworks

Windows API / SDK · .NET Framework · Managed code frameworks (Presentation · Communication · Workflow · CardSpace) · Silverlight · XNA · ASP.NET (ASP.NET AJAX) · LINQ · ADO.NET · DirectX · Robotics Studio






Database tools
and languages





SQL Server


Express · Compact · Management Studio · Business Intelligence Development Studio · MSDE







SQL services


Analysis · Reporting · Integration · Notification







Other


Visual FoxPro · Microsoft Access · Extensible Storage Engine









Source control

Team Foundation Server · Visual SourceSafe






Driver development

Windows Driver Model · Windows Driver Foundation (KMDF · UMDF) · Windows Driver Kit · Windows Logo Kit













v • d • e

Microsoft





Desktop software

Windows (components) · Internet Explorer · Office · Visual Studio · Expression · Dynamics · Money · Encarta · Student · Math · Works · MapPoint · Virtual PC · Forefront · Home · Flight Simulator · Bob






Server software

Windows Server · SQL Server · IIS · PWS · Exchange · BizTalk · Commerce · ISA Server · System Center · Home Server · SharePoint (WSS, MOSS, Search Server)  · OCS · Terminal Services  · Microsoft Host Integration Server






Technologies

Active Directory · DirectX · .NET · Windows Media · PlaysForSure · App-V · Hyper-V  · Silverlight · Windows Mobile · Windows Embedded · Mediaroom · HDi






Web properties

Windows Live · Office Live (Workspace) · SQL Server Data Services · MSNBC · msnbc.com · ninemsn · MSN · Hotmail · Live Messenger · Spaces · Groups · Live ID · Ignition · MSDN · Technet · Channel 9 · CodePlex · HealthVault · Microsoft adCenter · Microsoft Store






Gaming

Microsoft Game Studios · Zone · XNA · Xbox · Xbox 360 · Xbox Live (Arcade · Marketplace · Productions) · Games for Windows (LIVE) · Live Anywhere






Hardware

Surface · Zune (4 / 8 / 16 · 30 · 80 / 120) · MSN TV · Natural Keyboard · Keyboard · Mouse · LifeCam · LifeChat · SideWinder · Ultra-Mobile PC · Fingerprint · Audio System · Cordless Phone · Pocket PC · RoundTable · Response Point







Education and
recognition


MCPs · MSDNAA · MSCA · Microsoft Press · Microsoft MVP · Student Partners · Research · Studies related to Microsoft






Licensing

Client Access License · Shared Source · Licensing Services






Criticism

Windows · Windows Vista · Windows XP · Windows 2000 (section) · Windows Me (section) · Windows 9x (section) · Office (section) · Xbox 360 · Refund






Litigation

Alcatel-Lucent v. Microsoft · European Union Microsoft competition case · United States v. Microsoft · Microsoft vs. Lindows · Apple v. Microsoft · Microsoft vs. MikeRoweSoft






Board of directors

Steve Ballmer · James Cash, Jr. · Dina Dublon · Bill Gates · Raymond Gilmartin · Reed Hastings · David Marquardt · Charles Noski · Helmut Panke · Jon Shirley






Acquisitions

Altamira Software · aQuantive · Blue Ribbon Soundworks · Bungie · Calista Technologies · Colloquis · Connectix · Consumers Software · Danger · Farecast · FASA Interactive · Fast Search & Transfer · Firefly · Forethought · GIANT Company Software · Groove Networks · Hotmail · Jellyfish.com · Korea Telecom · LinkExchange · Lionhead Studios · Massive Incorporated · Onfolio · PlaceWare · Powerset · ProClarity · Rare · ScreenTonic · Teleo · Tellme Networks · Vermeer Technologies · Visio Corporation · VXtreme · WebTV Networks · Winternals · Yupi






Related

Mergers and acquisitions · Owned assets









Retrieved from "http://en.wikipedia.org/wiki/Microsoft_Visual_Studio"
Categories: Beta software | Microsoft development tools | Microsoft Visual Studio | User interface buildersHidden categories: Articles that include images for deletion | Articles needing additional references from May 2008 | Articles lacking sources from May 2008 | All articles lacking sources 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


العربية
Català
Česky
Deutsch
Español
فارسی
Français
한국어
Bahasa Indonesia
Italiano
עברית
Magyar
Bahasa Melayu
Nederlands
日本語
‪Norsk (bokmål)‬
Polski
Português
Română
Русский
Suomi
Svenska
Tagalog
ไทย
Türkçe
Українська
中文









 This page was last modified on 7 April 2009, at 18:29 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
