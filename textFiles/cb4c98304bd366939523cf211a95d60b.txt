













Symbian OS - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Symbian_OS";
		var wgTitle = "Symbian OS";
		var wgAction = "view";
		var wgArticleId = "72446";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281762518;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Symbian OS

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
For other uses, see Symbian (disambiguation).





This article needs additional citations for verification. Please help improve this article by adding reliable references (ideally, using inline citations). Unsourced material may be challenged and removed. (July 2008)



Symbian OS




Company / developer
Symbian Ltd.


OS family
Embedded operating systems


Working state
Current


Source model
Proprietary software


Latest stable release
9.5 / unknown


Marketing target
Mobile devices


Supported platforms
ARM (can be emulated[1] on x86)


Kernel type
Microkernel


Default user interface
S60 platform, UIQ, MOAP


License
Eclipse Public License (EPL)


Website
www.symbian.com


Symbian OS is a proprietary operating system designed for mobile devices, with associated libraries, user interface, frameworks and reference implementations of common tools, developed by Symbian Ltd. It is a descendant of Psion's EPOC and runs exclusively on ARM processors although a non-productized x86 port exists.
On 24 June 1998, Symbian Ltd. was formed as a partnership between Ericsson, Nokia, Motorola and Psion, to exploit the convergence between PDAs and mobile phones. Symbian was previously owned by Nokia (56.3%), Ericsson (15.6%), Sony Ericsson (13.1%), Panasonic (10.5%) and Samsung (4.5%). Ten years later to the day, on 24 June 2008, Nokia announced that they intended to acquire all shares that they did not already own.[2] The acquisition was of €264 million, or $410 million.[3]
On 24 June 2008 the Symbian Foundation was announced with the aim to "provide royalty-free software and accelerate innovation".[4]




Contents


1 Design of symbian OS
2 Competition
3 Structure
4 History

4.1 Psion
4.2 EPOC
4.3 EPOC16
4.4 EPOC32
4.5 EPOC OS Releases 1–3
4.6 EPOC Release 4
4.7 EPOC Release 5
4.8 ER5u
4.9 Symbian OS v6.0 and 6.1
4.10 Symbian OS 7.0 and 7.0s
4.11 Symbian OS 8.0
4.12 Symbian OS 8.1
4.13 Symbian OS 9.0
4.14 Symbian OS 9.1
4.15 Symbian OS 9.2
4.16 Symbian OS 9.3
4.17 Symbian OS 9.4
4.18 Symbian OS 9.5


5 Open source software for Symbian 9.1

5.1 Utilities
5.2 Game emulation
5.3 Multimedia
5.4 Frameworks


6 Security and malware
7 Open source
8 Devices that have used the Symbian OS
9 Developing on Symbian OS
10 Hacking Symbian
11 See also
12 Notes and references
13 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Design of symbian OS





This article needs additional citations for verification. Please help improve this article by adding reliable references (ideally, using inline citations). Unsourced material may be challenged and removed. (December 2008)


Symbian OS, with its roots in Psion Software's EPOC, features pre-emptive multitasking and memory protection, like other operating systems (especially those for desktop computers). EPOC's approach to multitasking was inspired by VMS and is based on asynchronous server-based events.





This article may require copy-editing for grammar, style, cohesion, tone or spelling. You can assist by editing it now. A how-to guide is available. (December 2008)


Symbian OS was built to follow three design rules: the integrity and security of user data is paramount, user time must not be wasted, and all resources are scarce. This led to the writing of a microkernel, a request-and-callback approach to services, the concept of separation between UI and Engine (the business logic of a Symbian application). The OS is optimised for low-power battery-based devices and for ROM-based systems (e.g. features like XIP and re-entrancy in shared libraries). Applications, and the OS, follow an object-oriented design, MVC.
Later OS iterations diluted this approach in response to market demands, notably the introduction of a real-time kernel and a platform security model in versions 8 and 9.
There is a strong emphasis on conserving resources, using Symbian-specific programming idioms such as descriptors and a cleanup stack. There are similar techniques for conserving disk space (though the disks on Symbian devices are usually flash memory). Furthermore, all Symbian OS programming is event-based, and the CPU is switched off when applications are not directly dealing with an event. This is achieved through a programming idiom called active objects. Similarly the OS approach to threads vs. processes is driven by reducing overheads.
Symbian OS kernel (EKA2) supports sufficiently-fast real-time response such that it is possible to build a single-core phone around it—that is, a phone in which a single processor core executes both the user applications and the signalling stack. This is a feature which is not available in Linux. This has allowed SymbianOS EKA2 phones to become smaller, cheaper and more power efficient[citation needed].

[edit] Competition
Symbian OS is the leading OS in the "smart mobile device" market. Statistics published November 2008 showed that Symbian OS had a 46.6% share of the smart mobile devices shipped in third quarter of 2008, with Apple having 17.3% (through iPhone OS), RIM having 15.3% and Microsoft having 13.5% (through Windows CE and Windows Mobile).[5] Other competitors include Palm OS, Qualcomm's BREW, Google Android, SavaJe and MontaVista Software.

[edit] Structure
The Symbian OS System Model contains the following layers, from top to bottom:

UI Framework Layer
Application Services Layer

Java ME


OS Services Layer

generic OS services
communications services
multimedia and graphics services
connectivity services


Base Services Layer
Kernel Services & Hardware Interface Layer

The Base Services Layer is the lowest level reachable by user-side operations; it includes the File Server and User Library, the Plug-In Framework which manages all plug-ins, Store, Central Repository, DBMS, and cryptographic services. It also includes the Text Window Server and the Text Shell, the two basic services from which a completely functional port can be created without the need for any higher layer services.
Symbian OS has a microkernel architecture, which means that the minimum necessary is within the kernel to improve robustness, availability, and responsiveness. It contains a scheduler, memory management, and device drivers, but other services like networking, telephony, or filesystem support are placed in the OS Services Layer or Base Services Layer. The inclusion of device drivers means the kernel is not a true microkernel. The EKA2 real-time kernel has been termed a nanokernel, containing only the most basic primitives and supporting an extended kernel to implement any other abstractions.
Symbian OS is designed to emphasize compatibility with other devices, especially removable media file systems. Early development of EPOC led to adopting FAT as the internal file system and this remains in the Symbian OS but an object-oriented persistence model has been placed over the underlying FAT, providing a POSIX-style interface and a streaming model. The internal data formats rely on using the same API that create the data to run all file manipulations - this has created the problems of data-dependence and associated difficulties with changes and data migration.





This article's tone or style may not be appropriate for Wikipedia. Specific concerns may be found on the talk page. See Wikipedia's guide to writing better articles for suggestions. (December 2007)


There is a large networking and communication subsystem, which has three main servers: ETEL (EPOC telephony), ESOCK (EPOC sockets) and C32 (responsible for serial communication). Each of these has a plug-in scheme. For example ESOCK allows different ".PRT" protocol modules, implementing different types of networking protocol scheme. The subsystem also contains code that pertains to short-range communication links, such as Bluetooth, IrDA and USB.
There is also a large volume of user interface (UI) Code. Only the base classes and substructure are contained in Symbian OS, while most of the actual user interfaces are maintained by third parties. This component is known as UIKON. The OS also contains the graphics, text layout, and font rendering libraries.
All Symbian applications are built up from three classes defined by the application architecture: an application class, a document class, and an application user interface class. These classes create the fundamental application behaviour. The remaining required functions, the application view, data model, and data interface, are created independently and interact solely through their APIs with the other classes. UIQ and S60 both extend this approach, in two different ways.
Many other things do not yet fit into this model – for example, SyncML, Java ME providing another set of APIs on top of most of the OS and multimedia. Many of these are frameworks, and vendors are expected to supply plug-ins to these frameworks from third parties (for example, Helix player for multimedia codecs). This has the advantage that the APIs to such areas of functionality are the same on many phone models, and that vendors get a lot of flexibility. But it means that phone vendors need to do a great deal of integration work to make a Symbian OS phone.
Symbian OS device manufacturers also get supplied with an example user-interface layer called "TechView". It provides a basis to start customisation and is also the environment in which much Symbian OS test code and example code runs. It is very similar to the user interface from a Psion Series 5 personal organiser, so it is not used for any given phone user interface.

[edit] History



This section may require cleanup to meet Wikipedia's quality standards.



[edit] Psion
In 1980, Psion was founded by David Potter.

[edit] EPOC




Osaris PDA by Oregon Scientific with EPOC operating system


EPOC is a family of graphical operating systems developed by Psion for portable devices, primarily PDAs. EPOC came from epoch, the beginning of an era, but was backfitted by the engineers to "Electronic Piece Of Cheese". [1]

[edit] EPOC16
EPOC16, originally simply named EPOC, is the operating system developed by Psion in the late 1980s and early 1990s for Psion's "SIBO" (SIxteen Bit Organisers) devices. All EPOC16 devices feature an 8086-family processor and a 16-bit architecture. EPOC16 is a single-user pre-emptive multitasking operating system, written in Intel 8086 assembler language and C and designed to be delivered in ROM. It supported a simple programming language called OPL and an IDE called OVAL. SIBO devices include the: MC200, MC400, Series 3 (1991-1998), Series 3a, Series 3c, Series 3mx, Siena, Workabout and Workabout mx. The MC400 and MC200, the first EPOC16 devices, shipped in 1989, and as of September 2007[update], the Workabout mx is still in production.
EPOC16 features a primarily 1-bit, keyboard-operated graphical interface (the hardware for which it was designed did not have pointer input).
In the late 1990s the operating system was referred to as EPOC16 to distinguish it from Psion's new EPOC32 OS.

[edit] EPOC32
The first version of EPOC32, Release 1 appeared on the Psion Series 5 ROM v1.0 in 1997. Later, ROM v1.1 featured Release 3 (Release 2 was never publicly available.) These were followed by the Psion Series 5mx, Revo / Revo plus, Psion Series 7 / netBook and netPad (which all featured Release 5).
The EPOC32 operating system, at the time simply referred to as EPOC, was later renamed Symbian OS. Adding to the confusion with names, before the change to Symbian, EPOC16 was often referred to as SIBO to distinguish it from the "new" EPOC. Despite the similarity of the names, EPOC32 and EPOC16 were completely different operating systems, EPOC32 being written in C++ from a new codebase with development beginning during the mid 1990s.
EPOC32 is a pre-emptive multitasking, single user operating system with memory protection, which encourages the application developer to separate their program into an engine and an interface. The Psion line of PDAs come with a graphical user interface called EIKON which is specifically tailored for handheld machines with a keyboard (thus looking perhaps more similar to desktop GUIs than palmtop GUIs [2]). However, one of EPOC's characteristics is the ease with which new GUIs can be developed based on a core set of GUI classes, a feature which has been widely explored from Ericsson R380 and onwards.
EPOC32 was originally developed for the ARM family of processors, including the ARM7, ARM9, StrongARM and Intel's XScale, but can be compiled towards target devices using several other processor types.
During the development of EPOC32, Psion planned to license EPOC to third-party device manufacturers, and spin off its software division as Psion Software. One of the first licensees was the short-lived Geofox, which halted production with less than 1,000 units sold. Ericsson marketed a rebranded Psion Series 5mx called the MC218, and later created the EPOC Release 5.1 based smartphone, the R380. Oregon Scientific also released a budget EPOC device, the Osaris (notable as the only EPOC device to ship with Release 4).
In June 1998, Psion Software became Symbian, a major joint venture between Psion and phone manufacturers Ericsson, Motorola, and Nokia. As of Release 6, EPOC became known simply as Symbian OS.

[edit] EPOC OS Releases 1–3
Work started on the 32-bit version in late 1994. The Series 5 device, released in June 1997, used the first iterations of the EPOC32 OS, codenamed "Protea", and the "Eikon" graphical user interface.

[edit] EPOC Release 4
Oregon Scientific Osaris

[edit] EPOC Release 5
The Psion Series 5mx, Psion Series 7, Psion Revo, Diamond Mako, Psion netBook, netPad, GeoFox One, and Ericsson MC218 were released in 1999 using ER5. A phone project was announced at CeBIT, the Phillips Illium/Accent, but did not achieve a commercial release. This release has been retrospectively dubbed Symbian OS 5; it was never called that at the time.

[edit] ER5u
The first phone, the Ericsson R380 was released using ER5u in November 2000. It was not an 'open' phone – software could not be installed. Notably, a number of never-released Psion prototypes for next generation PDAs, including a Bluetooth Revo successor codenamed Conan were using ER5u. The 'u' in the name refers to the fact that it supported Unicode.

[edit] Symbian OS v6.0 and 6.1
The OS was renamed Symbian OS and was envisioned as the base for a new range of smartphones. This release sometime is called ER6. Psion gave 130 key staff to the new company and retained a 31% shareholding in the spun-out business.
The first 'open' Symbian OS phone, the Nokia 9210 Communicator, was released in June 2001. Bluetooth support added. Almost 500,000 Symbian phones were shipped in 2001, rising to 2.1 million the following year.
Development of different UIs was made generic with a "reference design strategy" for either 'smartphone' or 'communicator' devices, subdivided further into keyboard- or tablet-based designs. Two reference UIs (DFRDs or Device Family Reference Designs) were shipped - Quartz and Crystal. The former was merged with Ericsson's 'Ronneby' design and became the basis for the UIQ interface, the latter reached the market as the Nokia Series 80 UI.
Later DFRDs were Sapphire, Ruby, and Emerald. Only Sapphire came to market, evolving into the Pearl DFRD and finally the Nokia Series 60 UI, a keypad-based 'square' UI for the first true smartphones. The first one of them was the Nokia 7650 smartphone (featuring Symbian OS 6.1), which was also the first with a built-in camera, with VGA (0.3 Mpx = 640*480) resolution.
Despite these efforts to be generic the UI was clearly split between competing companies, Crystal or Sapphire was Nokia, Quartz was Ericsson. DFRD was abandoned by Symbian in late 2002, as part of an active retreat from UI development in favour of 'headless' delivery. Pearl was given to Nokia, Quartz development was spun-off as UIQ Technology AB, and work with Japanese firms was quickly folded into the MOAP standard.

[edit] Symbian OS 7.0 and 7.0s
First shipped in 2003. This is an important Symbian release which appeared with all contemporary user interfaces including UIQ (Sony Ericsson P800, P900, P910, Motorola A925, A1000), Series 80 (Nokia 9300, 9500), Series 90 (Nokia 7710), Series 60 (Nokia 3230, 6260, 6600, 6670, 7610) as well as several FOMA phones in Japan. It also added EDGE support and IPv6. Java support was changed from pJava and JavaPhone to one based on the Java ME standard.
One million Symbian phones were shipped in Q1 2003, with the rate increasing to one million a month by the end of 2003.
Symbian OS 7.0s was a version of 7.0 special adapted to have greater backward compatibility with Symbian OS 6.x, partly for compatibility between the Communicator 9500 and its predecessor the Communicator 9210.
In 2004, Psion sold its stake in Symbian. The same year, the first worm for mobile phones using Symbian OS, Cabir, was developed, which used Bluetooth to spread itself to nearby phones. See Cabir and Symbian OS threats.

[edit] Symbian OS 8.0
First shipped in 2004, one of its advantages would have been a choice of two different kernels (EKA1 or EKA2). However, the EKA2 kernel version did not ship until Symbian OS 8.1b. The kernels behave more or less identically from user-side, but are internally very different. EKA1 was chosen by some manufacturers to maintain compatibility with old device drivers, while EKA2 was a real-time kernel. 8.0b was deproductized in 2003.
Also included were new APIs to support CDMA, 3G, two-way data streaming, DVB-H, and OpenGL ES with vector graphics and direct screen access.

[edit] Symbian OS 8.1
Basically a cleaned-up version of 8.0, this was available in 8.1a and 8.1b versions, with EKA1 and EKA2 kernels respectively. The 8.1b version, with EKA2's single-chip phone support but no additional security layer, was popular among Japanese phone companies desiring the real-time support but not allowing open application installation. The first and maybe the most famous smartphone featuring Symbian OS 8.1a was Nokia N90 in 2005, Nokia's first in Nseries. It comes with Carl-Zeiss Tessar optics and a 2 Mpx (1600*1200) camera with video capabilities to take VHS quality (352×288) videos and a huge screen resolution (at the time) of 352*416 pixels.

[edit] Symbian OS 9.0
This version was used for internal Symbian purposes only. It was de-productised in 2004. 9.0 marked the end of the road for EKA1. 8.1a is the final EKA1 version of Symbian OS.
Symbian OS has generally maintained reasonable binary code compatibility. In theory the OS was BC from ER1-ER5, then from 6.0 to 8.1b. Substantial changes were needed for 9.0, related to tools and security, but this should be a one-off event. The move from requiring ARMv4 to requiring ARMv5 did not break backwards compatibility.
A Symbian developer proclaims that porting from Symbian 8.x to Symbian 9.x is a more daunting process than Symbian says.[6]

[edit] Symbian OS 9.1
Released early 2005. It includes many new security related features, particularly a controversial platform security module facilitating mandatory code signing. Symbian argues that applications and content, and therefore a developer's investment, are better protected than ever; however others contend that the requirement that every application be signed (and thus approved) violates the rights of the end-user, the owner of the phone, and limits the amount of free software available. The new ARM EABI binary model means developers need to retool and the security changes mean they may have to recode. S60 platform 3rd Edition phones have Symbian OS 9.1. Sony Ericsson is shipping the M600 and P990 based on Symbian OS 9.1. The earlier versions had a fatal defect where the phone hangs temporarily after the owner sent hundreds of SMS'es. However, on 13 September 2006, Nokia released a small program to fix this defect.[7]
Support for Bluetooth 2.0 (was 1.2)

[edit] Symbian OS 9.2
Released Q1 2006. Support for OMA Device Management 1.2 (was 1.1.2). S60 3rd Edition Feature Pack 1 phones have Symbian OS 9.2. Nokia phones with Symbian OS 9.2 OS: Nokia E90, Nokia E66, Nokia E63, Nokia E71, Nokia E51, Nokia N95, Nokia N82, Nokia N81, Nokia 6290, Nokia 6120 classic, Nokia 5700.

[edit] Symbian OS 9.3
Released on 12 July 2006. Upgrades include improved memory management and native support for Wifi 802.11, HSDPA, Vietnamese language support. The Nokia N96 as well as the Nokia N78 feature Symbian OS 9.3. The Nokia N85 also runs on Symbian OS 9.3. As of Q2 2008, OS 9.3 has just entered new devices.

[edit] Symbian OS 9.4
Announced in March 2007. Provides the concept of demand paging which is available from v9.3 onwards. Applications should launch up to 75% faster. Additionally, SQL support is provided by SQLite. Ships with the Nokia 5800 XpressMusic.

[edit] Symbian OS 9.5
Includes native support for mobile digital television broadcasts in DVB-H and ISDB-T formats and also location services.

[edit] Open source software for Symbian 9.1
Open source software for Symbian is available[8][9] and following software has been ported or rewritten for Symbian 9.1:

[edit] Utilities

Mobile Web Server, a port of the Apache HTTP Server
Nokia Internet Radio, an Internet radio player, that works with SHOUTcast directory
PuTTY, a telnet/ssh client[10]
Python for S60, a general port of the Python programming language
SymTorrent, a bittorrent client
Symella, a gnutella client


[edit] Game emulation

ScummVM


[edit] Multimedia

OggPlay – Audio player with ogg vorbis audio format support


[edit] Frameworks

Qt (toolkit) for S60[11][12][13][14][15][16][17][18]


Symbian also announced P.I.P.S. (PIPS Is POSIX on Symbian) which may increase the number of open source projects written for Symbian 9.1.[19][20]


[edit] Security and malware
Main article: Mobile virus
Symbian OS has been subject to a variety of viruses, the best known of which is Cabir. Usually these send themselves from phone to phone by Bluetooth. So far, none have taken advantage of any flaws in Symbian OS – instead, they have all asked the user whether they would like to install the software, with somewhat prominent warnings that it can't be trusted.
However, with a view that the average mobile phone user shouldn't have to worry about security, Symbian OS 9.x has adopted a capability model. Installed software will theoretically be unable to do damaging things (such as costing the user money by sending network data) without being digitally signed – thus making it traceable. Commercial developers who can afford the cost can apply to have their software signed via the Symbian Signed program. Currently, developers also have the option of self-signing their programs. However, the set of available features is smaller, and certain operators have opted on fully disabling certificates other than the Symbian Signed certificates.
Some other hostile programs are listed below, but all of them still require the input of the user to run.

Drever. A is a malicious SIS file trojan that attempts to disable the automatic startup from Simworks and Kaspersky Symbian Anti-Virus applications.
Locknut. B is a malicious SIS file trojan that pretends to be patch for Symbian S60 mobile phones. When installed, it drops a binary that will crash a critical system service component. This will prevent any application from being launched in the phone.
Mabir. A is basically Cabir with added MMS functionality. The two are written by the same author, and the code shares many similarities. It spreads using Bluetooth via the same routine as early variants of Cabir. As Mabir. A activates it will search for the first phone it finds, and starts sending copies of itself to that phone.
Fontal. A is an SIS file trojan that installs a corrupted file which causes the phone to fail at reboot. If the user tries to reboot the infected phone, it will be permanently stick on the reboot, and cannot be used without disinfection – that is, the use of the reformat key combination which causes the phone to lose all data. Being a trojan, Frontal cannot spread by itself – the most likely way for the user to get infected would be to acquire the file from untrusted sources, and then install it to the phone, inadvertently or otherwise.


[edit] Open source





This article or section contains information about scheduled or expected future software.
The content may change as the software release approaches and more information becomes available.





Symbian is not open source software yet. However, phone manufacturers and other partners are provided with parts of its source code. The APIs are publicly documented and up to Symbian 8.1 anyone could develop software for Symbian OS.
Symbian 9.1 introduced capabilities and Platform Security framework. To access certain capabilities, the developer has to digitally sign their application. Basic capabilities are user-grantable and developer can self-sign them, more advanced require certification and signing via the Symbian Signed program; which uses independent Test Houses and/or phone manufacturer approval. For example file writing is a user-grantable capability, and access to Multimedia Device Drivers require phone manufacturer approval. A TC TrustCenter ACS Publisher ID certificate is required from the developer for signing applications.
In 2008 Nokia announced plans to acquire full ownership of Symbian and start the Symbian Foundation, which will be an independent force for the future development of Symbian OS. They stated that Symbian OS (including the platforms S60, UIQ and MOAP(S)) will become open source in the first half of 2009.[21][22][23][24][25][26]

[edit] Devices that have used the Symbian OS
On 16 November 2006, the 100 millionth smartphone running the OS was shipped.[27]

Ericsson R380 (2000) was the first commercially available phone based on Symbian OS. As with the modern "FOMA" phones, this device was closed, and the user could not install new C++ applications. Unlike those, however, the R380 could not even run Java applications, and for this reason, some have questioned whether it can properly be termed a 'smartphone'.
Nokia Series 80 interface:

Nokia 9210 Communicator smartphone (32-bit 66 MHz ARM9-based RISC CPU) (2001), 9300 Communicator (2004), 9500 Communicator (2004) using the Nokia Series 80 interface


UIQ interface:

Used for PDAs such as Sony Ericsson P800 (2002), P900 (2003), P910 (2004), P990 (2005), W950 (2006), M600 (2006), P1 (2007), W960 (2007), G700 (2008), G900 (2008), G702 (2008), Motorola A920, A925, A1000, RIZR Z8, RIZR Z10, DoCoMo M1000, BenQ P30, P31 and Nokia 6708 using this interface.


Nokia S60 (2002) interface:

Nokia S60 is used in various phones, the first being the Nokia 7650, then the Nokia 3650, followed by the Nokia 3620/3660, Nokia 6600, Nokia 7610, Nokia 6670 and Nokia 3230. The Nokia N-Gage and Nokia N-Gage QD gaming/smartphone combos are also S60 platform devices. It was also used on other manufacturers' phones such as the Siemens SX1, Sendo X, Panasonic X700, Panasonic X800, Samsung SGH-D730, SGH-D720 and the Samsung SGH-Z600. Recent, more advanced devices using S60 include the Nokia 6620, Nokia 6630, the Nokia 6680, Nokia 6681 and Nokia 6682, Nokia 6120 classic, Nokia 6121 classic, Nokia 6220,a next generation Nseries, including the Nokia N70, Nokia N71, Nokia N72, Nokia N73, Nokia N75, Nokia N76, Nokia N77, Nokia N78, Nokia N80, Nokia N81, Nokia N82, Nokia N85, Nokia N90, Nokia N91, Nokia N92, Nokia N93, Nokia N95 and Nokia N96, the enterprise (i.e. business) model Eseries, including the Nokia E50, Nokia E51, Nokia E60, Nokia E61, Nokia E62, Nokia E63, Nokia E65, Nokia E66, Nokia E70, Nokia E71, Nokia E78, and Nokia E90 and some of the models of Nokia Xpress music mobiles like Nokia 5320, Nokia 5700 and Nokia 5800 XpressMusic. For an up-to-date list, see the Symbian S60 website.


Nokia Series 90 interface:

Nokia 7710 (2004) using the Nokia Series 90 interface.


MOAP(S) interface:

Fujitsu, Mitsubishi, Sony Ericsson and Sharp phones for NTT DoCoMo in Japan, using an interface developed specifically for DoCoMo's FOMA "Freedom of Mobile Access" network brand. This UI platform is called MOAP "Mobile Orientated Applications Platform" and is based on the UI from earlier Fujitsu FOMA models.




[edit] Developing on Symbian OS
Main article: Accredited Symbian Developer
The native language of the Symbian OS is C++, although it is not a standard implementation. There are multiple platforms based upon Symbian OS that provide an SDK for application developers wishing to target a Symbian OS device – the main ones being UIQ and S60. Individual phone products, or families, often have SDKs or SDK extensions downloadable from the manufacturer's website too. The SDKs contain documentation, the header files and library files required to build Symbian OS software, and a Windows-based emulator ("WINS"). Up until Symbian OS version 8, the SDKs also included a version of the GCC compiler (a cross-compiler) required to build software to work on the device.
Symbian OS 9 uses a new ABI and so requires a new compiler – a choice of compilers is available including a new version of GCC (see external links below). In terms of SDKs, UIQ Technology now provides a simplified framework so that the single UIQ SDK forms the basis for developing on all UIQ 3 devices, such as the Sony Ericsson P990 and Sony Ericsson M600.
Unfortunately, Symbian C++ programming has a steep learning curve, as Symbian requires the use of special techniques such as descriptors and the cleanup stack. This can make even relatively simple programs harder to implement than in other environments. Moreover, it is questionable whether Symbian's techniques e.g. the memory management paradigm are actually so beneficial. It is possible that the techniques, developed for the much more restricted mobile hardware of the 1990s, do cause unnecessary complexity in source code; programmers are required to concentrate on bug-prone low-level routines instead of truly application-specific features. It seems difficult, however, to make a move towards a more high-level and modern programming paradigm.[28]
Symbian C++ programming is commonly done with an IDE. For previous versions of Symbian OS, the commercial IDE CodeWarrior for Symbian OS was favoured. The CodeWarrior tools were replaced during 2006 by Carbide.c++, an Eclipse-based IDE developed by Nokia. Carbide.c++ is offered in 4 different versions: Express, Developer, Professional, and OEM, with increasing levels of capability. Full featured software can be created and released with the Express edition, which is free. Features such as UI design, crash debugging etc. are available in the other charged for editions. Microsoft Visual Studio 2003 and 2005 are also supported through the Carbide.vs plugin.
Symbian OS's flavour of C++ is very specialised.[citation needed] However, many Symbian OS devices can also be programmed in OPL, Python, Visual Basic, Simkin, and Perl – together with the Java ME and PersonalJava flavours of Java.
Visual Basic programmers can use NS Basic to develop apps for S60 3rd Edition and UIQ 3 devices.
In the past, Visual Basic, VB.NET, and C# development for Symbian were possible through AppForge Crossfire, a plugin for Microsoft Visual Studio. March 13, 2007 AppForge ceased operations, Oracle purchased the intellectual property, but announced that they do not plan to sell or provide support for former AppForge products. Net60, a .NET compact framework for Symbian, which is developed by redFIVElabs, is sold as a commercial product. With Net60, VB.NET and C# (and other) source code is compiled into an intermediate language (IL) which is executed within the Symbian OS using a just-in-time compiler.
There is also a version of a Borland IDE for Symbian OS. Symbian OS development is also possible on Linux and Mac OS X using tools and techniques developed by the community, partly enabled by Symbian releasing the source code for key tools. A plugin that allows development of Symbian OS applications in Apple's Xcode IDE for Mac OS X is available.[29]
Once developed, Symbian OS applications need to find a route to customers' mobile phones. They are packaged in SIS files which may be installed over-the-air, via PC connect or in some cases via Bluetooth or memory cards. An alternative is to partner with a phone manufacturer to have the software included on the phone itself. The SIS file route is more difficult for Symbian OS 9.x, because any application wishing to have any capabilities beyond the bare minimum must be signed via the Symbian Signed program. There are however various hacks, which allow installing unsigned programs with any capabilities to Symbian OS 9.x.
Introduction of the Symbian Signed system in which application developers need to pay in order to use some of the more attractive smartphone features (as contrasted to platforms like Palm OS and Windows Mobile) is making it an increasingly unpopular platform for Open Source projects[30], independent developers and small startups. This situation is worsened by the fragmentation of user interface systems (UIQ vs S60 vs MOAP)[31], meaning that developers need to build and maintain multiple incompatible versions of their software[32] if they want to target multiple devices which use the same underlying Symbian OS version.
Java ME applications for Symbian OS are developed using standard techniques and tools such as the Sun Java Wireless Toolkit (formerly the J2ME Wireless Toolkit). They are packaged as JAR (and possibly JAD) files. Both CLDC and CDC applications can be created with NetBeans. Other tools include SuperWaba, which can be used to build Symbian 7.0 and 7.0s programs using Java.
Nokia S60i phones can also run Python scripts when the interpreter Python for S60 is installed, with a custom made API that allows for Bluetooth support and such. There is also an interactive console to allow the user to write python scripts directly from the phone.

[edit] Hacking Symbian
S60 version 3 (OS 9.1, 9.2 & 9.3) devices can be hacked to remove the platform security introduced in OS 9.1 onwards thus allowing users to install "unsigned" files (files without certificates validated by Symbian) and allowing access to previously locked system files.[33]This allows changing of how the operating system works, allowing hidden applications etc. to be viewable and possibly increases the threat posed by mobile viruses as the operating system files are now exposed. [34].

[edit] See also

Access Co.
Multiplayer Mobile games
Nokia OS (NOS)
Openmoko
Operating System Embedded (OSE)
Qtopia
Accredited Symbian Developer


[edit] Notes and references


^ The QEMU Project, See the QEMU project; ARM can be emulated in it
^ symbian.com - Mobile leaders to unify the Symbian software platform and set the future of mobile free
^ Nokia buys Symbian and turns it into a non-profit foundation
^ From the press release: "Nokia, Sony Ericsson, Motorola and NTT DOCOMO announced today their intent to unite Symbian OS, S60, UIQ and MOAP(S) to create one open mobile software platform. Together with AT&T, LG Electronics, Samsung Electronics, STMicroelectronics, Texas Instruments and Vodafone they plan to establish the Symbian Foundation to extend the appeal of this unified software platform. Membership of this non-profit Foundation will be open to all organizations. This initiative is supported by current shareholders and management of Symbian Limited, who have been actively involved in its development. Plans for the Foundation have already received wide support from other industry leaders."
^ [http://www.informationweek.com/blog/main/archives/2008/11/apple_beats_rim.html Apple Beats RIM, Microsoft To Become No. 2 Smartphone Provider
^ Symbian developer reports on porting from 8.x to 9.x
^ Solution to Nokia Slow SMS / Hang Problem
^ http://www.symbianos.org
^ http://developer.symbian.com/wiki/display/pub/Open+source+projects
^ http://s2putty.sourceforge.net/
^ Nokia - Nokia enriches application development with Qt for S60
^ Qt for S60 - Forum Nokia Wiki
^ Symbian - Nokia enriches application development with Qt for S60
^ All About Symbian - Nokia Announce Technology preview of Qt on S60
^ ars technica - Nokia releases first Qt preview for Symbian S60
^ Qt Labs Blogs - We’re porting Qt to S60!
^ Qt Software - Technology Preview - Qt for S60
^ Qt Sftware - How to get Qt running on your S60 phone
^ Symbian introduces POSIX libraries on Symbian OS
^ Symbian OS to gain POSIX libraries
^ Nokia: Nokia to acquire Symbian Limited to enable evolution of the leading open mobile platform
^ "Symbian öppen källkod inom två år". http://www.idg.se/2.1085/1.169477. 
^ "Nokia Opens Up Symbian". http://www.forbes.com/markets/economy/2008/06/24/nokia-symbian-software-markets-equity-cx_ll_0624markets09.html. 
^ "Nokia Acquires Symbian - Goes Open Source". http://www.techcrunch.com/2008/06/24/nokia-acquires-symbian-goes-open-source/. 
^ "Nokia takes Symbian open source. What will this mean for mobile Linux?". http://news.cnet.com/8301-13505_3-9975902-16.html. 
^ "Symbian Going Open Source!". http://palmaddict.typepad.com/palmaddicts/2008/06/symbian-going-o.html. 
^ Six Years of Symbian Produces 100 Models and 100 Million Shipments, The Smart PDA.
^ Symbian OS design faults
^ Tom Sutcliffe and Jason Barrie Morley Xcode Symbian support
^ Why Symbian Signed must die
^ List of Symbian phones with platforms
^ List of SDKs for specific platforms
^ Nokia's S60 3rd Ed security has been HACKED? - Symbian Freak
^ S60 v3 Hacking - Mission accomplished, FP1 hacked!! - Symbian Freak



Morris, Ben The Symbian OS architecture sourcebook : design and evolution of a mobile phone OS, John Wiley & Sons (2006), ISBN-13: 978-0-470-01846-0.


[edit] External links

Symbian home page
Symbian Developer Network – the official developer network
Symbian Foundation
One of the fastest growing Symbian OS Forum
Symbian OS at the Open Directory Project








v • d • e

Nokia platforms





User interfaces

Maemo · Series 40 · Series 60 · Series 80 · Series 90






Operating systems

Maemo · Nokia OS · Symbian






Related articles

Accredited Symbian Developer · Symbian Foundation · S60 supported devices













v • d • e

Mobile operating systems





Embedded Linux-based

Access Linux Platform · Android · LiMo Platform · Maemo · Mobilinux · Moblin · MotoMagx · Openmoko · palm webOS · Qt Extended · Red Flag · Ubuntu Mobile






Others

BlackBerry · BREW · DoJa · Garnet OS · iPhone · JavaFX · PSP · SavaJe · Symbian · Windows (CE, Embedded, Mobile, XP Tablet PC)













v • d • e

Real-time operating systems (RTOS)






ChibiOS/RT · Contiki · DNIX · DSOS · eCos · Embedded Linux · EROS · FreeRTOS · LynxOS · MenuetOS · MERT · Nucleus RTOS · Open AT OS · OS-9 · OSE · pSOS · Prex · QNX · RMX · RSX-11 · RT-11 · RTEMS · RTLinux · SINTRAN III · Symbian · Talon DSP RTOS · THEOS · TPF · TRON · µC/OS-II · VRTX · VxWorks · Windows CE









Retrieved from "http://en.wikipedia.org/wiki/Symbian_OS"
Categories: Upcoming software | Smartphones | Embedded operating systems | Nokia | Mobile phone operating systems | Mobile operating systemsHidden categories: Articles needing additional references from July 2008 | Articles needing additional references from December 2008 | Wikipedia articles needing copy edit from December 2008 | All articles needing copy edit | All articles with unsourced statements | Articles with unsourced statements since August 2007 | All articles needing style editing | Wikipedia articles needing style editing from December 2007 | Cleanup from March 2009 | All pages needing cleanup | Articles containing potentially dated statements from September 2007 | All articles containing potentially dated statements | Articles with unsourced statements since February 2007 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


العربية
Български
Català
Česky
Deutsch
Ελληνικά
Español
فارسی
Français
Galego
Bahasa Indonesia
Italiano
ქართული
Kurdî / كوردی
Latviešu
Lietuvių
Magyar
Nederlands
日本語
‪Norsk (bokmål)‬
‪Norsk (nynorsk)‬
O'zbek
Polski
Português
Română
Русский
Slovenčina
Slovenščina
Српски / Srpski
Suomi
Svenska
ไทย
Tiếng Việt
Türkçe
Українська
中文









 This page was last modified on 4 April 2009, at 20:20 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
