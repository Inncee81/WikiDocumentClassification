













Data Distribution Service - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Data_Distribution_Service";
		var wgTitle = "Data Distribution Service";
		var wgAction = "view";
		var wgArticleId = "1971942";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 278341761;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Data Distribution Service

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
Data Distribution Service for Real-time Systems (DDS) is a specification of a publish/subscribe middleware for distributed systems created in response to the need to standardize a data-centric publish-subscribe programming model for distributed systems.




Contents


1 History
2 DDS Architecture

2.1 DDS entities
2.2 DDS model


3 See also
4 References
5 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] History
A few proprietary DDS solutions have been available for several years, until 2004 when the two major DDS vendors, the American Real-Time Innovations and the French Thales Group teamed up to create the DDS specifications that have been approved by the Object Management Group.
Version History

DDS 1.3 — Working version, OMG members only.
DDS 1.2 (January 1, 2007)
DDS 1.1 (December 4, 2005)
DDS 1.0 (June 1, 2003)

The DDS specification describes two levels of interfaces:

A lower DCPS (Data-Centric Publish-Subscribe) level that is targeted towards the efficient delivery of the proper information to the proper recipients.


An optional higher DLRL (Data Local Reconstruction Layer) level, which allows for a simple integration of DDS into the application layer.


[edit] DDS Architecture

[edit] DDS entities

DomainParticipantFactory : A singleton factory that is the main entry point to DDS.


DomainParticipant : Entry point for the communication in a specific domain; it represents the participation of an application in one DDS Domain. Furthermore, it acts as a factory for the creation of DDS Publishers, Subscribers, Topics, MultiTopics and ContentFilteredTopics.


TopicDescription : Abstract base class for Topic, ContentFilteredTopic and MultiTopic.


Topic : A specialization of TopicDescription that is the most basic description of the data to be published and subscribed.


ContentFilteredTopic : A specialized TopicDescription like the Topic that additionally allows content-based subscriptions.


MultiTopic : A specialization of TopicDescription like the Topic that additionally allows subscriptions to combine/filter/rearrange data coming from several topics.


Publisher : A Publisher is the object responsible for the actual dissemination of publications.


DataWriter : Allows the application to set the value of the data to be published under a given Topic.


Subscriber : A Subscriber is the object responsible for the actual reception of the data resulting from its subscriptions.


DataReader : A DataReader allows the application to declare the data it wishes to receive (by making a subscription using a Topic, ContentFilteredTopic or MultiTopic) and to access the data received by the attached Subscriber.


[edit] DDS model
DDS is networking middleware that simplifies complex network programming. It implements a publish/subscribe model for sending and receiving data, events, and commands among the nodes. Nodes that are producing information (publishers) create "topics" (e.g., temperature, location, pressure) and publish "samples." DDS takes care of delivering the sample to all subscribers that declare an interest in that topic.
DDS handles all the transfer chores: message addressing, data marshaling and demarshalling (so subscribers can be on different platforms than the publisher), delivery, flow control, retries, etc. Any node can be a publisher, subscriber, or both simultaneously.
The DDS publish-subscribe model virtually eliminates complex network programming for distributed applications.
DDS supports mechanisms that go beyond the basic publish-subscribe model. The key benefit is that applications that use DDS for their communications are entirely decoupled. Very little design time has to be spent on how to handle their mutual interactions. In particular, the applications never need information about the other participating applications, including their existence or locations. DDS automatically handles all aspects of message delivery, without requiring any intervention from the user applications, including:

determining who should receive the messages,
where recipients are located,
what happens if messages cannot be delivered.

This is made possible by the fact that DDS allows the user to specify Quality of Service (QoS) parameters as a way to configure automatic-discovery mechanisms and specify the behavior used when sending and receiving messages. The mechanisms are configured up-front and require no further effort on the user's part. By exchanging messages in a completely anonymous manner, DDS greatly simplifies distributed application design and encourages modular, well-structured programs.
DDS also automatically handles hot-swapping redundant publishers if the primary fails. Subscribers always get the sample with the highest priority whose data is still valid (that is, whose publisher-specified validity period has not expired). It automatically switches back to the primary when it recovers, too. DDS is available from different vendors with Ada, C, C++, C#, and Java APIs.

[edit] See also

Middleware
Open architecture computing environment


[edit] References





This article does not cite any references or sources. Please help improve this article by adding citations to reliable sources (ideally, using inline citations). Unsourced material may be challenged and removed. (February 2009)



[edit] External links

The OMG DDS portal
RTI Data Distribution Service commercial implementation
PrismTech's OpenSplice DDS commercial implementation
The open source version of PrismTech's OpenSplice DDS
Twin Oaks Computing's CoreDX commercial DDS implementation
OCI's OpenDDS open source DDS implementation
MilSOFT commercial implementation
PocoCapsule for DDS A framework for component-based CORBA and DDS applications.
InterCOM DDS Gallium commercial implementation




Retrieved from "http://en.wikipedia.org/wiki/Data_Distribution_Service"
Categories: Distributed computing | Communication | Message-oriented middlewareHidden categories: Articles lacking sources from February 2009 | All articles lacking sources 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Deutsch
Español
Français
한국어
Italiano
日本語









 This page was last modified on 19 March 2009, at 15:18 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
