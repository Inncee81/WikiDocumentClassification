













GNU build system - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "GNU_build_system";
		var wgTitle = "GNU build system";
		var wgAction = "view";
		var wgArticleId = "171984";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 275141412;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); GNU build system

From Wikipedia, the free encyclopedia

Jump to: navigation, search 




GNU logo


The GNU build system, also known as the Autotools, is a suite of programming tools produced by the GNU project. These tools are designed to assist in making various source code packages portable to many Unix-like systems. The GNU build system is part of the GNU toolchain and is widely used in many free software and open source packages. While the tools comprising the GNU build system themselves are free software licensed under the GNU GPL, there are no restrictions in using them in making non-free software portable.




Contents


1 Tools included in the GNU build system

1.1 GNU Autoconf
1.2 GNU Automake
1.3 GNU Libtool
1.4 Gnulib


2 Advantages of the GNU build system
3 Limitations of the GNU build system
4 See also
5 References
6 Further reading
7 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Tools included in the GNU build system




Flow diagram of autoconf and automake


The GNU build system comprises the GNU utility programs Autoconf, Automake, and Libtool [1]. Other related tools frequently used with the GNU build system are GNU’s make program, GNU gettext, pkg-config, and the GNU Compiler Collection, also called GCC.

[edit] GNU Autoconf
Autoconf processes files (configure.in or configure.ac, though configure.ac is the newer name and is now recommended[2]) to generate a configure script.
When running the generated configure script, other template files, customarily ending in ".in", such as Makefile.in, are processed to create their final output, in this case a Makefile.
Autoconf is used to attempt to work around the quirks found in various Unix-like operating systems. For example, some Unix-like systems may have certain facilities that are known to be broken or missing entirely. Autoconf creates a shell script which can detect these, and the program can work around them. The final output of the Autoconf utility is the configure script.
Autoconf comes with several auxiliary programs designed to ease the creation of configure.ac, such as the Autoheader tool, which is used to help manage C header files, autoscan, which can create an initial input file for Autoconf and ifnames, which can list C pre-processor identifiers used in the program.

[edit] GNU Automake
Automake helps to create portable Makefiles, which are in turn processed with the make utility. It takes its input as Makefile.am, and turns it into Makefile.in, which is used by the configure script to generate the file Makefile output.

[edit] GNU Libtool
Libtool helps manage the creation of static and dynamic libraries on various Unix-like operating systems. Libtool accomplishes this by abstracting the library creation process, hiding differences between various systems (e.g. GNU/Linux systems vs. Solaris).

[edit] Gnulib
Gnulib simplifies the process of making software that uses Autoconf and Automake portable to a wide range of systems.

[edit] Advantages of the GNU build system
The GNU build system provides an environment to a computer programmer which allows them to write cross-platform software (at least running on multiple Unix-like operating systems). It also makes the build process easier on the user, allowing the user to usually just run a small set of commands to build the program from its source code and install it.
The utilities used by the GNU build system are only required to be on the developer’s workstation, as well. Users do not need to have Autoconf, Automake, or Libtool in order to build or install software which was developed using them. This makes the GNU build system self-contained, requiring only standard Unix-like tools to build. This is accomplished by using shell scripts which help to configure the software for a given person’s operating system.
The utilities used in the GNU build system can also be used alone or together—a software project can use Autoconf, for example, without using Automake as well. However, the GNU build system’s components can interact with each other.

[edit] Limitations of the GNU build system
The GNU build system uses Bourne-compatible shell scripts to assist the user in the configuration and build process. However, some operating systems (such as the Microsoft Windows family of systems) cannot run Bourne shell scripts on their own. This makes building such software on the Windows operating system a bit harder than on a Unix-like system which provides the Bourne shell as a standard component. One can install the Cygwin or MSYS system on top of Windows to provide a Unix-like compatibility layer, though, allowing configure scripts to run. Cygwin also provides the GNU Compiler Collection, GNU make, and other software that provides a nearly complete Unix-like system within Windows; MSYS also provides GNU make and other tools designed to work with the MinGW version of GCC. Increasingly, cross-compiling software to run on a Windows host from a GNU/Linux or other Unix-like build system is also possible, using MinGW.
Projects which use the GNU build system may or may not provide a configure script within their Software Configuration Management systems (such as CVS or Subversion). If a project that uses the GNU build system does not have a generated ./configure file available for the user, the user must generate it. One possible way this can be done is to execute a series of commands at a shell prompt:

$ aclocal
$ autoconf
$ autoheader
$ automake

Not all of the commands may be necessary depending on how a given project uses the GNU build system, or more commands may be necessary. Another common convention is to provide a script, often named autogen.sh, that runs all the needed pre-build tools. In some cases, one can also use:

$ autoreconf

which automatically invokes the above commands as needed.
The GNU build system can be used both for building native programs on the build machine and also for cross-compiling to other architectures [1].
One limitation has been that the autoconf-generated configure is not parallel, and is fairly slow because it executes programs like the C compiler many times in order to test whether various libraries, header files, and language features are present. This means that running the configure script is often slower than the rest of the build process combined (since everything else can be parallelized).

[edit] See also




Free software portal




Gnits Standards
Build automation
GNU Coding Standards


[edit] References


^ http://autotoolset.sourceforge.net/tutorial.html#SEC40
^ Autoconf, “Writing configure.ac”



[edit] Further reading

Gary V. Vaughan, Ben Elliston, Tom Tromey, and Ian Lance Taylor (October 2000). GNU Autoconf, Automake, and Libtool (1st edition ed.). New Riders. ISBN 1-57870-190-2. http://www.sourceware.org/autobook. 


[edit] External links

The GNU configure and build system
The pkg-config package
automake manual
GNU automake documentation
GNU autoconf documentation
Autotools Tutorial








v • d • e

GNU Project





History

GNU Manifesto · Free Software Foundation · History of free software







Licences

GNU General Public License · GNU Lesser General Public License · Affero General Public License · GNU Free Documentation License · GPL linking exception






Software

GNU (variants) · Hurd · GNOME · Gnuzilla · IceCat · Gnash · Bash · GCC · GNU Emacs · glibc · Coreutils · Build system · Bazaar · LilyPond · Other GNU packages and programs






Public speakers

Robert J. Chassell · Loïc Dachary · Ricardo Galli · Joshua Gay · Georg C. F. Greve · Federico Heinz · Benjamin Mako Hill · Bradley M. Kuhn · Matt Lee · Eben Moglen · Alexandre Oliva · Richard Stallman · John Sullivan






Other topics

GNU/Linux naming controversy · Revolution OS









Retrieved from "http://en.wikipedia.org/wiki/GNU_build_system"
Categories: GNU project | GNU project software | Compiling tools | Build automation | Unix 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


العربية
Deutsch
Español
Français
日本語
Polski









 This page was last modified on 5 March 2009, at 10:56.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
