













chmod - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Chmod";
		var wgTitle = "Chmod";
		var wgAction = "view";
		var wgArticleId = "50623";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 278486827;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); chmod

From Wikipedia, the free encyclopedia

Jump to: navigation, search 





This article includes a list of references or external links, but its sources remain unclear because it lacks inline citations. Please improve this article by introducing more precise citations where appropriate. (February 2008)


The chmod command (abbreviated from change mode) is a shell command and C language function in Unix and Unix-like environments. The command is based on the function. When executed, it can change file system modes of files and directories. The modes include permissions and special modes.




Contents


1 History
2 Usage
3 Command line options

3.1 String modes
3.2 String mode examples
3.3 Octal numbers
3.4 Special modes
3.5 Command line examples


4 Function details
5 See also
6 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] History
A chmod command first appeared in AT&T Unix version 1, and is still used today on Unix-like machines.

[edit] Usage
The chmod command options are specified like this:

$ chmod [options] mode[,mode] file1 [[file2 ...]]

To view what the permissions currently are, type:

$ ls -l file

The function prototype is defined:

int chmod(const char *path, mode_t mode);


[edit] Command line options
The chmod command has a number of command line options that affect its behavior. The most common options are:

-R: Changes the modes of directories and files recursively
-v: Verbose mode; lists all files as they are being processed


[edit] String modes

See also: Symbolic notation of file system permissions

To the chmod utility, all permissions and special modes are represented by its mode parameter. One way to adjust the mode of files or directories is to specify a symbolic mode. The symbolic mode is composed of three components, which are combined to form a single string of text:

$ chmod [references][operator][modes] file1 ...

The references (or classes) are used to distinguish the users to whom the permissions apply. If no references are specified it defaults to “all”. They are represented by one or more of the following letters:


Reference
Class
Description


u
user
the owner of the file


g
group
users who are members of the file's group


o
others
users who are not the owner of the file or members of the group


a
all
all three of the above, is the same as ugo


The chmod program uses an operator to specify how the modes of a file should be adjusted. The following operators are accepted:


Operator
Description


+
adds the specified modes to the specified classes


-
removes the specified modes from the specified classes


=
the modes specified are to be made the exact modes for the specified classes


The modes indicate which permissions are to be granted or taken away from the specified classes. There are three basic modes which correspond to the basic permissions:


Mode
Name
Description


r
read
read a file or list a directory's contents


w
write
write to a file or directory


x
execute
execute a file or recurse a directory tree


X
special execute
which is not a permission in itself but rather can be used instead of x. It applies execute permissions to directories regardless of their current permissions and applies execute permissions to a file which already has at least 1 execute permission bit already set (either user, group or other). It is only really useful when used with '+' and usually in combination with the -R option for giving group or other access to a big directory tree without setting execute permission on normal files (such as text files), which would normally happen if you just used "chmod -R a+rx .", whereas with 'X' you can do "chmod -R a+rX ." instead


s
setuid/gid
details in Special modes section


t
sticky
details in Special modes section


The combination of these three components produces a string that is understood by the chmod command. Multiple changes can be specified by separating multiple symbolic modes with commas.

[edit] String mode examples
For example, the following command would be used to add the read and write permissions to the user and group classes of a file or directory named sample:

$ chmod ug+rw sample
$ ls -ld sample
drw-rw----   2 unixguy  unixguy       96 Dec  8 12:53 sample

This command removes all permissions, allowing no one to read, write, or execute the file named sample.

$ chmod a-rwx sample
$ ls -l sample
----------   2 unixguy  unixguy       96 Dec  8 12:53 sample

The following command changes the permissions for the user and the group to read and execute only (no write permission) on sample.

Sample file permissions before command
$ ls -ld sample
drw-rw----   2 unixguy  unixguy       96 Dec  8 12:53 sample
$ chmod ug=rx sample
$ ls -ld sample
dr-xr-x---   2 unixguy  unixguy       96 Dec  8 12:53 sample


[edit] Octal numbers

See also: Octal notation of file system permissions

The chmod command also accepts three and four-digit octal numbers representing modes. See the article mentioned above for more information. Using a four-digit octal number to set the modes of a file or directory named sample would look something like this:

$ chmod 0664 sample

Assuming that the setuid, setgid and sticky bits are not set, this is equivalent to:

$ chmod 664 sample

or

$ chmod +r,-x,ug+w sample


[edit] Special modes

See also: Additional file system permissions

The chmod command is also capable of changing the additional permissions or special modes of a file or directory. The symbolic modes use s to represent the setuid and setgid modes, and t to represent the sticky mode. The modes are only applied to the appropriate classes, regardless of whether or not other classes are specified.
Most operating systems support the specification of special modes using octal modes, but some do not. On these systems, only the symbolic modes can be used..

[edit] Command line examples


command
explanation


chmod +r file
read is added for all


chmod -x file
execute permission is removed for all


chmod u=rw,go= file
read and write is set for the owner, all permissions are cleared for the group and others


chmod +rw file
change the permissions of the file file to read and write for all.


chmod -R u+w,go-w docs/
change the permissions of the directory docs and all its contents to add write access for the user, and deny write access for everybody else.


chmod 0 file
removes all privileges for all


chmod 666 file
sets read and write access for the owner, the group, and all others.


chmod 0755 file
equivalent to u=rwx (4+2+1),go=rx (4+1 & 4+1). The 0 specifies no special modes.


chmod 4755 file
the 4 specifies set user ID and the rest is equivalent to u=rwx (4+2+1),go=rx (4+1 & 4+1).


find path/ -type d -exec chmod a-x {} \;
removes execute permission for all directories (cannot list files) in tree starting from path/ (use '-type f' to match files only).


find path/ -type d -exec chmod a+x {} \;
allows directory browsing (ls for example) for all users if you've reset permissions for Samba write access.


chmod -R u+rwX,g-rwx,o-rwx directory
set a directory tree to rwx for owner directories, rw for owner files, --- for group and others.


chmod -R a-x+X directory
remove the execute permission on all files in a directory tree, while allowing for directory browsing.



[edit] Function details
The function takes a parameter of type mode_t, which is a bitfield composed of various flags:


flag
octal value
purpose


S_ISUID
04000
set user ID on execution


S_ISGID
02000
set group ID on execution


S_ISVTX
01000
sticky bit


S_IRUSR, S_IREAD
00400
read by owner


S_IWUSR, S_IWRITE
00200
write by owner


S_IXUSR, S_IEXEC
00100
execute/search by owner


S_IRGRP
00040
read by group


S_IWGRP
00020
write by group


S_IXGRP
00010
execute/search by group


S_IROTH
00004
read by others


S_IWOTH
00002
write by others


S_IXOTH
00001
execute/search by others


Where alternate flag names are given, one of the pair of names might not be supported on some OSs. The octal values of the flags are summed or combined in a bitwise or operation to give the desired permission mode.
Various error codes can be returned, and these are detailed in the associated man page for the function.

[edit] See also

File system permissions
chown, the command used to change the owner of a file or directory on Unix-like systems
chgrp, the command used to change the group of a file or directory on Unix-like systems
cacls, a command used on Windows NT and its derivatives to modify the access control lists associated with a file or directory
User ID
Group ID
List of Unix programs


[edit] External links

chmod(1): change file modes – FreeBSD General Commands Manual
chmod — manual page from GNU coreutils.
GNU "Setting Permissions" manual
Solaris 9 chmod man page
Mac OS X chmod man page, which also supports access control lists.
CHMOD-Win 3.0 — Freeware Windows' ACL ←→ CHMOD converter.
What CHMOD? File Permissions Calculator, web-based CHMOD calculator.
Beginners tutorial with on-line "live" example








v • d • e

Unix command line programs and builtins (more)





File system

cat · cd · chmod · chown · chgrp · cksum · cmp · cp · du · df · file · fsck · fuser · ln · ls · lsattr · lsof · mkdir · mount · mv · pwd · rm · rmdir · split · touch






Processes

at · chroot · cron · exit · kill · killall · nice · pgrep · pidof · pkill · ps · pstree · sleep · time · top · wait






User environment

env · finger · id · logname · mesg · passwd · su · sudo · uname · uptime · w · wall · who · whoami · write






Text processing

awk · comm · cut · ed · ex · fmt · head · iconv · join · less · more · paste · sed · sort · tac · tail · tr · uniq · vi · wc · xargs






Shell programming

alias · basename · dirname · echo · expr · false · printf · test · true · unset






Networking

inetd · netstat · ping · rlogin · netcat · traceroute






Searching

find · grep · strings






Miscellaneous

banner · bc · cal · clear · date · dd · lp · man · size · tee · tput · yes · umask









Retrieved from "http://en.wikipedia.org/wiki/Chmod"
Categories: Operating system security | Standard Unix programs | Unix softwareHidden categories: Articles lacking in-text citations 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Asturianu
Català
Česky
Deutsch
Español
Euskara
Français
한국어
Italiano
日本語
Polski
Português
Русский
Slovenščina
Suomi
Svenska
Українська









 This page was last modified on 20 March 2009, at 06:12.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
