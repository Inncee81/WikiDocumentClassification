













Doctrine (PHP) - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Doctrine_(PHP)";
		var wgTitle = "Doctrine (PHP)";
		var wgAction = "view";
		var wgArticleId = "16059445";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 286500216;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Doctrine (PHP)

From Wikipedia, the free encyclopedia

Jump to: navigation, search 

Doctrine




Latest release
1.1.0 / 2009-03-16; 42 days ago


Written in
PHP


Operating system
Cross-platform


Type
Object-relational mapping framework


License
GNU Lesser General Public License


Website
www.doctrine-project.org


Doctrine or phpDoctrine is an object-relational mapper (ORM) for PHP 5.2.3+ that sits on top of a database abstraction layer. It allows easy access to all types of databases, such as MySQL, through the use of PHP objects.




Contents


1 Usage demonstration
2 Features
3 History
4 Influences
5 Community
6 See also
7 References
8 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Usage demonstration
Doctrine follows the active record pattern for working with data, where a class corresponds with a database table. For instance, if a programmer wanted to create a new "User" object in a database, he/she would no longer need to write SQL queries, but instead could use the following PHP code:

$user = new User();
$user->name = "john";
$user->password = "doe";
$user->save();
echo "The user with id $user->id has been saved.";

Object-related functionality can be added to the objects themselves, instead of being spread around the application. This can improve the ease of maintenance of the software project.

[edit] Features




Overview of Doctrine


A praised feature of Doctrine[who?] is the low level of configuration that is needed to start a project. Doctrine can generate object classes from an existing database, and the programmer can then specify relations and add custom functionality to the generated classes. There is no need to generate or maintain complex XML database schemas, as seen in many other frameworks.[citation needed]
Another key feature of Doctrine is the ability to optionally write database queries in an OO (object oriented) SQL dialect called DQL (Doctrine Query Language) inspired by Hibernate's HQL. Alternately, the Doctrine_Query class allows one to construct queries through a fluent interface. These interfaces provide developers with powerful alternatives to SQL which maintain flexibility and still allow for switching of database back-ends, without requiring any code duplication.
Writing queries explicitly however is not always necessary, as Doctrine performs joins and fetches related objects automatically. Small projects can be easily constructed without writing queries.
Other notable features of Doctrine are:

support for hierarchical (tree-structured) data;
support for hooks (methods which can validate or modify database input and output) and event listeners to structure business-related logic;
column aggregation inheritance (similar objects can be stored in one database table, with one type-column specifying the subtype of the particular object - the correct subclass is always returned when a query is done);
a caching framework, making use of several backends such as memcached, SQLite or APC;
ACID transactions;
model behaviors (sluggable, timestampable, nested set, internationalization, audit log, search index);
database migrations;
a "compile" function to combine many PHP files of the framework into one, to avoid the performance hit usually incurred by including the many PHP files of a framework.


[edit] History
Doctrine was started by Konsta Vesterinen, also known as zYne-. It was April 13 2006 when the first commit was made in the svn repository[1]. As the project became more mature, the adoption began to pick up. Before long, the community was active and development was receiving regular contributions, among others from the Google Summer of Code project.
Doctrine 1.0.0 was released on September 1, 2008. [2]

[edit] Influences
Doctrine has been influenced by dozens of projects and many different people. The largest influences have been the Java ORM Hibernate and ActiveRecord from Ruby on Rails. Both of these ORM solutions have implemented a fully featured solution in the Java and Ruby languages. The purpose of the Doctrine project is to build an equally powerful solution for the PHP language.

[edit] Community

There is an active IRC channel where users and developers of Doctrine hang out. The channel is on the freenode network (irc.freenode.net); the channel name is #doctrine.
User mailing list: http://groups.google.com/group/doctrine-user
Development mailing list: http://groups.google.com/group/doctrine-dev
Commit log mailing list: http://groups.google.com/group/doctrine-svn


[edit] See also

Propel (PHP)
List of object-relational mapping software
Symfony, a web application framework which optionally uses Doctrine


[edit] References


^ http://trac.phpdoctrine.org/browser?rev=1
^ Doctrine 1.0.0 released



[edit] External links

Doctrine homepage: http://www.phpdoctrine.org/
Documentation: http://www.phpdoctrine.org/documentation
"My First Project" tutorial: http://www.doctrine-project.org/documentation/cookbook/1_1/en/my-first-project
Trac: http://trac.phpdoctrine.org/
About: http://www.phpdoctrine.org/about
Download: http://www.phpdoctrine.org/download
Community: http://www.phpdoctrine.org/community
Blog: http://www.phpdoctrine.org/blog




Retrieved from "http://en.wikipedia.org/wiki/Doctrine_(PHP)"
Categories: PHP programming language | PHP librariesHidden categories: All pages needing cleanup | Articles with specifically-marked weasel-worded phrases since March 2009 | All articles with unsourced statements | Articles with unsourced statements since March 2009 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Polski
Русский









 This page was last modified on 27 April 2009, at 19:52 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
