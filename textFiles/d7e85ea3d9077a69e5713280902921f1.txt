













Use case diagram - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Use_case_diagram";
		var wgTitle = "Use case diagram";
		var wgAction = "view";
		var wgArticleId = "4495923";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281317758;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Use case diagram

From Wikipedia, the free encyclopedia

Jump to: navigation, search 




UML Use Cases for a Simple Restaurant Model


In software engineering, a use case diagram in the Unified Modeling Language (UML) is a type of behavioural diagram defined by and created from a Use-case analysis. Its purpose is to present a graphical overview of the functionality provided by a system in terms of actors, their goals (represented as use cases), and any dependencies between those use cases.
The main purpose of a use case diagram is to show what system functions are performed for which actors. Roles of the actors in the system can be depicted.




Contents


1 Overview
2 Diagram building blocks

2.1 Actor Generalization
2.2 Use Case Relationships

2.2.1 Include
2.2.2 Extend
2.2.3 Generalization




3 References
4 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Overview
Use Case diagrams are formally included in two modeling languages defined by the OMG. Both the UML and SysML standards define a graphical notation for modeling use cases with diagrams. One complaint about the standards has been that they do not define a format for describing these use cases. Generally, both graphical notation and descriptions are important as they document the use case, showing the purpose for which an actor uses a system.
The use case diagram shows the position or context of the use case among other use cases. As an organizing mechanism, a set of consistent, coherent use cases promotes a useful picture of system behavior, a common understanding between the customer/owner/user and the development team.
This diagram describes the functionality of a simple Restaurant System. Use cases are represented by ovals and the actors are represented by stick figures. The Patron actor can Order Food (and optionally Order Wine), Eat Food (and optionally Drink Wine), Pay for Food. Multiple actors participate in some of the use cases. In such cases, the label on the association between the actor and the use case throws some light on the actor's contribution to the use case. The box defines the boundaries of the Restaurant System, i.e., the use cases shown are part of the system being modeled, the actors are not.

[edit] Diagram building blocks




Actor inheritance






Use case relationships


Interaction among actors is not shown on the use case diagram. If this interaction is essential to a coherent description of the desired behavior, perhaps the system or use case boundaries should be re-examined. Alternatively, interaction among actors can be part of the assumptions used in the use case.

[edit] Actor Generalization
One popular relationship between Actors is Generalization/Specialization. This is useful in defining overlapping roles between actors. The notation is a solid line ending in a hollow triangle drawn from the specialized to the more general actor. [1][2][3]

[edit] Use Case Relationships
Three relationships among use cases are used often in practice.

[edit] Include
In one form of interaction, a given use case may include another. "Include is a DirectedRelationship between two use cases, implying that the behavior of the included use case is inserted into the behavior of the including use case"[1].
The first use case often depends on the outcome of the included use case. This is useful for extracting truly common behaviors from multiple use cases into a single description. The notation is a dashed arrow from the including to the included use case, with the label "«include»". This usage resembles a macro expansion where the included use case behavior is placed inline in the base use case behavior. There are no parameters or return values. To specify the location in a flow of events in which the base use case includes the behavior of another, you simply write include followed by the name of use case you want to include, as in the following flow for track order.

[edit] Extend
In another form of interaction, a given use case (the extension) may extend another. This relationship indicates that the behavior of the extension use case may be inserted in the extended use case under some conditions[1]. The notation is a dashed arrow from the extension to the extended use case, with the label "«extend»". Notes or constraints may be associated with this relationship to illustrate the conditions under which this behaviour will be executed.
Modelers use the «extend» relationship to indicate use cases that are "optional" to the base use case. Depending on the modeler's approach "optional" may mean "potentially not executed with the base use case" or it may mean "not required to achieve the base use case goal."

[edit] Generalization
In the third form of relationship among use cases, a generalization/specialization relationship exists. A given use case may be a specialized form of an existing use case. The notation is a solid line ending in a hollow triangle drawn from the specialized to the more general use case. This resembles the object-oriented concept of sub-classing, in practice it can be both useful and effective to factor out common behaviors, constraints and assumptions to the general use case, describe them once, and deal with it in the same way, except for the details in the specialised cases.

[edit] References


^ a b c OMG (2008). OMG Unified Modeling Language (OMG UML), Superstructure, V2.1.2 p.585-603.
^ Problems and Deficiencies of UML as a Requirements Specification, s.3.2.
^ Introduction to UML 2 Use Case Diagrams







This article needs additional citations for verification. Please help improve this article by adding reliable references (ideally, using inline citations). Unsourced material may be challenged and removed. (February 2009)



[edit] External links



Wikimedia Commons has media related to: Use Case diagrams 



Creating Use Case Diagrams shows a common mistake about use case extension
Introduction to Use Cases & Use Case Diagrams
UML Use Case Diagrams: Tips
UML Use Case Example: how to get from problem to diagram
The Expressive Power of Use Case Diagrams, illustrations from the real world








v • d • e

Unified Modeling Language





Actors

Organizations: Object Management Group • UML Partners • Persons: Grady Booch • Ivar Jacobson • James Rumbaugh






Concepts

Object oriented: Object-oriented programming • Object-oriented analysis and design
Structure: Actor • Attribute • Artifact • Class • Component • Interface • Object • Package
Behavior: Activity • Event • Message • Method • State • Use case
Relationships: Aggregation • Association • Composition • Dependency • Generalization (or Inheritance)
Extensibility: Profile • Stereotype • Other concepts: Multiplicity






Structure diagrams

Class diagram • Component diagram • Composite structure diagram • Deployment diagram • Object diagram • Package diagram






Behavior diagrams

Activity diagram • State Machine diagram • Use case diagram






Interaction diagrams

Communication diagram • Sequence diagram • Interaction overview diagram • Timing diagram






Other topics

Glossary of UML terms • IBM Rational Unified Process • List of UML tools • Systems Modeling Language • UML colors • XMI









Retrieved from "http://en.wikipedia.org/wiki/Use_case_diagram"
Categories: UML diagrams | SysMLHidden categories: Articles needing additional references from February 2009 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Български
Deutsch
Español
Français
Italiano
Lietuvių
Nederlands
日本語
Polski
Português
Slovenčina
Türkçe
Українська









 This page was last modified on 2 April 2009, at 16:43.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
