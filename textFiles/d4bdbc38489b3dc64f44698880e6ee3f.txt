













Croquet Project - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Croquet_Project";
		var wgTitle = "Croquet Project";
		var wgAction = "view";
		var wgArticleId = "1474975";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 283372731;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Croquet Project

From Wikipedia, the free encyclopedia

Jump to: navigation, search 

Croquet Project

Paradigm
Object-oriented


Appeared in
2007


Designed by
Alan Kay, Julian Lombardi, Mark P. McCahill, Andreas Raab, David P. Reed, and David A. Smith


OS
Cross-platform


License
MIT License


Website
http://croquetconsortium.org


The Croquet Project was an international effort to promote the continued development of the Croquet open source software development kit, for creating and delivering deeply collaborative multi-user online applications. Implemented in Squeak Smalltalk, Croquet supports communication, collaboration, resource sharing, and synchronous computation among multiple users. Applications created with the Croquet Software Developer's Kit (SDK) can be used to support highly scalable collaborative data visualization, virtual learning and problem solving environments, 3D wikis, online gaming environments (MMORPGs), and privately maintained/interconnected multiuser virtual environments. Since release of the Croquet SDK in 2007, the SDK has not been under active development. All continued development of the technology has taken place under the very active Open Cobalt effort.




Contents


1 Technical functionality
2 Virtual machine

2.1 Synchronization architecture


3 Open Cobalt
4 History
5 Unique aspects
6 References
7 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Technical functionality




Real time, interactive, 3D map of this very same world. Change something in the world, the map changes. Move something in the map (as one would a chess piece), the object in the world represented by it moves the same way.


The Croquet technologies are made available by the Croquet Consortium in the form of a software developer's toolkit (SDK) that can be used to develop deeply collaborative virtual world applications. Applications created using the Croquet SDK are automatically collaborative since application objects in Croquet share a common protocol that allows them to cooperate with each other. Croquet does this by employing the principle of replicated computation (synchronization) together with a peer-based messaging protocol that makes it possible to coordinate the activities of users within virtual worlds without the requirement of maintaining central server resources.
Croquet uses object-oriented semantics based on active objects that have the capability of temporal reflection. That is, each object is aware and in direct control of its behavior in time. Croquet also directly supports replication of computation, allowing computation to be moved close to the point of interaction on demand, while maintaining a consistent view of behaviors that can scale to include thousands of nodes. Consequently, Croquet is defined so that replication of computations is just as easy as replication of data. The overall effect is to greatly reduce the overhead required for widespread deployment of collaborative virtual worlds. This efficiency, combined with the ability to deploy Croquet worlds on consumer-level hardware, makes it possible to deploy large-scale and highly-participatory collaborative worlds at very low cost compared with virtual world technologies that are entirely dependent on server-based infrastructures to support the activities of their users.

[edit] Virtual machine




Adding 3D Notes linked to 3D Objects & Places


Croquet’s virtual machine (VM) runs bit identically on multiple platforms and it supports a number of capabilities that could only be provided by a true late bound, message sending language. Croquet’s relationship to Squeak gives Croquet the property of a purely object-oriented system allowing for significant flexibility in the design and the nature of the protocols and architectures that have been developed for the system. Because of this, Croquet has the ability to keep running while testing, and especially while changes are made – an essential part of the Croquet collaborative development capability. Programmers can therefore modify the code running the environment while the environment is running.




Croquet allows the user to edit the source code of the 3D world from within the world, and immediately see the result while the world is still running. The running program does not have to be ended, and there is no compile-link-run-debug development loop. Any part of the program may be edited, down to the VM & OpenGL calls.



[edit] Synchronization architecture
Croquet's time-based synchronization capabilities enable real-time, identical interactions between groups of users while dramatically reducing the need for server infrastructures to support virtual world deployment. Croquet's architecture makes it easy to develop deeply collaborative applications without having to spend a lot of effort and expertise in understanding how replicated applications work.
TeaTime is a scalable real-time multi-user architecture that is the basis for Croquet's object-object communication and synchronization. It is designed to support multi-user applications that can be scaled to massive numbers of concurrently interacting users in a shared virtual space. The most directly visible part of this architecture is the TObject class which is used to define and construct subclassed Tea objects. All of the interesting objects inside of Croquet are constructed from subclasses of TObject.
A Tea object acts with the property that messages sent to it are redirected to replicated copies of itself on other users' participating machines in a peer-to-peer network. This messaging protocol supports a coordinated distributed two-phase commit that is used to control the progression of computations at participating user sites. In this way messages may be dynamically redirected to large numbers of users while maintaining the appropriate deadline-based scheduling. Thus, TeaTime is designed to allow for a great deal of adaptability and resilience and works on a heterogeneous set of resources. It is a framework of abstraction that works over a range of implementations and that can be evolved and tuned over time, both within an application and across applications.
Key elements of the TeaTime synchronization architecture include:

A coordinated universal timebase embedded in communication protocol
Replicated, versioned objects that unify replicated computation and distribution of results
Replication strategies that separate the mechanisms of replication from the behavioral semantics of objects
Deadline-based scheduling extended with failure and nesting
Coordinated, distributed two-phase commit that is used to control the progress of computations at multiple sites, to provide resilience, deterministic results, and adaptation to available resources
Uses distributed sets


[edit] Open Cobalt
Open Cobalt is a multi-institutional community software development effort to deploy an open source production-grade metaverse browser/toolkit application built using the Croquet SDK. The Open Cobalt application is made available under the Croquet license.




Croquet Avatar with Wireframe Portal, eToy, & Mirror



[edit] History
Croquet is the confluence of several independent lines of work that were being carried out by its six principal architects, Alan Kay, David A. Smith. David P. Reed, Andreas Raab, Julian Lombardi, and Mark McCahill. The present identity of the project has its origins in a conversation between Smith and Kay in 1990, where both expressed their frustration with the state of operating systems at the time.
In 1994 Smith built ICE, a working prototype of a two user collaborative system that was a predecessor of the core of what Croquet is today. Also in 1994 Mark McCahill's team at the University of Minnesota developed GopherVR, a 3D user interface to Internet Gopher to explore how spatial metaphors could be used to organize information and create social spaces. In 1996 Julian Lombardi approached Smith to explore the development of highly extensible collaborative interfaces to the WWW. Later, in 1999, Smith built a system called OpenSpace, which was an early-bound variant of Croquet. Also in 1999, Lombardi began working with Smith on prototype implementations of highly extensible collaborative online environments based on OpenSpace. One of these implementations was a prototype implementation of ViOS, a way of spatially organizing all Internet-deliverable resources (including web pages) into a massively-scaled multiuser 3D environment.
Smith and Kay officially started the Croquet Project in late 2001 and were immediately joined by David Reed and Andreas Raab. Reed brought to the project his longstanding work on massively scalable peer-to-peer messaging architectures in a form deriving from his doctoral dissertation that was published in 1978. The first working Croquet code was developed in January 2002. Simultaneously and independently, Lombardi and McCahill began collaborating on defining and implementing highly scalable and enterprise-integrated architectures for multi-user collaboration and were invited by Kay to join the core architectural group in 2003.
From 2003-2006 the technology was developed under the leadership of its six principal architects with financial support from Hewlett-Packard, Viewpoints Research Institute Inc., The University of Wisconsin-Madison, The University of Minnesota, the Japanese National Institute of Communication Technology (NICT) and private individuals. On April 18, 2006 the project released a beta version of the Croquet SDK 1.0 in the open source. Since then, the Croquet technology infrastructure has been successfully used by private industry to build and to deploy commercial-grade closed source collaborative applications. Open source production-grade software implementations for delivering secure, interactive, persistent, virtual workspaces for education and training have at the same time been developed and deployed at the University of Minnesota, the University of Wisconsin-Madison, The University of British Columbia, and Duke University.
Today, all active development of open source Croquet technology is taking place through the Open Cobalt project.




Multi-user, multi-lingual text editing in 3D






Croquet Spreadsheet



[edit] Unique aspects

It is platform and device independent
Users/developers may freely share, modify and view the source code of the entire system (due to Croquet's liberal license)
The technology is not hosted on a single organization’s server (and hence not governed by any such organization)
It provides a complete professional programmer’s language (Smalltalk/Squeak), IDE, and class library in every distributed, running participant’s copy (the programming development environment itself is simultaneously shareable and extensible)
Croquet based worlds can also be updated while the system is live and running.


[edit] References

Introductory paper describing Croquet by David Smith and Alan Kay
C5 Conference and related papers
David P. Reed's papers


[edit] External links

Croquet Consortium Website
Interview with Julian Lombardi at The Coalition for Networked Information's 2007 Fall Task Force Meeting.
Video by David Smith & Alan Kay done for a talk at Stanford (2003)
Video done for the O'Reilly etech by David Smith & Alan Kay (broken up into nice bite-size chunks, also includes Alan's full Squeak demo)
Croqueteers The unofficial Croquet open wiki




Retrieved from "http://en.wikipedia.org/wiki/Croquet_Project"
Categories: Distributed computing | Groupware | Information technology management | Virtual reality communities | 3D Scenegraph APIs 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Ελληνικά
Slovenčina









 This page was last modified on 12 April 2009, at 15:19 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
