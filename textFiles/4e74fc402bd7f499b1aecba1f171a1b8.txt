













MATLAB - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "MATLAB";
		var wgTitle = "MATLAB";
		var wgAction = "view";
		var wgArticleId = "20412";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 282268971;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
/*<![CDATA[*/
.source-matlab {line-height: normal;}
.source-matlab li, .source-matlab pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for matlab
 * CSS class: source-matlab, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-matlab .de1, .source-matlab .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-matlab  {}
.source-matlab .head {}
.source-matlab .foot {}
.source-matlab .imp {font-weight: bold; color: red;}
.source-matlab .ln-xtra {color: #cc0; background-color: #ffc;}
.source-matlab li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-matlab li.li2 {font-weight: bold;}
.source-matlab .kw1 {color: #0000FF;}
.source-matlab .kw2 {color: #0000FF;}
.source-matlab .co1 {color: #228B22;}
.source-matlab .es0 {}
.source-matlab .br0 {color: #080;}
.source-matlab .nu0 {color: #33f;}
.source-matlab .me1 {}
.source-matlab .me2 {}
.source-matlab .sc0 {}
.source-matlab .re0 {color:#A020F0;}

/*]]>*/

/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
 <!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); MATLAB

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
For the subdistrict in Chandpur District, Bangladesh, see Matlab Upazila.  For the computer algebra system, see MATHLAB.

MATLAB





MATLAB R2008a running on Ubuntu Linux 7.10 to train and test a support vector machine via calling a C program SVM Light.


Developed by
The MathWorks


Latest release
R2009a / 2009-03-06; 32 days ago


Written in
C


Operating system
Cross-platform[1]


Type
Technical computing


License
Proprietary


Website
MATLAB product page



M-code

Paradigm
imperative


Appeared in
late 1970s


Designed by
Cleve Moler


Developer
The MathWorks


Typing discipline
dynamic


OS
Cross-platform


MATLAB is a numerical computing environment and programming language. Maintained by The MathWorks, MATLAB allows easy matrix manipulation, plotting of functions and data, implementation of algorithms, creation of user interfaces, and interfacing with programs in other languages. Although it is numeric only, an optional toolbox uses the MuPAD symbolic engine, allowing access to computer algebra capabilities. An additional package, Simulink, adds graphical multidomain simulation and Model-Based Design for dynamic and embedded systems.
In 2004, MathWorks claimed that MATLAB was used by more than one million people across industry and the academic world.[2]




Contents


1 History
2 Syntax

2.1 Variables
2.2 Vectors/Matrices
2.3 Semicolon
2.4 Graphics


3 Limitations
4 Interactions with other languages

4.1 Calling C and Fortran functions
4.2 Interactions with Java and ActiveX
4.3 Interactions with other Mathematics Software Packages


5 Alternatives
6 Release history
7 See also
8 References
9 Further reading
10 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] History
MATLAB (meaning "matrix laboratory") was invented in the late 1970s by Cleve Moler, then chairman of the computer science department at the University of New Mexico.[3] He designed it to give his students access to LINPACK and EISPACK without having to learn Fortran. It soon spread to other universities and found a strong audience within the applied mathematics community. Jack Little, an engineer, was exposed to it during a visit Moler made to Stanford University in 1983. Recognizing its commercial potential, he joined with Moler and Steve Bangert. They rewrote MATLAB in C and founded The MathWorks in 1984 to continue its development. These rewritten libraries were known as JACKPAC. In 2000, MATLAB was rewritten to use a newer set of libraries for matrix manipulation, LAPACK[4].
MATLAB was first adopted by control design engineers, Little's specialty, but quickly spread to many other domains. It is now also used in education, in particular the teaching of linear algebra and numerical analysis, and is popular amongst scientists involved with image processing.[3]

[edit] Syntax





This article is written like a manual or guidebook. Please help rewrite this article from a neutral point of view. Mark blatant copyright violations for speedy deletion, using {{db-copyvio}}.(October 2008)


MATLAB is built around the MATLAB language, sometimes called M-code or simply M. The simplest way to execute M-code is to type it in at the prompt, >> , in the Command Window, one of the elements of the MATLAB Desktop. In this way, MATLAB can be used as an interactive mathematical shell. Sequences of commands can be saved in a text file, typically using the MATLAB Editor, as a script or encapsulated into a function, extending the commands available.[5]

[edit] Variables
Variables are defined with the assignment operator, =. MATLAB is dynamically typed, meaning that variables can be assigned without declaring their type, except if they are to be treated as symbolic objects[6], and that their type can change. Values can come from constants, from computation involving values of other variables, or from the output of a function. For example:


>> x = 17
x =
 17
>> x = 'hat'
x =
hat
>> x = [3*4, pi/2]
x =
   12.0000    1.5708
>> y = 3*sin(x)
y =
   -1.6097    3.0000


[edit] Vectors/Matrices
MATLAB is a "Matrix Laboratory", and as such it provides many convenient ways for creating vectors, matrices, and multi-dimensional arrays. In the MATLAB vernacular, a vector refers to a one dimensional (1×N or N×1) matrix, commonly referred to as an array in other programming languages. A matrix generally refers to a 2-dimensional array, i.e. an m×n array where m and n are greater than 1. Arrays with more than two dimensions are referred to as multidimensional arrays.
MATLAB provides a simple way to define simple arrays using the syntax: init:increment:terminator. For instance:


>> array = 1:2:9
array =
 1 3 5 7 9

defines a variable named array (or assigns a new value to an existing variable with the name array) which is an array consisting of the values 1, 3, 5, 7, and 9. That is, the array starts at 1 (the init value), increments with each step from the previous value by 2 (the increment value), and stops once it reaches (or to avoid exceeding) 9 (the terminator value).


>> array = 1:3:9
array =
 1 4 7

the increment value can actually be left out of this syntax (along with one of the colons), to use a default value of 1.


>> ari = 1:5
ari =
 1 2 3 4 5

assigns to the variable named ari an array with the values 1, 2, 3, 4, and 5, since the default value of 1 is used as the incrementer.
Indexing is one-based[7], which is the usual convention for matrices in mathematics. This is atypical for programming languages, whose arrays more often start with zero.
Matrices can be defined by separating the elements of a row with blank space or comma and using a semicolon to terminate each row. The list of elements should be surrounded by square brackets: []. Parentheses: () are used to access elements and subarrays (they are also used to denote a function argument list).


>> A = [16 3 2 13; 5 10 11 8; 9 6 7 12; 4 15 14 1]
A =
 16  3  2 13
  5 10 11  8
  9  6  7 12
  4 15 14  1
 
>> A(2,3)
ans =
 11

Sets of indices can be specified by expressions such as "2:4", which evaluates to [2, 3, 4]. For example, a submatrix taken from rows 2 through 4 and columns 3 through 4 can be written as:


>> A(2:4,3:4)
ans =
 11 8
 7 12
 14 1

A square identity matrix of size n can be generated using the function eye, and matrices of any size with zeros or ones can be generated with the functions zeros and ones, respectively.


>> eye(3)
ans =
 1 0 0
 0 1 0
 0 0 1
>> zeros(2,3)
ans =
 0 0 0
 0 0 0
>> ones(2,3)
ans =
 1 1 1
 1 1 1

Most MATLAB functions can accept matrices and will apply themselves to each element. For example, mod(2*J,n) will multiply every element in "J" by 2, and then reduce each element modulo "n". MATLAB does include standard "for" and "while" loops, but using MATLAB's vectorized notation often produces code that is easier to read and faster to execute. This code, excerpted from the function magic.m, creates a magic square M for odd values of n (MATLAB function meshgrid is used here to generate square matrices I and J containing 1:n).


[J,I] = meshgrid(1:n);
A = mod(I+J-(n+3)/2,n);
B = mod(I+2*J-2,n);
M = n*A + B + 1;


[edit] Semicolon
Unlike many other languages, where the semicolon is used to terminate commands, in MATLAB the semicolon serves to suppress the output of the line that it concludes. That is to say: if a statement is not terminated with a semicolon, then the result of the statement is displayed. A statement that does not explicitly return a result, for instance 'clc', will behave the same whether or not a semicolon is included.[8]
Additionally, a semicolon may be used within a vector or matrix declaration in order to separate rows (as opposed to a comma which separates columns within the same row). For example, a row vector will be declared as r = [1,2,3]. On the other hand a column vector will be c = [1;2;3].

[edit] Graphics
Function plot can be used to produce a graph from two vectors x and y. The code:


x = 0:pi/100:2*pi;
y = sin(x);
plot(x,y)

produces the following figure of the sine function:

Three-dimensional graphics can be produced using the functions surf, plot3 or mesh.





[X,Y] = meshgrid(-10:0.25:10,-10:0.25:10);
f = sinc(sqrt((X/pi).^2+(Y/pi).^2));
mesh(X,Y,f);
axis([-10 10 -10 10 -0.3 1])
xlabel('{\bfx}')
ylabel('{\bfy}')
zlabel('{\bfsinc} ({\bfR})')
hidden off


   



[X,Y] = meshgrid(-10:0.25:10,-10:0.25:10);
f = sinc(sqrt((X/pi).^2+(Y/pi).^2));
surf(X,Y,f);
axis([-10 10 -10 10 -0.3 1])
xlabel('{\bfx}')
ylabel('{\bfy}')
zlabel('{\bfsinc} ({\bfR})')




This code produces a wireframe 3D plot of the two-dimensional unnormalized sinc function:
   
This code produces a surface 3D plot of the two-dimensional unnormalized sinc function:



   




[edit] Limitations
For a long time there was criticism that because MATLAB is a proprietary product of The MathWorks, users are subject to vendor lock-in.[9][10] Recently an additional tool called the MATLAB Builder under the Application Deployment tools section has been provided to deploy MATLAB functions as library files which can be used with .NET or Java application building environment. But the drawback is that the computer where the application has to be deployed needs MCR (MATLAB Component Runtime) for the MATLAB files to function normally. MCR can be distributed freely with library files generated by the MATLAB compiler.
MATLAB, like Fortran, Visual Basic and Ada, uses parentheses, e.g. y = f(x), for both indexing into an array and calling a function. Although this syntax can facilitate a switch between a procedure and a lookup table, both of which correspond to mathematical functions, a careful reading of the code may be required to establish the intent.
MATLAB lacks a package system, like those found in modern languages such as Java and Python, where classes can be resolved unambiguously, e.g. Java's java.lang.System.out.println(). In MATLAB, all functions share the global namespace, and precedence of functions with the same name is determined by the order in which they appear in the user's MATLAB path and other subtle rules.[11] As such, two users may experience different results when executing what otherwise appears to be the same code when their paths are different.
Many functions have a different behavior with matrix and vector arguments. Since vectors are matrices of one row or one column, this can give unexpected results. For instance, function sum(A) where A is a matrix gives a row vector containing the sum of each column of A, and sum(v) where v is a column or row vector gives the sum of its elements; hence the programmer must be careful if the matrix argument of sum can degenerate into a single-row array.[12] While sum and many similar functions accept an optional argument to specify a direction, others, like plot,[13] do not, and require additional checks. There are other cases where MATLAB's interpretation of code may not be consistently what the user intended[citation needed] (e.g. how spaces are handled inside brackets as separators where it makes sense but not where it doesn't, or backslash escape sequences which are interpreted by some functions like fprintf but not directly by the language parser because it wouldn't be convenient for Windows directories). What might be considered as a convenience for commands typed interactively where the user can check that MATLAB does what the user wants may be less supportive of the need to construct reusable code.[citation needed]
Array indexing is one-based which is the common convention for matrices in mathematics, but does not accommodate any indexing convention of sequences that have zero or negative indices. For instance, in MATLAB the DFT (or FFT) is defined with the DC component at index 1 instead of index 0, which is not consistent with the standard definition of the DFT in any literature. This one-based indexing convention is hard coded into MATLAB, making it difficult for a user to define their own zero-based or negative indexed arrays to concisely model an idea having non-positive indices.
M-code written for a specific release of MATLAB often does not run with earlier releases as it may use some of the newer features. To give just one example: save('x','filename') saves the variable x in a file. The variable can be loaded with load('filename') in the same MATLAB release. However, if saved with MATLAB version 7 or later, it cannot be loaded with MATLAB version 6 or earlier. As workaround, in MATLAB version 7 save('x','filename','-v6') generates a file that can be read with version 6. However, executing save('x','filename','-v6') in version 6 causes an error message.

[edit] Interactions with other languages

[edit] Calling C and Fortran functions
MATLAB can call functions and subroutines written in C programming language or Fortran. A wrapper function is created allowing MATLAB data types to be passed and returned. The dynamically loadable object files created by compiling such functions are termed "MEX-files", although the file name extension depends on the operating system and processor. [14][15]

[edit] Interactions with Java and ActiveX
Libraries written in Java or ActiveX can be directly called from MATLAB and many MATLAB libraries (for example XML or SQL support) are implemented as wrappers around Java or ActiveX libraries. Calling MATLAB from Java is more complicated, but can be done with MATLAB extension[16], which is sold separately by MathWorks.

[edit] Interactions with other Mathematics Software Packages
Through the MATLAB Toolbox for Maple, MATLAB commands can be called from within the Maple Computer Algebra System, and vice versa.

[edit] Alternatives
Matlab has a number of competitors in the field of numerical analysis software. Two examples are GNU Octave and FreeMat which are Open Source alternatives intended to provide, at least limited, compatibility with the Matlab language. A more complete list of Matlab's competitors, both open source and commercial, can be found at the Wikipedia list of numerical analysis software and comparison of numerical analysis software.

[edit] Release history


version[17]
release name
Year


MATLAB 1.0
R?
1984


MATLAB 2
R?
1986


MATLAB 3
R?
1987


MATLAB 3.5
R?
1990


MATLAB 4
R?
1992


MATLAB 4.2c
R7
1994


MATLAB 5.0
R8
1996


MATLAB 5.1
R9
1997


MATLAB 5.1.1
R9.1


MATLAB 5.2
R10
1998


MATLAB 5.2.1
R10.1


MATLAB 5.3
R11
1999


MATLAB 5.3.1
R11.1


MATLAB 6.0
R12
2000


MATLAB 6.1
R12.1
2001


MATLAB 6.5
R13
2002


MATLAB 6.5.1
R13SP1
2003


MATLAB 6.5.2
R13SP2


MATLAB 7
R14
2004


MATLAB 7.0.1
R14SP1


MATLAB 7.0.4
R14SP2
2005


MATLAB 7.1
R14SP3


MATLAB 7.2
R2006a
2006


MATLAB 7.3
R2006b


MATLAB 7.4
R2007a
2007


MATLAB 7.5
R2007b


MATLAB 7.6
R2008a
2008


MATLAB 7.7
R2008b


MATLAB 7.8
R2009a
2009



[edit] See also

P-code machine


[edit] References


^ The MathWorks - MATLAB - Requirements
^ Richard Goering, "Matlab edges closer to electronic design automation world," EE Times, 10/04/2004
^ a b Cleve Moler, the creator of MATLAB (December 2004). "The Origins of MATLAB". http://www.mathworks.com/company/newsletters/news_notes/clevescorner/dec04.html. Retrieved on April 15 2007 {{{accessyear}}}. 
^ Note from Cleve Moler in a Mathworks newsletter Cleve Moler, the creator of MATLAB (2000). "MATLAB Incorporates LAPACK". http://www.mathworks.com/company/newsletters/news_notes/clevescorner/winter2000.cleve.html. Retrieved on December 20 2008 {{{accessyear}}}. 
^ MATLAB technical documentation
^ sym function Documentation for the MATLAB Symbolic Toolbox
^ MATLAB
^ The MathWorks, MATLAB Function Reference, accessed 12 October 2006.
^ Jan Stafford, "The Wrong Choice: Locked in by license restrictions," SearchOpenSource.com, 21 May 2003
^ Richard Goering, "Matlab edges closer to electronic design automation world," EE Times, 10/04/2004
^ MATLAB Path - Precedence Rules
^ MATLAB Function Reference - SUM
^ plot :: Functions (MATLAB Function Reference)
^ "MATLAB external interface guide". http://www.mathworks.com/access/helpdesk/help/techdoc/matlab_external/bp_kqh7.html. 
^ Spielman, Dan (2004-02-10). "Connecting C and Matlab". Yale University, Computer Science Department. http://www.cs.yale.edu/homes/spielman/ECC/cMatlab.html. Retrieved on 2008-05-20 {{{accessyear}}}. 
^ MathWorks: MATLAB Builder JA
^ Cleve Moler (January 2006). "The Growth of MATLAB and The MathWorks over Two Decades" (PDF). http://www.mathworks.com/company/newsletters/news_notes/clevescorner/jan06.pdf. Retrieved on August 18 2008 {{{accessyear}}}. 



[edit] Further reading

Gilat, Amos (2004). MATLAB: An Introduction with Applications 2nd Edition. John Wiley & Sons. ISBN 978-0-471-69420-5. 
Quarteroni, Alfio; Fausto Saleri (2006). Scientific Computing with MATLAB and Octave. Springer. ISBN 978-3-540-32612-0. 


[edit] External links



The Wikibook Programming has a page on the topic of
MATLAB




MATLAB overview, at The MathWorks website
MATLAB at the Open Directory Project
Information about the history of and inspiration for MATLAB, written by Cleve Moler
comp.soft-sys.matlab
LiteratePrograms (MATLAB)
Official blogs









v • d • e

Numerical software





Open source

ADMB · FreeMat · GNU Octave · gretl · R · Scilab






Retail

GAUSS · LabVIEW · MATLAB · Mathematica






List of numerical analysis software · Comparison of numerical analysis software








Retrieved from "http://en.wikipedia.org/wiki/MATLAB"
Categories: Data analysis software | Array programming languages | C software | IRIX software | Numerical programming languages | Linux numerical analysis software | Windows software | Plotting software | Proprietary cross-platform softwareHidden categories: Wikipedia articles needing style editing from October 2008 | All articles needing style editing | All articles with unsourced statements | Articles with unsourced statements since April 2008 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


العربية
বাংলা
Bosanski
Català
Česky
Dansk
Deutsch
Español
فارسی
Français
한국어
Hrvatski
Íslenska
Italiano
עברית
Lietuvių
Magyar
Македонски
Bahasa Melayu
Nederlands
日本語
‪Norsk (bokmål)‬
‪Norsk (nynorsk)‬
Polski
Português
Qaraqalpaqsha
Română
Русский
Српски / Srpski
Suomi
Svenska
Tagalog
ไทย
Тоҷикӣ
Türkçe
Українська
اردو
Tiếng Việt
中文









 This page was last modified on 7 April 2009, at 04:08.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
