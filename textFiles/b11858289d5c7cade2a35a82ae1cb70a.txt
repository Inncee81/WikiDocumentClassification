













Function point - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Function_point";
		var wgTitle = "Function point";
		var wgAction = "view";
		var wgArticleId = "4318654";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 282721827;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Function point

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
A function point is a unit of measurement to express the amount of business functionality an information system provides to a user. Function points are the units of measure used by the IFPUG Functional Size Measurement Method. The IFPUG FSM Method is an ISO recognised software metric to size an information system based on the functionality that is perceived by the user of the information system, independent of the technology used to implement the information system. The IFPUG FSM Method (ISO/IEC 20926 SOFTWARE ENGINEERING - FUNCTION POINT COUNTING PRACTICES MANUAL) is one of five currently recognised ISO standards for Functionally sizing software.




Contents


1 Introduction
2 Function point analysis
3 Criticisms of Function Points
4 References
5 See also
6 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Introduction
Function points were defined in 1979 in A New Way of Looking at Tools by Allan Albrecht at IBM.[1] The functional user requirements of the software are identified and each one is categorized into one of five types: outputs, inquiries, inputs, internal files, and external interfaces. Once the function is identified and categorised into a type, it is then assessed for complexity and assigned a number of function points. Each of these functional user requirements map to an end-user business function, such as a data entry for an Input or a user query for an Inquiry. This distinction is important because it tends to make the functions measured in function points map easily into user-oriented requirements, but it also tends to hide internal functions (e.g. algorithms), which also require resources to implement. Over the years there have been different approaches proposed to deal with this perceived weakness, however there is no ISO recognised FSM Method that includes algorithmic complexity in the sizing result. The variations of the Albrecht based IFPUG method designed to make up for this (and other weaknesses) include:

Early and easy function points. Adjusts for problem and data complexity with two questions that yield a somewhat subjective complexity measurement; simplifies measurement by eliminating the need to count data elements.
Engineering function points. Elements (variable names) and operators (e.g., arithmetic, equality/inequality, Boolean) are counted. This variation highlights computational function.[2] The intent is similar to that of the operator/operand-based Halstead measures (see Halstead Complexity Measures).
Bang measure - Defines a function metric based on twelve primitive (simple) counts that affect or show Bang, defined as "the measure of true function to be delivered as perceived by the user."[3] Bang measure may be helpful in evaluating a software unit's value in terms of how much useful function it provides, although there is little evidence in the literature of such application. The use of Bang measure could apply when re-engineering (either complete or piecewise) is being considered, as discussed in Maintenance of Operational Systems--An Overview.
Feature points. Adds changes to improve applicability to systems with significant internal processing (e.g., operating systems, communications systems). This allows accounting for functions not readily perceivable by the user, but essential for proper operation.


[edit] Function point analysis
The method of measuring the size of an information system and expressing it in a number of function points is called function point analysis (FPA). The method is kept up to date by worldwide cooperating FPA user groups like NESMA and IFPUG. A function point analysis expresses the functional size of an information system in a number of function points (for example: the size of a system is 314 FPs). There are many uses and benefits of function points [4] and the functional size may be used as input into many types of project and organization decisions including determining the:

budget for application development or enhancement costs.
budget for the annual maintenance costs of the application portfolio.
project productivity after completion of the project.
Software Size for cost estimating.

Many organizations measure function points to different levels of accuracy [5] depending on the purpose for which the software size will be used.
FPA can also be used to find the testing effort required in the information system; The formula is Number of Test Cases = (Function Points)1.2[6]
Function Points measures systems from a functional perspective - they are independent of any underlying technology. Regardless of language, development method, or hardware platform used, the number of function points for a system will remain constant. The only variable is the amount of effort needed to deliver a given set of function points.
The Functional User Requirements have two types of functions, Data Functions and Transactional Functions. These are categorised into the 5 types measured by the IFPUG and NESMA FSM Method and assigned function points.

Data Functions → Internal Logical Files
Data Functions → External Interface Files
Transaction Functions → External Inputs
Transaction Functions → External Outputs
Transaction Functions → External Inquiries


[edit] Criticisms of Function Points
Function points, and many other software metrics, have been criticized as adding little value relative to the cost and complexity of the effort.[7][8] The effort in computing function points has only a marginal error reduction, in part, because much of the variance in software cost estimates are not considered (such as business changes, scope changes, unplanned resource constraints or reprioritizations, etc.). Also, if the measurement is used for the decision of whether to invest in the software, then a given measurement effort, it is argued, is more valuable if it is applied to measure benefits than costs. Applied information economics, which computes the economic value of such measures, often leads users to spend measurement efforts on other issues.
Some technical criticisms are indicated in Change points: A proposal for software productivity measurement, Journal of Systems Software, Vol. 31, September 1995, by Vernon V. Chatman III. A proposal to 'evolve' function points was published in Crosstalk: The Journal of Defense Software Engineering, February 2001, by Lee Fischman.

[edit] References


^ A. J. Albrecht, “Measuring Application Development Productivity,” Proceedings of the Joint SHARE, GUIDE, and IBM Application Development Symposium, Monterey, California, October 14–17, IBM Corporation (1979), pp. 83–92.
^ Engineering Function Points and Tracking System, Software Technology Support Center, Retrieved on May 14, 2008
^ Function Point Analysis, Carnegie Mellon Software Engineering Institute, Retrieved on May 14, 2008
^ Uses and Benefits of Function Point Counts - Pam Morris Total Metrics - Function Point Resource Centre]
^ Levels of Function Point Counting - Pam Morris Total Metrics - Function Point Resource Centre
^ Estimating Software Costs - T. Capers Jones
^ Douglas Hubbard The IT Measurement Inversion, CIO Magazine, 1999
^ Douglas Hubbard How to Measure Anything: Finding the Value of Intangibles in Business, John Wiley & Sons, 2007



[edit] See also

Source lines of code
COCOMO
Software development effort estimation
Software Sizing
SEER-SEM


[edit] External links

Function Points: A New Way of Looking at Tools
The Netherlands Software Metrics users Association (NESMA)
The International Function Point Users Group (IFPUG)
The Common Software Measurement International Consortium
Function Point Analysis in FOLDOC
COSMIC - ISO 19761




Retrieved from "http://en.wikipedia.org/wiki/Function_point"
Categories: Software metrics | Software engineering costs 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Deutsch
Español
Italiano
日本語
Nederlands
Polski
Português









 This page was last modified on 9 April 2009, at 07:19 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
