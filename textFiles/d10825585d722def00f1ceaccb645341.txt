













David Parnas - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "David_Parnas";
		var wgTitle = "David Parnas";
		var wgAction = "view";
		var wgArticleId = "371410";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 269293190;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); David Parnas

From Wikipedia, the free encyclopedia

Jump to: navigation, search 


David Parnas







Born
10 February 1941 (1941-02-10) (age 68)


Doctoral advisor
Alan Perlis
Everhard Mott Williams


Doctoral students
Richard J. Lipton


David Lorge Parnas (born February 10, 1941) is a Canadian early pioneer of software engineering, who developed the concept of information hiding in modular programming, which is an important element of object-oriented programming today. He is also noted for his advocacy of precise documentation.

[edit] Biography
David earned his Ph.D. at Carnegie Mellon University in electrical engineering. Parnas also earned a professional engineering license in Canada and was one of the first to apply traditional engineering principles to software design.
He worked there as a professor for many years. He also taught at the University of North Carolina at Chapel Hill (U.S.), the Technische Hochschule Darmstadt (Germany), the University of Victoria (British Columbia, Canada), and Queen's University (Ontario, Canada).
In 1991, he then went to McMaster University in Hamilton, Ontario. Between 2002 and 2008, David Parnas worked at the University of Limerick in Limerick, Ireland.
David Parnas received several awards and honors

ACM "Best Paper" Award, 1979
Norbert Wiener Award for Social and Professional Responsibility, 1987
Two "Most Influential Paper" awards International Conference on Software Engineering, 1991 and 1995
Doctor honoris causa of the Computer Science Department, ETH Zurich, Switzerland, 1986
Fellow of the Association for Computing Machinery, 1994
Doctor honoris causa of the Faculté des Sciences Appliquées, Université catholique de Louvain, Belgium, 1996
ACM SIGSOFT's "Outstanding Research" award, 1998
IEEE Computer Society's 60th Anniversary Award, 2007
Fellow of the Institute of Electrical and Electronics Engineers (IEEE), 2009


[edit] Work

[edit] Modular design
In modular design, his double dictum[citation needed] of high cohesion within modules and loose coupling between modules is fundamental to modular design in software. However, in Parnas's seminal 1972 paper On the Criteria to Be Used in Decomposing Systems into Modules, this dictum is expressed in terms of information hiding, and the terms cohesion and coupling are not used.[1]

[edit] Technical activism
Dr. Parnas took a public stand against the US Strategic Defense Initiative (also known as "Star Wars") in the mid 1980s, arguing that it would be impossible to write an application of sufficient quality that it could be trusted to prevent a nuclear attack. He has also been in the forefront of those urging the professionalization of "software engineering" (a term that he characterizes as "an unconsummated marriage"). Dr. Parnas is also a heavy promoter of ethics in the field of software engineering.

[edit] Stance on academic evaluation methods
Dr. Parnas has joined the group of scientists which openly criticize the number-of-publications-based approach towards ranking academic production. On his November 2007 paper Stop the Numbers Game, he elaborates on several reasons on why the current number-based academic evaluation system used in many fields by universities all over the world (be it either oriented to the amount of publications or the amount of quotations each of those get) is flawed and, instead of generating more advance of the sciences, it leads to knowledge stagnation.

[edit] Quotations

...it is almost always incorrect to begin the decomposition of a system into modules on the basis of a flowchart. We propose instead that one begins with a list of difficult design decisions or design decisions which are likely to change. Each module is then designed to hide such a decision from the others.[2]


I would advise students to pay more attention to the fundamental ideas rather than the latest technology. The technology will be out-of-date before they graduate. Fundamental ideas never get out of date. However, what worries me about what I just said is that some people would think of Turing machines and Goedel's theorem as fundamentals. I think those things are fundamental but they are also nearly irrelevant. I think there are fundamental design principles, for example structured programming principles, the good ideas in "Object Oriented" programming, etc.[3]


[edit] See also

Automatic programming


[edit] References


^ . Although Parnas now uses the term "information hiding" to summarize the principle, this term did not appear in the original paper either. "On the Criteria To Be Used in Decomposing Systems into Modules". http://www.cs.umd.edu/class/spring2003/cmsc838p/Design/criteria.pdf. 
^ Communications of the ACM, Volume 15, Issue 12, Pages: 1053-1058, Year: 1972
^ "David Parnas on Software Engineering". http://www.indwes.edu/Faculty/bcupp/lookback/SoftwareEngineering/DavidParnas.Poster.htm. Retrieved on 2007-11-07. 



[edit] Further reading

Hoffman, Daniel M.; Weiss David M. (Eds.): Software Fundamentals – Collected Papers by David L. Parnas, 2001, Addison-Wesley, ISBN 0201703696.


[edit] External links

McMaster University homepage
Queen´s University (Kingston, Ontario, Canada)
University of Limerick profile and CV (PDF)
Stop the numbers game
IEEE Computer Society's 60th Anniversary Award









v • d • e

Software engineering





Fields

Requirements analysis • Software design • Computer programming • Formal methods • Software testing • Software deployment • Software maintenance






Concepts

Data modeling • Enterprise architecture • Functional specification • Modeling language • Programming paradigm • Software • Software architecture • Software development methodology • Software development process • Software quality • Software quality assurance • Structured analysis






Orientations

Agile • Aspect-oriented • Object orientation • Ontology • Service orientation • SDLC






Models

Development models: Agile • Iterative model • RUP • Scrum • Spiral model • Waterfall model • XP • V-Model
Other models: CMMI • Data model • Function model • IDEF • Information model • Metamodeling • Object model • View model • UML






Software
engineers

Kent Beck • Grady Booch • Fred Brooks • Barry Boehm • Ward Cunningham • Ole-Johan Dahl • Tom DeMarco • Edsger W. Dijkstra • Martin Fowler • C. A. R. Hoare • Watts Humphrey • Michael A. Jackson • Ivar Jacobson • Craig Larman • James Martin • Bertrand Meyer • David Parnas • Winston W. Royce • James Rumbaugh • Niklaus Wirth • Edward Yourdon






Related fields

Computer science • Computer engineering • Enterprise engineering • History • Management • Mathematics • Project management • Quality management • Software ergonomics • Systems engineering









Retrieved from "http://en.wikipedia.org/wiki/David_Parnas"
Categories: 1941 births | Canadian computer scientists | Carnegie Mellon University alumni | Carnegie Mellon University faculty | Computer pioneers | Formal methods people | Fellows of the Association for Computing Machinery | Living people | McMaster University faculty | Software engineers | Software engineering researchers | University of Limerick facultyHidden categories: All articles with unsourced statements | Articles with unsourced statements since November 2008 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Deutsch
Français
Bahasa Indonesia
עברית
日本語
Português









 This page was last modified on 8 February 2009, at 08:34.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
