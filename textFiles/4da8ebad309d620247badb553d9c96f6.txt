













Presentation-abstraction-control - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Presentation-abstraction-control";
		var wgTitle = "Presentation-abstraction-control";
		var wgAction = "view";
		var wgArticleId = "5274765";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 273376565;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Presentation-abstraction-control

From Wikipedia, the free encyclopedia

Jump to: navigation, search 





This article is in need of attention from an expert on the subject. WikiProject Computer science or the Computer science Portal may be able to help recruit one. (November 2008)


Presentation-abstraction-control (PAC) is a software architectural pattern, somewhat similar to model-view-controller (MVC). PAC is used as a hierarchical structure of agents, each consisting of a triad of presentation, abstraction and control parts. The agents (or triads) communicate with each other only through the control part of each triad. It also differs from MVC in that within each triad, it completely insulates the presentation (view in MVC) and the abstraction (model in MVC), this provides the option to separately multithread the model and view which can give the user experience of very short program start times, as the user interface (presentation) can be shown before the abstraction has fully initialized.


The structure of an application with PAC.



[edit] Hierarchical-Model-View-Controller (HMVC)
A subset or variation of PAC under the name Hierarchical-Model-View-Controller (HMVC) was published in an article[1] in JavaWorld Magazine, the authors apparently unaware[2] of PAC which was published 13 years earlier. The main difference between HMVC and PAC is that HMVC is less strict in that it allows the view and model of each agent to communicate directly, thus bypassing the controller.

[edit] See also

Model-view-controller
Model View Presenter
Presenter First
PAC-Amodeus[3], [4], [5]
PAC*


[edit] References

Coutaz, Joëlle (1987). "PAC: an Implementation Model for Dialog Design". H-J. Bullinger, B. Shackel (ed.) Proceedings of the Interact'87 conference, September 1-4, 1987, Stuttgart, Germany: pp. 431-436, North-Holland. 
Frank Buschmann, Regine Meunier, Hans Rohnert, Peter Sommerlad, Michael Stal (1996). Pattern-Oriented Software Architecture Vol 1: A System of Patterns. John Wiley and Sons. pp. 145–168. ISBN 0-471-95869-7. 
Gaëlle Calvary; Joëlle Coutaz, Laurence Nigay (1997). "From Single-User Architectural Design to PAC*: a Generic Software Architecture Model for CSCW". Pemberton, Steven (ed.) Proceedings of the ACM CHI 97 Human Factors in Computing Systems Conference. March 22-27, 1997, Atlanta, Georgia.: pp. 242-249. 
Joëlle Coutaz (1997). "PAC-ing the Architecture of Your User Interface". DSV-IS’97, 4th Eurographics Workshop on Design, Specification and Verification of Interactive Systems: pp. 15-32, Springer Verlag. 
Markopoulos, Panagiotis (1997) (pdf). A compositional model for the formal specification of user interface software. PhD thesis, Queen Mary and Westfield College, University of London. p. 26. http://www.idemployee.id.tue.nl/p.markopoulos/downloadablePapers/PhDThesisPanosMarkopoulos.pdf. Retrieved on 2006-05-25. 
Paris Avgeriou (2005). "Architectural patterns revisited - a pattern language". Proceedings of 10th European Conference on Pattern Languages of Programs (EuroPlop 2005), Irsee, Germany, July 2005: pp. 1-39. 


[edit] External links

Architectural outline for the game Warcraft as it might be implemented using the PAC Architectural Pattern: Programming of the application PACcraft:Architecture (in french)
Pattern:Presentation-Abstraction-Control (pattern description)
PAC description in the Portland Pattern Repository
WengoPhone is a free software VoIP application that is written using the PAC design pattern.

description of PAC and motivation for use in WengoPhone.
demonstration code, courtesy of the OpenWengo community.




[edit] Notes

^ Jason Cai, Ranjit Kapila, and Gaurav Pal (July 2000). "HMVC: The layered pattern for developing strong client tiers". JavaWorld Magazine. http://www.javaworld.com/javaworld/jw-07-2000/jw-0721-hmvc.html. Retrieved on 2006-05-25. 
^ "TP" (2000). "Is HMVC PAC? (letter to the editor)". JavaWorld Magazine. http://web.archive.org/web/20050205080537/http://www.javaworld.com/javaworld/jw-09-2000/jw-0908-letters.html. Retrieved on 2006-05-25. 
^ Laurence Nigay (1991). "Building User Interfaces: Organizing Software Agents.". ESPRIT '91 Conference. Brussels, Belgium: November 1991. 
^ Laurence Nigay (January 1994) (in French, with abstract in English) (PDF). Conception et modélisation logicielles des systèmes interactifs : application aux interfaces multimodales. PhD dissertation, 315 pages, University of Grenoble, France. pp. 131–268. http://iihm.imag.fr/publs/1994/THESE1994_Nigay.pdf. 
^ Nigay, Laurence; Joëlle Coutaz (1997). "Software Architecture Modelling: Bridging Two Worlds Using Ergonomics and Software Properties.". Formal Methods in Human-Computer Interaction. Springer-Verlag. chapter 3, pp. 49–73. ISBN 3-540-76158-6. 




Retrieved from "http://en.wikipedia.org/wiki/Presentation-abstraction-control"
Categories: Software architecture | Software design patterns | Programming paradigms | Human-computer interaction | User interfaceHidden categories: Computer science articles needing expert attention | Articles needing expert attention since November 2008 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Deutsch
Français









 This page was last modified on 26 February 2009, at 07:00 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
