













Free software - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Free_software";
		var wgTitle = "Free software";
		var wgAction = "view";
		var wgArticleId = "10635";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281701573;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Free software

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
Not to be confused with freeware.
Free software or software libre is software that can be used, studied, and modified without restriction, and which can be copied and redistributed in modified or unmodified form either without restriction, or with minimal restrictions only to ensure that further recipients can also do these things and to prevent consumer-facing hardware manufacturers from preventing user modifications to their hardware. Free software is available gratis (free of charge) in most cases.
In practice, for software to be distributed as free software, the human-readable form of the program (the source code) must be made available to the recipient along with a notice granting the above permissions. Such a notice either is a "free software license", or a notice that the source code is released into the public domain.
The free software movement was conceived in 1983 by Richard Stallman to satisfy the need for and to give the benefit of "software freedom" to computer users.[1] The Free Software Foundation was founded in 1985 to provide the organizational structure which Stallman correctly foresaw would be necessary to advance his Free Software ideas.
From 1998 onward, alternative terms for free software came into use. The most common are "software libre", "free and open source software" ("FOSS") and "free, libre and open source software" ("FLOSS"). The "Software Freedom Law Center" was founded in 2005 to protect and advance FLOSS.[2] The antonym of free software is "proprietary software" or "non-free software".
Free software, which may or may not be distributed free of charge, is distinct from "freeware" which, by definition, does not require payment for use. The authors or copyright holders of freeware typically retain all other rights to the software; users of freeware, in general, cannot study, modify, or redistribute it.[3] [4]
Since free software may be freely redistributed it is generally available at little or no cost. Free software business models are usually based on adding value such as applications, support, training, customization, integration, or certification. At the same time, some business models which work with proprietary software are not compatible with free software, such as those that depend on a user paying for a license in order to lawfully use a software product.




Contents


1 History

1.1 Naming


2 Definition
3 Examples of free software
4 Free software licenses

4.1 Permissive and copyleft licenses


5 Security and reliability
6 Adoption
7 Controversies

7.1 Binary blobs
7.2 BitKeeper
7.3 Patent deals


8 See also
9 References
10 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] History
Main article: History of free software
In the 1950s, 1960s, and 1970s, it was normal for computer users to have the freedoms that are provided by free software. Software was commonly shared by individuals who used computers and by hardware manufacturers who were glad that people were making software that made their hardware useful. Organizations of users and suppliers were formed to facilitate the exchange of software, see, for example, SHARE. By the late 1960s change was inevitable: software costs were dramatically increasing, a growing software industry was competing with the hardware manufacturer's bundled software products (free in that the cost was included in the hardware cost), leased machines required software support while providing no revenue for software, and some customers able to better meet their own needs did not want the costs of "free" software bundled with hardware product costs. In United States vs. IBM, filed January 17, 1969, the government charged that bundled software was anticompetitive[5]. While some software might always be free, there would be a growing amount of software that was for sale only. In the 1970s and early 1980s, the software industry began using technical measures (such as only distributing binary copies of computer programs) to prevent computer users from being able to study and modify software. In 1980 copyright law was extended to computer programs.




Richard Stallman, the founder of the Free Software Movement.


In 1983, Richard Stallman, longtime member of the hacker community at the MIT Artificial Intelligence Laboratory, announced the GNU project, saying that he had become frustrated with the effects of the change in culture of the computer industry and its users. Software development for the GNU operating system began in January 1984, and the Free Software Foundation (FSF) was founded in October 1985. He developed a free software definition and the concept of "copyleft", designed to ensure software freedom for all.
The economic viability of free software has been recognised by large corporations such as IBM, Red Hat, and Sun Microsystems.[citation needed] Many companies whose core business is not in the IT sector choose free software for their Internet information and sales sites, due to the lower initial capital investment and ability to freely customize the application packages. Also, some non-software industries are beginning to use techniques similar to those used in free software development for their research and development process; scientists, for example, are looking towards more open development processes, and hardware such as microchips are beginning to be developed with specifications released under copyleft licenses (see the OpenCores project, for instance). Creative Commons and the free culture movement have also been largely influenced by the free software movement.

[edit] Naming
The FSF recommends using the term "free software" rather than "open source software" because the latter term and the associated marketing campaign focuses on the technical issues of software development, avoiding the issue of user freedoms.[6] "Libre" is used to avoid the ambiguity of the word "free". However, amongst English speakers, libre is primarily only used within the free software movement.

[edit] Definition
Main articles: The Free Software Definition, Debian Free Software Guidelines, and Open Source Definition
The first formal definition of free software was published by FSF in February 1986.[7] That definition, written by Richard Stallman, is still maintained today and states that software is free software if people who receive a copy of the software have the following four freedoms:

Freedom 0: The freedom to run the program for any purpose.
Freedom 1: The freedom to study and modify the program.
Freedom 2: The freedom to copy the program so you can help your neighbor.
Freedom 3: The freedom to improve the program, and release your improvements to the public, so that the whole community benefits.

Freedoms 1 and 3 require source code to be available because studying and modifying software without its source code is highly impractical.
Thus, free software means that computer users have the freedom to cooperate with whom they choose, and to control the software they use. To summarize this into a remark distinguishing libre (freedom) software from gratis (zero price) software, Richard Stallman said: "Free software is a matter of liberty, not price. To understand the concept, you should think of 'free' as in 'free speech', not as in 'free beer'".[8]
In the late 90s, other groups published their own definitions which describe an almost identical set of software. The most notable are Debian Free Software Guidelines published in 1997,[9] and the Open Source Definition, published in 1998.
The BSD-based operating systems, such as FreeBSD, OpenBSD, and NetBSD, do not have their own formal definitions of free software. Users of these systems generally find the same set of software to be acceptable, but sometimes see copyleft as restrictive. They generally advocate permissive free software licenses, which allow others to make software based on their source code, and then release the modified result as proprietary software. Their view is that this permissive approach is more free. The Kerberos, X.org, and Apache software licenses are substantially similar in intent and implementation. All of these software packages originated in academic institutions interested in wide technology transfer (University of California, MIT, and UIUC).

[edit] Examples of free software
Main article: List of open source software packages
The Free Software Directory maintains a large database of free software packages. Some of the best-known examples include the BSD and Linux operating systems; the GNU Compiler Collection and C library; the MySQL relational database; the Apache web server; and the Sendmail mail transport agent. Other influential examples include the emacs text editor; the GIMP raster drawing and image editor; the X Window System graphical-display system; the OpenOffice.org office suite; and the TeX and LaTeX typesetting systems.

[edit] Free software licenses
Main article: Free software licenses
All free software licenses must grant people all the freedoms discussed above. However, unless the applications' licenses are compatible, combining programs by mixing source code or directly linking binaries is problematic, because of license technicalities. Programs indirectly connected together may avoid this problem.
The majority of free software uses a small set of licenses. The most popular of these licenses are:

the GNU General Public License
the GNU Lesser General Public License
the BSD License
the Mozilla Public License
the MIT License
the Apache License

The Free Software Foundation and the Open Source Initiative both publish lists of licenses that they find to comply with their own definitions of free software and open-source software respectively.

List of FSF approved software licenses
List of OSI approved software licenses

The FSF list is not prescriptive: free licensees can exist which the FSF has not heard about, or considered important enough to write about. So it's possible for a license to be free and not in the FSF list. However, the OSI list is prescriptive: they only list licenses that have been submitted, considered and approved. This formal process of approval is what defines a license as Open Source. Thus, it's not possible for a license to be Open Source and not on the OSI approved list.
Apart from these two organizations, the Debian project is seen by some to provide useful advice on whether particular licenses comply with their Debian Free Software Guidelines. Debian doesn't publish a list of approved licenses, so its judgments have to be tracked by checking what software they have allowed into their software archives. That is summarized at the Debian web site.[10]
However, it is rare that a license is announced as being in-compliance by either FSF or OSI guidelines and not vice versa (the Netscape Public License used for early versions of Mozilla being an exception), so exact definitions of the terms have not become hot issues.

[edit] Permissive and copyleft licenses
The FSF categorizes licenses in the following ways:

Public domain software - the copyright has expired, the work was not copyrighted or the author has abandoned the copyright. Since public-domain software lacks copyright protection, it may be freely incorporated into any work, whether proprietary or free.
Permissive licenses, also called BSD-style because they are applied to much of the software distributed with the BSD operating systems. The author retains copyright solely to disclaim warranty and require proper attribution of modified works, and permits redistribution and any modification, even proprietary ones.
Copyleft licenses, the GNU General Public License being the most prominent. The author retains copyright and permits redistribution and modification provided all such redistribution is licensed under the same license. Additions and modifications by others must also be licensed under the same 'copyleft' license whenever they are distributed with part of the original licensed product.


[edit] Security and reliability
There is debate over the security of free software in comparison to proprietary software, with a major issue being security through obscurity. A popular quantitative test in computer security is to use relative counting of known unpatched security flaws. Generally, users of this method advise avoiding products which lack fixes for known security flaws, at least until a fix is available. Some claim that this method is biased by counting more vulnerabilities for the free software, since its source code is accessible and its community is more forthcoming about what problems exist.[11]
Free software advocates rebut that even if proprietary software does not have "published" flaws, flaws could still exist and possibly be known to malicious users. The ability of users to view and modify the source code allows many more people to potentially analyse the code and possibly to have a higher rate of finding bugs and flaws than an average sized corporation could manage. Users having access to the source code also makes creating and deploying spyware far more difficult.[12]

[edit] Adoption
Free software played a part in the development of the Internet, the World Wide Web and the infrastructure of dot-com companies.[13] [14] Free software allows users to cooperate in enhancing and refining the programs they use; free software is a pure public good rather than a private good. Companies that contribute to free software can increase commercial innovation amidst the void of patent cross licensing lawsuits. (See mpeg2 patent holders)
Under the free software business model, free software vendors may charge a fee for distribution and offer pay support and software customization services. Proprietary software uses a different business model, where a customer of the proprietary software pays a fee for a license to use the software. This license may grant the customer the ability to configure some or no parts of the software themselves. Often some level of support is included in the purchase of proprietary software, but additional support services (especially for enterprise applications) are usually available for an additional fee. Some proprietary software vendors will also customize software for a fee.
Free software is generally available at little to no cost and can result in permanently lower costs compared to proprietary software. With free software, businesses can fit software to their specific needs by changing the software themselves or by hiring programmers to modify it for them. Free software often has no warranty, and more importantly, generally does not assign legal liability to anyone. However, warranties are permitted between any two parties upon the condition of the software and its usage. Such an agreement is made separately from the free software license.
A report by Standish Group says that adoption of open source has caused a drop in revenue to the proprietary software industry by about $60 billion per year.[15]

[edit] Controversies

[edit] Binary blobs
Main article: Binary blobs
In 2006, OpenBSD started the first campaign against the use of binary blobs, in kernels. Blobs are usually freely distributable device drivers for hardware from vendors that do not reveal driver source code to users or developers. This restricts the users' freedom to effectively modify the software and distribute modified versions. Also, since the blobs are undocumented and may have bugs, they pose a security risk to any operating system whose kernel includes them. The proclaimed aim of the campaign against blobs is to collect hardware documentation that allows developers to write free software drivers for that hardware, ultimately enabling all free operating systems to become or remain blob-free.
The issue of binary blobs in the Linux kernel and other device drivers motivated some developers in Ireland to launch gNewSense, a GNU/Linux distribution with all the binary blobs removed. The project received support from the Free Software Foundation.[16]

[edit] BitKeeper
Main article: BitKeeper#License concerns
Larry McVoy invited high-profile free software projects to use his proprietary versioning system, BitKeeper, free of charge, in order to attract paying users. In 2002, Linux coordinator Linus Torvalds decided to use BitKeeper to develop the Linux kernel, a free software project, claiming no free software alternative met his needs. This controversial decision drew criticism from several sources, including the Free Software Foundation's founder Richard Stallman.[17]
Following the apparent reverse engineering of BitKeeper's protocols, McVoy withdrew permission for gratis use by free software projects, leading the Linux kernel community to develop a free software replacement in Git.

[edit] Patent deals
Main article: Software patents and free software
In November 2006, the Microsoft and Novell software corporations announced a controversial partnership involving, among other things, patent protection for some customers of Novell under certain conditions.[18]

[edit] See also



Wikimedia Commons has media related to: Free software 






Free software portal




Free content
Free file format
Free software community
Free software licenses
Gratis versus Libre
Libre knowledge
List of formerly proprietary software
List of free software packages
List of free software project directories


[edit] References


^ "GNU project Initial Announcement". http://www.gnu.org/gnu/initial-announcement.html. 
^ "Software Freedom Law Center". http://www.softwarefreedom.org. 
^ Dixon, Rod (2004). Open Source Software Law. Artech House. p. 4. ISBN 9781580537193. http://books.google.com/books?id=9b_vVPf53xcC&pg=PA4&dq=%22free+software%22+freeware#PPA4,M1. Retrieved on 2009-03-16.  "On the other hand, freeware does not require any payment from the licensee or end-user, but it is not precisely free software, despite the fact that to an end-user the software is acquired in what appears to be an identical manner. Freeware is provided to end-users at no cost, but free software provides more benefits than simply delivering a no-cost product--indeed, for the end-user, there may be circumstances where the monetary cost of acquiring free software exceeds the cost of freeware." 
^ Graham, Lawrence D. (1999). Legal battles that shaped the computer industry. Greenwood Publishing Group. p. 175. ISBN 9781567201789. http://books.google.com/books?id=c6IS3RnN6qAC&pg=PA175&dq=%22Legal+battles+that+shaped+the+computer+industry%22+%22from+the+beginning+of+the+computer+age%22. Retrieved on 2009-03-16.  "Freeware, however, is generally only free in terms of price; the author typically retains all other rights, including the rights to copy, distribute, and make derivative works from the software." 
^ Fisher, Franklin M.; McKie, James W.; Mancke, Richard B. (1983). IBM and the U.S. Data Processing Industry: An Economic History. Praeger. ISBN 0-03-063059-2. 
^ "Why "Open Source" misses the point of Free Software". http://www.gnu.org/philosophy/open-source-misses-the-point.html.  "The philosophy of open source, with its purely practical values, impedes understanding of the deeper ideas of free software; it brings many people into our community, but does not teach them to defend it." 
^ "GNU's Bulletin, Volume 1 Number 1, page 8". http://www.gnu.org/bulletins/bull1.txt. 
^ Free Software Foundation. "The Free Software Definition". http://www.gnu.org/philosophy/free-sw.html. Retrieved on 2007-04-22. 
^ Bruce Perens. "Debian's "Social Contract" with the Free Software Community". debian-announce mailing list. http://lists.debian.org/debian-announce/debian-announce-1997/msg00017.html. 
^ "Debian -- License information". http://www.debian.org/legal/licenses/. Retrieved on 2008-01-08. 
^ "Firefox more secure than MSIE after all". News.com. http://news.com.com/8301-10784_3-6047727-7.html. 
^ "Transcript where Stallman explains about spyware". http://fsfeurope.org/documents/rms-fs-2006-03-09.en.html#freedom-one. 
^ Netcraft. "Web Server Usage Survey". http://news.netcraft.com/archives/web_server_survey.html. 
^ The Apache Software Foundation. "Apache Strategy in the New Economy". http://www.unc.edu/~mohrmana/apache.pdf. 
^ http://standishgroup.com/newsroom/open_source.php
^ GNU/Linux distributions we know of which consist entirely of free software, and whose main distribution sites distribute only free software.
^ "Richard Stallman thanking Larry McVoy for ending the gratis licenses for BitKeeper". NewsForge. http://software.newsforge.com/article.pl?sid=05/04/25/130207. 
^ "Ars Technica article on the Microsoft-Novell patent deal". http://arstechnica.com/articles/columns/linux/linux-20070128.ars. 



[edit] External links



Wikinews has related news:
FLOSS




Software Freedom Law Center
The Free Software Definition
Transcripts about Free Software by FSFE
Free Software Magazine
Free cultural works definition
Why Open Source Software / Free Software (OSS/FS)? Look at the Numbers!, analysis of the advantages of OSS/FS by David A. Wheeler.
FLOSSWorld - Free/Libre/Open-Source Software: Worldwide impact study
Software Freedom: An Introduction, by Robert J. Chassell
Decoding Liberation: The Promise of Free and Open Source Software, by Samir Chopra and Scott Dexter
Free Software Definition at The Linux Information Project
Open Source Enters the Mainstream According to Findings from the Actuate Annual Open Source Survey for 2008
FSF/UNESCO Free Software Directory








v • d • e

Forms of software distribution






Abandonware · Adware · Careware · Crippleware · Demoware · Donationware · Foistware · Freely redistributable software · Free software · Freeware · Malware · Nagware · Open source · Otherware · Postcardware · Registerware · Shareware · Spyware













v • d • e

Free and open source software





General

Copyleft · Events and Awards · Free software · Free Software Definition · Gratis versus Libre · Open source software






Free software
portal









Notable packages

Apache · CUPS · Firefox · GNOME · KDE · OpenOffice.org · Thunderbird · X Window System






Operating systems

AROS · BSD · Darwin · FreeDOS · GNU · Haiku · Linux · Mach · MINIX · OpenSolaris · ReactOS






Development

GCC · LLVM · Java · Open64 · Perl · PHP · Python · Lua · Ruby · Tcl · libJIT






History

GNU · Linux · Mozilla (Application Suite · Firefox · Thunderbird)






Organizations

Apache Software Foundation · Blender Foundation · Eclipse Foundation · FLOSS Manuals · freedesktop.org · Free Software Foundation · GNOME Foundation · GNU Project · Google Code · Linux Foundation · Mozilla Foundation · Open Source Geospatial Foundation · Open Source Initiative · SourceForge · Xiph.Org Foundation · X.Org Foundation






Licences

Apache · BSD · GNU GPL · LGPL · MIT · MPL · Permissive · Microsoft Public License · Microsoft Reciprocal License · FSF approved licenses






Challenges

Binary blob · Digital rights management · License proliferation · Mozilla software rebranding · Proprietary software · SCO-Linux controversies · Security · Software patents · Tivoization · Trusted Computing






Other topics

Alternative terms · Community · Linux distribution · Forking · Movement · Microsoft Open Specification Promise · Revolution OS · Comparison with closed source






List of open source software packages








Retrieved from "http://en.wikipedia.org/wiki/Free_software"
Categories: Free software | Software licenses | Libre | Free software culture and documentsHidden categories: All articles with unsourced statements | Articles with unsourced statements since July 2008 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Afrikaans
العربية
Asturianu
Bân-lâm-gú
Bosanski
Brezhoneg
Български
Català
Česky
Dansk
Deutsch
Eesti
Ελληνικά
Español
Esperanto
Euskara
فارسی
Français
Gaeilge
Gaelg
Galego
ગુજરાતી
한국어
Hrvatski
Ido
Ilokano
Bahasa Indonesia
Interlingua
Íslenska
Italiano
עברית
Kurdî / كوردی
Latviešu
Lietuvių
Magyar
Македонски
മലയാളം
मराठी
Bahasa Melayu
Nederlands
日本語
‪Norsk (bokmål)‬
Occitan
Polski
Português
Română
Romani
Русский
Shqip
සිංහල
Simple English
Slovenčina
Slovenščina
Српски / Srpski
Suomi
Svenska
Tagalog
தமிழ்
ไทย
Tiếng Việt
Тоҷикӣ
Türkçe
Українська
اردو
吴语
粵語
中文









 This page was last modified on 4 April 2009, at 14:09.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
