













Darwin Information Typing Architecture - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Darwin_Information_Typing_Architecture";
		var wgTitle = "Darwin Information Typing Architecture";
		var wgAction = "view";
		var wgArticleId = "1223187";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 282595444;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Darwin Information Typing Architecture

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
The Darwin Information Typing Architecture (DITA) is an XML-based architecture for authoring, producing, and delivering technical information.
The name of the architecture was derived as follows:

Darwin: Named for the naturalist Charles Darwin, DITA uses the principles of specialization and inheritance.
Information Typing: DITA capitalizes on the semantics of topics (concept, task, reference) and of content (messages, typed phrases, semantic tables).
Architecture: DITA provides vertical headroom (new applications) and edgewise extension (specialization into new types) for information.

Topics: DITA divides content into small, self-contained topics that can be reused in different deliverables. The extensibility of DITA permits organizations to define specific information structures and still use standard tools to work with them. The ability to define company-specific and even group-specific information architectures enables DITA to support content reuse and reduce information redundancy.
Topic Types: DITA specifies three basic topic types: Task, Concept and Reference.
Each of the three basic topic types is a specialization of a generic Topic type, which contains a title element, a prolog element for metadata, and a body element. The body element contains paragraph, table, and list elements, similar to HTML.

A Task topic is intended for a procedure that describes how to accomplish a task. A Task topic lists a series of steps that users follow to produce an intended outcome. The steps are contained in a taskbody element, which is a specialization of the generic body element. The steps element is a specialization of an ordered list element.
Concept information is more objective, containing definitions, rules, and guidelines.
A Reference topic is for topics that describe command syntax, programming instructions, and other reference material, and usually contains detailed, factual material.

The DITA architecture and a related DTD and XML Schema was originally developed by IBM. DITA is now an OASIS standard.




Contents


1 Features
2 Creating content in DITA
3 Publishing content written in DITA
4 DITA Open Toolkit
5 Brief history
6 Background technology and practices
7 See also
8 References
9 Further reading
10 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Features

DITA encourages writing of content as modular topics, as opposed to long "book-oriented" files. Topics can be easily reused in different deliverables.
Fragments of content within topics (or less commonly, the topics themselves) can be reused through the use of content references.
Conditional text, which allows filtering or styling content based on attributes for audience, platform, product, and other properties.
Extensive metadata, which makes topics easier to find.
The element types and structures in DITA topics are similar to popular languages like HTML. For example, a bulleted or numbered list can be copied and pasted directly from HTML to DITA.
DITA allows adding new elements through specialization of base DITA elements. Through specialization, DITA can accommodate new topic types and element types as needed for specific industries or companies.


[edit] Creating content in DITA
Creating DITA content consists of writing topics and maps. A map contains links to topics, organized in the sequence (which may be hierarchical) in which they are intended to appear in finished documents. A DITA map defines the table of contents for deliverables, and can also specify which topics link to each other.
DITA map and topic documents are XML files. Any images, video files, or other files which need to appear in output are inserted via reference. Any XML editor can therefore be used to write DITA content, with the exception of editors that support only a limited set of XML schemas (such as XHTML editors). DITA-compliant XML editors validate documents against multiple schemas and DTDs.

[edit] Publishing content written in DITA
DITA is conceived as an end-to-end architecture. In addition to indicating what elements, attributes, and rules are part of the DITA language, the DITA specification includes rules for publishing DITA content in print, HTML, online Help, and other formats. For example, the DITA specification indicates that if the conref attribute of element A contains a path to element B, the contents of element B will be displayed in the location of element A. DITA-compliant publishing solutions, known as DITA processors, must handle the conref attribute according to the specified behaviour. Rules also exist for processing other rich features such as conditional text, index markers, and topic-to-topic links.

[edit] DITA Open Toolkit
When DITA was released as a public XML standard in 2001, IBM contributed the DITA Open Toolkit, the first DITA-compliant processor. The toolkit transforms DITA content into output formats like PDF, HTML, and Online Help, and can be extended to handle arbitrary specializations and arbitrary output formats. Out of the box, it handles all valid DITA specializations and several output formats, including:

PDF, through XSL-FO
XHTML
Microsoft Compiled HTML Help
Eclipse Help
Java Help
Oracle Help
Rich Text Format

The toolkit continues to be the foundation of most publishing of DITA content. Many DITA users use it directly, and some DITA authoring tools and content management tools now integrate parts of the toolkit into their own publishing workflows.
The DITA Open Toolkit is an active open-source project, with contributions from several companies.

[edit] Brief history

March 2001 Introduction by IBM
May 2002 Domain specialization added to topic specialization
April 2004 OASIS Technical Committee for DITA formed
February 2005 SourceForge begins DITA Open Toolkit support
June 2005 DITA v1.0 approved as an OASIS standard
August 2005 DITA Open Toolkit v1.1 is released
March 2006 OASIS launches DITA.XML.org
August 2007 DITA V1.1 is approved by OASIS, including Bookmap specialization


[edit] Background technology and practices
The history of DITA is the history of its many powerful characteristics - modularity, structured writing, information typing, separation of content from presentation, single source publishing, minimalism, topic-based, task-orientation, content reuse, conditional processing, language localisation-friendly, multi-channel publishing, component publishing, usability, consistency, object-oriented programming, inheritance, specialization, and simplified XML.

[edit] See also

DocBook
S1000D
List of document markup languages
Comparison of document markup languages
DITA Open Toolkit
OAXAL


[edit] References

IBM's Introduction to DITA
DITA Architectural Specification, v 1.1
DITA Language Specification, v 1.1


[edit] Further reading

Linton, Jen and Bruski, Kylene (2006). Introduction to DITA: A User Guide to the Darwin Information Typing Architecture. Denver, CO: Comtech Services. http://www.comtech-serv.com/dita2.shtml#book. 
Priestley, Michael; Swope, Amber (2008) (PDF). The DITA Maturity Model Whitepaper. IBM Corp and JustSystems. http://na.justsystems.com/files/Whitepaper-DITA_MM.pdf. 
Doyle, Bob (2008) (PDF). DITA Tools from A to Z. Society of Technical Communications. http://www.ditanews.com/tools/STC_Intercom.pdf. 


[edit] External links

DITA XML.org community site
DITA and TIM (Task-oriented Information Modelling)
XML and DITA: FAQ
DITA World — Comprehensive list of DITA resources: articles, vendors, user groups and more
DITA Users — Membership organization with online DITA workspaces
DITA Open Toolkit Project Home
DITA Open Toolkit User Guide and Reference
Roadmap for DITA Development, OASIS DITA Technical Committee
DITA Infocenter — DITA Specifications and Open Toolkit in searchable Eclipse Help format
DITA News - aggregates DITA bloggers, has extensive resources, and DITA tools listing
Computerworld QuickStudy Darwin Information Typing Architecture (DITA)
DITA Wiki - glossary of DITA terms, people in DITA community, listings of vendors, software and professional services.
Five-minute DITA tutorial - a Flash tutorial on DITA Topics and Specialization.
History of DITA.
DITA Semiconductor Information Design Sub-Committee (SIDSC) Specialization
DITA4Joomla - Project that enables the authoring, management and publishing of DITA content through Joomla CMS
DITA Open Platform - The Open Source DITA Authoring Platform








v • d • e

Standards of OASIS






BCM · CAM · CAP · CIQ · DSS · DocBook · DITA · ebXML · OpenDocument · SAML · SDD · SPML · UBL · WSDM · XRI · XDI · WSRF · WSS · XACML









Retrieved from "http://en.wikipedia.org/wiki/Darwin_Information_Typing_Architecture"
Categories: Technical communication | XML | XML-based standards | Markup languages 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Deutsch
Español
Français
日本語
Русский
Suomi









 This page was last modified on 8 April 2009, at 17:54 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
