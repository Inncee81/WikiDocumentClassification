













Microsoft Foundation Class Library - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Microsoft_Foundation_Class_Library";
		var wgTitle = "Microsoft Foundation Class Library";
		var wgAction = "view";
		var wgArticleId = "291891";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281648417;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Microsoft Foundation Class Library

From Wikipedia, the free encyclopedia

Jump to: navigation, search 

Microsoft Foundation Class Library

Developed by
Microsoft


Initial release
1992


Latest release
9.0.30411 [1] [2] / April 22, 2008 (RTW) [1] [2]


Written in
C++


Operating system
Microsoft Windows


Type
Development library


License
Proprietary


Website
MFC reference, complementary Feature Pack reference


The Microsoft Foundation Class Library (also Microsoft Foundation Classes or MFC) is a library that wraps portions of the Windows API in C++ classes, including functionality that enables them to use a default application framework. Classes are defined for many of the handle-managed Windows objects and also for predefined windows and common controls.




Contents


1 History
2 Features
3 Visual C++ 2008 Feature Pack
4 Versions
5 Other frameworks
6 References
7 Further reading
8 External links

8.1 Official sites
8.2 Tips







//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] History
MFC was introduced in 1992 with Microsoft's C/C++ 7.0 compiler for use with 16-bit versions of Windows as an extremely thin object-oriented C++ wrapper for the Windows API. C++ was just beginning to replace C for development of commercial application software as the predominant way to interface to the API. With that, they also shipped the very first replacement for an older, alphanumeric IDE called PWB.
One interesting quirk of MFC is the use of "Afx" as the prefix for many functions, macros and the standard precompiled header name "stdafx.h". During early development what became MFC was called "Application Framework Extensions" and abbreviated "Afx". The name Microsoft Foundation Classes (MFC) was adopted too late in the release cycle to change these references.
MFC 8.0 was released with Visual Studio 2005. MFC 9.0 was released with Visual Studio 2008. MFC is not included in the free edition of Visual C++ 2005/2008 Express.[3]
The Object Windows Library (OWL), designed for use with Borland's Turbo C++ compiler, was a competing product introduced by Borland around the same time. Eventually, Borland discontinued OWL development and licensed the distribution of the MFC headers, libraries and DLLs from Microsoft[4] for a short time, though it never offered fully integrated support for MFC. Borland later released VCL (Visual Component Library) to replace the OWL framework.
Microsoft's emphasis on MFC has been reduced in favor of their .NET Framework. MFC 7, 8 and 9 bridge elements of MFC with the .NET Framework to aid developers in migrating to the new framework. The MSVC++ compiler backend can emit managed and native object file(s). The linker can then build them together, generating hybrid (both managed and native) applications, allowing existing native applications to use managed extensions in a seamless manner. Despite Microsoft's de-emphasis of MFC, MFC is a popular framework that remains in widespread use.
A lightweight alternative to MFC is the Windows Template Library (WTL). The free Visual C++ Express version compiles WTL applications, but does not include the IDE support of the Standard, Professional and Team editions. In an MFC program, you rarely need to call the Windows API directly. Instead you create objects from MFC classes and call member functions belonging to those objects. Many of the member functions even have same name as corresponding API functions.[5]

[edit] Features
When MFC was introduced, it provided C++ macros for Windows message-handling (via Message Maps), exceptions, run-time type identification (RTTI), serialization and dynamic class instantiation. The macros for message-handling were intended to reduce memory consumption by avoiding gratuitous virtual table use and also provide a more concrete structure for various Visual C++-supplied tools to edit and manipulate code without parsing the full language. The message-handling macros replaced the virtual function mechanism provided by C++.
The macros for serialization, exceptions, and RTTI predated availability of these features in C++ by a number of years. 32-bit versions of MFC, for Windows NT 3.1 and later Windows operating systems, used compilers that implemented the language features and updated the macros to simply wrap the language features instead of providing customized implementations, realizing upward compatibility.

[edit] Visual C++ 2008 Feature Pack
On April 7, 2008, Microsoft released an update to the MFC classes as an out-of-band update to Visual Studio 2008 and MFC 9.[6] The update features new user interface constructs, including the Ribbon user interface of Microsoft Office 2007 and associated UI widgets, fully customizable toolbars, docking panes like Visual Studio 2005 (which can either be freely floated or docked to any side) and document tabs.[7] However, the Ribbon elements needs to be created in code; it does not support the XML-based declarative markup like the RibbonX API in Microsoft Office 2007. The MFC application wizard has also been upgraded to support the new features - including a check-box to select whether the application will use the Ribbon or the Visual Studio 2005 user interface elements. The new functionality is provided in new classes so that old applications still continue to run.[7] This update is building on top of BCGSoft’s BCGControlBar Library Professional Edition.[8]
Microsoft has also imposed additional licensing requirements on users of the Ribbon UI.[9] These include a requirement to adhere to Microsoft UI Design Guidelines, and a prohibition against using such a UI in applications which compete with Microsoft applications.

[edit] Versions


Product version
MFC version
Year introduced


Microsoft C/C++ 7.0
MFC 1.0
1992


Visual C++ 1.0
MFC 2.0


Visual C++ 1.5
MFC 2.5


Visual C++ 1.52c
MFC 2.5 (Last development platform for Windows 3.x)


Visual C++ 2.0
MFC 3.0


Visual C++ 2.1
MFC 3.1


Visual C++ 2.2
MFC 3.2


Visual C++ 4.0
MFC 4.0 (mfc40.dll included with Windows 95)
Aug 1995


Visual C++ 4.1
MFC 4.1


Visual C++ 4.2
MFC 4.2 (mfc42.dll included with the Windows 98 original release)
Mar 1998


eMbedded Visual C++ 3.0
MFC 4.2 (mfc42.dll)


Visual C++ 5.0
MFC 4.21 (mfc42.dll), a major upgrade from MFC 4.2.


Visual C++ 6.0
MFC 6.0 (mfc60.dll)
1998


eMbedded Visual C++ 4.0


Visual C++ .NET 2002 (Visual C++ 7.0)
MFC 7.0 (mfc70.dll), .NET 1.0
Feb 2002


Visual C++ .NET 2003 (Visual C++ 7.1)
MFC 7.1 (mfc71.dll), .NET 1.1
Apr 2003


Visual C++ 20051 (Visual C++ 8.0)
MFC 8.0 (mfc80.dll), .NET 2.0
Oct 2005


Visual C++ 20081 (Visual C++ 9.0)
MFC 9.0.21022 (mfc90.dll), .NET 3.5
Nov 2007


Visual C++ 2008 with Feature Pack
MFC 9.0.30411 (mfc90.dll)
Apr 2008


Visual C++ 2008 SP1
MFC 9.0.30729 (mfc90.dll)
Aug 2008


Visual C++ 2010
MFC 10.x(?), .NET 4.0
Est. 2010



1 The Visual Studio Express Editions do not include the MFC libraries.


[edit] Other frameworks

Cocoa (Mac OS X only, Objective C)
Carbon (Mac OS only, C)
Fox toolkit (multi-platform)
wxWidgets (multi-platform, formerly wxWindows)
Qt (toolkit) (multi-platform)
GTK+ (multi-platform)
SmartWin++
Object Windows Library
Visual Component Library
Active Template Library (ATL)
Windows Template Library (WTL)
.NET Framework
Open Foundation Classes (OFC) - open source MFC compatible classes
Win32++ - C++ library used to build windows applications


[edit] References


^ a b Microsoft Visual C++ 2008 Feature Pack
^ a b Microsoft Visual C++ 2008 Feature Pack Redistributable Package (x86)
^ VS2005: FAQ
^ Microsoft Buys Into Inprise, Settles Disputes
^ Visual C++ Express Overview
^ "Visual C++ 2008 Feature Pack shipped". http://blogs.msdn.com/somasegar/archive/2008/04/07/visual-c-2008-feature-pack-shipped.aspx. Retrieved on 2008-04-26. 
^ a b "Quick Tour of New MFC functionality". http://blogs.msdn.com/vcblog/archive/2007/11/09/quick-tour-of-new-mfc-functionality.aspx. Retrieved on 2007-11-16. 
^ "MFC Update Powered By BCGSoft". http://msdn2.microsoft.com/en-us/visualc/bb892882.aspx. Retrieved on 2007-11-16. 
^ "Visual C++ 2008 Feature Pack Release Download Page". http://www.microsoft.com/downloads/details.aspx?FamilyId=D466226B-8DAB-445F-A7B4-448B326C48E7&displaylang=en#Instructions. Retrieved on 2008-05-16. 



[edit] Further reading

Shepherd, George (1996). MFC Internals. Addison-Wesley. ISBN 0-201-40721-3. 
Kruglinski, David (1996). Inside Visual C++. Microsoft Press. ISBN 0-55615-891-2. 
Microsoft Corporation (1995). Microsoft Visual C++ Programming with MFC. Microsoft Press. ISBN 1-55615-921-8. 


[edit] External links

[edit] Official sites

MSDN MFC Reference
MSDN MFC newsgroup
MFC: Visual Studio 2005 and Beyond
An Inside Look At The Next Generation Of Visual C++ (covers the major MFC 9 updates)


[edit] Tips

Programming in Visual C++ and MFC
CodeGuru.com C++ & MFC
CodeProject.com General C++ / MFC topics
An Analysis of Design Patterns in MFC, Department of Computer Science Helsinki University of Technology, 1996.
Visual C++ MFC Tutorial
Tenouk Programming Tutorial Index




Retrieved from "http://en.wikipedia.org/wiki/Microsoft_Foundation_Class_Library"
Categories: C++ libraries | Microsoft application programming interfaces 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Česky
Deutsch
Español
Français
한국어
Bahasa Indonesia
Italiano
עברית
Nederlands
日本語
‪Norsk (bokmål)‬
Polski
Português
Română
Русский
Українська
中文









 This page was last modified on 4 April 2009, at 05:59.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
