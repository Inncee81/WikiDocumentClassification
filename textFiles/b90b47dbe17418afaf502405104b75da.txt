













Universally Unique Identifier - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Universally_Unique_Identifier";
		var wgTitle = "Universally Unique Identifier";
		var wgAction = "view";
		var wgArticleId = "189937";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 282836354;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Universally Unique Identifier

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
A Universally Unique Identifier (UUID) is an identifier standard used in software construction, standardized by the Open Software Foundation (OSF) as part of the Distributed Computing Environment (DCE). The intent of UUIDs is to enable distributed systems to uniquely identify information without significant central coordination. Thus, anyone can create a UUID and use it to identify something with reasonable confidence that the identifier will never be unintentionally used by anyone for anything else. Information labeled with UUIDs can therefore be later combined into a single database without needing to resolve name conflicts. The most widespread use of this standard is in Microsoft's Globally Unique Identifiers (GUIDs). Other significant uses include Linux's ext2/ext3 filesystem, LUKS encrypted partitions, GNOME, KDE, and Mac OS X, all of which use implementations derived from the uuid library found in the e2fsprogs package.
UUIDs are documented as part of ISO/IEC 11578:1996 "Information technology -- Open Systems Interconnection -- Remote Procedure Call (RPC)" and more recently in ITU-T Rec. X.667 | ISO/IEC 9834-8:2005 (freely available). The IETF has published Proposed Standard RFC 4122 that is technically equivalent with ITU-T Rec. X.667 | ISO/IEC 9834-8.




Contents


1 Definition

1.1 Version 1 (MAC address)
1.2 Version 2 (DCE Security)
1.3 Version 3 (MD5 hash)
1.4 Version 4 (random)
1.5 Version 5 (SHA-1 hash)


2 Implementations

2.1 C
2.2 C++
2.3 CakePHP
2.4 Cocoa/Carbon
2.5 CodeGear RAD Studio (Delphi/C++ Builder)
2.6 ColdFusion
2.7 Common Lisp
2.8 Eiffel
2.9 Firebird Server
2.10 Free Pascal & Lazarus IDE
2.11 Haskell
2.12 Java
2.13 Javascript
2.14 MySQL
2.15 .NET Framework
2.16 ORACLE Database
2.17 Perl
2.18 PHP
2.19 PostgreSQL
2.20 Progress OpenEdge ABL
2.21 Python
2.22 Revolution
2.23 Ruby
2.24 SQL Server Data Base
2.25 Tcl
2.26 C++ & Qt


3 Random UUID probability of duplicates
4 History
5 References
6 See also
7 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Definition
A UUID is a 16-byte (128-bit) number. The number of theoretically possible UUIDs is therefore 216 × 8 = 2128 = 25616 or about 3.4 × 1038. This means that 1 trillion UUIDs would have to be created every nanosecond for slightly more than 10 billion years to exhaust the number of UUIDs.
In its canonical form, a UUID consists of 32 hexadecimal digits, displayed in 5 groups separated by hyphens, in the form 8-4-4-4-12 for a total of 36 characters(32 digits and 4 '-'). For example:

550e8400-e29b-41d4-a716-446655440000

A UUID may also be used with a specific identifier intentionally used repeatedly to identify the same thing in different contexts. For example, in Microsoft's Component Object Model, every component must implement the IUnknown interface, which is done by creating a UUID representing IUnknown. In all cases wherever IUnknown is used, whether it is being used by a process trying to access the IUnknown interface in a component, or by a component implementing the IUnknown interface, it is always referenced by the same identifier: 00000000-0000-0000-C000-000000000046.

[edit] Version 1 (MAC address)
Conceptually, the original (version 1) generation scheme for UUIDs was to concatenate the UUID version with the MAC address of the computer that is generating the UUID, and with the number of 100-nanosecond intervals since the adoption of the Gregorian calendar in the West. In practice, the actual algorithm is more complicated. This scheme has been criticized in that it is not sufficiently 'opaque'; it reveals both the identity of the computer that generated the UUID and the time at which it did so.

[edit] Version 2 (DCE Security)
Version 2 UUIDs are similar to Version 1 UUIDs, with the upper byte of the clock sequence replaced by the identifier for a "local domain" (typically either the "POSIX UID domain" or the "POSIX GID domain") and the first 4 bytes of the timestamp replaced by the user's POSIX UID or GID (with the "local domain" identifier indicating which it is).[1][2]

[edit] Version 3 (MD5 hash)
Version 3 UUIDs use a scheme deriving a UUID via MD5 from a URL, a fully qualified domain name, an Object identifier, a distinguished name (DN as used in Lightweight Directory Access Protocol), or on names in unspecified namespaces. Version 3 UUIDs have the form xxxxxxxx-xxxx-3xxx-xxxx-xxxxxxxxxxxx with hexadecimal digits x.
To determine the version 3 UUID of a given name the UUID of the namespace, e.g. 6ba7b810-9dad-11d1-80b4-00c04fd430c8 for a domain, is transformed to a string of bytes corresponding to its hexadecimal digits, concatenated with the input name, hashed with MD5 yielding 128 bits. Six bits are replaced by fixed values, four of these bits indicate the version, 0011 for version 3. Finally the fixed hash is transformed back into the hexadecimal form with hyphens separating the parts relevant in other UUID versions.

[edit] Version 4 (random)
Version 4 UUIDs use a scheme relying only on random numbers. This algorithm sets the version number as well as two reserved bits. All other bits are set using a random or pseudorandom data source. Version 4 UUIDs have the form xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx with hexadecimal digits x and hexadecimal digits 8, 9, A, or B for y. e.g. f47ac10b-58cc-4372-a567-0e02b2c3d479.

[edit] Version 5 (SHA-1 hash)
Version 5 UUIDs use a scheme with SHA-1 hashing, otherwise it is the same idea as in version 3. RFC 4122 states that version 5 is preferred over version 3 name based UUIDs.

[edit] Implementations

[edit] C
libuuid is part of the e2fsprogs package and is available from http://e2fsprogs.sourceforge.net/.
The OSSP project provides a UUID library.[3]

[edit] C++
ooid implements a C++ UUID class.

[edit] CakePHP
CakePHP will automatically generate UUIDs for new records if you specify a table's primary key as data type CHAR(36).[4]

[edit] Cocoa/Carbon
The Core Foundation class CFUUIDRef is used to produce and store UUIDs, as well as to convert them to and from CFString/NSString representations.[5]

[edit] CodeGear RAD Studio (Delphi/C++ Builder)
A new GUID can be generated by pressing Ctrl+Shift+G.

[edit] ColdFusion
The createUUID() function provides a UUID in all versions, however the format generated is in 4 segments instead of 5 xxxxxxxx-xxxx-xxxx-xxxxxxxxxxxxxxxx (8-4-4-16).[6]

[edit] Common Lisp
A library is available to create UUIDs (v1, v3, v4 and v5) according to RFC 4122.[7]

[edit] Eiffel
A library is available to create UUIDs Generates uuids according to RFC 4122, Variant 1 0, Version 4. Source available at Eiffel UUID library

[edit] Firebird Server
Firebird has gen_uuid() from version 2.1[8] and uuid_to_char() and char_to_uuid() from version 2.5[9] as built-in functions.

[edit] Free Pascal & Lazarus IDE
In Free Pascal there is a class called TGUID that holds the structure of a UUID. Also in the SysUtils.pas unit there are methods to create, compare and convert UUID's. They are CreateGUID(), GUIDToString() and IsEqualGUID().[10] In the Lazarus IDE you can also generate a UUID by pressing Ctrl+Shift+G.

[edit] Haskell
The package uuid[11] provides a binding to library libuuid, which is part of e2fsprogs.[12] The package can be used to create, parse, and print UUIDs.

[edit] Java
The J2SE 5.0 release of Java provides a class that will produce 128-bit UUIDs, although it only implements version 3 and 4 generation methods, not the original method (due to lack of means to access MAC addresses using pure Java). The API documentation for the java.util.UUID class refers to ISO/IEC 11578:1996.
Open source implementations supporting MAC addresses on several common operating systems are UUID – generate UUIDs (or GUIDs) in Java , Java Uuid Generator (JUG) and ActiveScript [1].

[edit] Javascript
AF Design provide a javascript class based on random number instead of MAC address. Broofa.com has implemented a JavaScript function which generates version 4 UUIDs as defined in the RFC 4122 specification.

[edit] MySQL
MySQL provides a UUID() function.[13]

[edit] .NET Framework
The .NET Framework also provides a class called System.Guid to generate and manipulate 128-bit UUIDs. [2]

[edit] ORACLE Database
The Oracle SQL provides a function called SYS_GUID() to generate unique identifiers ([3]).

[edit] Perl
The Data::GUID[14] module from CPAN can be used to create UUIDs

[edit] PHP
In PHP there are several modules for creating UUIDs. [4]

[edit] PostgreSQL
PostgreSQL contains a uuid data type. Also various generation functions as part of the uuid-ossp contrib module.[15]

[edit] Progress OpenEdge ABL
The GENERATE-UUID function in OpenEdge 10 provides a UUID which can be made printable using the GUID() or BASE64-ENCODE() functions. [5]

[edit] Python
The uuid module[16] (included in the standard library since Python 2.5) creates UUIDs to RFC 4122.

[edit] Revolution
The libUUID library[17] A library that generates UUIDs of type 1 (time based), type 3 (name-based) and type 4 (random-based). Version 1.0. by Mark Smith. OSL 3.0

[edit] Ruby
There are several RFC4122 implementations for Ruby, the most updated ones being Ruby-UUID (not online anymore; fork here), UUID and UUIDTools.

[edit] SQL Server Data Base
Transact-SQL (2000 and 2005) provides a function called NEWID() to generate uniqueidentifiers. SQL Server 2005 provides an additional function called NEWSEQUENTIALID() which generates a new GUID that is greater than any GUID previously created by the NEWSEQUENTIALID() function on a given computer.

[edit] Tcl
A Tcl implementation is provided in the TclLib package.[18]

[edit] C++ & Qt
The Qt C++ toolkit has UUID support in form of the QUuid class.

[edit] Random UUID probability of duplicates
Randomly generated UUIDs like those generated by the java.util.UUID class have 122 random bits. There are 128 bits altogether with 4 bits being used for the version ('Randomly generated UUID'), and 2 bits for the variant ('Leach-Salz'). With random UUIDs, the chance of two having the same value can be calculated using probability theory (Birthday paradox). Using the approximation



these are the probabilities of an accidental clash after calculating n UUIDs, with x=2122:


n
probability


68,719,476,736 = 236
0.0000000000000004 (4 × 10−16)


2,199,023,255,552 = 241
0.0000000000004 (4 × 10−13)


70,368,744,177,664 = 246
0.0000000004 (4 × 10−10)


To put these numbers into perspective, one's annual risk of being hit by a meteorite is estimated to be one chance in 17 billion [19], that means the probability is about 0.00000000006 (6 × 10−11), equivalent to the odds of creating a few tens of trillions of UUIDs in a year and having one duplicate. In other words, only after generating 1 billion UUIDs every second for the next 100 years, the probability of creating just one duplicate would be about 50%. The probability of one duplicate would be about 50% if every person on earth owns 600 million UUIDs.
However, these probabilities only hold for Cryptographically secure pseudorandom number generators. These must be used to generate the values, otherwise the probability of duplicates may be significantly higher, since the statistical dispersion may be lower.

[edit] History
The initial design of DCE UUIDs was based on UUIDs as defined in the Network Computing System,[20] whose design was in turn inspired by the (64-bit) unique identifiers defined and used pervasively in Domain/OS, the operating system designed by Apollo Computer, Inc.

[edit] References


^ The Open Group (1997). "CDE 1.1: Remote Procedure Call". http://www.opengroup.org/onlinepubs/9629399/apdxa.htm. 
^ The Open Group (1997). "DCE 1.1: Authentication and Security Services". http://www.opengroup.org/onlinepubs/9696989899/chap5.htm#tagcjh_08_02_01_01. 
^ Open Source Software Project. "Universally Unique Identifier (UUID)". http://www.ossp.org/pkg/lib/uuid/. 
^ "Cake version 1.2 manual". http://book.cakephp.org/view/70/Using-UUIDs-as-Primary-Keys. 
^ Apple Computer, Inc.. "CFUUID Reference". http://developer.apple.com/documentation/CoreFoundation/Reference/CFUUIDRef/Reference/reference.html. 
^ Adobe Systems Inc.. "ColdFusion Functions:CreateUUID". http://livedocs.adobe.com/coldfusion/8/htmldocs/functions_c-d_24.html. 
^ Boian Tzonev. "UUID". http://www.dardoria.net/software/uuid.html. 
^ "Firebird 2.1 Release Notes". http://www.firebirdsql.org/rlsnotesh/rlsnotes210.html. 
^ "Firebird 2.5 Release Notes". http://www.firebirdsql.org/rlsnotesh/rlsnotes25.html. 
^ Free Pascal Documentation. "Reference for 'sysutils' unit". http://www.freepascal.org/docs-html/rtl/sysutils/index-5.html. 
^ Antoine Latter. "uuid". http://hackage.haskell.org/cgi-bin/hackage-scripts/package/uuid. 
^ Theodore Ts'o. e2fsprogs "esfsprogs". http://e2fsprogs.sourceforge.net/ e2fsprogs. 
^ MySQL AB. "MySQL 5.0 Reference Manual". http://dev.mysql.com/doc/refman/5.0/en/miscellaneous-functions.html#function_uuid. 
^ Ricardo Signes. "Data-GUID". http://search.cpan.org/dist/Data-GUID/. 
^ PostgreSQL Global Development Group. "PostgreSQL 8.3.x Documentation: UUID Type". http://www.postgresql.org/docs/8.3/static/datatype-uuid.html. 
^ "Python Library Reference: uuid". http://docs.python.org/lib/module-uuid.html. 
^ "Revolution Stuff: libUUID". http://futsoft.futilism.com/revolutionstuff.html. 
^ "Tcl Standard Library: uuid". http://tcllib.sourceforge.net/doc/uuid.html. 
^ Old Farmer's Almanac 1994, 220-222, Taking your Chances: An Explanation of Risk
^ Zahn, Lisa (1990). Network Computing Architecture. Prentice Hall. pp. 10. ISBN 0136116744. 



[edit] See also

Globally Unique Identifier


[edit] External links

International Standard "Generation and registration of Universally Unique Identifiers (UUIDs) and their use as ASN.1 Object Identifier components" (ITU-T Rec. X.667 | ISO/IEC 9834-8, freely available)
A Universally Unique IDentifier (UUID) URN Namespace (IETF RFC 4122)
Extract the time from a version 1 UUID / GUID
Global UUID registration function at ITU-T
Commons Id
ISO/IEC 11578:1996
DmaId for InstanceId Values (DCE Universally Unique IDentifiers, UUIDs)
Syntax and semantics of the DCE variant of Universal Unique Identifiers (UUIDs)
Random UUID Probability of Duplicates
IETF UUID draft specification




Retrieved from "http://en.wikipedia.org/wiki/Universally_Unique_Identifier"
Categories: Identifiers | Universal identifiers 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Deutsch
Français
日本語
עברית
Русский
中文









 This page was last modified on 9 April 2009, at 20:13 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
