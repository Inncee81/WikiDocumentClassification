













Push technology - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Push_technology";
		var wgTitle = "Push technology";
		var wgAction = "view";
		var wgArticleId = "1982854";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 282102546;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Push technology

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
Push technology, or server push, describes a style of Internet-based communication where the request for a given transaction originates with the publisher or central server. It is contrasted with pull technology, where the request for the transmission of information originates with the receiver or client.




Contents


1 General use
2 Technologies

2.1 HTTP server push
2.2 Java pushlet
2.3 Long polling
2.4 Other technologies


3 See also
4 References
5 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] General use
Push services are often based on information preferences expressed in advance. This is called a publish/subscribe model. A client might "subscribe" to various information "channels". Whenever new content is available on one of those channels, the server would push that information out to the user.
Synchronous conferencing and instant messaging are typical examples of push services. Chat messages and sometimes files are pushed to the user as soon as they are received by the messaging service. Both decentralised peer-to-peer programs (such as WASTE) and centralised programs (such as IRC or Jabber) allow pushing files, this means the sender initiates the data transfer rather than the recipient.
Email is also a push system: the SMTP protocol on which it is based is a push protocol (see Push e-mail). However, the last step—from mail server to desktop computer—typically uses a pull protocol like POP3 or IMAP. Modern e-mail clients make this step seem instantaneous by repeatedly polling the mail server, frequently checking it for new mail. The IMAP protocol includes the IDLE command, which allows the server to tell the client when new messages arrive. The original BlackBerry was the first popular example of push technology in a wireless context.
Another popular type of Internet push technology was PointCast Network, which gained popularity in the 1990s. It delivered news and stockmarket data. Both Netscape and Microsoft integrated it into their software at the height of the browser wars, but it later faded away and was replaced in the 2000s with RSS (a pull technology).
Other uses are push enabled web applications including market data distribution (stock tickers), online chat/messaging systems (webchat), auctions, online betting and gaming, sport results, monitoring consoles and sensor network monitoring.

[edit] Technologies

[edit] HTTP server push
HTTP server push (also known as HTTP streaming) is a mechanism for sending data from a web server to a web browser. HTTP server push can be achieved through several mechanisms.
Generally the web server does not terminate a response[clarification needed] after data has been served to a client. The web server leaves the response open such that if an event is received, it can immediately be sent to one or multiple clients. Otherwise the data would have to be queued until the client's next request is received. Most web servers offer this functionality via CGI (e.g. NPH scripts on Apache).
Another mechanism is related to a special MIME type called multipart/x-mixed-replace, which was introduced by Netscape in 1995. Web browsers would interpret this as a document changing whenever the server felt like pushing a new version to the client.[1][2] It is still supported by Firefox, Opera and Safari today, but traditionally ignored by Microsoft.[3] It can be applied to HTML documents, but also for streaming images in webcam applications.
The WHATWG is drafting a Web Applications 1.0 specification [4] which pushes content to the client. On September 1, 2006, the Opera web browser implemented this new experimental technology in a feature called "Server-Sent Events."[5][6]

[edit] Java pushlet
A pushlet is a technique originally developed for Java web applications, though the same techniques can be employed on other web frameworks as well. In this technique, the server takes advantage of persistent HTTP connections and leaves the response perpetually "open" (i.e. it never terminates the response), effectively fooling the browser into continuing in "loading" mode after the initial page load would normally be complete. The server then periodically sends snippets of javascript to update the content of the page, thereby achieving push capability. By using this technique the client doesn't need Java applets or other plug-ins to keep an open connection to the server. The clients will be automatically notified by new events, pushed by the server [7][8]. One serious drawback to this method, however, is the lack of control the server has over the browser timing out. A page refresh is always necessary if a timeout occurs on the browser end.

[edit] Long polling
Long polling is a variation of the traditional polling technique and allows to emulate information push from a server to a client. With long polling, the client requests information from the server in a similar way to a normal poll. However, if the server does not have any information available for the client, instead of sending an empty response, the server holds the request and waits for some information to be available. Once the information becomes available (or after a suitable timeout), a complete response is sent to the client. The client will normally then immediately re-request information from the server, so that the server will almost always have an available waiting request that it can use to deliver data in response to an event.
Long polling is itself not a push technology, but can be used under circumstances where a real push is not possible.

[edit] Other technologies
The term Comet has been used to describe push technologies applied to Ajax web applications. It's an umbrella term for a combination of web technologies such as HTTP server push and long polling (see above).

[edit] See also

BOSH
Client-server architecture
File transfer
Pull technology
Push Access Protocol
Push-Pull strategy
Reverse Ajax
Streaming media, streaming media systems


[edit] References

^ Client pull/Server push implementations
^ CGI Programming on the World Wide Web O'Reilly book explaining how to use Netscape server-push
^ Server-Push Documents (HTML & XHTML: The Definitive Guide) O'Reilly book explaining server-push
^ "Web Applications 1.0 specification". http://www.whatwg.org/specs/web-apps/current-work/#scs-server-sent. 
^ "Event Streaming to Web Browsers". 2006-09-01. http://my.opera.com/WebApplications/blog/show.dml/438711. Retrieved on 2007-03-23. 
^ "Opera takes the lead with AJAX support among browsers: More efficient streaming". 2007-09-01. http://operawatch.com/news/2006/09/opera-takes-the-lead-with-ajax-support-among-browsers-more-efficient-streaming.html. Retrieved on 2007-03-23. 
^ Pushlets introduction
^ JavaWorld article about pushlets


[edit] External links

W3C Push Workshop. A 1997 workshop that discussed push technology and some early examples thereof
HTTP Streaming with Ajax A description of HTTP Streaming from the Ajax Patterns website
HTML 5 Draft with Server-sent events A mechanism for allowing servers to dispatch events, 2008 draft
HTTP Server Push at UDAParts A commercial grade Comet implementation
Google Web Toolkit's Server Push FAQ Explains Server Push and how you can achieve this with GWT




Retrieved from "http://en.wikipedia.org/wiki/Push_technology"
Categories: Internet terminology | Web development | Web 2.0 | Ajax (programming)Hidden categories: All pages needing cleanup | Wikipedia articles needing clarification from March 2009 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Deutsch
Español
Português









 This page was last modified on 6 April 2009, at 13:04 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
