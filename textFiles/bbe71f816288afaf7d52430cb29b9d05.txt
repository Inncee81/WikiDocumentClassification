













KVM switch - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "KVM_switch";
		var wgTitle = "KVM switch";
		var wgAction = "view";
		var wgArticleId = "1153898";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 280855699;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); KVM switch

From Wikipedia, the free encyclopedia

Jump to: navigation, search 





This article does not cite any references or sources. Please help improve this article by adding citations to reliable sources (ideally, using inline citations). Unsourced material may be challenged and removed. (August 2007)






How a KVM switch functions






KVM switch


A KVM switch (with KVM being an abbreviation for Keyboard, Video or Visual Display Unit, Mouse) is a hardware device that allows a user to control multiple computers from a single keyboard, video monitor and mouse. Although multiple computers are connected to the KVM, typically a smaller number of computers can be controlled at any given time. Modern devices have also added the ability to share USB devices and speakers with multiple computers. Some KVM switches can also function in reverse - that is, a single PC can be connected to multiple monitors, keyboards, and mice. While not as common as the former, this configuration is useful when the operator wants to access a single computer from two or more (usually close) locations - for example, a public kiosk machine that also has a staff maintenance interface behind the counter, or a home office computer that doubles as a home theater PC.




Contents


1 Use
2 Passive and Active (Electronic) switches
3 Software alternatives
4 Remote KVM devices

4.1 Local Remote
4.2 KVM over IP


5 See also
6 References





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Use
A user connects a monitor, keyboard, and mouse to the KVM device, then uses special cables (generally USB and VGA ) to connect the KVM device to the computers. Control is switched from one computer to another by the use of a switch or buttons on the KVM device, with the KVM passing the signals between the computers and the keyboard, mouse and monitor depending on which computer is currently selected. Most electronic devices also allow control to be switched through keyboard commands (such as hitting a certain key, often Scroll Lock, rapidly two or three times).
Devices differ in the number of computers that can be connected, with anywhere from two up to 512 computers possible. Enterprise-grade devices can also be daisy-chained to allow even greater numbers of computers to be controlled from a single set of a keyboard, visual display unit and mouse.
A KVM switch is useful where there are multiple computers, but no need for a dedicated keyboard, monitor and mouse for each one. They are frequently used in data centers where multiple servers are placed in a single rack with a single keyboard, monitor and mouse. A KVM switch then allows data center personnel to connect to any server in the rack. A common example of home use is to enable the use of the full-size keyboard, mouse and monitor of the home PC with a portable device such as a laptop, tablet PC or PDA.

[edit] Passive and Active (Electronic) switches
KVM switches were originally passive, mechanical devices based on multi-pole switches and some of the cheapest devices on the market still use this technology. Mechanical switches usually have a rotary knob to select between computers. KVMs typically allow sharing of 2 or 4 computers, with a practical limit of about 12 machines imposed by limitations on available switch configurations. Modern hardware designs use active electronics rather than physical switch contacts with the potential to control many computers on a common system backbone.
One limitation of mechanical KVM switches is that any computer not currently selected by the KVM switch does not 'see' a keyboard or mouse connected to it. In normal operation this is not a problem, but while the machine is booting up it will attempt to detect its keyboard and mouse and either fail to boot or boot with an unwanted (e.g. mouseless) configuration. Thus mechanical KVM switches may be unsuitable for controlling machines which can reboot automatically e.g. after a power failure.
Most active (electronic) KVM devices provide peripheral emulation, sending signals to the computers that are not currently selected to simulate a keyboard, mouse and monitor being connected. These are used to control machines which may reboot in unattended operation. Peripheral emulation services embedded in the hardware also provides continuous support where computers require constant communication with the peripherals.
Another problem frequently encountered with mechanical devices is a failure of all terminals to properly make contact, requiring some 'wiggling' of the knob to correct patchy colors on screen or unreliable peripheral response.
Some active KVM switches don't pass signals 100% like the original one, and this can result in buggy behaviour in the target computer. For example, a Multimedia Keyboard connected to a KVM switch may have its Multimedia Keys without effect on the computer; a monitor connected this way may be incorrectly detected, especially by OSes that rely heavily on boot-time plug'n'play detection of peripherals, such as Ubuntu. An undesirable consequence of this is working in very low screen resolution, such as 800x600@60Hz, unless some setting forces a given resolution.

[edit] Software alternatives
There are software alternatives to a hardware KVM switch such as Input Director, Synergy, Virtual Network Computing (VNC), teleport or the commercial Multiplicity, KaVoom, MaxiVista, and PC Anywhere, which do the switching in software and forward input over standard network connections. This has the advantage of reducing the number of wires needed, and the screen-edge switching it provides makes it easier to forget that you are using two computers. However, there are some disadvantages. Software alternatives typically require additional software to be pre-loaded onto each one of the target servers or computers to allow clients to remotely attach to. They also can not be used when the host Operating System is not installed yet or has not started: operating system installations are thus not possible nor is access to a computer's BIOS or other built-in configuration areas. Finally, the software alternatives can be difficult or impossible to access if the computer is very busy or has stopped responding to network connections.

[edit] Remote KVM devices
There are two types of remote KVM devices that are best described as Local Remote and KVM over IP.

[edit] Local Remote
Local Remote KVM device design allows users to control computer equipment up to 1000 feet (300 m) away from the user consoles (keyboard, monitor and mouse). They include support for standard category 5 cabling between computers and users interconnected by the switch device. In contrast, USB powered KVM devices such as the KVM2USB [1] are able to control computer equipment using a combination of USB, keyboard, mouse and monitor cables of up to 5 meters.
Category 5 based KVM device communication uses proprietary protocols across what can be considered a "closed loop" local area network infrastructure. In contrast to remote over IP devices, users operate computers in "real time" because there is no noticeable latency in communication between user consoles and the computers.
Small interface devices at the computers connect to the keyboard, VDU and mouse ports of the computer. They convert these signals to a format suitable for category 5 cable and transmit this data to the user stations that decode it into normal analog signals suitable for the peripherals. Similar devices exist for KVM over IP that only support transmitting the signals at distances of thirty to fifty feet. While interface, switch, and user devices are interconnected using category 5 cabling and can be patched through non-active patch panels, the data signals are not the equivalent of ethernet (see Tron: Category 5 - Ethernet vs KVM Networks [2]) so care must be taken not to cross connect these KVM components to ethernet switches.
Local remote KVM systems can support over 256 access points with access to over 8000 computers. The closed loop backbone is inherently secure and the long distance connectivity allows users and computer equipment to be distributed across many different locations throughout a facility. Where users need to manage the connected computers from off site locations, local remote KVM devices are configured with Remote over IP KVM support.

[edit] KVM over IP
KVM over IP devices use a dedicated microcontroller and potentially specialized video capture hardware to capture the video, keyboard, and mouse signals, compress and convert them into packets, and send them over an Ethernet link to a remote console application that unpacks and reconstitutes the dynamic graphical image. This KVM over IP subsystem is typically connected to a system's standby power plane so that it's available during the entire BIOS boot process. These devices allow multiple computers to be controlled remotely across a wide area network, local area network or telephone-line using the TCP/IP protocols. There are performance issues related with LAN/WAN hardware, standard protocols and network latency so user management is commonly referred to as "near real time". And, remote KVM over IP devices offer much smaller matrix frameworks.
Access to most remote or "KVM" over IP devices today use a web browser but proprietary viewer software can increase performance. A consideration of the viewer software relative to a browser based application is the area of ActiveX or Java security. Well formed implementations can be found across the major vendors today, yet there are many entry-level implementations that may not be as robust when it comes to security, performance and reliability. Important to note is that many of the stand-alone viewer software applications provided by many manufacturers are also reliant on ActiveX or Java. In addition, each major manufacturer is free to use various licensing mechanisms, some based on numbers of target devices, some based on numbers of users, and some based on numbers of sessions.
In comparison to conventional methods of remote administration (for example Virtual Network Computing or Terminal Services), a KVM switch has the advantage that it doesn't depend on a software component running on the remote computer, thus allowing remote interaction with base level BIOS settings and monitoring of the entire booting process before, during, and after the operating system loads. Modern KVM over IP appliances or switches typically use at least 128-bit data encryption securing the KVM configuration over a WAN or LAN (using SSL)
KVM over IP devices have been implemented in many different ways. For the graphics capture portion, PCI based KVM over IP cards use a variation of a technique known as screen scraping where the PCI bus master KVM over IP card would access graphics data directly from the graphics memory buffer. In these cases, the PCI card must know which graphics chip it is working with, and what graphics mode this chip is currently in so that the contents of the buffer can be interpreted correctly as picture data. Newer techniques such as those used by OPMA management subsystem cards and other implementations obtain the video data directly from the graphics chip using the industry standard DVI bus. There are also a variety of ways to emulate the keyboard and the mouse remotely, but newer implementations emulate USB based keyboards and mice using the management controller.

[edit] See also

Console server
Intel vPro
Remote graphics unit
Dynamic Device Mapping


[edit] References



Retrieved from "http://en.wikipedia.org/wiki/KVM_switch"
Categories: Computer peripherals | Input/Output | Out-of-band managementHidden categories: Articles lacking sources from August 2007 | All articles lacking sources 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Deutsch
Español
Esperanto
Français
한국어
Bahasa Indonesia
Nederlands
Polski
Русский
Türkçe
Tiếng Việt
中文









 This page was last modified on 31 March 2009, at 13:22.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
