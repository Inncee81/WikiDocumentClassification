













XSLT elements - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "XSLT_elements";
		var wgTitle = "XSLT elements";
		var wgAction = "view";
		var wgArticleId = "7382590";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 277720968;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
/*<![CDATA[*/
.source-xml {line-height: normal;}
.source-xml li, .source-xml pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for xml
 * CSS class: source-xml, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-xml .de1, .source-xml .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-xml  {}
.source-xml .head {}
.source-xml .foot {}
.source-xml .imp {font-weight: bold; color: red;}
.source-xml .ln-xtra {color: #cc0; background-color: #ffc;}
.source-xml li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-xml li.li2 {font-weight: bold;}
.source-xml .coMULTI {color: #808080; font-style: italic;}
.source-xml .es0 {color: #000099; font-weight: bold;}
.source-xml .br0 {color: #66cc66;}
.source-xml .st0 {color: #ff0000;}
.source-xml .nu0 {color: #cc66cc;}
.source-xml .sc0 {color: #00bbdd;}
.source-xml .sc1 {color: #ddbb00;}
.source-xml .sc2 {color: #339933;}
.source-xml .sc3 {color: #009900;}
.source-xml .re0 {color: #000066;}
.source-xml .re1 {font-weight: bold; color: black;}
.source-xml .re2 {font-weight: bold; color: black;}

/*]]>*/

/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
 <!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); XSLT elements

From Wikipedia, the free encyclopedia

Jump to: navigation, search 







This article or section has multiple issues. Please help improve the article or discuss these issues on the talk page.

It does not cite any references or sources. Please help improve it by citing reliable sources. Tagged since July 2008.
It does not have a lead section. Tagged since July 2008.





This article lists some of the elements used in XSLT.




Contents


1 XSLT logic elements

1.1 Example XSLT stylesheet using logic elements


2 XSLT file I/O elements
3 Other XSLT semantics
4 Functions defined by XSLT
5 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] XSLT logic elements


Node
Description/ attributes
Container/ children
Example


xsl:apply-templates
Specifies that other matches may exist within that node; if this is not specified any matches will be ignored
If “select” is specified, only the templates that specify a “match” that fits the selected node or attribute type will be applied. If “mode” is specified, only the templates that have the same “mode” and have an appropriate “match” will be applied

Any parent
Can contain any number of xsl:sort and xsl:with-param children

<xsl:apply-templates/>



xsl:choose

Multiple choices
No attributes

Any parent
Contains xsl:when blocks and up to one xsl:otherwise block

<xsl:choose>
…
</xsl:choose>




xsl:for-each

Creates a loop which repeats for every match
“select” designates the match criteria

Any parent
Can contain any XML

<xsl:for-each select="input[@name=$name]">

…
</xsl:for-each>




xsl:if

Yes or No conditions
“test” specifies criteria for entering the if

Any parent
Can contain any XML

<xsl:if test="$type='text' or $type='password'">
…
</xsl:if>




xsl:otherwise

The default choice if none of the “xsl:when” criteria are met
xsl:choose
Can contain any XML

<xsl:otherwise>
…
</xsl:otherwise>




xsl:stylesheet

Top-level element. Occurs only once in a stylesheet document.
“version” specifies which XSLT version is being used “xmlns:xsl” specifies the URL of that standard

Top-level element. Contains all XML
<xsl:stylesheet>
… </xsl:stylesheet>




xsl:template

Specifies processing templates
“match” is when the template should be used.
“name” gives the template a name which xsl:call-templates etc can use to call this template.

xsl:stylesheet
Can contain any XML

<xsl:template match="//input">
…
</xsl:template>




xsl:variable

Allows a variable to be declared
“name” is the variable name. It can be referred to later with “$name” “select” is the value of the variable

Any parent
no children

<xsl:variable name="type" select="@type"/>



xsl:when

Yes or No conditions
“test” specifies criteria for entering the if

xsl:choose
Can contain any XML

<xsl:when test="$type='radio'">
…
</xsl:when>




[edit] Example XSLT stylesheet using logic elements


<xsl:stylesheet>
<xsl:template match="//input">
<xsl:variable name="type" select="@type"/>
<xsl:variable name="name" select="@name"/>
<xsl:if test="$type='text' or $type='password' or $type='radio' or $type='checkbox'">
	<xsl:choose>
		<xsl:when test="$type='radio'">
                    <xsl:if test="not(preceding-sibling::input[@type='radio'])">
                        <select name="{@name}">
                        <xsl:for-each select="../input[@name=$name]">
                                <option value="{@value}">
                                        <xsl:apply-templates/>
                                </option>
                        </xsl:for-each>
                        </select>
                    </xsl:if>
		</xsl:when>
		<xsl:when test="$type='text'">
			<input name="{@name}" type="{@type}">
				<xsl:apply-templates/>
			</input>
		</xsl:when>
		<xsl:when test="$type='password'">
			<input name="{@name}" type="{@type}">
				<xsl:apply-templates/>
			</input>
		</xsl:when>
	</xsl:choose>
</xsl:if>
</xsl:template>
</xsl:stylesheet>


[edit] XSLT file I/O elements


Node
Description/ attributes
Container/ children
Example


xsl:call-template
Calls the template whose name is specifed.
name matches the name in xsl-template

Any parent
children are xsl:with-param

<xsl:call-template name="lib:make-elem">


xsl:import
Retrieves another XSLT file
href is the URI of the file

xls:stylesheet
No children

<xsl:import href="..\Library\FuncLib.xslt"/>


xsl:output
Describes how data will be returned
method designates what kind of data is returned
omit-xml-declaration indicates if the initial xml tag should be included.
encoding designates how the data is returned.

xls:stylesheet
No children

<xsl:output method="xml" omit-xml-declaration="yes" encoding="UTF-8"/>


xsl:param
Designates a parameter which may be passed into the template with xsl:call-template.
xsl:template
No children

<xsl:param name="elem-name"/>


xsl:text
Outputs the tag content
Any parent
No children

<xsl:text>ClaimNumber	ClaimSeqNumber</xsl:text>


xsl:value-of
Outputs a variable
select specifies the variable

Any parent
No children

<xsl:value-of select="$s"/>


xsl:with-param
Designates a parameter passed to xsl:call-template. It must be matched by an xsl:param in the template.
name specifies the parameter name.
select specifies the parameter value

xsl:call-template
No children

<xsl:with-param name="elem-name" select="'hma:ClaimNumber'"/>


Client-side XSLT can be implemented in a browser by adding a line like the following to the source XML file, right after the root XML tag. <?xml-stylesheet type="text/xsl" href="family.xsl"?>
This is described on the page http://www.xml.com/pub/a/2000/10/25/msie/index.html

[edit] Other XSLT semantics


symbol
meaning
where used


|
union operator. used to group nodesets in XPath expressions.
select attributes of elements such as xsl:when, xsl:if, xsl:for-each


&
and
any conditional or match criterion, for example xsl:if.test, xsl:when.test, xsl:template.select and xsl:for-each.select


<!--
begin comment
anywhere not in a tag


-->
end comment
anywhere not in a tag


$
start of a variable name
anywhere in a tag, for example xsl:value-of.select and xsl:variable.name


name()
the name of the tag being processed. Useful if the matching criteria contains |s (pipe symbols)
any conditional or match criterion, for example xsl:if.test, xsl:when.test, xsl:template.select and xsl:for-each.select


@
an attribute within the XML
any conditional or match criterion, for example xsl:if.test, xsl:when.test, xsl:template.select and xsl:for-each.select



[edit] Functions defined by XSLT
The following functions can occur in many XSLT attributes, such as xsl:value-of.select and xsl:for-each.select.


Function
Description/ Syntax
Example


ceiling
The ceiling function returns the smallest integer that is equal to or is larger than the numeric value of the number argument.
ceiling(3.57)


concat
Concatenates two or more strings, which are listed in the parentheses
concat($fname,’ ‘, $lname)


count
The count function counts and returns the number of nodes in a node-set.
count(elements)


floor
The floor function returns the largest integer that is equal to or is smaller than the numeric value of the number argument.
floor(3.57)


normalize-space
Removes white-space from the beginning and end of the string
normalize-space($fname)


position
The position function returns the position number in the current node list of the node that is currently being processed by an xsl:for-each or xsl:apply-templates element. There are no arguments.
position()


round
The round function rounds a number to its closest integer.
round(3.57)


string
The string function converts the value argument to a string.
string()


string-length
The string-length function returns the number of characters in a string. The string argument is optional. If omitted, the default is to use the string value of the context node.
string-length(‘hello’)


substring
A segment within a variable value. Substring takes three parameters: the input variable, the first character to be selected, and the length of the resulting string
substring($dob,4,2)


substring-after
The substring-after function returns a portion out of the string specified in the string argument that occurs after the substring specified in the substring argument.
substring-after(‘In 1814 we took a little trip’, ‘we’)


substring-before
The substring-before function returns a portion out of the string specified in the string argument that occurs before the substring specified in the substring argument.
substring-before(‘In 1814 we took a little trip’, ‘we’)


sum
The sum function adds and returns the total value of a set of numeric values in a node-set or list of values.
sum(1,3,7,12)


translate
Takes the string in the value argument, replaces all occurrences of a string specified in the string1 argument with substitute characters specified in string2 argument and returns the modified string.
translate(‘colored armor’, ‘or’, ‘our’)



[edit] External links

W3C XSLT 1.0 recommendation - Describes the whole syntax and semantics of XSLT 1.0
W3C XSLT 2.0 recommendation
XSLT Elements List - by W3Schools








v • d • e

XSL






XSLT (elements) • XSL-FO • XPath 1.0, 2.0









Retrieved from "http://en.wikipedia.org/wiki/XSLT_elements"
Categories: XML-based standardsHidden categories: Articles lacking sources from July 2008 | All articles lacking sources | Cleanup from July 2008 | Wikipedia introduction cleanup 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Polski









 This page was last modified on 16 March 2009, at 20:50 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
