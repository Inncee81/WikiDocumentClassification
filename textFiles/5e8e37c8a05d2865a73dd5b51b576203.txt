













Document Object Model - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Document_Object_Model";
		var wgTitle = "Document Object Model";
		var wgAction = "view";
		var wgArticleId = "8743";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281440949;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Document Object Model

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
For Domain Object Model, see Domain Model.




Hierarchy of objects in an example HTML DOM - Document Object Model


The Document Object Model (DOM) is a platform- and language-independent standard object model for representing HTML or XML documents as well as an Application Programming Interface (API) for querying, traversing and manipulating such documents.




Contents


1 History

1.1 Legacy DOM
1.2 Intermediate DOM
1.3 Standardization


2 Applications

2.1 Web browsers


3 Implementations

3.1 Layout engines
3.2 Libraries


4 See also
5 References
6 External links

6.1 Specifications
6.2 Bindings







//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] History
The history of the Document Object Model is intertwined with the history of the "browser wars" of the late 1990s between Netscape Navigator and Microsoft Internet Explorer, likewise that of JavaScript and JScript, the first scripting languages to be widely implemented in the layout engines of web browsers.

[edit] Legacy DOM
JavaScript was released by Netscape Communications in 1996 within Netscape Navigator 2.0. Netscape's competitor, Microsoft, released Internet Explorer 3.0 later the same year with a port of JavaScript called JScript. JavaScript and JScript let web developers create web pages with client-side interactivity. The limited facilities for detecting user-generated events and modifying the HTML document in the first generation of these languages eventually became known as "DOM Level 0" or "Legacy DOM". No independent standard was developed for DOM Level 0, but it was partly described in the specification of HTML4.
Legacy DOM was limited in the kinds of elements that could be accessed. Form, link and image elements could be referenced with a hierarchical name that began with the root document object. A hierarchical name could make use of either the names or the sequential index of the traversed elements. For example, a form input element could be accessed as either "document.formName.inputName" or "document.forms[0].elements[0]".
The Legacy DOM enabled client-side form validation and the popular "rollover" effect.

[edit] Intermediate DOM
In 1997, Netscape and Microsoft released version 4.0 of Netscape Navigator and Internet Explorer, adding support for Dynamic HTML (DHTML), functionality enabling changes to a loaded HTML document. DHTML required extensions to the rudimentary document object that was available in the Legacy DOM implementations. Although the Legacy DOM implementations were largely compatible since JScript was based on JavaScript, the DHTML DOM extensions were developed in parallel by each browser maker and remained incompatible. These versions of the DOM became known as the "Intermediate DOM."
The Intermediate DOMs enabled the manipulation of Cascading Style Sheet (CSS) properties which influence the display of a document. They also provided access to a new feature called "layers" via the "document.layers" property (Netscape Navigator) and the "document.all" property (Internet Explorer). Because of the fundamental incompatibilities in the Intermediate DOMs, cross-browser development required special handling for each supported browser.
Subsequent versions of Netscape Navigator abandoned support for its Intermediate DOM. Internet Explorer continues to support its Intermediate DOM for backwards compatibility.

[edit] Standardization
The World Wide Web Consortium (W3C), founded in 1994 to promote open standards for the World Wide Web, brought Netscape Communications and Microsoft together with other companies to develop a standard for browser scripting languages, called "ECMAScript". The first version of the standard was published in 1997. Subsequent releases of JavaScript and JScript would implement the ECMAScript standard for greater cross-browser compatibility.
After the release of ECMAScript, W3C began work on a standardized DOM. The initial DOM standard, known as "DOM Level 1," was recommended by W3C in late 1998. About the same time, Internet Explorer 5.0 shipped with limited support for DOM Level 1. DOM Level 1 provided a complete model for an entire HTML or XML document, including means to change any portion of the document. Non-conformant browsers such as Internet Explorer 4.x and Netscape 4.x were still widely used as late as 2000.
DOM Level 2 was published in late 2000. It introduced the "getElementById" function as well as an event model and support for XML namespaces and CSS. DOM Level 3, the current release of the DOM specification, published in April 2004, added support for XPath and keyboard event handling, as well as an interface for serializing documents as XML.
By 2005, large parts of W3C DOM were well-supported by common ECMAScript-enabled browsers, including Microsoft Internet Explorer version 6 (2001), Gecko-based browsers (like Mozilla, Firefox and Camino), Konqueror, Opera, and Safari.

[edit] Applications
DOM is likely to be best suited for applications where the document must be accessed repeatedly or out of sequence order. If the application is strictly sequential and one-pass, the SAX model is likely to be faster and use less memory. In addition, non-extractive XML parsing models, such as VTD-XML, provide a new memory-efficient option.

[edit] Web browsers
A web browser is not obliged to use DOM in order to render an HTML document. However, the DOM is required by JavaScript scripts that wish to inspect or modify a web page dynamically. In other words, the Document Object Model is the way JavaScript sees its containing HTML page and browser state.

[edit] Implementations
Because DOM supports navigation in any direction (e.g., parent and previous sibling) and allows for arbitrary modifications, an implementation must at least buffer the document that has been read so far (or some parsed form of it).

[edit] Layout engines
Web browsers rely on layout engines to parse HTML into a DOM. Some layout engines such as Gecko or Trident/MSHTML are associated primarily or exclusively with a particular browser such as Firefox or Internet Explorer. Others, such as WebKit, are shared by a number of browsers, such as Safari and Google Chrome. The different layout engines implement the DOM standards to varying degrees of compliance.
See also: Comparison of layout engines (Document Object Model)

[edit] Libraries

JAXP (Java API for XML Processing)
libxml2
MSXML
VTD-XML for building SOA intermediary applications
Xerces


[edit] See also

DOM scripting
JDOM - a Java-based document object model for XML that integrates with DOM and SAX and uses parsers to build the document.
SXML - a model for representing XML and HTML in the form of S-expressions.
Ajax - a methodology employing DOM in combination with techniques for retrieving data without reloading a page.
TinyXml - efficient platform-independent XML library for C++.


[edit] References

Flanagan, David (2006). JavaScript: The Definitive Guide. O'Reilly & Associates. pp. 312-313. ISBN 0596101996. 
Koch, Peter-Paul (May 14, 2001). "The Document Object Model: an Introduction". Digital Web Magazine. http://www.digital-web.com/articles/the_document_object_model/. Retrieved on January 10, 2009. 
Le Hégaret, Philippe (2002). "The W3C Document Object Model (DOM)". World Wide Web Consortium. http://www.w3.org/2002/07/26-dom-article.html. Retrieved on January 10, 2009. 
Guisset, Fabian. "What does each DOM Level bring?". Mozilla Developer Center. Mozilla Project. http://developer.mozilla.org/en/docs/DOM_Levels. Retrieved on January 10, 2009. 


[edit] External links



Wikimedia Commons has media related to: 
Document object models 



W3.org on DOM
Technology Reports
Tutorials
What does your user agent claim to support?
W3C DOM scripts and compatibility tables (Quirksmode)
Gecko DOM Reference (Mozilla Developer Center)
DOM Reference (Tellme)
IB DOM Utilities: Mapping JavaScript Objects to DOM Elements


[edit] Specifications

Document Object Model (DOM) Level 1 Specification
Level 2 Recommendations:

Document Object Model (DOM) Level 2 Core Specification
Document Object Model (DOM) Level 2 Views Specification
Document Object Model (DOM) Level 2 Events Specification
Document Object Model (DOM) Level 2 Style Specification
Document Object Model (DOM) Level 2 Traversal and Range Specification
Document Object Model (DOM) Level 2 HTML Specification


Level 3 Recommendations:

Document Object Model (DOM) Level 3 Core Specification
Document Object Model (DOM) Level 3 Load and Save Specification
Document Object Model (DOM) Level 3 Validation Specification


Level 3 Working Group Notes:

Document Object Model (DOM) Level 3 XPath Specification
Document Object Model (DOM) Level 3 Views and Formatting Specification
Document Object Model (DOM) Requirements


Working Draft

Window Object 1.0




[edit] Bindings

Ada
C
C++: Arabica, Xerces
Common Lisp: XPublish, CL-XML, CXML
Haskell
Java - W3C Document Object Model Level 2
Pascal (Kylix programming tool)
Perl
PHP
Python
Ruby
TCL








v • d • e

Standards of the World Wide Web Consortium





Recommendations

Canonical XML · CDF · CSS · DOM · HTML · MathML · OWL · P3P · PLS · RDF · RDF Schema · SISR · SMIL · SOAP · SRGS · SSML · SVG · SPARQL · Timed Text · VoiceXML · WSDL · XForms · XHTML · XLink · XML · XML Base · XML Encryption · XML Events · XML Information Set · XML Schema · XML Signature · XPath · XPointer · XQuery · XSL · XSL-FO · XSLT






Notes

XAdES · XHTML+SMIL






Working Drafts

CCXML · CURIE · HTML 5 · InkML · WICD · XFDL · XFrames · XBL · XHTML+MathML+SVG · XProc  · OWL 2






Guidelines

Web Content Accessibility Guidelines






deprecated

HDML · JSSS · PGML · VML









Retrieved from "http://en.wikipedia.org/wiki/Document_Object_Model"
Categories: Application programming interfaces | Object models | World Wide Web Consortium standards | XML-based standards 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Afrikaans
Català
Česky
Deutsch
Español
فارسی
Français
한국어
Bahasa Indonesia
Italiano
עברית
Magyar
Македонски
Bahasa Melayu
Nederlands
日本語
‪Norsk (bokmål)‬
Polski
Português
Русский
Suomi
Svenska
தமிழ்
ไทย
Türkçe
Türkmençe
Українська
Tiếng Việt
中文









 This page was last modified on 3 April 2009, at 04:42.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
