













Schulze method - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Schulze_method";
		var wgTitle = "Schulze method";
		var wgAction = "view";
		var wgArticleId = "680729";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 282963329;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
/*<![CDATA[*/
.source-pascal {line-height: normal;}
.source-pascal li, .source-pascal pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for pascal
 * CSS class: source-pascal, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-pascal .de1, .source-pascal .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-pascal  {font-family: monospace;}
.source-pascal .head {}
.source-pascal .foot {}
.source-pascal .imp {font-weight: bold; color: red;}
.source-pascal .ln-xtra {color: #cc0; background-color: #ffc;}
.source-pascal li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-pascal li.li2 {font-weight: bold;}
.source-pascal .kw1 {color: #b1b100;}
.source-pascal .kw2 {color: #000000; font-weight: bold;}
.source-pascal .kw3 {}
.source-pascal .kw4 {color: #993333;}
.source-pascal .co1 {color: #808080; font-style: italic;}
.source-pascal .co2 {color: #339933;}
.source-pascal .coMULTI {color: #808080; font-style: italic;}
.source-pascal .es0 {color: #000099; font-weight: bold;}
.source-pascal .br0 {color: #66cc66;}
.source-pascal .st0 {color: #ff0000;}
.source-pascal .nu0 {color: #cc66cc;}
.source-pascal .me1 {color: #202020;}

/*]]>*/

/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
 <!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Schulze method

From Wikipedia, the free encyclopedia

Jump to: navigation, search 


 


This article is part of the
Politics series


Electoral methods


 


Single-winner





Plurality (first-past-the-post)
Multiple-round systems

Two round
Exhaustive ballot


Preferential systems

Condorcet criterion

Condorcet method
Copeland's method
Kemeny-Young method
Minimax
Nanson's method
Ranked Pairs
Schulze method


Bucklin voting
Coombs' method
Instant-runoff

Contingent vote


Borda count


Non-ranking methods

Approval voting
Range voting







Multiple-winner





Proportional representation

Mixed-member
Party-list  (open · closed)

D'Hondt method
Highest averages
Largest remainder
Sainte-Laguë method


Single transferable vote

CPO-STV
Schulze STV


Quota Borda system
Matrix vote


Semi-proportional representation

Cumulative voting
Limited voting

Single non-transferable vote


Parallel voting


Non-proportional representation

Plurality-at-large
Preferential block voting







Random selection





Sortition
Random ballot





Politics portal



v • d • e



The Schulze method is a voting system developed in 1997 by Markus Schulze that selects a single winner using votes that express preferences. The method can also be used to create a sorted list of winners. The Schulze method is also known as Schwartz Sequential Dropping (SSD), Cloneproof Schwartz Sequential Dropping (CSSD), Beatpath Method, Beatpath Winner, Path Voting, and Path Winner.
If there is a candidate who is preferred pairwise over the other candidates, when compared in turn with each of the others, the Schulze method guarantees that candidate will win. Because of this property, the Schulze method is (by definition) a Condorcet method.
Currently, the Schulze method is the most wide-spread Condorcet method (list). The Schulze method is used by several organizations including Wikimedia, Debian, Gentoo, and Software in the Public Interest.
Many different heuristics for computing the Schulze method have been proposed. The most important heuristics are the path heuristic and the Schwartz set heuristic that are described below. All heuristics find the same winner and only differ in the details of the computational procedure to determine this winner.




Contents


1 The path heuristic

1.1 Procedure
1.2 Remark
1.3 Examples

1.3.1 Example 1
1.3.2 Example 2
1.3.3 Example 3
1.3.4 Example 4


1.4 Implementation


2 The Schwartz set heuristic

2.1 The Schwartz set
2.2 Procedure
2.3 An example

2.3.1 The situation
2.3.2 Pairwise winners
2.3.3 Dropping
2.3.4 Ambiguity resolution example
2.3.5 Summary




3 Satisfied and failed criteria

3.1 Satisfied criteria
3.2 Failed criteria

3.2.1 Independence of irrelevant alternatives




4 Comparison with other preferential single-winner election methods
5 History of the Schulze method
6 Use of the Schulze method

6.1 Wikimedia Foundation, 2008


7 Notes
8 External links

8.1 General
8.2 Tutorials
8.3 Advocacy
8.4 Research papers
8.5 Books
8.6 Software
8.7 Legislative projects







//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] The path heuristic




Example Schulze method ballot


Under the Schulze method (as well as under other preferential single-winner election methods), each ballot contains a complete list of all candidates and the individual voter ranks this list in order of preference. Under a common ballot layout (as shown in the image to the right), ascending numbers are used, whereby the voter places a '1' beside the most preferred candidate, a '2' beside the second-most preferred, and so forth. Voters may give the same preference to more than one candidate and may keep candidates unranked. When a given voter does not rank all candidates, then it is presumed that this voter strictly prefers all ranked candidates to all unranked candidates and that this voter is indifferent between all unranked candidates.
The basic idea of the path heuristic for the Schulze method is the concept of indirect defeats, the so-called paths.
If candidate C(1) pairwise beats candidate C(2), candidate C(2) pairwise beats candidate C(3), candidate C(3) pairwise beats candidate C(4), ..., and C(n-1) pairwise beats candidate C(n), then we say that there is a path from candidate C(1) to candidate C(n). The strength of the path C(1),...,C(n) is the weakest pairwise defeat in this sequence.
In other words:



Suppose d[V,W] is the number of voters who strictly prefer candidate V to candidate W.






A path is a sequence of candidates C(1),...,C(n) with d[C(i),C(i+1)] > d[C(i+1),C(i)] for all i = 1,...,(n-1).






The strength of the path C(1),...,C(n) is the minimum of all d[C(i),C(i+1)] for i = 1,...,(n-1).



The strength of the strongest path from candidate A to candidate B is the maximum of the strengths of all paths from candidate A to candidate B.
Candidate A pairwise beats candidate B indirectly if either



the strength of the strongest path from candidate A to candidate B is stronger than the strength of the strongest path from candidate B to candidate A or






there is a path from candidate A to candidate B and no path from candidate B to candidate A.



Indirect defeats are transitive. That means: If candidate A pairwise beats candidate B indirectly and candidate B pairwise beats candidate C indirectly, then also candidate A pairwise beats candidate C indirectly. Therefore, no tie-breaker is needed for indirect defeats.

[edit] Procedure
Suppose d[V,W] is the number of voters who strictly prefer candidate V to candidate W.
A path from candidate X to candidate Y of strength p is a sequence of candidates C(1),...,C(n) with the following properties:



C(1) = X and C(n) = Y.
For all i = 1,...,(n-1): d[C(i),C(i+1)] > d[C(i+1),C(i)].
For all i = 1,...,(n-1): d[C(i),C(i+1)] ≥ p.



p[A,B], the strength of the strongest path from candidate A to candidate B, is the maximum value such that there is a path from candidate A to candidate B of that strength. If there is no path from candidate A to candidate B at all, then p[A,B] : = 0.
Candidate D is better than candidate E if and only if p[D,E] > p[E,D].
Candidate D is a potential winner if and only if p[D,E] ≥ p[E,D] for every other candidate E.

[edit] Remark
It is possible to prove that p[X,Y] > p[Y,X] and p[Y,Z] > p[Z,Y] together imply p[X,Z] > p[Z,X] [1]. Therefore, it is guaranteed (1) that the above definition of "better" really defines a transitive relation and (2) that there is always at least one candidate D with p[D,E] ≥ p[E,D] for every other candidate E.

[edit] Examples

[edit] Example 1
Example (45 voters; 5 candidates):

5 ACBED (that is, 5 voters have order of preference: A > C > B > E > D)
5 ADECB
8 BEDAC
3 CABED
7 CAEBD
2 CBADE
7 DCEBA
8 EBADC




d[*,A]
d[*,B]
d[*,C]
d[*,D]
d[*,E]


d[A,*]

20
26
30
22


d[B,*]
25

16
33
18


d[C,*]
19
29

17
24


d[D,*]
15
12
28

14


d[E,*]
23
27
21
31


The matrix of pairwise defeats looks as follows:

The graph of pairwise defeats looks as follows:

The strength of a path is the strength of its weakest link. For each pair of candidates X and Y, the following table lists the strongest path from candidate X to candidate Y. The critical defeats of the strongest paths are underlined.



... to A
... to B
... to C
... to D
... to E


from A ...

A-(30)-D-(28)-C-(29)-B
A-(30)-D-(28)-C
A-(30)-D
A-(30)-D-(28)-C-(24)-E


from B ...
B-(25)-A

B-(33)-D-(28)-C
B-(33)-D
B-(33)-D-(28)-C-(24)-E


from C ...
C-(29)-B-(25)-A
C-(29)-B

C-(29)-B-(33)-D
C-(24)-E


from D ...
D-(28)-C-(29)-B-(25)-A
D-(28)-C-(29)-B
D-(28)-C

D-(28)-C-(24)-E


from E ...
E-(31)-D-(28)-C-(29)-B-(25)-A
E-(31)-D-(28)-C-(29)-B
E-(31)-D-(28)-C
E-(31)-D


The strongest paths are:




p[*,A]
p[*,B]
p[*,C]
p[*,D]
p[*,E]


p[A,*]

28
28
30
24


p[B,*]
25

28
33
24


p[C,*]
25
29

29
24


p[D,*]
25
28
28

24


p[E,*]
25
28
28
31


The strengths of the strongest paths are:

Candidate E is a potential winner, because p[E,X] ≥ p[X,E] for every other candidate X.
As 25 = p[E,A] > p[A,E] = 24, candidate E is better than candidate A.
As 28 = p[E,B] > p[B,E] = 24, candidate E is better than candidate B.
As 28 = p[E,C] > p[C,E] = 24, candidate E is better than candidate C.
As 31 = p[E,D] > p[D,E] = 24, candidate E is better than candidate D.
As 28 = p[A,B] > p[B,A] = 25, candidate A is better than candidate B.
As 28 = p[A,C] > p[C,A] = 25, candidate A is better than candidate C.
As 30 = p[A,D] > p[D,A] = 25, candidate A is better than candidate D.
As 29 = p[C,B] > p[B,C] = 28, candidate C is better than candidate B.
As 29 = p[C,D] > p[D,C] = 28, candidate C is better than candidate D.
As 33 = p[B,D] > p[D,B] = 28, candidate B is better than candidate D.
Therefore, the Schulze ranking is E > A > C > B > D.

[edit] Example 2
Example (30 voters; 4 candidates):

5 ACBD
2 ACDB
3 ADCB
4 BACD
3 CBDA
3 CDBA
1 DACB
5 DBAC
4 DCBA




d[*,A]
d[*,B]
d[*,C]
d[*,D]


d[A,*]

11
20
14


d[B,*]
19

9
12


d[C,*]
10
21

17


d[D,*]
16
18
13


The matrix of pairwise defeats looks as follows:

The graph of pairwise defeats looks as follows:

The strength of a path is the strength of its weakest link. For each pair of candidates X and Y, the following table lists the strongest path from candidate X to candidate Y. The critical defeats of the strongest paths are underlined.



... to A
... to B
... to C
... to D


from A ...

A-(20)-C-(21)-B
A-(20)-C
A-(20)-C-(17)-D


from B ...
B-(19)-A

B-(19)-A-(20)-C
B-(19)-A-(20)-C-(17)-D


from C ...
C-(21)-B-(19)-A
C-(21)-B

C-(17)-D


from D ...
D-(18)-B-(19)-A
D-(18)-B
D-(18)-B-(19)-A-(20)-C


The strongest paths are:




p[*,A]
p[*,B]
p[*,C]
p[*,D]


p[A,*]

20
20
17


p[B,*]
19

19
17


p[C,*]
19
21

17


p[D,*]
18
18
18


The strengths of the strongest paths are:

Candidate D is a potential winner, because p[D,X] ≥ p[X,D] for every other candidate X.
As 18 = p[D,A] > p[A,D] = 17, candidate D is better than candidate A.
As 18 = p[D,B] > p[B,D] = 17, candidate D is better than candidate B.
As 18 = p[D,C] > p[C,D] = 17, candidate D is better than candidate C.
As 20 = p[A,B] > p[B,A] = 19, candidate A is better than candidate B.
As 20 = p[A,C] > p[C,A] = 19, candidate A is better than candidate C.
As 21 = p[C,B] > p[B,C] = 19, candidate C is better than candidate B.
Therefore, the Schulze ranking is D > A > C > B.

[edit] Example 3
Example (30 voters; 5 candidates):

3 ABDEC
5 ADEBC
1 ADECB
2 BADEC
2 BDECA
4 CABDE
6 CBADE
2 DBECA
5 DECAB




d[*,A]
d[*,B]
d[*,C]
d[*,D]
d[*,E]


d[A,*]

18
11
21
21


d[B,*]
12

14
17
19


d[C,*]
19
16

10
10


d[D,*]
9
13
20

30


d[E,*]
9
11
20
0


The matrix of pairwise defeats looks as follows:

The graph of pairwise defeats looks as follows:

The strength of a path is the strength of its weakest link. For each pair of candidates X and Y, the following table lists the strongest path from candidate X to candidate Y. The critical defeats of the strongest paths are underlined.



... to A
... to B
... to C
... to D
... to E


from A ...

A-(18)-B
A-(21)-D-(20)-C
A-(21)-D
A-(21)-E


from B ...
B-(19)-E-(20)-C-(19)-A

B-(19)-E-(20)-C
B-(19)-E-(20)-C-(19)-A-(21)-D
B-(19)-E


from C ...
C-(19)-A
C-(19)-A-(18)-B

C-(19)-A-(21)-D
C-(19)-A-(21)-E


from D ...
D-(20)-C-(19)-A
D-(20)-C-(19)-A-(18)-B
D-(20)-C

D-(30)-E


from E ...
E-(20)-C-(19)-A
E-(20)-C-(19)-A-(18)-B
E-(20)-C
E-(20)-C-(19)-A-(21)-D


The strongest paths are:




p[*,A]
p[*,B]
p[*,C]
p[*,D]
p[*,E]


p[A,*]

18
20
21
21


p[B,*]
19

19
19
19


p[C,*]
19
18

19
19


p[D,*]
19
18
20

30


p[E,*]
19
18
20
19


The strengths of the strongest paths are:

Candidate B is a potential winner, because p[B,X] ≥ p[X,B] for every other candidate X.
As 19 = p[B,A] > p[A,B] = 18, candidate B is better than candidate A.
As 19 = p[B,C] > p[C,B] = 18, candidate B is better than candidate C.
As 19 = p[B,D] > p[D,B] = 18, candidate B is better than candidate D.
As 19 = p[B,E] > p[E,B] = 18, candidate B is better than candidate E.
As 20 = p[A,C] > p[C,A] = 19, candidate A is better than candidate C.
As 21 = p[A,D] > p[D,A] = 19, candidate A is better than candidate D.
As 21 = p[A,E] > p[E,A] = 19, candidate A is better than candidate E.
As 20 = p[D,C] > p[C,D] = 19, candidate D is better than candidate C.
As 30 = p[D,E] > p[E,D] = 19, candidate D is better than candidate E.
As 20 = p[E,C] > p[C,E] = 19, candidate E is better than candidate C.
Therefore, the Schulze ranking is B > A > D > E > C.

[edit] Example 4
Example (9 voters; 4 candidates):

3 ABCD
2 DABC
2 DBCA
2 CBDA




d[*,A]
d[*,B]
d[*,C]
d[*,D]


d[A,*]

5
5
3


d[B,*]
4

7
5


d[C,*]
4
2

5


d[D,*]
6
4
4


The matrix of pairwise defeats looks as follows:

The graph of pairwise defeats looks as follows:

The strength of a path is the strength of its weakest link. For each pair of candidates X and Y, the following table lists the strongest path from candidate X to candidate Y. The critical defeats of the strongest paths are underlined.



... to A
... to B
... to C
... to D


from A ...

A-(5)-B
A-(5)-C
A-(5)-C-(5)-D


from B ...
B-(5)-D-(6)-A

B-(7)-C
B-(5)-D


from C ...
C-(5)-D-(6)-A
C-(5)-D-(6)-A-(5)-B

C-(5)-D


from D ...
D-(6)-A
D-(6)-A-(5)-B
D-(6)-A-(5)-C


The strongest paths are:




p[*,A]
p[*,B]
p[*,C]
p[*,D]


p[A,*]

5
5
5


p[B,*]
5

7
5


p[C,*]
5
5

5


p[D,*]
6
5
5


The strengths of the strongest paths are:

Candidate B and candidate D are potential winners, because p[B,X] ≥ p[X,B] for every other candidate X and p[D,Y] ≥ p[Y,D] for every other candidate Y.
As 7 = p[B,C] > p[C,B] = 5, candidate B is better than candidate C.
As 6 = p[D,A] > p[A,D] = 5, candidate D is better than candidate A.
Possible Schulze rankings are B > C > D > A, B > D > A > C, B > D > C > A, D > A > B > C, D > B > A > C, and D > B > C > A.

[edit] Implementation
Suppose C is the number of candidates. Then the strengths of the strongest paths can be calculated with the Floyd–Warshall algorithm [2]. The following Pascal-like pseudocode illustrates the determination of such a path.

Input: d[i,j] is the number of voters who strictly prefer candidate i to candidate j.
Output: p[i,j] is the strength of the strongest path from candidate i to candidate j.






for i : = 1 to C


begin


   for j : = 1 to C


   begin


      if ( i ≠ j ) then


      begin


         if ( d[i,j] > d[j,i] ) then


         begin


            p[i,j] : = d[i,j]


         end


         else


         begin


            p[i,j] : = 0


         end


      end


   end


end


 


for i : = 1 to C


begin


   for j : = 1 to C


   begin


      if ( i ≠ j ) then


      begin


         for k : = 1 to C


         begin


            if ( i ≠ k ) then


            begin   


               if ( j ≠ k ) then


               begin


                  p[j,k] : = max ( p[j,k], min ( p[j,i], p[i,k] ) )


               end


            end


         end


      end


   end


end





[edit] The Schwartz set heuristic

[edit] The Schwartz set
The definition of a Schwartz set, as used in the Schulze method, is as follows:

An unbeaten set is a set of candidates of whom none is beaten by anyone outside that set.
An innermost unbeaten set is an unbeaten set that doesn't contain a smaller unbeaten set.
The Schwartz set is the set of candidates who are in innermost unbeaten sets.


[edit] Procedure
The voters cast their ballots by ranking the candidates according to their preferences, just like for any other Condorcet election.
The Schulze method uses Condorcet pairwise matchups between the candidates and a winner is chosen in each of the matchups.
From there, the Schulze method operates as follows to select a winner (or create a ranked list):

Calculate the Schwartz set based only on undropped defeats.
If there are no defeats among the members of that set then they (plural in the case of a tie) win and the count ends.
Otherwise, drop the weakest defeat among the candidates of that set. If several defeats tie as weakest, drop all of them. Go to 1.


[edit] An example

[edit] The situation

Imagine that Tennessee is having an election on the location of its capital. The population of Tennessee is concentrated around its four major cities, which are spread throughout the state. For this example, suppose that the entire electorate lives in these four cities, and that everyone wants to live as near the capital as possible.
The candidates for the capital are:

Memphis, the state's largest city, with 42% of the voters, but located far from the other cities
Nashville, with 26% of the voters, near the center of Tennessee
Knoxville, with 17% of the voters
Chattanooga, with 15% of the voters

The preferences of the voters would be divided like this:


42% of voters
(close to Memphis)
26% of voters
(close to Nashville)
15% of voters
(close to Chattanooga)
17% of voters
(close to Knoxville)




Memphis
Nashville
Chattanooga
Knoxville




Nashville
Chattanooga
Knoxville
Memphis




Chattanooga
Knoxville
Nashville
Memphis




Knoxville
Chattanooga
Nashville
Memphis




The results would be tabulated as follows:

Pairwise election results


A



Memphis
Nashville
Chattanooga
Knoxville


B
Memphis

[A] 58%
[B] 42%
[A] 58%
[B] 42%
[A] 58%
[B] 42%


Nashville
[A] 42%
[B] 58%

[A] 32%
[B] 68%
[A] 32%
[B] 68%


Chattanooga
[A] 42%
[B] 58%
[A] 68%
[B] 32%

[A] 17%
[B] 83%


Knoxville
[A] 42%
[B] 58%
[A] 68%
[B] 32%
[A] 83%
[B] 17%



Pairwise election results (won-lost-tied):
0-3-0
3-0-0
2-1-0
1-2-0


Votes against in worst pairwise defeat:
58%
N/A
68%
83%



[A] indicates voters who preferred the candidate listed in the column caption to the candidate listed in the row caption
[B] indicates voters who preferred the candidate listed in the row caption to the candidate listed in the column caption


[edit] Pairwise winners
First, list every pair, and determine the winner:


Pair
Winner


Memphis (42%) vs. Nashville (58%)
Nashville 58%


Memphis (42%) vs. Chattanooga (58%)
Chattanooga 58%


Memphis (42%) vs. Knoxville (58%)
Knoxville 58%


Nashville (68%) vs. Chattanooga (32%)
Nashville 68%


Nashville (68%) vs. Knoxville (32%)
Nashville 68%


Chattanooga (83%) vs. Knoxville (17%)
Chattanooga: 83%


Note that absolute counts of votes can be used, or percentages of the total number of votes; it makes no difference.

[edit] Dropping
Next we start with our list of cities and their matchup wins/defeats

Nashville 3-0
Chattanooga 2-1
Knoxville 1-2
Memphis 0-3

Technically, the Schwartz set is simply Nashville as it beat all others 3 to 0.
Therefore, Nashville is the winner.

[edit] Ambiguity resolution example
Let's say there was an ambiguity. For a simple situation involving candidates A, B, C, and D.

A > B 68%
C > A 52%
A > D 62%
B > C 72%
B > D 84%
C > D 91%

In this situation the Schwartz set is A, B, and C as they all beat D.

A > B 68%
B > C 72%
C > A 52%

Schulze then says to drop the weakest defeat, so we drop C > A and are left with

A > B 68%
B > C 72%

The new Schwartz set is now A, as it is unbeaten by anyone outside its set. With A in a Schwartz set by itself, it is now the winner.

[edit] Summary
In the (first) example election, the winner is Nashville. This would be true for any Condorcet method. Using the first-past-the-post system and some other systems, Memphis would have won the election by having the most people, even though Nashville won every simulated pairwise election outright. Nashville would also have been the winner in a Borda count. Instant-runoff voting in this example would select Knoxville, even though more people preferred Nashville than Knoxville.

[edit] Satisfied and failed criteria

[edit] Satisfied criteria
The Schulze method satisfies the following criteria:

Unrestricted domain
Non-imposition (a.k.a. citizen sovereignty)
Non-dictatorship
Pareto criterion [3]
Monotonicity criterion [4]
Majority criterion
Majority loser criterion
Condorcet criterion
Condorcet loser criterion
Schwartz criterion
Smith criterion
Independence of Smith-dominated alternatives
Mutual majority criterion
Independence of clones [5]
Reversal symmetry [6]
Mono-append
Mono-add-plump
Resolvability criterion [7]
Polynomial runtime [2]

If winning votes is used as the definition of defeat strength, it also satisfies:

Woodall's plurality criterion [8]
Woodall's CDTT criterion [8]

If margins as defeat strength is used, it also satisfies:

Symmetric-completion


[edit] Failed criteria
The Schulze method violates the following criteria:

All criteria that are incompatible with the Condorcet criterion (e.g. independence of irrelevant alternatives, participation [9], consistency, invulnerability to compromising, invulnerability to burying, later-no-harm)


[edit] Independence of irrelevant alternatives
The Schulze method fails independence of irrelevant alternatives. However, the method adheres to a less strict property that is sometimes called independence of Smith-dominated alternatives. It says that if one candidate (X) wins an election, and a new alternative (Y) is added, X will win the election if Y is not in the Smith set. Local IIA implies the Condorcet criterion.

[edit] Comparison with other preferential single-winner election methods
The following table compares the Schulze method with other preferential single-winner election methods:



Monotonic
Condorcet
Condorcet loser
Majority
Majority loser
Mutual majority
Smith
ISDA
Clone independence
Reversal symmetry
Polynomial time
Participation, Consistency


Schulze
Yes
Yes
Yes
Yes
Yes
Yes
Yes
Yes
Yes
Yes
Yes
No


Ranked Pairs
Yes
Yes
Yes
Yes
Yes
Yes
Yes
Yes
Yes
Yes
Yes
No


Kemeny-Young
Yes
Yes
Yes
Yes
Yes
Yes
Yes
Yes
No
Yes
No
No


MiniMax
Yes
Yes
No
Yes
No
No
No
No
No
No
Yes
No


Nanson
No
Yes
Yes
Yes
Yes
Yes
Yes
No
No
Yes
Yes
No


Baldwin
No
Yes
Yes
Yes
Yes
Yes
Yes
No
No
No
Yes
No


Instant-runoff voting
No
No
Yes
Yes
Yes
Yes
No
No
Yes
No
Yes
No


Coombs
No
No
Yes
Yes
Yes
Yes
No
No
No
No
Yes
No


Contingent voting
No
No
Yes
Yes
Yes
No
No
No
No
No
Yes
No


Sri Lankan contingent voting
No
No
No
Yes
No
No
No
No
No
No
Yes
No


Supplementary voting
No
No
No
Yes
No
No
No
No
No
No
Yes
No


Borda
Yes
No
Yes
No
Yes
No
No
No
No
Yes
Yes
Yes


Bucklin
Yes
No
No
Yes
Yes
Yes
No
No
No
No
Yes
No


Plurality
Yes
No
No
Yes
No
No
No
No
No
No
Yes
Yes


Anti-plurality
Yes
No
No
No
Yes
No
No
No
No
No
Yes
Yes


This is the main difference between the Schulze method and the Ranked Pairs method:

Suppose the MinMax score of a set X of candidates is the strength of the strongest pairwise win of a candidate A ∉ X against a candidate B ∈ X. Then the Schulze method, but not the Ranked Pairs method, guarantees that the winner is always a candidate of the set with minimum MinMax score [10]. So, in some sense, the Schulze method minimizes the strongest pairwise win that has to be overturned when determining the winner.


[edit] History of the Schulze method
The Schulze method was developed by Markus Schulze in 1997. The first times that the Schulze method was discussed in a public mailing list were in 1998 [11] and in 2000 [12]. In the following years, the Schulze method has been adopted e.g. by Software in the Public Interest (2003) [13], Debian (2003) [14], Gentoo (2005), TopCoder (2005), Sender Policy Framework (2005), and the French Wikipedia section (2005). The first books on the Schulze method were written by Tideman (2006) and by Stahl and Johnson (2007). In the then following years, the Schulze method has been adopted e.g. by Wikimedia (2008) and KDE (2008).

[edit] Use of the Schulze method




sample ballot for Wikimedia's Board of Trustees elections


The Schulze method is not currently used in government elections. However, it is starting to receive support in some public organizations. Organizations which currently use the Schulze method are:

Annodex Association [15]
Blitzed [16]
BoardGameGeek [17]
Codex Alpe Adria [18]
County Highpointers [19]
Debian [14] [20]
EnMasse Forums
EuroBillTracker [21]
Fair Trade Northwest [22]
Free Hardware Foundation of Italy [23]
Free Software Foundation Europe (FSFE) [24]
Free Software Foundation Latin America (FSFLA) [25]
Gentoo Foundation [26]
GNU Privacy Guard (GnuPG) [27]
Graduate Student Organization at the State University of New York: Computer Science (GSOCS) [28]
Haskell [29]
Kanawha Valley Scrabble Club [30]
KDE e.V. [31]
Kingman Hall [32]
Kumoricon [33]
League of Professional System Administrators (LOPSA) [34]
Libre-Entreprise [35]
Lumiera/Cinelerra [36]
Mason Apollonic Society [37]
Mathematical Knowledge Management Interest Group (MKM-IG) [38]
Music Television (MTV) [39]
North Shore Cyclists (NSC) [40]
OpenCouchSurfing [41]
Park Alumni Society (PAS) [42]
Pitcher Plant of the Month
Pittsburgh Ultimate [43]
RPMrepo [44]
Sender Policy Framework (SPF) [45]
Software in the Public Interest (SPI) [13]
Students for Free Culture [46]
TopCoder [47]
WikIAC [48]
Wikimedia Foundation [49]
Wikipedia in French [50]
Wikipedia in Hungarian [51]
Wikipedia in Spanish [52]


[edit] Wikimedia Foundation, 2008
In June 2008, the Wikimedia Foundation used the Schulze method for the election to its Board of Trustees [49]: One vacant seat had to be filled. There were 15 candidates, about 26,000 eligible voters, and 3,019 valid ballots.
As Chen was a clear Condorcet winner, he won the vacant seat. However, there was a tie for sixth to ninth position between Heiskanen, Postlethwaite, Smith, and Saintonge. Heiskanen beat Postlethwaite; Postlethwaite beat Smith; Smith beat Saintonge; Saintonge beat Heiskanen.



TC
AB
SK
HC
AH
JH
RP
SS
RS
DR
CS
MB
KW
PW
GK


Ting Chen

1086
1044
1108
1135
1151
1245
1190
1182
1248
1263
1306
1344
1354
1421


Alex Bakharev
844

932
984
950
983
1052
1028
990
1054
1073
1109
1134
1173
1236


Samuel Klein
836
910

911
924
983
980
971
941
967
1019
1069
1099
1126
1183


Harel Cain
731
836
799

896
892
964
904
917
959
1007
1047
1075
1080
1160


Ad Huikeshoven
674
781
764
806

832
901
868
848
920
934
987
1022
1030
1115


Jussi-Ville Heiskanen
621
720
712
755
714

841
798
737
827
850
912
970
943
1057


Ryan Postlethwaite
674
702
726
756
772
770

755
797
741
804
837
880
921
1027


Steve Smith
650
694
654
712
729
750
744

778
734
796
840
876
884
1007


Ray Saintonge
629
703
641
727
714
745
769
738

789
812
848
879
899
987


Dan Rosenthal
595
654
609
660
691
724
707
699
711

721
780
844
858
960


Craig Spurrier
473
537
498
530
571
583
587
577
578
600

646
721
695
845


Matthew Bisanz
472
498
465
509
508
534
473
507
531
513
552

653
677
785


Kurt M. Weber
505
535
528
547
588
581
553
573
588
566
595
634

679
787


Paul Williams
380
420
410
435
439
464
426
466
470
471
429
521
566

754


Gregory Kohs
411
412
434
471
461
471
468
461
467
472
491
523
513
541


elections to Wikimedia's Board of Trustees in 2008:

Each figure represents the number of voters who ranked the candidate at the left better than the candidate at the top. A figure in green represents a victory in that pairwise comparison by the candidate at the left. A figure in red represents a defeat in that pairwise comparison by the candidate at the left.

[edit] Notes


^ Schulze1, section 2.3
^ a b Schulze1, section 2.4
^ Schulze1, section 4.2
^ Schulze1, section 4.4
^ Schulze1, section 4.5
^ Schulze1, section 4.3
^ Schulze1, section 4.1
^ a b Schulze1, section 6
^ Schulze1, section 3.7
^ Schulze1, section 9
^ See:

Mike Ossipoff, Party List P.S., July 1998
Markus Schulze, Tiebreakers, Subcycle Rules, August 1998
Markus Schulze, Maybe Schulze is decisive, August 1998
Norman Petry, Schulze Method - Simpler Definition, September 1998
Markus Schulze, Schulze Method, November 1998


^ See:

Anthony Towns, Disambiguation of 4.1.5, November 2000
Norman Petry, Constitutional voting, definition of cumulative preference, December 2000


^ a b Process for adding new board members, January 2003
^ a b Constitutional Amendment: Condorcet/Clone Proof SSD Voting Method, June 2003
^ Election of the Annodex Association committee for 2007, February 2007
^ Condorcet method for admin voting, January 2005
^ See:

Important notice for Golden Geek voters, September 2007
Golden Geek Awards 2008 - Nominations Open, August 2008
2008 Golden Geek Nominees Announced - Voting Open!, September 2008


^ Codex Alpe Adria Competitions
^ Adam Helman, Family Affair Voting Scheme - Schulze Method
^ See:

Constitution for the Debian Project, appendix A6
Debian Voting Information


^ See:

Candidate cities for EBTM05, EuroBillTracker Forum, December 2004
Meeting location preferences, EuroBillTracker Forum, December 2004
Date for EBTM07 Berlin, EuroBillTracker Forum, January 2007
Vote the date of the Summer EBTM08 in Ljubljana, EuroBillTracker Forum, January 2008


^ article XI section 2 of the bylaws
^ Eletto il nuovo Consiglio nella Free Hardware Foundation, June 2008
^ See:

article 6 section 3 of the constitution
Fellowship vote for General Assembly seats, March 2009


^ FSFLA Voting Instructions (Spanish); FSFLA Voting Instructions (Portuguese)
^ See:

Gentoo Foundation Charter
Aron Griffis, 2005 Gentoo Trustees Election Results, May 2005
Lars Weiler, Gentoo Weekly Newsletter 23 May 2005
Daniel Drake, Gentoo metastructure reform poll is open, June 2005
Grant Goodyear, Results now more official, September 2006
2007 Gentoo Council Election Results


^ GnuPG Logo Vote, November 2006
^ User Voting Instructions
^ Haskell Logo Competition, March 2009
^ A club by any other name ..., April 2009
^ section 3.4.1 of the Rules of Procedures for Online Voting
^ See:

Ka-Ping Yee, Condorcet elections, March 2005
Ka-Ping Yee, Kingman adopts Condorcet voting, April 2005


^ See:

Kumoricon mascot 2007 contest
Kumoricon mascot 2008 and cover 2007 contests
Kumoricon mascot 2009 and program cover 2008 contests


^ article 8.3 of the bylaws
^ See:

Choix de date pour la réunion Libre-entreprise durant le Salon Solution Linux 2006, January 2006
Entrée de Libricks dans le réseau Libre-entreprise, February 2008


^ Lumiera Logo Contest, January 2009
^ article 5 of the constitution
^ The MKM-IG uses Condorcet with dual dropping. That means: The Schulze ranking and the ranked pairs ranking are calculated and the winner is the top-ranked candidate of that of these two rankings that has the better Kemeny score. See:

MKM-IG Charter
Michael Kohlhase, MKM-IG Trustees Election Details & Ballot, November 2004
Andrew A. Adams, MKM-IG Trustees Election 2005, December 2005
Lionel Elie Mamane, Elections 2007: Ballot, August 2007


^ Benjamin Mako Hill, Voting Machinery for the Masses, July 2008
^ NSC Jersey election, NSC Jersey vote, September 2007
^ Thomas Goorden, CS community city ambassador elections on January 19th 2008 in Antwerp and ..., November 2007
^ Voting Procedures
^ 2006 Community for Pittsburgh Ultimate Board Election, September 2006
^ LogoVoting, December 2007
^ See:

SPF Council Election Procedures
2006 SPF Council Election, January 2006
2007 SPF Council Election, January 2007


^ See:

Bylaws of the Students for Free Culture, article V, section 1.1.1
Free Culture Student Board Elected Using Selectricity, February 2008


^ See:

2006 TopCoder Open Logo Design Contest, November 2005
2006 TopCoder Collegiate Challenge Logo Design Contest, June 2006
2007 TopCoder High School Tournament Logo, September 2006
2007 TopCoder Arena Skin Contest, November 2006
2007 TopCoder Open Logo Contest, January 2007
2007 TopCoder Open Web Design Contest, January 2007
2007 TopCoder Collegiate Challenge T-Shirt Design Contest, September 2007
2008 TopCoder Open Logo Design Contest, September 2007
2008 TopCoder Open Web Site Design Contest, October 2007
2008 TopCoder Open T-Shirt Design Contest, March 2008


^ See:

Tornei:Carnevale 2007, March 2007
Tornei:Sigle estate 2008, July 2008


^ a b See:

Jesse Plamondon-Willard, Board election to use preference voting, May 2008
Mark Ryan, 2008 Wikimedia Board Election results, June 2008
2008 Board Elections, June 2008


^ The Schulze method is one of three methods recommended for decision-making. See here.
^ See here and here.
^ See here.



Schulze1: Markus Schulze, A New Monotonic, Clone-Independent, Reversal Symmetric, and Condorcet-Consistent Single-Winner Election Method


[edit] External links



Wikimedia Commons has media related to: Schulze method


Note that these sources may refer to the Schulze method as CSSD, SSD, beatpath, path winner, etc.

[edit] General

Proposed Statutory Rules for the Schulze Single-Winner Election Method by Markus Schulze
A New Monotonic and Clone-Independent Single-Winner Election Method by Markus Schulze (mirrors: [1] [2])
A New Monotonic, Clone-Independent, Reversal Symmetric, and Condorcet-Consistent Single-Winner Election Method by Markus Schulze
Free Riding and Vote Management under Proportional Representation by the Single Transferable Vote by Markus Schulze
Implementing the Schulze STV Method by Markus Schulze
A New MMP Method by Markus Schulze
A New MMP Method (Part 2) by Markus Schulze


[edit] Tutorials

Schulze-Methode (German) by the University of Stuttgart


[edit] Advocacy

Election Methods Resource by Blake Cretney
Voting Methods Survey by James Green-Armytage
Descriptions of ranked-ballot voting methods by Rob LeGrand
Accurate Democracy by Rob Loring
Schulze beatpaths method by Warren D. Smith
Election Methods and Criteria by Kevin Venzke
The Debian Voting System by Jochen Voss
election-methods: a mailing list containing technical discussions about election methods


[edit] Research papers

A Continuous Rating Method for Preferential Voting by Rosa Camps, Xavier Mora, and Laia Saumell (mirror: [3])
Voting Systems by Paul E. Johnson
Test Run: Group Determination in Software Testing by James D. McCaffrey
Distance from Consensus: a Theme and Variations by Tommi Meskanen and Hannu Nurmi
Analyzing Political Disagreement by Tommi Meskanen and Hannu Nurmi
Descriptions of voting systems by Warren D. Smith
Election Systems by Peter A. Taylor
Personalisierung der Verhältniswahl durch Varianten der Single Transferable Vote (German) by Martin Wilke
Approaches to Constructing a Stratified Merged Knowledge Base by Anbu Yue, Weiru Liu, and Anthony Hunter


[edit] Books

Saul Stahl and Paul E. Johnson (2007), Understanding Modern Mathematics, Sudbury: Jones and Bartlett Publishers, ISBN 0-7637-3401-2
Nicolaus Tideman (2006), Collective Decisions and Voting: The Potential for Public Choice, Burlington: Ashgate, ISBN 0-7546-4717-X


[edit] Software

Voting Software Project by Blake Cretney
Condorcet with Dual Dropping Perl Scripts by Mathew Goldstein
Condorcet Voting Calculator by Eric Gorr
Selectricity and RubyVote by Benjamin Mako Hill [4] [5]
Java implementation of the Schulze method by Thomas Hirsch
Electowidget by Rob Lanphier
Haskell Condorcet Module by Evan Martin
Condorcet Internet Voting Service (CIVS) by Andrew Myers
BetterPolls.com by Brian Olson
OpenSTV by Jeffrey O'Neill


[edit] Legislative projects

Arizonans for Condorcet Ranked Voting [6] [7] [8] [9] [10] [11]
Schulze Method Phoenix




Retrieved from "http://en.wikipedia.org/wiki/Schulze_method"
Categories: Monotonic Condorcet methods | Voting systems | Electoral systems | Electoral reform | Debian | Articles with example pseudocode 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Deutsch
Ελληνικά
Español
Français
Italiano
עברית
Polski
Русский
Suomi









 This page was last modified on 10 April 2009, at 12:24 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
