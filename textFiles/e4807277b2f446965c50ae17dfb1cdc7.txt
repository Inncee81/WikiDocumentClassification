













BIOS - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "BIOS";
		var wgTitle = "BIOS";
		var wgAction = "view";
		var wgArticleId = "4473";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281029248;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); BIOS

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
For other uses, see Bios.







This article or section has multiple issues. Please help improve the article or discuss these issues on the talk page.

It may be confusing or unclear for some readers. Tagged since October 2008.
It may require general cleanup to meet Wikipedia's quality standards. Tagged since October 2008.






BIOS:


Phoenix AwardBIOS CMOS (non-volatile memory) Setup utility on a standard PC


Stored on
PROM
EPROM
Flash memory


Common manufacturers
American Megatrends
Insyde Software
Phoenix Technologies
Byosoft
Others


In IBM PC Compatible computers, the Basic Input/Output System (BIOS)[1] , also known as the System BIOS, is a de facto standard defining a firmware interface. [2]
The BIOS is boot firmware, designed to be the first code run by a PC when powered on. The initial function of the BIOS is to identify, test, and initialize system devices such as the video display card, hard disk, and floppy disk and other hardware. This is to prepare the machine into a known state, so that software stored on compatible media can be loaded, executed, and given control of the PC.[3] This process is known as booting, or booting up, which is short for bootstrapping.
BIOS programs are stored on a chip and are built to work with various devices that make up the complementary chipset of the system. They provide a small library of basic input/output functions that can be called to operate and control the peripherals such as the keyboard, text display functions and so forth. In the IBM PC and AT, certain peripheral cards such as hard-drive controllers and video display adapters carried their own BIOS extension ROM, which provided additional functionality. Operating systems and executive software, designed to supersede this basic firmware functionality, will provide replacement software interfaces to applications.




Contents


1 Terminology
2 IBM PC-compatible BIOS Chips
3 BIOS chip vulnerabilities
4 Virus attacks
5 Firmware on adapter cards
6 The BIOS boot specification
7 Changing role of the BIOS
8 The BIOS business
9 See also
10 References
11 Footnotes
12 External links

12.1 Specifications







//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Terminology
The term first appeared in the CP/M operating system, describing the part of CP/M loaded during boot time that interfaced directly with the hardware (CP/M machines usually had only a simple boot loader in their ROM). Most versions of DOS have a file called "IBMBIO.COM" or "IO.SYS" that is analogous to the CP/M BIOS.
Among other classes of computers, the generic terms boot monitor, boot loader or boot ROM were commonly used. Some Sun and PowerPC-based computers use Open Firmware for this purpose. There are few alternatives for Legacy BIOS in the x86 world: Extensible Firmware Interface, Open Firmware (used on the OLPC XO-1) and coreboot.

[edit] IBM PC-compatible BIOS Chips
In principle, the BIOS in ROM was customized to the particular manufacturer's hardware, allowing low-level services (such as reading a keystroke or writing a sector of data to diskette) to be provided in a standardized way to the operating system. For example, an IBM PC might have had either a monochrome or a color display adapter, using different display memory addresses and hardware - but the BIOS service to print a character on the screen in text mode would be the same.[citation needed]






Boot Block


DMI Block


Main Block










ROM with BIOS





Prior to the early 1990s, BIOSes were stored in ROM or PROM chips, which could not be altered by users. As its complexity and need for updates grew, and re-programmable parts became more available, BIOS firmware was most commonly stored on EEPROM or flash memory devices. According to Robert Braver, the president of the BIOS manufacturer Micro Firmware, Flash BIOS chips became common around 1995 because the electrically erasable PROM (EEPROM) chips are cheaper and easier to program than standard erasable PROM (EPROM) chips. EPROM chips may be erased by prolonged exposure to ultraviolet light, which accessed the chip via the window. Chip manufacturers use EPROM programmers (blasters) to program EPROM chips. Electrically erasable (EEPROM) chips come with the additional feature of allowing a BIOS reprogramming via higher-than-normal amounts of voltage.[4] BIOS versions are upgraded to take advantage of newer versions of hardware and to correct bugs in previous revisions of BIOSes.[5]
The first flash chips attached to the ISA bus. Starting in 1997, the BIOS flash moved to the LPC bus, a functional replacement for ISA, following a new standard implementation known as "firmware hub" (FWH). Most BIOS revisions created in 1995 and nearly all BIOS revisions in 1997 supported the year 2000.[6] In 2006, the first systems supporting a Serial Peripheral Interface (SPI) appeared, and the BIOS flash moved again.
The size of the BIOS, and the capacities of the ROM, EEPROM and other media it may be stored on, has increased over time as new features have been added to the code; BIOS versions now exist with sizes up to 8 megabytes. Some modern motherboards are including even bigger NAND Flash ROM ICs on board which are capable of storing whole compact operating system distribution like some Linux distributions. For example, some recent ASUS motherboards included SplashTop Linux embedded into their NAND Flash ROM ICs.

[edit] BIOS chip vulnerabilities
EEPROM chips are advantageous because they can be easily updated by the user; hardware manufacturers frequently issue BIOS updates to upgrade their products, improve compatibility and remove bugs. However, this advantage had the risk that an improperly executed or aborted BIOS update could render the computer or device unusable. To avoid these situations, more recent BIOSes use a "boot block"; a portion of the BIOS which runs first and must be updated separately. This code verifies if the rest of the BIOS is intact (using hash checksums or other methods) before transferring control to it. If the boot block detects any corruption in the main BIOS, it will typically warn the user that a recovery process must be initiated by booting from removable media (floppy, CD or USB memory) so the user can try flashing the BIOS again. Some motherboards have a backup BIOS (sometimes referred to as DualBIOS boards) to recover from BIOS corruptions. In 2007, Gigabyte began offering motherboards with a QuadBIOS recovery feature.[7]

[edit] Virus attacks
There was at least one virus which was able to erase Flash ROM BIOS content, rendering computer systems unusable. CIH, also known as "Chernobyl Virus", affected systems BIOS and often they could not be fixed on their own since they were no longer able to boot at all. To repair this, Flash ROM IC had to be ejected from the motherboard to be reprogrammed somewhere else. Damage from the CIH virus was possible since most motherboards at the time of CIH propagation used the same chip set, Intel TX, and most common operating systems such as Windows 95 allowed direct hardware access to all programs.
Modern systems are not vulnerable to CIH because of a variety of chip sets being used which are incompatible with the Intel TX chip set, and also other Flash ROM IC types. There is also extra protection from accidental BIOS rewrites in the form of boot blocks which are protected from accidental overwrite or dual and quad BIOS equipped systems which may, in the event of a crash, use a backup BIOS. Also, all modern operating systems like Windows XP, Windows Vista, Linux do not allow direct hardware access to user mode programs. So, as of year 2008, CIH has become almost harmless and at most just bothers users by infecting executable files without being able to cause any real harm, only triggering numerous virus alerts from antivirus software.

[edit] Firmware on adapter cards
A computer system can contain several BIOS firmware chips. The motherboard BIOS typically contains code to access fundamental hardware components such as the keyboard, floppy drives, ATA (IDE) hard disk controllers, USB human interface devices, and storage devices. In addition, plug-in adapter cards such as SCSI, RAID, Network interface cards, and video boards often include their own BIOS, complementing or replacing the system BIOS code for the given component.
In some devices that can be used by add-in adapters and actually directly integrated on the motherboard, the add-in ROM may also be stored as separate code on the main BIOS flash chip. It may then be possible to upgrade this "add-in" BIOS (sometimes called an option ROM) separately from the main BIOS code.
Add-in cards usually only require such an add-in BIOS if they:

Need to be used prior to the time that the operating system loads (e.g. they may be used as part of the process which loads (bootstraps) the operating system), and:
Are not sufficiently simple, or generic in operation to be handled by the main BIOS directly

PC operating systems such as DOS, including all DOS-based versions of MS Windows, as well as bootloaders, may continue to make use of the BIOS to handle input and output. However, other modern operating systems will interact with hardware devices directly by using their own device drivers to directly access the hardware. Occasionally these add-in BIOSs are still called by these operating systems, in order to carry out specific tasks such as preliminary device initialization.
To find these memory mapped expansion ROMs[clarification needed] during the boot process, PC BIOS implementations scan real memory from 0xC0000 to 0xF0000 on 2 kilobyte boundaries looking for the ROM signature bytes of 55h followed by AAh (0xAA55). For a valid expansion ROM, its signature is immediately followed by a single byte indicating the number of 512-byte blocks it occupies in real memory. The BIOS then jumps to the offset located immediately after this size byte; at which point the expansion ROM code takes over, using the BIOS services to register interrupt vectors for use by post-boot applications and provide a user configuration interface, or display diagnostic information.
There are many methods and utilities for dumping the contents of various motherboard BIOS and expansion ROMs. Under a Microsoft OS, DEBUG can be used to examine 64 KB segments of memory and save the contents to a file. For UNIX systems the dd command can be used by a user with root privileges: "dd if=/dev/mem bs=1k skip=768 count=256 2>/dev/null | strings -n 8".

[edit] The BIOS boot specification
If the expansion ROM wishes to change the way the system boots (such as from a network device or a SCSI adapter for which the BIOS has no driver code), it can use the BIOS Boot Specification (BBS) API to register its ability to do so. Once the expansion ROMs have registered using the BBS APIs, the user can select among the available boot options from within the BIOSes user interface. This is why most BBS compliant PC BIOS implementations will not allow the user to enter the BIOS's user interface until the expansion ROMs have finished executing and registering themselves with the BBS API.[citation needed]

[edit] Changing role of the BIOS
Some operating systems, for example MS-DOS, rely on the BIOS to carry out most input/output tasks within the PC.[8] A variety of technical reasons makes it inefficient for some recent operating systems written for 32-bit CPUs such as Linux and Microsoft Windows to invoke the BIOS directly. Larger, more powerful, servers and workstations using PowerPC or SPARC CPUs by several manufacturers developed a platform-independent Open Firmware (IEEE-1275), based on the Forth programming language. It is included with Sun's SPARC computers, IBM's RS/6000 line, and other PowerPC CHRP motherboards. Later x86-based personal computer operating systems, like Windows NT, use their own, native drivers which also makes it much easier to extend support to new hardware, while the BIOS still relies on a legacy 16-bit runtime interface. As such, the BIOS was relegated to bootstrapping, at which point the operating system's own drivers can take control of the hardware.
There was a similar transition for the Apple Macintosh, where the system software originally relied heavily on the ToolBox—a set of drivers and other useful routines stored in ROM based on Motorola's 680x0 CPUs. These Apple ROMs were replaced by Open Firmware in the PowerPC Macintosh, then EFI in Intel Macintosh computers.
Later BIOS took on more complex functions, by way of interfaces such as ACPI; these functions include power management, hot swapping and thermal management. However BIOS limitations (16-bit processor mode, only 1 MiB addressable space, PC AT hardware dependencies, etc.) were seen as clearly unacceptable for the newer computer platforms. Extensible Firmware Interface (EFI) is a specification which replaces the runtime interface of the legacy BIOS. Initially written for the Itanium architecture, EFI is now available for x86 and x86-64 platforms; the specification development is driven by The Unified EFI Forum, an industry Special Interest Group.
Linux has supported EFI via the elilo boot loader. The Open Source community increased their effort to develop a replacement for proprietary BIOSes and their future incarnations with an open sourced counterpart through the coreboot and OpenBIOS/Open Firmware projects. AMD provided product specifications for some chipsets, and Google is sponsoring the project. Motherboard manufacturer Tyan offers coreboot next to the standard BIOS with their Opteron line of motherboards. MSI and Gigabyte have followed suit with the MSI K9ND MS-9282 and MSI K9SD MS-9185 resp. the M57SLI-S4 models.

[edit] The BIOS business
The vast majority of PC motherboard suppliers license a BIOS "core" and toolkit from a commercial third-party, known as an "independent BIOS vendor" or IBV. The motherboard manufacturer then customizes this BIOS to suit its own hardware. For this reason, updated BIOSes are normally obtained directly from the motherboard manufacturer.
Major BIOS vendors include American Megatrends (AMI), Insyde Software, Phoenix Technologies.

[edit] See also

Advanced Configuration and Power Interface (ACPI)
ARCS
BIOS boot devices
BIOS interrupt calls
coreboot, a project whose aim is to create a free replacement for the BIOS
Extensible Firmware Interface (EFI)
Firmware
Input/Output Base Address
Nonvolatile BIOS memory
Open Firmware
Power-On Self Test (POST)


[edit] References


IBM Personal Computer Technical Reference manual (First Edition, ed.). IBM Corporation. Revised March 1983. 
How BIOS Works - HowStuffWorks



[edit] Footnotes


^ "The Free Dictionary". http://acronyms.thefreedictionary.com/Built+in+Operating+System. Retrieved on 2008-11-04. 
^ The PC Guide - System BIOS
^ HowStuffWorks: What BIOS Does.
^ "Decoding RAM & ROM ." Smart Computing. June 1997. Volume 8, Issue 6.
^ "Upgrading Your Flash BIOS For Plug And Play." Smart Computing. March 1996. Volume 7, Issue 3.
^ "Time To Check BIOS." Smart Computing. April 1999. Volume 7, Issue 4.
^ "Quad BIOS is a unique GIGABYTE feature that includes DualBIOS and Xpress BIOS Rescue Technology. This combination delivers a safety assurance mechanism that sports a total of 4 copies of BIOS distributed between the Flash ROM, hard-disk and driver CD." Gigabyte Corporate News, January 15, 2007.
^ Smart Computing Article - What Is The BIOS? - Computing Basics July 1994 • Vol.5 Issue 7



[edit] External links

Changing PC BIOS Settings at HowStuffWorks
Flashing the BIOS at HowStuffWorks
BIOS Recovery, Chip replacement, Update instructions
Wim's BIOS Page - Finding BIOS Updates for your PC, Forum
TweakBIOS - BIOS information and tweaking
BIOS options explained
Identifying motherboards via Award, AMI and Acer BIOS identification strings
How to create a Bootable CD / Diskette / USB-Stick e.g. to flash/update the BIOS
Information about the BIOS, POST, BIOS recovery and chip replacement
BIOS from A to Z
BIOS for Beginners
BIOS Password reset
Some universal and/or firmware flash tools are: UniFlash and flashrom - a Linux tool.


[edit] Specifications

Preventing BIOS Failures Using Intel® Boot Block Flash Memory (December 1998)
BIOS Boot Specification 1.01 (January 1996)
Implementing a Plug and Play BIOS Using Intel's Boot Block Flash Memory (February 1995)




Retrieved from "http://en.wikipedia.org/wiki/BIOS"
Categories: BIOS | Boot loadersHidden categories: Wikipedia articles needing clarification from October 2008 | Cleanup from October 2008 | All pages needing cleanup | All articles with unsourced statements | Articles with unsourced statements since January 2009 | Wikipedia articles needing clarification from March 2009 | Articles with unsourced statements since October 2008 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


العربية
Azərbaycan
Bosanski
Brezhoneg
Български
Català
Česky
Dansk
Deutsch
Ελληνικά
Español
Euskara
فارسی
Français
Galego
한국어
Hrvatski
Bahasa Indonesia
Italiano
עברית
Kurdî / كوردی
Latviešu
Lëtzebuergesch
Lietuvių
Magyar
മലയാളം
Bahasa Melayu
Nederlands
日本語
‪Norsk (bokmål)‬
Polski
Português
Română
Русский
Shqip
Simple English
Slovenčina
Slovenščina
Српски / Srpski
Suomi
Svenska
Tagalog
ไทย
Türkçe
Українська
Tiếng Việt
中文









 This page was last modified on 1 April 2009, at 06:18.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
