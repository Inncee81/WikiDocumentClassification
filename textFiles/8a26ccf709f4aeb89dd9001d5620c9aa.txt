













IronPython - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "IronPython";
		var wgTitle = "IronPython";
		var wgAction = "view";
		var wgArticleId = "1179348";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 274537392;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
/*<![CDATA[*/
.source-python {line-height: normal;}
.source-python li, .source-python pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for python
 * CSS class: source-python, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-python .de1, .source-python .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-python  {}
.source-python .head {}
.source-python .foot {}
.source-python .imp {font-weight: bold; color: red;}
.source-python .ln-xtra {color: #cc0; background-color: #ffc;}
.source-python li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-python li.li2 {font-weight: bold;}
.source-python .kw1 {color: #ff7700;font-weight:bold;}
.source-python .kw2 {color: #008000;}
.source-python .kw3 {color: #dc143c;}
.source-python .kw4 {color: #0000cd;}
.source-python .co1 {color: #808080; font-style: italic;}
.source-python .coMULTI {color: #808080; font-style: italic;}
.source-python .es0 {color: #000099; font-weight: bold;}
.source-python .br0 {color: #66cc66;}
.source-python .st0 {color: #483d8b;}
.source-python .nu0 {color: #ff4500;}
.source-python .me1 {color: black;}

/*]]>*/

/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
 <!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); IronPython

From Wikipedia, the free encyclopedia

Jump to: navigation, search 

IronPython

Developed by
Jim Hugunin


Latest release
2.0.1 / February 13, 2009


Platform
.NET Framework, Mono


Type
Python Programming Language Interpreter


License
Microsoft Public License


Website
www.codeplex.com/IronPython


IronPython is an implementation of the Python programming language targeting the .NET Framework and Mono, created by Jim Hugunin. Version 1.0 was released on September 5, 2006.[1] Version 2.0 was released on December 10, 2008. [2]
IronPython is written entirely in C#, although some of its code is automatically generated by a code generator written in Python.




Contents


1 Status and roadmap
2 License
3 Interface extensibility
4 Example
5 See also
6 References
7 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Status and roadmap
The current 1.1.2 version targets CPython 2.4.4 for compatibility. However, there are some differences between the Python reference implementation and IronPython.[3] Some projects built on top of IronPython are known not to work under CPython.[4] Conversely, CPython applications that depend on extensions to the language that are implemented in C (e.g. NumPy) are not compatible with IronPython,[5] although a commercially-supported open source project to address this is underway.[6]
Release 2.0, released on December 10, 2008, targets CPython 2.5. IronPython 2.0 is built on top of the upcoming Dynamic Language Runtime (DLR) which contains a dynamic type system and dynamic language hosting environment abstracted out of IronPython 1. Because the DLR runs on top of the core CLR that will ship with the upcoming Silverlight 2, IronPython can be used for client-side browser scripting with Silverlight.

[edit] License
Until version 0.6 IronPython was released under the Common Public License.[7] Following recruitment of the project lead in August 2004, IronPython was made available as part of Microsoft's Shared Source initiative. Authors claim that the license,[8] while not reviewed by the Open Source Initiative, conforms to the OSI's definition of open source. With the 2.0 alpha release the license was changed to the Microsoft Public License.[9]

[edit] Interface extensibility
One of IronPython's key advantages is in its function as an extensibility layer to application frameworks written in a .NET language. It is relatively simple to integrate an IronPython interpreter into an existing .NET application framework. Once in place, downstream developers can use scripts written in IronPython that interact with .NET objects in the framework, thereby extending the functionality in the framework's interface, without having to change any of the framework's code base.[10]
IronPython makes extensive use of reflection. When passed in a reference to a .NET object, it will automatically import the types and methods available to that object. This results in a highly intuitive experience when working with .NET objects from within an IronPython script.

[edit] Example
The following IronPython script manipulates .NET Framework objects. This script can be supplied by a third-party client-side application developer and passed into the server-side framework through an interface. Note that neither the interface, nor the server-side code is modified to support the analytics required by the client application.


 from BookService import BookDictionary
 
 booksWrittenByBookerPrizeWinners = 
   [book.Title for book in BookDictionary.GetAllBooks if "Booker Prize" in book.Author.MajorAwards]
 booksWrittenByBookerPrizeWinners

In this case, assume that the .NET Framework implements a class, BookDictionary, in a module called BookService, and publishes an interface into which IronPython scripts can be sent and executed.
This script, when sent to that interface, will iterate over the entire list of books maintained by the framework, and pick out those written by Booker Prize-winning authors.
What's interesting is that the responsibility for writing the actual analytics reside with the client-side developer. The demands on the server-side developer are minimal, essentially just providing access to the data maintained by the server. This design pattern greatly simplifies the deployment and maintenance of complex application frameworks.

[edit] See also




Free software portal




Boo, a language for the .NET Framework and Mono with Python-inspired syntax and features borrowed from C# and Ruby.
IronLisp
IronRuby
Jython - an implementation of Python for the Java Virtual Machine.
Resolver One - a commercial application (with free license) written in IronPython, with the largest known IronPython codebase[11]


[edit] References


^ "Jim Hugunin's blog: IronPython 1.0 released today!". 2006-09-05. http://blogs.msdn.com/hugunin/archive/2006/09/05/741605.aspx. Retrieved on 2006-12-14. 
^ "Release dates for ironpython". 2008-12-10. http://www.codeplex.com/IronPython/Release/ProjectReleases.aspx?ReleaseId=8365. Retrieved on 2009-01-25. 
^ "Differences between IronPython 1.0 and CPython 2.4.3". Microsoft. 2007-12-18. http://www.codeplex.com/IronPython/Wiki/View.aspx?title=Differences&referringTitle=Home. Retrieved on 2008-02-09. 
^ Foord, Michael. "New Project: Implementing .NET Libraries in Pure Python". http://lists.ironpython.com/pipermail/users-ironpython.com/2008-January/006297.html. Retrieved on 2008-02-09. 
^ Eby, Phillip. "Children of a Lesser Python". http://dirtsimple.org/2005/10/children-of-lesser-python.html. Retrieved on 2008-07-09. 
^ "Ironclad". http://www.resolversystems.com/documentation/index.php/Ironclad. Retrieved on 2008-07-09. 
^ "Original IronPython homepage". July 28, 2004. http://www.ironpython.com/old.html. Retrieved on 2007-05-13. 
^ "Shared Source License for IronPython". April 28, 2006. http://www.codeplex.com/IronPython/Project/License.aspx?LicenseHistoryId=129. Retrieved on 2007-05-13. 
^ "Microsoft permissive license". April 28, 2007. http://www.codeplex.com/IronPython/Project/License.aspx?LicenseHistoryId=2866. Retrieved on 2007-05-13. 
^ "Using .NET objects from IronPython in Resolver One". http://www.resolversystems.com/documentation/index.php/Dot_Net_Objects_in_the_Grid. Retrieved on 2008-11-18. 
^ Extreme Program - Software Development Times On The Web



[edit] External links

CodePlex IronPython Workspace - IronPython Homepage
IronPython Studio - IronPython IDE, with WPF and Windows Forms designer, that will run standalone or integrated into Visual Studio
IronPython Cookbook Wiki
IronPython URLs Blog
IronPython ASP.NET Blog and Tutorials - IronPython tutorials, screencasts, and script generators
IronPython in Action - IronPython book, published by Manning
Tutorial Series on IronPython and Windows Forms
Microsoft Shared Source Initiative









v • d • e

Python





Implementations

CPython · Jython · IronPython · PyPy · Python for S60  · Shed Skin






Frameworks

CherryPy · Django · Porcupine · Pylons · TurboGears · Quixote






IDE

Boa · IDLE · SPE · more...






software (list)












v • d • e

.NET Framework





Architecture

Base Class Library · Common Language Runtime · Code Access Security · Assembly · Metadata · COM Interop






Common Language
Infrastructure (CLI)

Common Language Infrastructure · Common Type System · Common Intermediate Language · Virtual Execution System






CLI Languages





Common1


C# · Visual Basic .NET · C++/CLI (Managed) · F#  · J#  · JScript .NET · Windows PowerShell







Other2


A# · Boo · M · Oxygene  · IronLisp · IronPython · IronRuby · IronScheme · Nemerle · Phalanger · P#









Components

ADO.NET (Entity Framework · Data Services) · ASP.NET (AJAX · MVC · Dynamic Data) · Language Integrated Query · CardSpace · ClickOnce · Communication Foundation · Dynamic Language Runtime · Forms · Presentation Foundation · Remoting · Workflow Foundation  · XAML






Other implementations

Mono · Compact Framework · XNA Framework · Micro Framework · Portable.NET · Silverlight · SSCLI






Comparisons

Java and C# · C# and Visual Basic .NET · Java and .NET platforms






Upcoming

"Acropolis" · "Jasper" · Parallel Extensions






1 Languages that are, will be, or have been included with Visual Studio or Microsoft Windows.
2 Non-academic or research languages with relatively large user-bases.








Retrieved from "http://en.wikipedia.org/wiki/IronPython"
Categories: .NET programming languages | Python implementations 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Česky
Deutsch
Español
Français
한국어
Nederlands
日本語
Polski
Português
Русский
Suomi
中文









 This page was last modified on 2 March 2009, at 22:00.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
