













Haiku (operating system) - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Haiku_(operating_system)";
		var wgTitle = "Haiku (operating system)";
		var wgAction = "view";
		var wgArticleId = "554281";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 279617083;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Haiku (operating system)

From Wikipedia, the free encyclopedia

Jump to: navigation, search 





This article does not cite any references or sources. Please help improve this article by adding citations to reliable sources (ideally, using inline citations). Unsourced material may be challenged and removed. (August 2007)



Haiku





The Haiku desktop, running a variety of applications.


Company / developer
The Haiku Project


OS family
BeOS


Working state
Pre-Alpha


Source model
Free and open source software


Initial release
?


Kernel type
Hybrid kernel


License
MIT License


Website
http://haiku-os.org


Haiku, formerly known as OpenBeOS [1], is a free and open source software project dedicated to the re-creation and continuation of BeOS on x86 and PowerPC based computers.




Contents


1 History
2 Development

2.1 Progress


3 Compatibility with BeOS
4 Beyond R1
5 References
6 See also
7 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] History
The development project began as “OpenBeOS” in 2001 after Palm, Inc. bought Be Inc. and discontinued BeOS, leaving BeOS users without a viable upgrade path and BeOS developers with programs stranded on an unsupported platform. OpenBeOS differed from several other contemporary projects aiming to continue BeOS. For example, Cosmoe and Blue Eyed OS (both of which remain incomplete and appear to be inactive at this time) took an existing Linux or BSD kernel and re-implemented Be’s APIs on top of it; this broke binary code compatibility with BeOS R5 and significantly deviated from the original design. By contrast, OpenBeOS planned an almost complete rewrite of the system, maintaining binary and source code compatibility. This should allow any existing BeOS R5 programs to run on the new system without being recompiled.
In 2004 a new project name was chosen in order to avoid infringing on Palm’s trademarks. The name was influenced by an official community vote, decided by project leaders and revealed at that year’s WalterCon. The name “Haiku” intends to reflect the elegance and simplicity that attracted many to the BeOS platform, and is also a direct reference to the distinctive haiku error messages found in NetPositive, the default BeOS web browser, and many other Be applications.
Haiku, Inc., a non-profit organization based in Rochester, New York, was founded in 2003 by former project leader Michael Phipps to support the project and the development of the Haiku operating system.

[edit] Development
Haiku is developed in C++ and provides an object-oriented API. BeOS’s modular design has enabled teams of volunteer programmers to work independently on replacements for individual servers and APIs (collectively known in Haiku as “kits”). These teams include:

App/Interface – develops the Interface, App and Support kits.
BFS – develops the Be File System, which is mostly complete with the resulting OpenBFS
Game – develops the Game Kit and its APIs.
Input Server – the server that handles input devices, such as keyboards and mice and how they communicate with other parts of the system.
Kernel – develops the kernel, the core of the operating system.
Media – develops the audio server and related APIs.
MIDI – implements the MIDI protocol.
Network – writes drivers for network devices and APIs relating to networking.
OpenGL – develops OpenGL support.
Preferences – recreates BeOS’s preferences suite.
Printing – works on the print servers and drivers for printers.
Screen Saver – implements screen saver functionality.
Storage – develops the storage server and drivers for required filesystems.
Translation – recreates the reading/writing/conversion modules for the different file formats.

A few kits have been deemed feature complete and the rest are in various stages of development.
Haiku’s kernel is a modular hybrid kernel and a fork of NewOS [2], a modular kernel written by former Be Inc. engineer Travis Geiselbrecht. Like the rest of the system it is currently still under heavy development. Many features have been implemented, including a virtual file system (VFS) layer and rudimentary symmetric multiprocessing (SMP) support.

[edit] Progress
A number of major milestones were achieved in a six week period during March to April 2005, such as the first graphical applications to run on Haiku itself (running with full 2D acceleration), and the first use of a web browser on Haiku (Links). Haiku does not use any code or binaries belonging to Be, Inc., including the drivers used for the graphics and network card in the original examples. Another major milestone was reached in July 2005, when the system was able to run the BeOS desktop shell, Tracker.
In October 2005, Axel Dörfler, one of the most prolific Haiku developers, became the first full-time paid Haiku developer, working via funds donated by the community. He worked on CD booting, SMP and other kernel and app_server work. His employment continued until December 2005, when the funds allocated ran out.
Work on the operating system continues; Haiku can now be booted and is semi-usable. Much work remains before a release can be made. Network and Universal Serial Bus (USB) functionality is under heavy development, and the media_server lags behind the other components. Haiku is still quite unstable, as should be expected in its pre-release state, as crashes are prevalent. A date is not set for a release. As of January 2006[update], project developer Stephan Aßmus suggests that at the current level of development, R1 is at least a year away, maybe two.[3]
In August 2006, Haiku celebrated its fifth anniversary. Development on the aforementioned network and USB stacks continues rapidly, and it is expected that once these two last major remaining pieces of the operating system are complete, Haiku will be suitable for day-to-day use by developers and testers.
After a new website was launched, a contest was held to create Haiku’s default icon set. The winner was Stephan Aßmus’s set, “stippi”. Aßmus was also the developer responsible for Haiku’s icon creation tool, Icon-O-Matic, and integrating Haiku’s own format of scalable vector graphics, Haiku Vector Icon Format (HVIF) into the Deskbar and Tracker. A partial implementation of the set can be found in the latest builds.
In January 2008, an official Java for Haiku team was created and was unanimously accepted by the OpenJDK Porters Group to port OpenJDK to Haiku.[4]
In April 2008, Haiku became self-hosting, which means Haiku can be built from within itself.[5]
In Jan 31, 2009, Haiku obtained a native GCC4 port; this allows modern applications, like Firefox 3, to be built on Haiku.[6]

[edit] Compatibility with BeOS
Haiku aims to be compatible with BeOS at both the source and binary level, allowing software written and compiled for BeOS to compile and run without modification on Haiku. This would provide Haiku users with an instant library of applications to choose from (even programs whose developers were no longer in business or had no interest in updating them), in addition to allowing development of other applications to resume from where they had been terminated following the demise of Be, Inc. This dedication to compatibility also has its drawbacks though, requiring Haiku to use version 2.95 of the compiler GCC, which as of 2009[update], is essentially over 8 years old.[7] Switching to using the newer GCC version 4 breaks compatibility with BeOS software, therefore Haiku supports being built as a hybrid GCC4/GCC2 environment.[8] This allows the use of both GCC version 2 and version 4 binaries at the same time.
Despite these attempts, compatibility with a number of system add-ons which use private APIs will not be implemented. These include additional filesystem drivers and media codec add-ons, although the only affected add-ons for BeOS R5 not easily re-implemented are Indeo 5 media decoders for which no specification exists.
R5 binary applications which run successfully under Haiku (as of May 2006) include: Opera, Firefox, NetPositive, Quake II, Quake III, SeaMonkey, Vision and VLC media player.
Driver compatibility is incomplete, and unlikely to cover all kinds of BeOS drivers. 2D graphics drivers in general work exactly the same as on R5, as do network drivers. Moreover, Haiku offers a source-level FreeBSD network driver compatibility layer, which means that it can support any network hardware that will work on FreeBSD. Audio drivers using API versions prior to BeOS R5 are as-yet unsupported, and unlikely to be so; however, R5-era drivers work.
Low-level device drivers, namely for storage devices and SCSI adapters will not be compatible. USB drivers for both the second (BeOS 5) and third (BeOS Dano) generation USB stacks will work, however.

[edit] Beyond R1
Although the first release (R1) of Haiku has not been made, initial planning for R2 has started through the “Glass Elevator” project (a reference to children’s novel Charlie and the Great Glass Elevator). The only detail confirmed so far is that it will switch to a current GCC release (namely v4.3.3, [9]).
A compatibility layer is planned that will allow applications developed for Haiku R1 to run on Haiku R2 and later. This was mentioned in a discussion on the Haiku mailing list by one of the lead developers, Axel Dörfler. Suggested new features include file indexing on par with Unix’s Beagle, Google Desktop and Mac OS X’s Spotlight; greater integration of scalable vector graphics into the desktop, proper support for multiple users, and additional kits.[10]

[edit] References


^ "Help Choose a New Name for OpenBeOS". 2002-05-07. http://www4.osnews.com/comments/1046?mode=flat. Retrieved on 2008-01-04. 
^ "Haiku Kernel & Drivers Team". http://www.haiku-os.org/about/teams/kernel_drivers. Retrieved on 2008-07-17. 
^ Stephan Assmus (2006-01-31). "Re: OS Zoo". http://www.freelists.org/archives/openbeos/01-2006/msg00051.html. Retrieved on 2008-06-25. 
^ Jorge G. Mare (2008-01-21). "OpenJDK Porters Group Votes to Sponsor Java Port to Haiku". http://www.haiku-os.org/news/2008-01-21/openjdk_porters_group_votes_to_sponsor_java_port_to_haiku. Retrieved on 2008-06-25. 
^ Bruno Albuquerque (2008-04-01). "Haiku self-hosting.". http://www.freelists.org/archives/openbeos/04-2008/msg00001.html. Retrieved on 2008-06-25. 
^ Urias McCullough (2009-02-01). "Haiku Finally Gets a Native GCC4 - full story inside!". http://www.haiku-os.org/news/2009-01-31/haiku_finally_gets_a_native_gcc4_full_story_inside. 
^ The GCC team (2007-07-25). "GCC Releases - GNU Project - Free Software Foundation (FSF)". Free Software Foundation. http://gcc.gnu.org/releases.html. Retrieved on 2007-08-16. 
^ Stephan Aßmus (2008-05-18). "Steady Progress towards Alpha 1". Haiku Inc.. http://www.haiku-os.org/news/2008-05-18/steady_progress_towards_alpha_1. Retrieved on 2008-05-28. 
^ Native GCC 4.3.3 for Haiku - Tales of updating the GCC4 port
^ R2 Ideas - Glass Elevator Summaries



[edit] See also

BeOS API
OpenTracker
List of BeOS programs
Comparison of operating systems
BeBits


[edit] External links



Wikimedia Commons has media related to: Haiku





Wikibooks has a book on the topic of
Haiku







Free software portal




Haiku Project home page
Haiku Blog-O-Sphere
Haiku Tech Talk at Google (February 14, 2007) at Google Video
Ryan Paul (2008-02-12). "First look: Haiku poetically resurrects BeOS". Ars Technica. http://arstechnica.com/news.ars/post/20080212-first-look-haiku-poetically-resurrects-beos.html. 
Beosnews.com Covering all BeOS-related topics








v • d • e

BeOS





Companies

Be Inc. · Gobe Software · yellowTAB · Magnussoft






Computers

BeBox · Sony eVilla






Operating systems

BeOS · BeIA · Haiku · magnussoft ZETA













v • d • e

Free and open source software





General

Copyleft · Events and Awards · Free software · Free Software Definition · Gratis versus Libre · Open source software






Free software
portal









Notable packages

Apache · CUPS · Firefox · GNOME · KDE · OpenOffice.org · Thunderbird · X Window System






Operating systems

AROS · BSD · Darwin · FreeDOS · GNU · Haiku · Inferno · Linux · Mach · MINIX · OpenSolaris · Plan 9 · ReactOS · Syllable






Development

GCC · LLVM · Java · Open64 · Perl · PHP · Python · Lua · Ruby · Tcl · libJIT






History

GNU · Linux · Mozilla (Application Suite · Firefox · Thunderbird)






Organizations

Apache Software Foundation · Blender Foundation · Eclipse Foundation · FLOSS Manuals · freedesktop.org · Free Software Foundation · GNOME Foundation · GNU Project · Google Code · Linux Foundation · Mozilla Foundation · Open Source Geospatial Foundation · Open Source Initiative · SourceForge · Xiph.Org Foundation · X.Org Foundation






Licences

Apache · BSD · GNU GPL · LGPL · MIT · MPL · Permissive · Microsoft Public License · Microsoft Reciprocal License · FSF approved licenses






Challenges

Binary blob · Digital rights management · License proliferation · Mozilla software rebranding · Proprietary software · SCO-Linux controversies · Security · Software patents · Tivoization · Trusted Computing






Other topics

Alternative terms · Community · Linux distribution · Forking · Movement · Microsoft Open Specification Promise · Revolution OS · Comparison with closed source






List of open source software packages








Retrieved from "http://en.wikipedia.org/wiki/Haiku_(operating_system)"
Categories: Free software operating systems | BeOS | Self-hosting softwareHidden categories: Articles lacking sources from August 2007 | All articles lacking sources | Articles containing potentially dated statements from 2006 | All articles containing potentially dated statements | Articles containing potentially dated statements from 2009 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


العربية
Беларуская (тарашкевіца)
Česky
Deutsch
Español
Français
한국어
Bahasa Indonesia
Italiano
Lietuvių
Magyar
Nederlands
日本語
‪Norsk (bokmål)‬
‪Norsk (nynorsk)‬
Polski
Português
Русский
Slovenčina
Svenska
Українська









 This page was last modified on 25 March 2009, at 17:06.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
