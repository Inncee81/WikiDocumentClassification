













Screen reader - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Screen_reader";
		var wgTitle = "Screen reader";
		var wgAction = "view";
		var wgArticleId = "418544";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281696991;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Screen reader

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
A screen reader is a software application that attempts to identify and interpret what is being displayed on the screen (or, more accurately, sent to standard output, whether a video monitor is present or not). This interpretation is then re-presented to the user with text-to-speech, sound icons, or a Braille output device. Screen readers are a form of assistive technology (AT) potentially useful to people who are blind, visually impaired, illiterate or learning disabled, often in combination with other AT, such as screen magnifiers.
A person's choice of screen reader is dictated by many factors, including platform, cost (even to upgrade a screen reader can cost hundreds of U.S. dollars), and the role of organizations like charities, schools, and employers. Screen reader choice is contentious: differing priorities and strong preferences are common.
Apple Inc. Mac OS X includes VoiceOver, a feature-rich screen reader. The console-based Oralux Linux distribution ships with three screen-reading environments: Emacspeak, Yasr and Speakup. The open source GNOME desktop environment long included Gnopernicus and now includes Orca.
There are also open source screen readers, such as the Linux Screen Reader for GNOME and NonVisual Desktop Access for Windows.
The most widely used screen readers[1] are separate commercial products: JAWS from Freedom Scientific, Window-Eyes from GW Micro, System Access from Serotek, and ZoomText Magnifier/Reader from Ai Squared are prominent examples in the English-speaking market.




Contents


1 Types of screen reader

1.1 CLI (text) screen readers
1.2 GUI screen readers

1.2.1 Off-screen models
1.2.2 Accessibility APIs


1.3 Self-voicing applications
1.4 Web-based screen readers


2 Screen reader customization
3 Emulators
4 Verbosity
5 Language
6 References
7 See also





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Types of screen reader

[edit] CLI (text) screen readers
In early operating systems, such as MS-DOS, which employed command line interfaces (CLIs), the screen display consisted of characters mapping directly to a screen buffer in memory and a cursor position.[clarification needed] Input was by keyboard. All this information could therefore all be obtained from the system either by hooking the flow of information around the system and reading the screen buffer or by using a standard hardware output socket[2] and communicating the results to the user. This was relatively easy to engineer.
In the 1980s, the Research Centre for the Education of the Visually Handicapped (RCEVH) at the University of Birmingham developed Screen Reader for the BBC Micro and NEC Portable.[3]

[edit] GUI screen readers

[edit] Off-screen models
With the arrival of graphical user interfaces (GUIs), the situation became more complicated. A GUI has characters and graphics drawn on the screen at particular positions, and as such there is no purely textual representation of the graphical contents of the display. Screen readers were therefore forced to employ new low-level techniques, gathering messages from the operating system and using these to build up an "off-screen model", a representation of the display in which the required text content is stored.
For example, the operating system might send messages to draw a command button and its caption. These messages are intercepted and used to construct the off-screen model. The user can switch between controls (such as buttons) available on the screen and the captions and control contents will be read aloud and/or shown on refreshable Braille display.
Screen readers can also communicate information on menus, controls, and other visual constructs to permit blind users to interact with these constructs. However, maintaining an off-screen model is a significant technical challenge: hooking the low-level messages and maintaining an accurate model are both difficult tasks.

[edit] Accessibility APIs
Operating system and application designers have attempted to address these problems by providing ways for screen readers to access the display contents without having to maintain an off-screen model. These involve the provision of alternative and accessible representations of what is being displayed on the screen accessed through an API. Existing APIs include:

Apple Accessibility API.
AT-SPI
IAccessible2,
Microsoft Active Accessibility (MSAA)
Microsoft UI Automation
Java Access Bridge

Screen readers can query the operating system or application for what is currently being displayed and receive updates when the display changes. For example, a screen reader can be told that the current focus is on a button and the button caption to be communicated to the user. This approach is considerably easier for screen readers, but fails when applications do not comply with the accessibility API: for example, Microsoft Word does not comply with the MSAA API, so screen readers must still maintain an off-screen model for Word or find another way to access its contents. One approach is to use available operating system messages and application object models to supplement accessibility APIs: the Thunder screenreader operates without an off-screen model in this way.
Screen readers can be assumed to be able to access all display content that is not intrinsically inaccessible. Web browsers, word processors, icons and windows and email programs are just some of the applications used successfully by screen reader users. However, using a screen reader is, according to some users, considerably more difficult than using a GUI and many applications have specific problems resulting from the nature of the application (e.g. animations in Macromedia Flash) or failure to comply with accessibility standards for the platform (e.g. Microsoft Word and Active Accessibility).

[edit] Self-voicing applications
Some programs speak or make other sounds so that they can be used by blind people or people who cannot see the screen. These programs are termed self-voicing and can be a form of assistive technology if they are designed to remove the need to use a screen reader.

[edit] Web-based screen readers
A relatively new development in the field is web-based applications like Spoken-Web that is web portal, managing content like news updates, weather, science and business articles for visually impaired or blind computer users. Or Talklets that use JavaScript to add text-to-speech functionality to web content. The primary audience for such applications is those who have difficulty reading because of learning disabilities or language barriers. Although functionality remains limited compared to equivalent desktop applications, the major benefit is to increase the accessibility of said websites when viewed on public machines where users do not have permission to install custom software, giving people greater 'freedom to roam'.

[edit] Screen reader customization
Not only do screen readers differ widely from each other, but most are highly configurable. For example, most screen readers allow the user to select whether most punctuation is announced or silently ignored. Some screen readers can be tailored to a particular application through scripting. One advantage of scripting is that it allows customizations to be shared among users, increasing accessibility for all. JAWS enjoys an active script-sharing community, for example.

[edit] Emulators

Fangs screen reader emulator - An open source Mozilla Firefox extension that simulates how a web page would look in JAWS.


[edit] Verbosity
Verbosity is a term used to describe a feature of screen reading software that support vision-impaired computer users. Speech verbosity controls enable users to choose how much speech feedback they wish to hear. Specifically, verbosity settings allow users to construct a mental model of web pages displayed on their computer screen. Based on verbosity settings, a screen-reading program informs users of certain formatting changes, such as when a frame or table begins and ends, where graphics have been inserted into the text, or when a list appears in the document.
Some screen reading programs also include language verbosity, which automatically detects verbosity settings related to speech output language. For example, if a user navigated to a website based in the United Kingdom, the text would be read with a British accent.

[edit] Language
Some screen readers can read text in more than one language, providing that the language of the material is encoded in its metadata.

[edit] References


^ Theofanos, Mary Frances, and Redish, Janice (Ginny) (November-December 2003) (HTML). Guidelines for Accessible and Usable Web Sites: Observing Users Who Work With Screen Readers. self-published version. Redish & Associates. http://www.redish.net/content/papers/interactions.html. Retrieved on 2008-07-20. 
^ "Talking Terminals. BYTE, September 1982". http://www.edstoffel.com/david/talkingterminals.html. Retrieved on September 7 2006. 
^ Paul Blenkhorn, "The RCEVH project on micro-computer systems and computer assisted learning", British Journal of Visual Impairment, 4/3, 101-103 (1986). Free HTML version at Visugate. See also "Access to personal computers using speech synthesis. RNIB New Beacon No.76, May 1992". http://www.rnib.org.uk/xpedio/groups/public/documents/visugate/public_nbmay92.hcsp#P3_86. Retrieved on August 17 2005. 



[edit] See also



Look up screen reader in
Wiktionary, the free dictionary.



List of screen readers
Screen magnifier
Self-voicing
Speech processing
Speech recognition
Text to speech




Retrieved from "http://en.wikipedia.org/wiki/Screen_reader"
Categories: Assistive technology | Screen readersHidden categories: All pages needing cleanup | Wikipedia articles needing clarification from September 2008 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Deutsch
Español
Français
Italiano
עברית
Bahasa Melayu
Nederlands
日本語
Polski
Português
中文









 This page was last modified on 4 April 2009, at 13:37 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
