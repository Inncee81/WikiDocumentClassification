













Extensible Application Markup Language - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Extensible_Application_Markup_Language";
		var wgTitle = "Extensible Application Markup Language";
		var wgAction = "view";
		var wgArticleId = "626631";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 279484811;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
/*<![CDATA[*/
.source-xml {line-height: normal;}
.source-xml li, .source-xml pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for xml
 * CSS class: source-xml, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-xml .de1, .source-xml .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-xml  {}
.source-xml .head {}
.source-xml .foot {}
.source-xml .imp {font-weight: bold; color: red;}
.source-xml .ln-xtra {color: #cc0; background-color: #ffc;}
.source-xml li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-xml li.li2 {font-weight: bold;}
.source-xml .coMULTI {color: #808080; font-style: italic;}
.source-xml .es0 {color: #000099; font-weight: bold;}
.source-xml .br0 {color: #66cc66;}
.source-xml .st0 {color: #ff0000;}
.source-xml .nu0 {color: #cc66cc;}
.source-xml .sc0 {color: #00bbdd;}
.source-xml .sc1 {color: #ddbb00;}
.source-xml .sc2 {color: #339933;}
.source-xml .sc3 {color: #009900;}
.source-xml .re0 {color: #000066;}
.source-xml .re1 {font-weight: bold; color: black;}
.source-xml .re2 {font-weight: bold; color: black;}

/*]]>*/

/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
 <!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Extensible Application Markup Language

From Wikipedia, the free encyclopedia

Jump to: navigation, search 

Extensible Application Markup Language (XAML)

Filename extension
.xaml


Internet media type
application/xaml+xml


Developed by
Microsoft


Type of format
User interface markup language


Extended from
XML


Extensible Application Markup Language (XAML, pronounced zammel [ˈzæmɫ̩]) is a declarative XML-based language created by Microsoft which is used to initialize structured values and objects. It is available under Microsoft's Open Specification Promise.[1] The acronym originally stood for Extensible Avalon Markup Language - Avalon being the code-name for Windows Presentation Foundation (WPF).[2]




Contents


1 Overview
2 Technology

2.1 Templates


3 Example
4 Criticism
5 References
6 See also
7 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Overview
XAML is used extensively in .NET Framework 3.0 technologies, particularly Windows Presentation Foundation, Silverlight, and Windows Workflow Foundation (WF). In WPF, XAML is used as a user interface markup language to define UI elements, data binding, eventing, and other features. In WF, workflows can be defined using XAML.
XAML elements map directly to Common Language Runtime object instances, while XAML attributes map to Common Language Runtime properties and events on those objects. XAML files can be created and edited with visual design tools such as Microsoft Expression Blend, Microsoft Visual Studio, and the hostable Windows Workflow Foundation visual designer. They can also be created and edited with a standard text editor, a code editor such as XAMLPad, or a graphical editor such as Vectropy.
Anything that is created or implemented in XAML can be expressed using a more traditional .NET language, such as C# or Visual Basic.NET. However, a key aspect of the technology is the reduced complexity needed for tools to process XAML, because it is based on XML[3]. As a result, a variety of products are emerging, particularly in the WPF space, which create XAML-based applications. As XAML is simply based on XML, developers and designers are able to share and edit content freely amongst themselves without requiring compilation. As it is strongly linked to the .NET Framework 3.0 technologies, the only fully compliant implementation as of today is Microsoft's[citation needed].

[edit] Technology
A XAML file can be compiled into a .baml (Binary XAML) file, which may be inserted as a resource into a .NET Framework assembly. At run-time, the framework engine extracts the .baml file from assembly resources, parses it, and creates a corresponding WPF visual tree or workflow.
When used in Windows Presentation Foundation, XAML is used to describe visual user interfaces. WPF allows for the definition of both 2D and 3D objects, rotations, animations, and a variety of other effects and features.
When used in Windows Workflow Foundation contexts, XAML is used to describe potentially long-running declarative logic, such as those created by process modeling tools and rules systems. The serialization format for workflows was previously called XOML, to differentiate it from UI markup use of XAML, but now they are no longer distinguished. However, the file extension for files containing the workflow markup is still "XOML".[4][5]

[edit] Templates
XAML uses a specific way to define look and feel called Templates, different from the Cascading Style Sheets syntax, but closer to XBL[6].

[edit] Example
This Windows Presentation Foundation example shows the text "Hello World!" in the top-level XAML container called Canvas.


<Canvas xmlns="http://schemas.microsoft.com/client/2007"  
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextBlock>Hello World!</TextBlock>
</Canvas>

The schema (the xmlns="http://schemas.microsoft.com..." part) may have to be changed to work on your computer. Using a schema that Microsoft recommends, the example can also be [7]


<Canvas xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <TextBlock>Hello World!</TextBlock>
</Canvas>

This can be integrated into a web page if WPF is installed using XBAPs (XML Browser Applications) which are compiled applications running in a sandboxed environment hosted within the browser. Another way is to use the Silverlight plugin. The code can not be included directly in an HTML page; rather it must be loaded into the page via JavaScript. If .NET 3.0 or later is installed, loose XAML files can also be viewed on their own in a compatible web browser (including Internet Explorer and Firefox) in conjunction with the .NET Framework 3.0, without the need for the Silverlight plugin. [8] Loose XAML files are markup-only files limited to defining the visual content to be rendered. They are not compiled with an application.


<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>XAML Example</title>
    <script type="text/javascript" src="MySilverlight.js" />
    <script type="text/javascript" src="Silver.js" />
  </head>
  <body>
    <div id="MySilverlight" >
    </div>
    <script type="text/javascript">
      createMySilverlight();
    </script>
  </body>
</html>

The MySilverlight.js file must contain the code that loads the above XAML code (as an XML file) under the MySilverlight html element.

[edit] Criticism
The European Committee for Interoperable Systems[9] argues that Microsoft's use of XAML in its Silverlight product aims to introduce content on the World Wide Web that can only be served from the Windows platform.
However, XAML is viewable in non-Microsoft browsers on Windows and Mac, and Microsoft provides direct support for the development of a Silverlight viewer for GNU/Linux called Moonlight[10].

[edit] References


^ Microsoft adds XAML to 'Open Specification' list - Software Development Times On The Web
^ Rob Relyea : January 2004 - Posts
^ "XAML Syntax Terminology". Microsoft Corporation. http://msdn2.microsoft.com/en-us/library/ms788723.aspx. 
^ MSDN forum post by the WF product manager
^ RuleML and BPEL are other examples of XML-based declarative logic languages
^ Guthrie, Scott (2008-02-22). "Silverlight Tutorial Part 7: Using Control Templates to Customize a Control's Look and Feel". http://weblogs.asp.net/scottgu/pages/silverlight-tutorial-part-7-using-control-templates-to-customize-a-control-s-look-and-feel.aspx. Retrieved on 2008-03-08. 
^ Microsoft XAML Overview page at XAML Overview (Root element and xmlns)
^ Windows Presentation Foundation on the Web: Web Browser Applications - MSDN
^ "Microsoft runs into EU Vista charges". itwire.com. 2007-01-28. http://www.itwire.com/content/view/8988/53/. Retrieved on 2008-04-16. 
^ Foley, Mary Jo (2007-09-25). "Microsoft officially ‘extends support’ for Novell’s Silverlight Linux port". zdnet.com. http://blogs.zdnet.com/microsoft/?p=695. Retrieved on 2007-10-13. 



[edit] See also

List of user interface markup languages
Comparison of user interface markup languages
JavaFX
Layout manager
ZUML
NextStep/Cocoa Interface Builder








v • d • e

.NET Framework





Architecture

Base Class Library · Common Language Runtime · Code Access Security · Assembly · Metadata · COM Interop






Common Language
Infrastructure (CLI)

Common Language Infrastructure · Common Type System · Common Intermediate Language · Virtual Execution System






CLI Languages





Common1


C# · Visual Basic .NET · C++/CLI (Managed) · F#  · J#  · JScript .NET · Windows PowerShell







Other2


A# · Boo · M · Oxygene  · IronLisp · IronPython · IronRuby · IronScheme · Nemerle · Phalanger · P#









Components

ADO.NET (Entity Framework · Data Services) · ASP.NET (AJAX · MVC · Dynamic Data) · Language Integrated Query · CardSpace · ClickOnce · Communication Foundation · Dynamic Language Runtime · Forms · Presentation Foundation · Remoting · Workflow Foundation  · XAML






Other implementations

Mono · Compact Framework · XNA Framework · Micro Framework · Portable.NET · Silverlight · SSCLI






Comparisons

Java and C# · C# and Visual Basic .NET · Java and .NET platforms






Upcoming

"Acropolis" · "Jasper" · Parallel Extensions






1 Languages that are, will be, or have been included with Visual Studio or Microsoft Windows.
2 Non-academic or research languages with relatively large user-bases.






[edit] External links





This article may require cleanup to meet Wikipedia's quality standards. Please improve this article if you can. (December 2008)



Adobe Fireworks to XAML Exporter (free)
WPF SDK Microsoft Developer Network's top-level portal to the Windows Presentation Foundation SDK which documents WPF technologies including XAML.
Microsoft XAML overview
XAML Controls from Microsoft Longhorn Developer Introduction
United XAML Initiative - Open Source XAML Alternatives
XAML page on NetFXGuide.com A selection of categorized resources on XAML.
LearnWPF Website to learn WPF
Website resource for markup language technologies
Free XAML Designs Website
Mediaportal, an Open source mediacenter application which includes an opensource xaml/wpf skinengine
A LightWave 3D > XAML object converter
Dylan's XAML Word (Word Processor) on Codeplex
3DPaintBrush - Create XAML from 3D models From 3DS, SketchUp, STEP/IGES/OBJ, DXF/DWG models.




Retrieved from "http://en.wikipedia.org/wiki/Extensible_Application_Markup_Language"
Categories: XML-based standards | User interface markup languages | Microsoft application programming interfaces | Vector graphics markup languages | Declarative markup languages | Microsoft Windows multimedia technology | Declarative programming languages | .NET framework | Markup languagesHidden categories: All articles with unsourced statements | Articles with unsourced statements since April 2008 | Cleanup from December 2008 | All pages needing cleanup 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Česky
Dansk
Deutsch
Español
Français
한국어
Bahasa Indonesia
Italiano
Magyar
Nederlands
日本語
Polski
Português
Русский
Svenska
ไทย
Türkçe
中文









 This page was last modified on 25 March 2009, at 00:42.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
