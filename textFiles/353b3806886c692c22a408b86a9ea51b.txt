













Session Initiation Protocol - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Session_Initiation_Protocol";
		var wgTitle = "Session Initiation Protocol";
		var wgAction = "view";
		var wgArticleId = "28684";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 279178522;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Session Initiation Protocol

From Wikipedia, the free encyclopedia

Jump to: navigation, search 





This article includes a list of references or external links, but its sources remain unclear because it has insufficient inline citations. Please help to improve this article by introducing more precise citations where appropriate. (December 2008)


The Session Initiation Protocol (SIP) is a signalling protocol, widely used for setting up and tearing down multimedia communication sessions such as voice and video calls over the Internet. Other feasible application examples include video conferencing, streaming multimedia distribution, instant messaging, presence information and online games. The protocol can be used for creating, modifying and terminating two-party (unicast) or multiparty (multicast) sessions consisting of one or several media streams. The modification can involve changing addresses or ports, inviting more participants, adding or deleting media streams, etc.
SIP was originally designed by Henning Schulzrinne and Mark Handley starting in 1996. The latest version of the specification is RFC 3261[1] from the IETF Network Working Group.[2] In November 2000, SIP was accepted as a 3GPP signaling protocol and permanent element of the IP Multimedia Subsystem (IMS) architecture for IP-based streaming multimedia services in cellular systems.
The SIP protocol is a TCP/IP-based Application Layer protocol. Within the OSI model it is sometimes placed in the session layer. SIP is designed to be independent of the underlying transport layer; it can run on TCP, UDP, or SCTP. It is a text-based protocol, sharing many elements of the Hypertext Transfer Protocol (HTTP), upon which it is based, allowing for easy inspection by administrators.


The Internet Protocol Suite


Application Layer


BGP · DHCP · DNS · FTP · GTP · HTTP · IMAP · IRC · Megaco · MGCP · NNTP · NTP · POP · RIP · RPC · RTP · RTSP · SDP · SIP · SMTP · SNMP · SOAP · SSH · Telnet · TLS/SSL · XMPP · (more)


Transport Layer


TCP · UDP · DCCP · SCTP · RSVP · ECN · (more)


Internet Layer


IP (IPv4, IPv6) · ICMP · ICMPv6 · IGMP · IPsec · (more)


Link Layer


ARP · RARP · NDP · OSPF · Tunnels (L2TP) · Media Access Control (Ethernet, MPLS, DSL, ISDN, FDDI) · Device Drivers · (more)



This box: view • talk • edit







Contents


1 Protocol design
2 SIP network elements

2.1 SIP Messages


3 Instant messaging (IM) and presence
4 Conformance testing
5 Commercial applications
6 SIP-ISUP interworking

6.1 SIP-I and SIP-T


7 See also
8 References
9 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Protocol design
SIP employs design elements similar to HTTP-like request/response transaction model.[3] Each transaction consists of a client request that invokes a particular method, or function, on the server and at least one response. SIP reuses most of the header fields, encoding rules and status codes of HTTP, providing a readable text-based format. SIP uses the Session Description Protocol (SDP), to exchange the session content.[3]
SIP clients typically use TCP or UDP (typically on port 5060 and/or 5061) to connect to SIP servers and other SIP endpoints. SIP is primarily used in setting up and tearing down voice or video calls. However, it can be used in any application where session initiation is a requirement. These include Event Subscription and Notification, Terminal mobility and so on. There are a large number of SIP-related RFCs that define behavior for such applications. All voice/video communications are done over separate session protocols, typically RTP.
A motivating goal for SIP was to provide a signaling and call setup protocol for IP-based communications that can support a superset of the call processing functions and features present in the public switched telephone network (PSTN). SIP by itself does not define these features; rather, its focus is call-setup and signaling. However, it was designed to enable the construction of functionalities of network elements designated Proxy Servers and User Agents. These are features that permit familiar telephone-like operations: dialing a number, causing a phone to ring, hearing ringback tones or a busy signal. Implementation and terminology are different in the SIP world but to the end-user, the behavior is similar.
SIP-enabled telephony networks can also implement many of the more advanced call processing features present in Signaling System 7 (SS7), though the two protocols themselves are very different. SS7 is a centralized protocol, characterized by a complex central network architecture and dumb endpoints (traditional telephone handsets). SIP is a peer-to-peer protocol, thus it requires only a simple (and thus scalable) core network with intelligence distributed to the network edge, embedded in endpoints (terminating devices built in either hardware or software). SIP features are implemented in the communicating endpoints (i.e. at the edge of the network) contrary to traditional SS7 features, which are implemented in the network.
Although several other VoIP signaling protocols exist, SIP is distinguished by its proponents for having roots in the IP community rather than the telecom industry. SIP has been standardized and governed primarily by the IETF while the H.323 VoIP protocol has been traditionally more associated with the ITU. However, the two organizations have endorsed both protocols in some fashion.
SIP works in concert with several other protocols and is only involved in the signaling portion of a communication session. SIP is a carrier for the Session Description Protocol (SDP), which describes the media content of the session, e.g. what IP ports to use, the codec being used etc. In typical use, SIP "sessions" are simply packet streams of the Real-time Transport Protocol (RTP). RTP is the carrier for the actual voice or video content itself.
The first proposed standard version (SIP 2.0) was defined in RFC 2543. The protocol was further clarified in RFC 3261, although many implementations are still using interim draft versions. Note that the version number remains 2.0.

[edit] SIP network elements
A SIP user agent (UA) is a logical network end-point used to create or receive SIP messages and thereby manage a SIP session. A SIP UA can perform the role of a User Agent Client (UAC), which sends SIP requests, and the User Agent Server (UAS), which receives the requests and returns a SIP response. These roles of UAC and UAS only last for the duration of a SIP transaction.[1]
A SIP phone is a hardware-based or software-based SIP user agent, that provides call functions such as dial, answer, reject, hold/unhold, and call transfer.[4][5] Examples include softphones like Ekiga, KPhone, Twinkle, Windows Live Messenger, X-Lite, and hardware phones from vendors like Cisco, Leadtek, Polycom, snom.
Each resource of a SIP network, such as a User Agent or a voicemail box, is identified by a Uniform Resource Identifier (URI), based on the general standard syntax[6] also used in Web services and e-mail. A typical SIP URI is of the form: sip:username:password@host:port. The URI scheme used for SIP is sip:. If secure transmission is required, the scheme sips: is used and SIP messages must be transported over Transport Layer Security (TLS).[1]
In SIP, as in HTTP, the User Agent may identify itself using a message header field 'User-Agent', containing a text description of the software/hardware/product involved. The User-Agent field is sent in request messages, which means that the receiving SIP server can see this information. SIP network elements sometimes store this information[7], and it can be useful in diagnosing SIP compatibility problems.
SIP also defines server network elements. Although two SIP endpoints can communicate without any intervening SIP infrastructure, which is why the protocol is described as peer-to-peer, this approach is often impractical for a public service.
RFC 3261 defines these server elements:

A proxy server "is an intermediary entity that acts as both a server and a client for the purpose of making requests on behalf of other clients. A proxy server primarily plays the role of routing, which means its job is to ensure that a request is sent to another entity "closer" to the targeted user. Proxies are also useful for enforcing policy (for example, making sure a user is allowed to make a call). A proxy interprets, and, if necessary, rewrites specific parts of a request message before forwarding it."


"A registrar is a server that accepts REGISTER requests and places the information it receives in those requests into the location service for the domain it handles."


"A redirect server is a user agent server that generates 3xx responses to requests it receives, directing the client to contact an alternate set of URIs.The redirect server allows SIP Proxy Servers to direct SIP session invitations to external domains."

The RFC specifies: "It is an important concept that the distinction between types of SIP servers is logical, not physical."
Other SIP related network elements are

Session border controllers (SBC), they serve as "man in the middle" between UA and SIP server, see the article SBC for a detailed description.


Various types of gateways at the edge between a SIP network and other networks (as a phone network)



[edit] SIP Messages
SIP, is a text-based protocol with syntax similar to that of HTTP. There are two different types of SIP messages, requests and responses. The first line of a request has a method, defining the nature of the request and a Request-URI, indicating where the request should be sent.[8] The first line of a response has a response code.
For SIP requests, RFC 3261 defines the following methods:[9]

REGISTER: Used by a UA to notify its current IP address and the URLs for which it would like to receive calls.
INVITE: Used to establish a media session between user agents.
ACK: Confirms reliable message exchanges.
CANCEL: Terminates a pending request.
BYE: Terminates a session between two users in a conference.
OPTIONS: Requests information about the capabilities of a caller, without setting up a call.

The SIP response types defined in RFC 3261 fall in one the following categories:[10]

Provisional (1xx): Request received and being processed.
Success (2xx): The action was successfully received, understood, and accepted.
Redirection (3xx): Further action needs to be taken (typically by sender) to complete the request.
Client Error (4xx): The request contains bad syntax or cannot be fulfilled at the server.
Server Error (5xx): The server failed to fulfil an apparently valid request.
Global Failure (6xx): The request cannot be fulfilled at any server.


[edit] Instant messaging (IM) and presence
The Session Initiation Protocol for Instant Messaging and Presence Leveraging Extensions (SIMPLE) is the SIP-based suite of standards for instant messaging and presence information. Some efforts have been made to integrate SIP-based VoIP with the XMPP specification used by Jabber. Most notably Google Talk, which extends XMPP to support voice, plans to integrate SIP. Google's XMPP extension is called Jingle and, like SIP, it acts as a Session Description Protocol carrier.

[edit] Conformance testing
TTCN-3 test specification language is used for the purposes of specifying conformance tests for SIP implementations. SIP test suite is developed by a Specialist Task Force at ETSI (STF 196).[11]

[edit] Commercial applications
Firewalls typically block media packet types such as UDP, though one way around this is to use TCP tunneling and relays for media in order to provide NAT and firewall traversal. One solution involves tunneling the media packets within TCP or HTTP/HTTPS packets to a relay. This solution uses additional functionality in conjunction with SIP, and packages the media packets into a TCP stream which is then sent to the relay. The relay then extracts the packets and sends them on to the other endpoint. If the other endpoint is behind a symmetrical NAT, or corporate firewall that does not allow VoIP traffic, the relay would transfer the packets to another tunnel. One disadvantage of this approach is that TCP was not designed for real time traffic such as voice, so an optimized form of the protocol is sometimes used.
As envisioned by its originators, SIP's peer-to-peer nature does not enable network-provided services. For example, the network can not easily support legal interception of calls (referred to in the United States by the law governing wiretaps, CALEA). Emergency calls (calls to E911 in the USA) are difficult to route. It is difficult to identify the proper Public Service Answering Point, PSAP because of the inherent mobility of IP end points and the lack of any network location capability.
Many VoIP phone companies allow customers to bring their own SIP devices, as SIP-capable telephone sets, or softphones. The new market for consumer SIP devices continues to expand.
The free software community started to provide more and more of the SIP technology required to build both end points as well as proxy and registrar servers leading to a commodification of the technology, which accelerates global adoption. SIPfoundry has made available and actively develops a variety of SIP stacks, client applications and SDKs, in addition to entire IP PBX solutions that compete in the market against mostly proprietary IP PBX implementations from established vendors.
The National Institute of Standards and Technology (NIST), Advanced Networking Technologies Division provides a public domain implementation of the JAVA Standard for SIP JAIN-SIP which serves as a reference implementation for the standard. The stack can work in proxy server or user agent scenarios and has been used in numerous commercial and research projects. It supports RFC 3261 in full and a number of extension RFCs including RFC 3265 (Subscribe / Notify) and RFC 3262 (Provisional Reliable Responses) etc.

[edit] SIP-ISUP interworking

[edit] SIP-I and SIP-T
SIP-I, or the Session Initiation Protocol with encapsulated ISUP, is a protocol used to create, modify, and terminate communication sessions based on ISUP using SIP and IP networks. Services using SIP-I include voice, video telephony, fax and data. SIP-I and SIP-T[12] are two protocols with similar features, notably to allow ISUP messages to be transported over SIP networks. This preserves all of the detail available in the ISUP header, which is important as there are many country-specific variants of ISUP that have been implemented over the last 30 years, and it is not always possible to express all of the same detail using a native SIP message. SIP-I was defined by the ITU-T, where SIP-T was defined via the IETF RFC route[13].

[edit] See also

List of SIP request methods
List of SIP response codes
List of SIP software
H.323
IP phone
Media Gateway Control Protocol (MGCP)
MSCML (Media Server Control Markup Language)
IP Multimedia Subsystem
Inter-Asterisk eXchange
Voice over Internet Protocol
Mobile VoIP
Private branch exchange (PBX)
Session Initiation Protocol (Java)
SIGTRAN
Skinny Client Control Protocol (SCCP)
SRTP
ZRTP
Network convergence
XIMSS



[edit] References


^ a b c RFC 3261, SIP: Session Initiation Protocol
^ SIP working group charter
^ a b William Stallings, p.209
^ Azzedine (2006). Handbook of algorithms for wireless networking and mobile computing. CRC Press. p. 774. http://books.google.com/books?id=b8oisvv6fDAC&pg=PT774. 
^ Porter, Thomas; Andy Zmolek, Jan Kanclirz, Antonio Rosela (2006). Practical VoIP Security. Syngress. pp. 76-77. http://books.google.com/books?id=BYxdyekyRlwC&pg=PA76. 
^ RFC 3986, Uniform Resource Identifiers (URI): Generic Syntax, IETF, The Internet Society (2005)
^ "User-Agents We Have Known "VoIP User.org
^ Stallings, p.214
^ Stallings, pp.214-215
^ Stallings, pp.216-217
^ Experiences of Using TTCN-3 for Testing SIP and also OSP
^ RFC3372: SIP-T Context and Architectures
^ White Paper: "Why SIP-I? A Switching Core Protocol Recommendation"



Stallings, William (2008). Business Data Communications. Prentice Hall. pp. 608. ISBN 9780136067412. http://books.google.com/books?id=r7lu7xQIBA8C&pg=PA208. 


[edit] External links

Computers/Internet/Protocols/SIP/ at the Open Directory Project
Henning Schulzrinne's SIP homepage hosted by Columbia University
The entire list of SIP IETF RFCs




Retrieved from "http://en.wikipedia.org/wiki/Session_Initiation_Protocol"
Categories: Application layer protocols | Session layer protocols | VoIP protocols | VoIP terminology & conceptsHidden categories: Articles lacking in-text citations from December 2008 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Bosanski
Български
Català
Česky
Deutsch
Ελληνικά
Español
Esperanto
Euskara
Français
Galego
한국어
Italiano
עברית
Magyar
Македонски
Nederlands
日本語
Polski
Português
Română
Русский
Slovenčina
Suomi
Svenska
ไทย
Türkçe
Українська
中文









 This page was last modified on 23 March 2009, at 16:44.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
