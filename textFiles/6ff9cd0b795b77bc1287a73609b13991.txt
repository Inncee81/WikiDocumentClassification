













Don't repeat yourself - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Don\'t_repeat_yourself";
		var wgTitle = "Don\'t repeat yourself";
		var wgAction = "view";
		var wgArticleId = "3291957";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 279990789;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Don't repeat yourself

From Wikipedia, the free encyclopedia

Jump to: navigation, search 





It has been suggested that Rule of three (programming) be merged into this article or section. (Discuss)







It has been suggested that Single choice principle be merged into this article or section. (Discuss)







It has been suggested that Copy and paste programming be merged into this article or section. (Discuss)







It has been suggested that Duplicate code be merged into this article or section. (Discuss)



Contrast with redundancy and mirror.

Don't Repeat Yourself (DRY, also known as Single Point of Truth) is a process philosophy aimed at reducing duplication, particularly in computing. The philosophy emphasizes that information should not be duplicated, because duplication increases the difficulty of change, may decrease clarity, and leads to opportunities for inconsistency. DRY is a core principle of Andy Hunt and Dave Thomas's book The Pragmatic Programmer. They apply it quite broadly to include "database schemas, test plans, the build system, even documentation."[1] When the DRY principle is applied successfully, a modification of any single element of a system does not change other logically-unrelated elements. Additionally, elements that are logically related all change predictably and uniformly, and are thus kept in sync.




Contents


1 Teaching DRY coding skills
2 Once and Only Once
3 When DRY may not be advantageous
4 See also
5 References
6 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Teaching DRY coding skills
The DRY code philosophy is stated as "Every piece of knowledge must have a single, unambiguous, authoritative representation within a system." This philosophy is also prevalent in model-driven architectures, in which software artifacts are derived from a central object model expressed in a form such as UML. DRY code is created by data transformation, which allows the software developer to avoid copy and paste operations. DRY code usually makes large software systems easier to maintain, as long as the data transformations are easy to create and maintain. Tools such as XDoclet and XSLT are examples of DRY coding techniques. Examples of systems that require duplicate information are Enterprise Java Beans, which requires duplication not just in Java code but also in configuration files. Examples of systems that attempt to reduce duplicate information include the Ruby on Rails application development environment.
Data transformation skills are not taught in most junior-level software engineering courses. Current computer science curricula tend to be heavily weighted toward procedural skills such as Java, C++, or C#. The use of DRY code becomes increasingly important as developers create applications that use multi-tier architectures. The model-view-controller architectural pattern also challenges software developers to use data transformations. Developments in some language features, such as Java annotations, may allow additional metadata to be stored within object class definitions and accessed at run time, allowing features such as automatic view generation directly from models.

[edit] Once and Only Once
DRY is broader than Once and Only Once (OAOO). OAOO speaks to the functional behavior of the code, and is the reason for object composition and the implementation of inheritance in object oriented languages. DRY is not about just avoiding code duplication, but more generally about avoiding multiple and possibly diverging ways to express every piece of knowledge: e.g., logic, database schemas, and constants.

[edit] When DRY may not be advantageous
In some contexts, the effort required to enforce the DRY philosophy may be greater than the effort to maintain separate copies of the data. In some other contexts, duplicated information is immutable or kept under a control tight enough to make DRY not required.

Imposing standards aimed at strict adherence to DRY could stifle community involvement in contexts where it is highly valued, such as a wiki.[citation needed]
Configuration management and version control tools allow multiple and diverging copies ("branches"). For example, good practice generally involves development, testing, and production using different source code bases so that ongoing development and testing do not affect production. Ideally, divergence is temporary; differences are kept reasonably small and eventually reconciled ("merged") with the help of the tools.
Human-readable documentation (from code comments to printed manuals) are typically a restatement of something in the code with elaboration and explanation for those who do not have the ability or time to read and internalize the code. However, DRY holds that if the human-readable document adds no value except the change in format, then the effort should be made to generate it rather than write it.
Source code generation - Non-duplication could be useful for the source code generator, but not for the result, if the duplicate information is never modified.
Limitations of a programming language can sometimes make it to easier to duplicate code. For instance, the two functions addAll(myGraph) and multiplyAll(myGraph) duplicate the code to browse the same type of graph. The DRY principle recommends refactoring to applyAll(myGraph, add) and applyAll(myGraph, multiply). However, in languages with poor functional support, such a refactoring is likely to be costly to implement, and to produce verbose and confusing code.
Unit tests must duplicate the features of the tested code, and often must duplicate trivial lines among their test cases. A good software engineering practice is to run unit tests continuously, thus immediately catching any divergence caused by such duplication.


[edit] See also

Code reuse
Database normalization
KISS principle
Linguistic method (related methodology based on coding theory)
Separation of concerns
Transaction processing (related methodology to prevent internal inconsistency)
You Ain't Gonna Need It


[edit] References

^ Dave Thomas, interviewed by Bill Venners (2003-10-10). "Orthogonality and the DRY Principle". http://www.artima.com/intv/dry.html. Retrieved on 2006-12-01. 


[edit] External links

Orthogonality and the DRY Principle
c2.com the original
Once and Only Once (c2.com)




Retrieved from "http://en.wikipedia.org/wiki/Don%27t_repeat_yourself"
Categories: Software development philosophiesHidden categories: Articles to be merged since December 2008 | All articles to be merged | Articles to be merged since January 2009 | Articles to be merged since February 2009 | All articles with unsourced statements | Articles with unsourced statements since January 2009 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Deutsch
Español
Français
Italiano
日本語
Polski
中文









 This page was last modified on 27 March 2009, at 11:42 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
