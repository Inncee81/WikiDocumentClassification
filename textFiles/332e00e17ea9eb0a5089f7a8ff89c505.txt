













Portable application - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Portable_application";
		var wgTitle = "Portable application";
		var wgAction = "view";
		var wgArticleId = "3498830";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 280763107;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Portable application

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
"Portable Apps" redirects here. For the portable application launcher platform, see PortableApps.com.





This article is written like a personal reflection or essay and may require cleanup. Please help improve it by rewriting it in an encyclopedic style. (July 2008)






A USB drive can carry portable applications


A portable application (portable app) is a computer software program that runs from a removable storage device such as a CD-ROM drive, USB flash drive, flash card, or floppy disk. Portable apps should not be confused with software portability where software allows its source code to be compiled for different computing platforms. Portable applications can be run on any computer system with which they are compatible but typically require a specific operating system such as Microsoft Windows XP or above, any Linux, etc.
Portable software is typically designed to be able to store its configuration information and data on the storage media containing its program files.




Contents


1 Portable Windows applications
2 Portable Macintosh applications
3 Portability on Linux and UNIX-like systems
4 Double portability
5 See also
6 References
7 External Links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Portable Windows applications
Most software for Microsoft Windows is not designed to be portable. The Windows registry and the structure of the Windows Installer both tie an installed program to the machine it has been installed on. Most Windows applications use the registry intensively, and store state information all over the file system, although software authoring guidelines suggest using the registry for settings and the user's profile (in the "My Documents" or "Documents and Settings" folders) for larger files dependent on a specific installation or the user's habits.
In order to make properly portable applications, software applications must leave the computer they run on exactly as they found it when finished. This means that the application cannot use the registry, nor store its files anywhere on the machine other than in the application's installation directory. When installed to removable media, a program would need to store settings in an INI file (or similar configuration file) rather than in the registry.
An alternative strategy for achieving application portability within Windows, without requiring application source code changes, is application virtualization: an application is "sequenced" or "packaged" against a runtime layer that transparently intercepts its file system and registry calls, then redirects these to other persistent storage without the application's knowledge. This approach leaves the application itself unchanged, yet portable.
The run-time layer can be embedded into an application on-the-fly by injecting a dynamic library into a third party process to create individual per application wrapper [1]. The wrapper is activated at the application startup and hooks/redirects file- and registry-related system calls to operate with portable (ex: flash) storage space only.
The same approach [1] is used for individual application’s components: run-time libraries, COM components or ActiveX , not only for the entire application. As a result, when individual components are ported in such manner they are able to be: integrated into original portable applications, repeatedly instantiated (virtually installed) with different configurations/settings on the same operating system (OS) without mutual conflicts. As the ported components do not affect the OS-protected related entities (registry and files), the components will not required administrative privileges for installation and management.
A freeware, DIY alternative to citation [1] is available in the form of the JauntePE project [2].
Microsoft saw the need for an application-specific registry [3] for its Windows operating system as far back as 2005. It eventually incorporated some of this technology, using the techniques mentioned above, via its Application Compatibility Database [4] using its Detours [5] code library, into the XP version of Windows. It did not, however, make any of this technology available via one of its system APIs.

[edit] Portable Macintosh applications
Many programs for Mac OS X have an inherent degree of portability as they are packaged as "drag-install" application bundles, rather than as Installer packages. However, many applications are not truly portable as they store their preferences in files on the local disk where the OS is installed. Macintosh applications which are designed to be portable store their preferences on the drive from which they are being run.

[edit] Portability on Linux and UNIX-like systems
See also: klik (packaging method), Zero Install, Autopackage, SFS Technology
Programs written with a Unix-like base in mind often do not make any assumptions. Whereas many Windows programs assume the user is an administrator—something very prevalent in the days of Windows 95/98/ME (and to some degree in Windows XP/2000, though not in Windows Vista)—such would quickly result in "Permission denied" errors in Unix-like environments since users will be in an unprivileged state much more often. Programs are therefore generally designed around using the HOME environment variable to store settings (e.g. $HOME/.w3m for the w3m browser). The dynamic linker also provides an environment variable LD_LIBRARY_PATH so that libraries can be looked up in non-standard directories. This makes it particularly easy (from a technical point of view) to run a program off another spot. Assuming /mnt contains the portable programs and configuration, a command line may look like:

HOME=/mnt/home/user LD_LIBRARY_PATH=/mnt/usr/lib /mnt/usr/bin/w3m en.wikipedia.org

Not all programs honor this however — some completely ignore $HOME and instead do a user lookup in /etc/passwd to find the home directory, therefore thwarting portability.
Other methods exist that can automatically make portable applications, they are, however, still limited.[6]

[edit] Double portability
There is a very restricted category of software that can support a sort of double portability, being both stand alone and cross-platform compatible, able to run on different hardware with little or no modifications, perhaps with minor restrictions. One such software is SymbOS, whose main modules can in their present form be executed on both Amstrad CPC and MSX machines without modification. Only some of its bundled applications are hardware-dependent. To a much lesser extent, Macintosh fat binary applications could be considered as cross-platform, but not always truly portable.

[edit] See also

Application Virtualization
List of portable software
Virtualization
VMware ThinApp
PortableApps.com


[edit] References


^ a b c Portable Wrapper
^ JauntePE Nightly Builds
^ Portable Application Registry
^ Secrets of the Application Compatilibity Database
^ Microsoft Research Detours
^ Portable Applications on Linux



[edit] External Links

www.portablefreeware.com - Offers many freeware programs
Portable Applications for Windows - Offers mainly ThinApped versions of software




Retrieved from "http://en.wikipedia.org/wiki/Portable_application"
Categories: Portable softwareHidden categories: Wikipedia articles needing style editing from July 2008 | All articles needing style editing 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Català
Deutsch
Español
Esperanto
Français
Bahasa Indonesia
日本語
‪Norsk (bokmål)‬
Polski
Русский
Slovenčina
Tiếng Việt
Türkçe
中文









 This page was last modified on 31 March 2009, at 00:40.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
