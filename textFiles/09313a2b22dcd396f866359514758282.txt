













State transition table - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "State_transition_table";
		var wgTitle = "State transition table";
		var wgAction = "view";
		var wgArticleId = "548857";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 274238412;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); State transition table

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
In automata theory and sequential logic, a state transition table is a table showing what state (or states in the case of a nondeterministic finite automaton) a finite semiautomaton or finite state machine will move to, based on the current state and other inputs. A state table is essentially a truth table in which some of the inputs are the current state, and the outputs include the next state, along with other outputs.
A state table is one of many ways to specify a state machine, other ways being a state diagram, and a characteristic equation.




Contents


1 Common forms

1.1 One-dimensional state tables
1.2 Two-dimensional state tables


2 Example
3 Transformations from/to state diagram
4 References





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Common forms

[edit] One-dimensional state tables
Also called characteristic tables, single-dimension state tables are much more like truth tables than the two-dimensional versions. Inputs are usually placed on the left, and separated from the outputs, which are on the right. The outputs will represent the next state of the machine. Here's a simple example of a state machine with two states, and two combinatorial inputs:


A
B
Current State
Next State
Output


0
0
S1
S2
1


0
0
S2
S1
0


0
1
S1
S2
0


0
1
S2
S2
1


1
0
S1
S1
1


1
0
S2
S1
1


1
1
S1
S1
1


1
1
S2
S2
0


S1 and S2 would most likely represent the single bits 0 and 1, since a single bit can only have two states.

[edit] Two-dimensional state tables
State transition tables are typically two-dimensional tables. There are two common forms for arranging them.

The vertical (or horizontal) dimension indicates current states, the horizontal (or vertical) dimension indicates events, and the cells (row/column intersections) in the table contain the next state if an event happens (and possibly the action linked to this state transition).


State Transition Table

  Events
State
E1
E2
  ...  
En


S1
-
Ay/Sj
...
-


S2
-
-
...
Ax/Si


...
...
...
...
...


Sm
Az/Sk
-
...
-


(S: state, E: event, A: action, -: illegal transition)

The vertical (or horizontal) dimension indicates current states, the horizontal (or vertical) dimension indicates next states, and the row/column intersections contain the event which will lead to a particular next state.


State Transition Table

      next
current
S1
S2
  ...  
Sm


S1
Ay/Ej
-
...
-


S2
-
-
...
Ax/Ei


...
...
...
...
...


Sm
-
Az/Ek
...
-


(S: state, E: event, A: action, -: impossible transition)

[edit] Example
An example of a state transition table for a machine M together with the corresponding state diagram is given below.




State Transition Table

  Input
State
1
0


S1
S1
S2


S2
S2
S1



 
State Diagram



All the possible inputs to the machine are enumerated across the columns of the table. All the possible states are enumerated across the rows. From the state transition table given above, it is easy to see that if the machine is in S1 (the first row), and the next input is character 1, the machine will stay in S1. If a character 0 arrives, the machine will transition to S2 as can be seen from the second column. In the diagram this is denoted by the arrow from S1 to S2 labeled with a 0.
For a nondeterministic finite automaton (NFA), a new input may cause the machine to be in more than one state, hence its non-determinism. This is denoted in a state transition table by a pair of curly braces { } with the set of all target states between them. An example is given below.

State Transition Table for an NFA

  Input
State
1
0
ε


S1
S1
{ S2, S3 }
Φ


S2
S2
S1
Φ


S3
S2
S1
S1


Here, a nondeterministic machine in the state S1 reading an input of 0 will cause it to be in two states at the same time, the states S2 and S3. The last column defines the legal transition of states of the special character, ε. This special character allows the NFA to move to a different state when given no input. In state S3, the NFA may move to S1 without consuming an input character. The two cases above make the finite automaton described non-deterministic.

[edit] Transformations from/to state diagram
It is possible to draw a state diagram from the table. A sequence of easy to follow steps is given below:

Draw the circles to represent the states given.
For each of the states, scan across the corresponding row and draw an arrow to the destination state(s). There can be multiple arrows for an input character if the automaton is an NFA.
Designate a state as the start state. The start state is given in the formal definition of the automaton.
Designate one or more states as accept state. This is also given in the formal definition.


[edit] References

Michael Sipser: Introduction to the Theory of Computation. PWS Publishing Co., Boston 1997 ISBN 0-534-94728-X




Retrieved from "http://en.wikipedia.org/wiki/State_transition_table"
Categories: Automata theory 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Bosanski
Español
Hrvatski
日本語
Српски / Srpski
中文









 This page was last modified on 1 March 2009, at 21:05 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
