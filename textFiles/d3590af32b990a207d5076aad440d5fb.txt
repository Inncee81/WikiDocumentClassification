













List of Internet Relay Chat commands - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "List_of_Internet_Relay_Chat_commands";
		var wgTitle = "List of Internet Relay Chat commands";
		var wgAction = "view";
		var wgArticleId = "2224155";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 282511476;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); List of Internet Relay Chat commands

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
This is a list of all Internet Relay Chat commands from IETF RFCs 1459 and 2812. In mostly all graphical IRC clients, raw commands must be preceded by a slash ("/"). Angle brackets ("<" and ">") denote what's placed in the encapsulated field, not a literal part of the command. Arguments encapsulated in square brackets ("[" and "]") are optional and override the command's defaults.




Contents


1 User commands

1.1 ADMIN
1.2 AWAY
1.3 CONNECT
1.4 DIE
1.5 ERROR
1.6 INFO
1.7 INVITE
1.8 ISON
1.9 JOIN
1.10 KICK
1.11 KILL
1.12 LINKS
1.13 LIST
1.14 LUSERS
1.15 MODE
1.16 MOTD
1.17 NAMES
1.18 NICK
1.19 NOTICE
1.20 OPER
1.21 PART
1.22 PASS
1.23 PING
1.24 PONG
1.25 PRIVMSG
1.26 QUIT
1.27 REHASH
1.28 RESTART
1.29 SERVICE
1.30 SERVLIST
1.31 SERVER
1.32 SQUERY
1.33 SQUIT
1.34 STATS
1.35 SUMMON
1.36 TIME
1.37 TOPIC
1.38 TRACE
1.39 USER
1.40 USERHOST
1.41 USERS
1.42 VERSION
1.43 WALLOPS
1.44 WHO
1.45 WHOIS
1.46 WHOWAS


2 See also
3 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] User commands

[edit] ADMIN
Syntax:

ADMIN [<server>]

This instructs the server to return information about the administrator of the server specified by <target>, or the current server if target is omitted.
Defined in RFC1459.

[edit] AWAY
Syntax:

AWAY [<message>]

This command provides the server with a message to automatically send in reply to a PRIVMSG directed at the user, but not to a channel they are on. If <message> is omitted, the away status is removed.
Defined in RFC1459

[edit] CONNECT
Syntax:

CONNECT <target server> [<port> [<remote server>]] (RFC1459)
CONNECT <target server> <port> [<remote server>]   (RFC2812)

This command instructs the server <remote server> (or the current server, if <remote server> is omitted) to connect to <target server> on port <port>. This command should only be available to IRC Operators.
Defined in RFC1459; the <port> parameter became mandatory in RFC2812.

[edit] DIE
Syntax:

DIE

This command instructs the server to shut down.
Defined in RFC2812.

[edit] ERROR
Syntax:

ERROR <error message>

This command is for use by servers to report errors to other servers. It is also used before terminating client connections.
Defined in RFC1459.

[edit] INFO
Syntax:

INFO [<target>]

This command returns information about the <target> server, or the current server if <target> is omitted. Information returned includes the server's version, when it was compiled, the patchlevel, when it was started, and any other information which may be considered to be relevant.
Defined in RFC1459.

[edit] INVITE
Syntax:

INVITE <nickname> <channel>

This command invites <nickname> to the channel <channel>. <channel> does not have to exist, but if it does, only members of the channel are allowed to invite other clients. If the channel mode i is set, only channel operators may invite other clients.
Defined in RFC1459

[edit] ISON
Syntax:

ISON <nicknames>

This command queries the server to see if the clients in the space-separated list <nicknames> are currently on the network. The server returns only the nicknames that are on the network in a space-separated list. If none of the clients are on the network the server returns an empty list.
Defined in RFC1459.

[edit] JOIN
Syntax:

JOIN <channels> [<keys>]

This command makes the client join the channels in the comma-separated list <channels>, specifying the passwords, if needed, in the comma-separated list <keys>. If the channel(s) do not exist then they will be created.
Defined in RFC1459.

[edit] KICK
Syntax:

KICK <channel> <client> [<message>]

This command forcibly removes <client> from <channel>. This command may only be issued by channel operators.
Defined in RFC1459.

[edit] KILL
Syntax:

KILL <client> <comment>

This command forcibly removes <client> from the network. This command may only be issued by IRC operators.
Defined in RFC1459.

[edit] LINKS
Syntax:

LINKS [<remote server> [<server mask>]]

This command lists all server links matching <server mask>, if given, on <remote server>, or the current server if omitted.
Defined in RFC1459.

[edit] LIST
Syntax:

LIST [<channels> [<server>]]

This command lists all channels on the server. If the comma-separated list <channels> is given, it will return the channel topics. If <server> is given, the command will be forwarded to <server> for evaluation.
Defined in RFC1459.

[edit] LUSERS
Syntax:

LUSERS [<mask> [<server>]]

This command returns statistics about the size of the network. If called with no arguments, the statistics will reflect the entire network. If <mask> is given, it will return only statistics reflecting the masked subset of the network. If <target> is given, the command will be forwarded to <server> for evaluation.
Defined in RFC2812.

[edit] MODE
The MODE command is dual-purpose. It can be used to set both user and channel modes. Syntax:

MODE <nickname> <flags> (user)
MODE <channel> <flags> [<args>]

Defined in RFC1459.

[edit] MOTD
Syntax:

MOTD [<server>]

This command returns the message of the day on <server> or the current server if it is omitted.
Defined in RFC2812.

[edit] NAMES
Syntax:

NAMES [<channels>]            (RFC1459)
NAMES [<channels> [<server>]] (RFC2812)

This command returns a list of who is on the comma-separated list of <channels>, by channel name. If <channels> is omitted, all users are shown, grouped by channel name with all users who are not on a channel being shown as part of channel "*". If <server> is specified, the command is sent to <server> for evaluation.
Defined in RFC1459.

[edit] NICK
Syntax:

NICK <nickname> [<hopcount>] (RFC1459)
NICK <nickname>              (RFC2812)

This command allows a client to change their IRC nickname. Hopcount is for use between servers to specify how far away a nickname is from its home server.
Defined in RFC1459.

[edit] NOTICE
Syntax:

NOTICE <msgtarget> <message>

This command works similarly to PRIVMSG, except automatic replies must never be sent in reply to NOTICE messages.
Defined in RFC1459.

[edit] OPER
Syntax:

OPER <username> <password>

This command authenticated a user as an IRC operator on that server/network.
Defined in RFC1459.

[edit] PART
Syntax:

PART <channels>

This command causes a user to leave the channels in the comma-separated list <channels>.
Defined in RFC1459.

[edit] PASS
Syntax:

PASS <password>

This command is used to set a connection password. This command must be sent before the NICK/USER registration combination.
Defined in RFC1459.

[edit] PING
Syntax:

PING <server1> [<server2>]

This command is used to test the presence of a connection. A PING message results in a PONG reply. If <server2> is specified, the message gets passed on to it.
Defined in RFC1459.

[edit] PONG
Syntax:

PONG <server2> [<server2>]

This command is a reply to the PING command and works in much the same way.
Defined in RFC1459.

[edit] PRIVMSG
Syntax:

PRIVMSG <msgtarget> <message>

This command sends <message> to <msgtarget>, which is usually a user or channel.
Defined in RFC1459.

[edit] QUIT
Syntax:

QUIT [<message>]

This command disconnects the user from the server.
Defined in RFC1459.

[edit] REHASH
Syntax:

REHASH

This causes the server to re-read and re-process its configuration file(s). This command can only usually be sent by IRC Operators.
Defined in RFC1459.

[edit] RESTART
Syntax:

RESTART

This command is used to restart a server. It may only be sent by IRC Operators.
Defined in RFC1459.

[edit] SERVICE
Syntax:

SERVICE <nickname> <reserved> <distribution> <type> <reserved> <info>

This command is used to register a new service on the network.
Defined in RFC2812.

[edit] SERVLIST
Syntax:

SERVLIST [<mask> [<type>]]

This command is used to list the services currently on the network.
Defined in RFC2812.

[edit] SERVER
Syntax:

SERVER <servername> <hopcount> <info>

The server message is used to tell a server that the other end of a new connection is a server. This message is also used to pass server data over whole net. <hopcount> details how many hops (server connections) away <servername> is. <info> contains addition human-readble information about the server.
Defined in RFC1459

[edit] SQUERY
Syntax:

SQUERY <servicename> <text>

This command is identical to PRIVMSG except the recipient must be a service.
Defined in RFC2812.

[edit] SQUIT
Syntax:

SQUIT <server> <comment>

This command causes <server> to quit the network.
Defined in RFC1459.

[edit] STATS
Syntax:

STATS <query> [<server>]

This command returns statistics about the current server, or <server> if it's specified.
Defined in RFC1459.

[edit] SUMMON
Syntax:

SUMMON <user> [<server>]             (RFC1459)
SUMMON <user> [<server> [<channel>]] (RFC2812)

This command gives users who are on the same host as <server> a message asking them to join IRC.
Defined in RFC1459.

[edit] TIME
Syntax:

TIME [<server>]

This command returns the local time on the current server, or <server> if specified.
Defined in RFC1459.

[edit] TOPIC
Syntax:

TOPIC <channel> [<topic>]

This command allows the client to query or set the channel topic on <channel>. If <topic> is given, it sets the channel topic to <topic>. If channel mode +t is set, only a channel operator may set the topic.
Defined in RFC1459.

[edit] TRACE
Syntax:

TRACE [<target>]

This command is used to trace a path across the IRC network to a specific server or client, in a similar method to tracert
Defined in RFC1459.

[edit] USER
Syntax:

USER <username> <hostname> <servername> <realname> (RFC1459)
USER <user> <mode> <unused> <realname>             (RFC2812)

This command is used at the beginning of a connection to specify the username, hostname, real name and initial user modes of the connecting client. <realname> may contain spaces, and thus must be prefixed with a colon.
Defined in RFC1459, modified in RFC2812.

[edit] USERHOST
Syntax:

USERHOST <nickname> [<nickname> <nickname> ...]

This command returns a list of information about the nicknames specified.
Defined in RC1459.

[edit] USERS
Syntax:

USERS [<server>]

This command returns a list of users and information about those users in a format similar to the UNIX commands who, rusers and finger.
Defined in RFC1459.

[edit] VERSION
Syntax:

VERSION [<server>]

This command returns the version of <server>, or the current server if omitted.
Defined in RFC1459.

[edit] WALLOPS
Syntax:

WALLOPS <message>

This command sends <message> to all operators connected to the server (RFC1459), or all users with user mode 'w' set (RFC2812).
Defined in RFC1459.

[edit] WHO
Syntax:

WHO [<name> ["o"]]

This command returns a list of users who match <name>. If the flag "o" is given, the server will only return information about IRC Operators.
Defined in RFC1459.

[edit] WHOIS
Syntax:

WHOIS [<server>] <nicknames>

This returns information about the comma-separated list of nicknames masks <nicknames>. If <server> is given, the command is forwarded to it for processing.
Defined in RFC1459.

[edit] WHOWAS
Syntax:

WHOWAS <nickname> [<count> [<server>]]

This command is used to return information about a nickname that is no longer in use (due to client disconnection, or nickname changes). If given, the server will return information from the last <count> times the nickname has been used. If <server> is given, the command is forwarded to it for processing. In RFC2812, <nickname> can be a comma-separated list of nicknames.
Defined in RFC1459.

[edit] See also

Internet Relay Chat
IRCd
Server
IRCX


[edit] External links

RFC1459
RFC2812









v • d • e

Internet Relay Chat










 
Internet Relay Chat Topics





Common terms

Admin · Bot · Channel · ChanServ · CTCP · DCC · DoS attack · Channel Operator · Client · Flood · Ghost · Gline · Hostmask · Ident · IRC · Jupe · Kickban · K-line · Netsplit · Network · NickServ · Operator · OperServ · Script · Server · Services · Takeover · vhost · XDCC · Zline






Lists and Comparisons

List of IRC commands · Comparison of IRC clients · Comparison of IRC daemons · Comparison of IRC services






See also

Internet Relay Chat subculture · Jarkko Oikarinen














 
Internet Relay Chat Clients





AmigaOS

AmIRC






BeOS / Haiku

Vision






Mac OS

Colloquy · Fire · Linkinus · Homer · iRC · Ircle · LimeChat · MacIrssi · Snak






Microsoft Windows

Bersirc · HydraIRC · Klient · KoolChat · mIRC · Microsoft Comic Chat · Neebly · Nettalk · NexIRC · Orion · PIRCH · Visual IRC · Vortec IRC · XiRCON






MS-DOS

IRCjr · LeetIRC






Unix-like

Conspire · ii · ircII · Konversation · Rhapsody · Xaric






Multi-platform

BitchX · ircII-EPIC · Irssi · KVIrc · naim · Quassel IRC · roxIRC · ScrollZ · WeeChat · XChat






Multi-platform (Java)

Coolsmile · jini · jIRC · jIRCii · PJIRC






Multi-IM

Ayttm · Carrier · Centericq · Instantbird · Kopete · Miranda IM · Pidgin · pork client · QIP · Trillian






Multi-IM (Java)

Qnext · SIP Communicator






Embedded systems

jmIrc · WLIrc






Web-based

CGI:IRC · Mibbit






Web browser components

ChatZilla · Mozilla Application Suite · Opera · Peekko






Library and plug-ins

Bottler · ERC · libIRC · rcirc · StunTour














 
Internet Relay Chat Bots






Darkbot · Eggdrop · EnergyMech · Gozerbot · Infobot · Mozbot · PBot · Psotnic














 
Internet Relay Chat Bouncers, Gateways and Proxies






Bip IRC Proxy · BitlBee · psyBNC · psyced














 
Internet Relay Chat Daemons






IRCd · InspIRCd · ircu · UnrealIRCd














 
Internet Relay Chat Networks






Abjects · AbleNET · Byxnet · DALnet · EFnet · freenode · GTANet · GameSurge · IRC@2ch · IRCnet · OFTC · QuakeNet · Rizon · RusNet · ScoutLink · SlashNET · Undernet












Retrieved from "http://en.wikipedia.org/wiki/List_of_Internet_Relay_Chat_commands"
Categories: Internet Relay Chat 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Nederlands
Türkçe









 This page was last modified on 8 April 2009, at 07:40 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
