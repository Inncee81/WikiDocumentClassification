













Partial evaluation - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Partial_evaluation";
		var wgTitle = "Partial evaluation";
		var wgAction = "view";
		var wgArticleId = "62428";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 284155889;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Partial evaluation

From Wikipedia, the free encyclopedia

Jump to: navigation, search 


Programming
evaluation



Eager
Lazy
Partial
Remote
Short-circuit
Strategy



In computing, partial evaluation is a technique for several different types of program optimization by specialization. The most straightforward application is to produce new programs which run faster than the originals but are guaranteed to behave in the same way. More advanced uses include compiling by partially evaluating an interpreter with the program to be compiled as its input; generating compilers by partially evaluating a partial evaluator with an interpreter for the source language concerned as its input; and finally generating a compiler-generator by partially evaluating a partial evaluator with itself as its input.
A computer program, prog, is seen as a mapping of input data into output data:



Istatic, the static data, is the part of the input data known at compile time.
The partial evaluator transforms  into  by precomputing all static input at compile time. prog * is called the "residual program" and should run more efficiently than the original program. The act of partial evaluation is said to "residualize" prog to prog * .




Contents


1 Futamura projections
2 References
3 See also
4 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Futamura projections
A particularly interesting example of this, first described in the 1970s by Yoshihiko Futamura, is when prog is an interpreter for a programming language.
If Istatic is source code designed to run inside said interpreter, then partial evaluation of the interpreter with respect to this data/program produces prog*, a version of the interpreter that only runs that source code, is written in the implementation language of the interpreter, does not require the source code to be resupplied, and runs faster than the original combination of the interpreter and the source. In this case prog* is effectively a compiled version of Istatic.
This technique is known as the first Futamura projection, of which there are three:

Specializing an interpreter for given source code, yielding an executable
Specializing the specializer for the interpreter (as applied in #1), yielding a compiler
Specializing the specializer for itself (as applied in #2), yielding a tool that can convert any interpreter to an equivalent compiler


[edit] References

Yoshihiko Futamura (1971). "Partial Evaluation of Computation Process – An Approach to a Compiler-Compiler". Systems, Computers, Controls 2 (5): 45–50. http://www.brics.dk/~hosc/local/HOSC-12-4-pp381-391.pdf.  Reprinted in Higher-Order and Symbolic Computation 12 (4): 381–391, 1999, with a foreword.
Charles Consel and Olivier Danvy (1993). "Tutorial Notes on Partial Evaluation". Proceedings of the Twentieth Annual ACM Symposium on Principles of Programming Languages: 493–501. 


[edit] See also

Run-time algorithm specialisation
Memoization
Strength reduction
Smn theorem
Template metaprogramming


[edit] External links

Neil D. Jones, Carsten K. Gomard, and Peter Sestoft: Partial Evaluation and Automatic Program Generation (1993) Book, full text available online.
partial-eval.org - a large "Online Bibliography of Partial Evaluation Research".
1999 ACM SIGPLAN Workshop on Partial Evaluation and Semantics-Based Program Manipulation (PEPM'99)
C++ Templates as Partial Evaluation, 1999 ACM SIGPLAN Workshop on Partial Evaluation and Semantics-Based Program Manipulation (PEPM'99)
C++ Templates as Partial Evaluation a different version including Catat (pdf)
Applying Dynamic Partial Evaluation to dynamic, reflective programming languages




Retrieved from "http://en.wikipedia.org/wiki/Partial_evaluation"
Categories: Compiler optimizations | Incremental computing | Programming evaluation 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Esperanto
日本語









 This page was last modified on 16 April 2009, at 06:05 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
