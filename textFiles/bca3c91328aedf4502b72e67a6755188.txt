













StAX - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "StAX";
		var wgTitle = "StAX";
		var wgAction = "view";
		var wgArticleId = "3243411";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 282757037;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
/*<![CDATA[*/
.source-java {line-height: normal;}
.source-java li, .source-java pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for java
 * CSS class: source-java, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-java .de1, .source-java .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-java  {}
.source-java .head {}
.source-java .foot {}
.source-java .imp {font-weight: bold; color: red;}
.source-java .ln-xtra {color: #cc0; background-color: #ffc;}
.source-java li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-java li.li2 {font-weight: bold;}
.source-java .kw1 {color: #b1b100;}
.source-java .kw2 {color: #000000; font-weight: bold;}
.source-java .kw3 {color: #aaaadd; font-weight: bold;}
.source-java .kw4 {color: #993333;}
.source-java .co1 {color: #808080; font-style: italic;}
.source-java .co2 {color: #a1a100;}
.source-java .coMULTI {color: #808080; font-style: italic;}
.source-java .es0 {color: #000099; font-weight: bold;}
.source-java .br0 {color: #66cc66;}
.source-java .st0 {color: #ff0000;}
.source-java .nu0 {color: #cc66cc;}
.source-java .me1 {color: #006600;}
.source-java .me2 {color: #006600;}

/*]]>*/

/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
 <!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); StAX

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
Streaming API for XML (StAX) is an application programming interface (API) to read and write XML documents in the Java programming language.
Traditionally, XML APIs are either:

tree based - the entire document is read into memory as a tree structure for random access by the calling application
event based - the application registers to receive events as entities are encountered within the source document.

Both have advantages; the former (for example, DOM) allows for random access to the document, the latter (e.g. SAX) requires a small memory footprint and is typically much faster.
These two access metaphors can be thought of as polar opposites. A tree based API allows unlimited, random, access and manipulation, while an event based API is a 'one shot' pass through the source document.
StAX was designed as a median between these two opposites. In the StAX metaphor, the programmatic entry point is a cursor that represents a point within the document. The application moves the cursor forward - 'pulling' the information from the parser as it needs. This is different from an event based API - such as SAX - which 'pushes' data to the application - requiring the application to maintain state between events as necessary to keep track of location within the document.




Contents


1 Origins
2 Examples
3 Implementations
4 Applications
5 See also
6 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Origins
StAX has its roots in a number of incompatible pull APIs for XML, most notably XMLPULL, the authors of which (Stefan Haustein and Aleksander Slominski) collaborated with, amongst others BEA Systems, Oracle, Sun, Breeze Factor and James Clark.

[edit] Examples
From JSR-173 Specification• Final, V1.0 (used under fair use).
Quote:

The following Java API shows the main methods for reading XML in the cursor approach.



// Java 
public interface XMLStreamReader { 
  public int next() throws XMLStreamException; 
  public boolean hasNext() throws XMLStreamException; 
  public String getText(); 
  public String getLocalName(); 
  public String getNamespaceURI(); 
  // ...othermethodsnotshown 
}


The writing side of the API has methods that correspond to the reading side for “StartElement” and “EndElement” event types.



// Java 
public interface XMLStreamWriter { 
  public void writeStartElement(String localName) throws XMLStreamException;
  public void writeEndElement() throws XMLStreamException; 
  public void writeCharacters(String text) throws XMLStreamException; 
  // ...othermethodsnotshown 
}


5.3.1 XMLStreamReader
This example illustrates how to instantiate an input factory, create a reader and iterate over the elements of an XML document.



XMLInputFactory f = XMLInputFactory.newInstance(); 
XMLStreamReader r = f.createXMLStreamReader(... ); 
while (r.hasNext()) { 
    r.next(); 
}


[edit] Implementations

Reference Implementation (for JSR-173, API specification)
Woodstox Open source StAX implementation (LGPL, AL license)
Sjsxp is Sun's Stax implementation (included in JDK 1.6; GPL v2 or CDDL license)
Aalto is an ulta-high-performance parser (GPL or commercial license)


[edit] Applications

The video game FreeCol uses the StAX API and the Woodstox implementation as the XML parser for its game data.


[edit] See also
Competing and complementary ways to process XML in Java (ordered loosely based on initial date of introduction):

DOM Document Object Model is the first standardized, language/platform-independent tree-based xml processing model. (note: there are also alternate Java tree models like JDOM, Dom4j, XOM).
SAX The standard "XML push" API
JAXB Java XML Binding API: works on top of another parser (usually streaming parser), binds contained data to/from Java objects.
Javolution provides a real-time StAX-like implementation which does not force object creation (e.g. String) and has smaller effect on memory footprint/garbage collection (Note: to reduce object creation, most StAX implementations maintain lookup tables to retrieve and reuse frequently used String objects).


[edit] External links

Introduction to StAX XML.com, Harold, Elliotte Rusty
Java Streaming API for XML (Stax) - Tutorial
JSR (#173)


Download JSR specification document as a pdf here: download now


www.extreme.indiana.edu/~aslom/xmlpull/ Articles and resources from Aleksander Slominski.

~aslom/xmlpull/patterns.html Article on XML Pull (and StAX) design patterns (recommended).


XMLPull.org
StAX and Sax comparison.
Using StAX with JAXB for efficiency
StAX and Java eg. from DevX.com
StAX-Utils Provides a set of utility classes that make it easy for developers to integrate StAX into their existing XML processing applications.

StAX-Utils includes classes to provide XML file indenting and formatting.


StaxMate is a light-weight framework that builds on top of Stax API and provides more convenient nested/filtered cursor for reading xml, and nested outputters for writing xml.
Apache Axiom is a light weight XML object model based on top of Stax and also provides lazy object building.
Apache Pivot (incubating) uses StAX for the serialization of user interface markup written in WTKX.




Retrieved from "http://en.wikipedia.org/wiki/StAX"
Categories: Java platform | Application programming interfaces | XML parsers 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Deutsch
Français
한국어
日本語









 This page was last modified on 9 April 2009, at 12:51 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
