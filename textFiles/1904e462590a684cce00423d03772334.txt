













XQuery - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "XQuery";
		var wgTitle = "XQuery";
		var wgAction = "view";
		var wgArticleId = "309466";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 279974209;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); XQuery

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
XQuery is a query and functional programming language that is designed to query collections of XML data.
XQuery 1.0 was developed by the XML Query working group of the W3C. The work was closely coordinated with the development of XSLT 2.0 by the XSL Working Group; the two groups shared responsibility for XPath 2.0, which is a subset of XQuery 1.0. XQuery 1.0 became a W3C Recommendation on January 23, 2007.
"The mission of the XML Query project is to provide flexible query facilities to extract data from real and virtual documents on the World Wide Web, therefore finally providing the needed interaction between the Web world and the database world. Ultimately, collections of XML files will be accessed like databases".[1]




Contents


1 Features
2 Examples
3 Applications
4 XQuery and XSLT compared

4.1 Scope
4.2 Origin
4.3 Versions
4.4 Strengths and weaknesses


5 Future work
6 Further information
7 Implementations
8 References
9 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Features
XQuery provides the means to extract and manipulate data from XML documents or any data source that can be viewed as XML, such as relational databases or office documents.
XQuery uses XPath expression syntax to address specific parts of an XML document. It supplements this with a SQL-like "FLWOR expression" for performing joins. A FLWOR expression is constructed from the five clauses after which it is named: FOR, LET, WHERE, ORDER BY, RETURN.
The language also provides syntax allowing new XML documents to be constructed. Where the element and attribute names are known in advance, an XML-like syntax can be used; in other cases, expressions referred to as dynamic node constructors are available. All these constructs are defined as expressions within the language, and can be arbitrarily nested.
The language is based on a tree-structured model of the information content of an XML document, containing seven kinds of node: document nodes, elements, attributes, text nodes, comments, processing instructions, and namespaces.
The type system of the language models all values as sequences (a singleton value is considered to be a sequence of length one). The items in a sequence can either be nodes or atomic values. Atomic values may be integers, strings, booleans, and so on: the full list of types is based on the primitive types defined in XML Schema.
XQuery 1.0 does not include features for updating XML documents or databases; it also lacks full text search capability. These features are both under active development for a subsequent version of the language.
XQuery is a programming language that can express arbitrary XML to XML data transformations with the following features:

Logical/physical data independence
Declarative
High level
Side-effect free
Strongly typed


[edit] Examples
The sample XQuery code below lists the unique speakers in each act of Shakespeare's play Hamlet, encoded in hamlet.xml


<html><head/><body>
{
  for $act in doc("hamlet.xml")//ACT
  let $speakers := distinct-values($act//SPEAKER)
  return
    <div>
      <h1>{ string($act/TITLE) }</h1>
      <ul>
      {
        for $speaker in $speakers
        return <li>{ $speaker }</li>
      }
      </ul>
    </div>
}
</body></html>

All XQuery constructs for performing computations are expressions. There are no statements, even though some of the keywords appear to suggest statement-like behaviors. To execute a function, the expression within the body is evaluated and its value is returned. Thus to write a function to double an input value, one simply writes:

declare function local:doubler($x) { $x * 2 }

To write a full query saying 'Hello World', one writes the expression:

"Hello World"

This style is common in functional programming languages. However, unlike most functional programming languages, XQuery doesn't support higher-order functions.

[edit] Applications
Below are a few examples of how XQuery can be used:

Extracting information from a database for a use in web service.
Generating summary reports on data stored in an XML database.
Searching textual documents on the Web for relevant information and compiling the results.
Selecting and transforming XML data to XHTML to be published on the Web.
Pulling data from databases to be used for the application integration.
Splitting up an XML document that represents multiple transactions into multiple XML documents.


[edit] XQuery and XSLT compared

[edit] Scope
Although XQuery was initially conceived as a query language for large collections of XML documents, it is also capable of transforming individual documents. As such, its capabilities overlap with XSLT, which was designed expressly to allow input XML documents to be transformed into HTML or other formats.
The XSLT 2.0 and XQuery standards were developed by separate working groups within W3C, working together to ensure a common approach where appropriate. They share the same data model, type system, and function library, and both include XPath 2.0 as a sublanguage.

[edit] Origin
The two languages, however, are rooted in different traditions and serve the needs of different communities. XSLT was primarily conceived as a stylesheet language whose primary goal was to render XML for the human reader on screen, on the web (as web template language), or on paper. XQuery was primarily conceived as a database query language in the tradition of SQL.
Because the two languages originate in different communities, XSLT is stronger in its handling of narrative documents with more flexible structure, while XQuery is stronger in its data handling, for example when performing relational joins.

[edit] Versions
XSLT 1.0 appeared as a Recommendation in 1999, whereas XQuery 1.0 only became a Recommendation in early 2007; as a result, XSLT is at present much more widely used. Both languages have similar expressive power, though XSLT 2.0 has many features that are missing from XQuery 1.0, such as grouping, number and date formatting, and greater control over XML namespaces.[2][3][4]. Many of these features are planned for XQuery 1.1. [5]
Any comparison must take into account the fact that XSLT 1.0 and XSLT 2.0 are very different languages. XSLT 2.0, in particular, has been heavily influenced by XQuery in its move to strong typing and schema-awareness.

[edit] Strengths and weaknesses
Usability studies have shown that XQuery is easier to learn than XSLT, especially for users with previous experience of database languages such as SQL.[6] This can be attributed to the fact that XQuery is a smaller language with fewer concepts to learn, and to the fact that programs are more concise. It is also true that XQuery is more orthogonal, in that any expression can be used in any syntactic context. By contrast, XSLT is a two-language system in which XPath expressions can be nested in XSLT instructions but not vice versa.
XSLT is currently stronger than XQuery for applications that involve making small changes to a document (for example, deleting all the NOTE elements). Such applications are generally handled in XSLT by use of a coding pattern that involves an identity template that copies all nodes unchanged, modified by specific templates that modify selected nodes. XQuery has no equivalent to this coding pattern, though in future versions it will be possible to tackle such problems using the update facilities in the language that are under development. [7]
Another facility lacking from XQuery is any kind of mechanism for dynamic binding or polymorphism. The absence of this capability starts to become noticeable when writing large applications, or when writing code that is designed to be reusable in different environments. XSLT offers two complementary mechanisms in this area: the dynamic matching of template rules, and the ability to override rules using xsl:import, that make it possible to write applications with multiple customization layers.
The absence of these facilities from XQuery is a deliberate design decision: it has the consequence that XQuery is very amenable to static analysis, which is essential to achieve the level of optimization needed in database query languages. This also makes it easier to detect errors in XQuery code at compile time.
The fact that XSLT 2.0 uses XML syntax makes it rather verbose in comparison to XQuery 1.0. However, many large applications take advantage of this capability by using XSLT to read, write, or modify stylesheets dynamically as part of a processing pipeline. The use of XML syntax also enables the use of XML-based tools for managing XSLT code. By contrast, XQuery syntax is more suitable for embedding in traditional programming languages such as Java or C#. If necessary, XQuery code can also be expressed in an XML syntax called XQueryX. The XQueryX representation of XQuery code is rather verbose and not convenient for humans, but can easily be processed with XML tools, for example transformed with XSLT stylesheets. [8] [9]

[edit] Future work
Currently, two major extensions to the XQuery are under development by W3C:

XQuery 1.0 and XPath 2.0 Full-Text[10]
XQuery Update Facility

Work has started on XQuery 1.1. Planned new features are listed in a new requirements document.[11]
Scripting (procedural) extension for XQuery is also being designed.[12]

[edit] Further information



Wikibooks has a book on the topic of
XQuery




Querying XML: XQuery, XPath, and SQL/XML in context. Jim Melton and Stephen Buxton. Morgan Kaufmann, 2006. ISBN 1558607110.
XQuery. Priscilla Walmsley. O'Reilly Media, 2007. ISBN 0596006349.
XQuery: The XML Query Language. Michael Brundage. Addison-Wesley Professional, 2004. ISBN 0321165810.
XQuery from the Experts: A Guide to the W3C XML Query Language. Howard Katz (ed). Addison-Wesley, 2004. ISBN 0-321-18060-7
An Introduction to the XQuery FLWOR Expression. Dr. Michael Kay (W3C XQuery Committee), 2005.


[edit] Implementations

Altova XMLSpy is a widely used commercial XML editor and development environment for modeling, editing, transforming, and debugging XML-related technologies. It supports XQuery, and includes an XQuery Debugger, a code generator for mapping between schemas, and AltovaXML Query Processor which handles both XSLT 2 and XML Query 1.0.

AltovaXML is the engine behind the Altova XMLSpy editors. This engine is available as a free separate download and may be used in applications royalty-free. The AltovaXML engine offers XML validation, XSLT 1.0/2.0 and XQuery 1.0. It has COM, Java and .Net interfaces, as well as commandline tools.


BaseX a native, open-source XML database and XQuery / XQuery Full-Text processor, supporting large XML instances and allowing interactive query input and evaluation.
Sedna XML Database. High performance native XML database with XQuery support, designed for production grade software handling gigabytes of XML data. Many different language APIs. Open source.
Saxon XSLT and XQuery Processor — by Michael Kay; open source version available, supports extensions written in Java or C#
Galax - An open source OCaml XQuery implementation supporting various extensions; especially suited for academic XQuery implementations
Qexo - open source, written in Java with Kawa
MarkLogic Server, an XML database that uses XQuery and is optimized for large collections of XML document content
DataDirect XQuery - platform-independent XQuery engine for most relational databases
OpenLink Virtuoso
Oracle Data Service Integrator (Formerly BEA AquaLogic Data Services Platform) - XQuery for data integration
Oracle Database 11g - The Oracle Database (since version 10gR2) provides support for the XQuery language and multiple XML storage and indexing models.
Microsoft SQL Server 2005
DB2 9
Qizx - high-performance XQuery database engine (Qizx/db), with an open-source version (named Qizx/open).
X-Hive/DB's XQuery implementation.
XQSharp - An XQuery implementation for the .NET Framework.
MonetDB/XQuery - An open source XQuery processor on top of the MonetDB relational database system, with support for W3C XQuery Update Facility.
XQilla - An open source (ASL2.0) XQuery processing library with support for the latest XQuery Update features. XQilla is written in C++ and includes a command line executable shell to execute queries against XML content stored on a local filesystem. This library is actively developed and part of a supported Oracle product, Berkeley DB XML.
eXist - Open source database management system entirely built on XML technology. It stores XML data according to the XML data model and features efficient, index-based XQuery processing. eXist-db provides a powerful environment for the development of web applications based on XQuery and related standards. Entire web applications can be written in XQuery, using XSLT, XHTML, CSS and Javascript (for AJAX functionality). XQuery server pages can be executed from the filesystem or stored in the database.
Zorba - Zorba is a general purpose XQuery processor implementing in C++ a W3C family of specifications (i.e. XQuery 1.0 and XQuery Update Facility). It is not an XML database. The query processor has been designed to be embeddable in a variety of environments such as other programming languages extended with XML processing capabilities, browsers, database servers, XML message dispatchers, or smartphones. Zorba is available under the Apache license v2.
many more XQuery implementations (some free/open source).

See also: :Category:XQuery processors

[edit] References


^ W3C (2003-10-25). "cited by J.Robie". http://lists.w3.org/Archives/Public/www-tag/2003Oct/0115.html. 
^ Kay, Michael (May 2005). "Comparing XSLT and XQuery". http://idealliance.org/proceedings/xtech05/papers/02-03-01/. 
^ Eisenberg, J. David (2005-03-09). "Comparing XSLT and XQuery". http://www.xml.com/pub/a/2005/03/09/xquery-v-xslt.html. 
^ Smith, Michael (2001-02-23). "XQuery, XSLT "overlap" debated". http://www.xmlhack.com/read.php?item=1080. 
^ "XQuery 1.1 requirements". http://www.w3.org/TR/xquery-11-requirements/. 
^ Usability of XML Query Languages. Joris Graaumans. SIKS Dissertation Series No 2005-16, ISBN 90-393-4065-X
^ "XQuery Update Facility". http://www.w3.org/TR/xqupdate/. 
^ "XML Syntax for XQuery (XQueryX)". http://www.w3.org/TR/xqueryx/. 
^ Michael Kay. "Saxon diaries: How not to fold constants". http://saxonica.blogharbor.com/blog/_archives/2007/1/20/2665644.html. 
^ XQuery and XPath Full Text 1.0
^ XML Query (XQuery) 1.1 Requirements
^ XQuery Scripting Extension 1.0 Requirements



[edit] External links

W3C XML Query (XQuery)
hamlet.xml Hamlet in XML Format
JSR 225 XQuery API for Java (XQJ) Java Specification Request
XQuery Update facility working draft
XQuery (presentation - as HTML slides)
XQuery: A Guided Tour - an 80 page introduction to XQuery
XQuery for Java (XQJ) Tutorial
List of XQuery Engines and Processors at SQLSummit.com
X-Query.com: Specifications, Articles, Mailing List, and Vendors
Webcast and Podcast: Interview with Dr. Daniela Florescu, co-inventor of Quilt and co-editor of W3C XML Query Language (XQuery) specifications
XQuery Developer Central
Jonathan Robie's XQuery Blog - Jonathan is an Editor of several XQuery Specifications
Jonathan Bruce Blog - Convergence HQ: XQuery, Java, .NET
FunctX XQuery Functions - open source pure XQuery function library, tested with Saxon and Data Direct XQuery
Discovering XQuery Blog
XQuery.com
An XML-based Database of Molecular Pathways XQuery Speed / Performance comparisons between eXist, X-Hive, Sedna and Qizx/open
XQuery Development Tools for Eclipse (XQDT)
XQuery tutorial
XQuery live demo of the FLWOR-Foundation
Excute XQuery on XML and HTML online

Portions borrowed with permission from the books "XML Hacks" (O'Reilly Media) and "XQuery" (O'Reilly Media).
Previous version based on an article at the French language Wikipedia







v • d • e

Standards of the World Wide Web Consortium





Recommendations

Canonical XML · CDF · CSS · DOM · HTML · MathML · OWL · P3P · PLS · RDF · RDF Schema · SISR · SMIL · SOAP · SRGS · SSML · SVG · SPARQL · Timed Text · VoiceXML · WSDL · XForms · XHTML · XLink · XML · XML Base · XML Encryption · XML Events · XML Information Set · XML Schema · XML Signature · XPath · XPointer · XQuery · XSL · XSL-FO · XSLT






Notes

XAdES · XHTML+SMIL






Working Drafts

CCXML · CURIE · HTML 5 · InkML · WICD · XFDL · XFrames · XBL · XHTML+MathML+SVG · XProc  · OWL 2






Guidelines

Web Content Accessibility Guidelines






deprecated

HDML · JSSS · PGML · VML









Retrieved from "http://en.wikipedia.org/wiki/XQuery"
Categories: World Wide Web Consortium standards | XML data access | Functional languages | Query languages 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Deutsch
Español
Euskara
Français
Interlingua
Íslenska
Italiano
Nederlands
日本語
‪Norsk (bokmål)‬
Polski
Português
Русский
Svenska
Türkçe
Українська









 This page was last modified on 27 March 2009, at 09:04.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
