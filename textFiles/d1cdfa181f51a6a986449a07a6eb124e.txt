













PostgreSQL - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "PostgreSQL";
		var wgTitle = "PostgreSQL";
		var wgAction = "view";
		var wgArticleId = "23824";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281352734;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); PostgreSQL

From Wikipedia, the free encyclopedia

Jump to: navigation, search 

PostgreSQL




Developed by
PostgreSQL Global Development Group


Latest release
8.3.7 / 2009-03-17; 21 days ago[1]


Written in
C


Operating system
Cross-platform


Type
ORDBMS


License
BSD license


Website
http://www.postgresql.org/


PostgreSQL is an object-relational database management system (ORDBMS).[2] It is released under a BSD-style license and is thus free software. As with many other open-source programs, PostgreSQL is not controlled by any single company, but has a global community of developers and companies to develop it.




Contents


1 Product name
2 History
3 Features

3.1 Functions
3.2 Indexes
3.3 Triggers
3.4 MVCC
3.5 Rules
3.6 Data types
3.7 User-defined objects
3.8 Inheritance
3.9 Other features
3.10 Add-ons


4 Database administration front-ends

4.1 Open source

4.1.1 psql
4.1.2 pgAdmin
4.1.3 phpPgAdmin


4.2 Commercial


5 Benchmarks
6 Prominent users
7 Awards
8 See also
9 References

9.1 Notes


10 External links

10.1 About PostgreSQL
10.2 Documentation
10.3 External projects







//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Product name
The mixed-capitalization of the PostgreSQL name can confuse some people on first viewing. The several pronunciations of "SQL" can lead to this confusion. PostgreSQL's developers pronounce it /poːst ɡɹɛs kjuː ɛl/; (Audio sample, 5.6k MP3). It is also common to hear it abbreviated as simply "Postgres", which was its original name. Because of ubiquitous support for the SQL Standard amongst most relational databases, the community considered changing the name back to Postgres. However, the PostgreSQL Core Team announced in 2007 that the product would continue to be named PostgreSQL[3]. The name refers to the project's origins as a "post-Ingres" database, the original authors having also developed the Ingres database.

[edit] History
PostgreSQL evolved from the Ingres project at University of California, Berkeley. In 1982, the project leader, Michael Stonebraker, left Berkeley to commercialize Ingres. He returned to Berkeley in 1985 and started a post-Ingres project to address the problems with contemporary database systems that had become increasingly clear during the early 1980s. The new project, Postgres, aimed to add the fewest features needed to completely support types. These features included the ability to define types and to fully describe relationships – something used widely before but maintained entirely by the user. In Postgres, the database "understood" relationships, and could retrieve information in related tables in a natural way using rules. Postgres used many ideas of Ingres but not its code.
Starting in 1986, the team published a number of papers describing the basis of the system, and by 1988 had a prototype version. The team released version 1 to a small number of users in June 1989, then version 2 with a re-written rules system in June 1990. Version 3, released in 1991, again re-wrote the rules system, and added support for multiple storage managers and an improved query engine. By 1993 the great number of users began to overwhelm the project with requests for support and features. After releasing version 4 — primarily a cleanup — the project ended.
But open-source developers could obtain copies and develop the system further, because Berkeley had released Postgres under the BSD license. In 1994, Berkeley graduate students Andrew Yu and Jolly Chen replaced the Ingres-based QUEL query language interpreter with one for the SQL query language, creating Postgres95. The code was released on the web.
In July 1996, Marc Fournier at Hub.Org Networking Services provided the first non-university development server for the open source development effort. Along with Bruce Momjian and Vadim B. Mikheev, work began to stabilize the code inherited from Berkeley. The first open source version was released on August 1, 1996.
In 1996, the project was renamed to PostgreSQL to reflect its support for SQL. The first PostgreSQL release formed version 6.0 in January 1997. Since then, the software has been maintained by a group of database developers and volunteers around the world, coordinating via the Internet.
Although the license allowed for the commercialization of Postgres, the code did not develop commercially at first — somewhat surprisingly considering the advantages Postgres offered. The main offshoot originated when Paula Hawthorn (an original Ingres team member who moved from Ingres) and Michael Stonebraker formed Illustra Information Technologies to commercialize Postgres.
In 2000, former Red Hat investors created the company Great Bridge to commercialize PostgreSQL and compete against commercial database vendors. Great Bridge sponsored several PostgreSQL developers and donated many resources back to the community,[4] but by late 2001 closed due to tough competition from companies like Red Hat and to poor market conditions.[5]
In 2001, Command Prompt, Inc. released Mammoth PostgreSQL, the oldest surviving commercial PostgreSQL distribution. It continues to actively support the PostgreSQL community through developer sponsorships and projects including PL/Perl, PL/php, and hosting of community projects such as the PostgreSQL Build Farm.
In January 2005, PostgreSQL received backing by database vendor Pervasive Software, known for its Btrieve product which was ubiquitous on the Novell NetWare platform. Pervasive announced commercial support and community participation and achieved some success. But in July 2006, it left the PostgreSQL support market.[6]
In mid-2005 two other companies announced plans to commercialize PostgreSQL with focus on separate niche markets. EnterpriseDB added functionality to allow applications written to work with Oracle to be more readily run with PostgreSQL. Greenplum contributed enhancements directed at data warehouse and business intelligence applications, including the BizGres project.
In October 2005, John Loiacono, executive vice president of software at Sun Microsystems, commented: "We're not going to OEM Microsoft but we are looking at PostgreSQL right now,"[7] although no specifics were released at that time. By November 2005, Sun had announced support for PostgreSQL.[8] By June 2006, Sun Solaris 10 (6/06 release) shipped with PostgreSQL.
In August 2007, EnterpriseDB announced[9] the Postgres Resource Center [1] and EnterpriseDB Postgres, designed to be a fully configured distribution of PostgreSQL including many contrib modules and add-on components. EnterpriseDB Postgres was renamed to Postgres Plus in March 2008.
The PostgreSQL project continues to make yearly major releases and minor "bugfix" releases, all available under the BSD license, based on contributions from both commercial vendors, support companies, and open source programmers at large.

[edit] Features

[edit] Functions
Functions allow blocks of code to be executed by the server. Although these blocks can be written in SQL, the lack of basic programming operations, such as branching and looping, has driven the adoption of other languages inside of functions. Some of the languages can even execute inside of triggers. Functions in PostgreSQL can be written in the following languages:

A built-in language called PL/pgSQL resembles Oracle's procedural language PL/SQL.
Scripting languages are supported through PL/Lua, PL/LOLCODE, PL/Perl, plPHP, PL/Python, PL/Ruby, PL/sh, PL/Tcl and PL/Scheme.
Compiled languages C, C++, or Java (via PL/Java).
The statistical language R through PL/R.

PostgreSQL supports row-returning functions, where the output of the function is a set of values which can be treated much like a table within queries.
Functions can be defined to execute with the privileges of either the caller or the user who defined the function. Functions are sometimes referred to as stored procedures, although there is a slight technical distinction between the two.

[edit] Indexes
PostgreSQL includes built-in support for B+-tree, hash, GiST and GiN indexes. In addition, user-defined index methods can be created, although this is quite an involved process. Indexes in PostgreSQL also support the following features:

PostgreSQL is capable of scanning indexes backwards when needed; a separate index is never needed to support ORDER BY field DESC.
Expression indexes can be created with an index of the result of an expression or function, instead of simply the value of a column.
Partial indexes, which only index part of a table, can be created by adding a WHERE clause to the end of the CREATE INDEX statement. This allows a smaller index to be created.
The planner is capable of using multiple indexes together to satisfy complex queries, using temporary in-memory bitmap index operations.


[edit] Triggers
Triggers are events triggered by the action of SQL DML statements. For example, an INSERT statement might activate a trigger that checked if the values of the statement were valid. Most triggers are only activated by either INSERT or UPDATE statements.
Triggers are fully supported and can be attached to tables but not to views. Views can have rules, though. Multiple triggers are fired in alphabetical order. In addition to calling functions written in the native PL/PgSQL, triggers can also invoke functions written in other languages like PL/Perl.

[edit] MVCC
PostgreSQL manages concurrency through a system known as Multi-Version Concurrency Control (MVCC), which gives each user a "snapshot" of the database, allowing changes to be made without being visible to other users until a transaction is committed. This largely eliminates the need for read locks, and ensures the database maintains the ACID principles in an efficient manner.

[edit] Rules
Rules allow the "query tree" of an incoming query to be rewritten. One common usage is to implement updatable views.

[edit] Data types
A wide variety of native data types are supported, including:

Variable length arrays (including text and composite types) up to 1GB in total storage size.
Arbitrary precision numerics
Geometric primitives
IPv4 and IPv6 addresses
CIDR blocks and MAC addresses
XML supporting Xpath queries (as of 8.3)
UUID (as of 8.3)

In addition, users can create their own data types which can usually be made fully indexable via PostgreSQL's GiST infrastructure. Examples of these are the geographic information system (GIS) data types from the PostGIS project for PostgreSQL.

[edit] User-defined objects
New types of almost all objects inside the database can be created, including:

Casts
Conversions
Data types
Domains
Functions, including aggregate functions
Indexes
Operators (existing ones can be overloaded)
Procedural languages


[edit] Inheritance
Tables can be set to inherit their characteristics from a "parent" table. Data is shared between "parent" and "child" tables. Tuples inserted or deleted in the "child" table will respectively be inserted or deleted in the "parent" table. Also adding a column in the parent table will cause that column to appear in the child table as well. This feature is not fully supported yet—in particular, table constraints are not currently inheritable. This means that attempting to insert the id of a row from a child table into a table that has a foreign key constraint referencing a parent table will fail because Postgres doesn't recognize that the id from the child table is also a valid id in the parent table.
Inheritance provides a way to map the features of generalization hierarchies depicted in Entity Relationship Diagrams (ERD) directly into the PostgreSQL database.

[edit] Other features

Referential integrity constraints including foreign key constraints, column constraints, and row checks
Views. Although native support for updateable views has not been implemented, the same functionality can be achieved using the rules system.
Full, inner, and outer (left and right) joins
Sub-selects
Transactions
Supports most of the major features of SQL:2003 standard [2] unsupported supported <-- lead to documentation for the next release of PostgreSQL, follow this link to find manuals for already released versions of PostgreSQL
Encrypted connections via SSL
Binary and textual large-object storage
Online backup
Domains
Tablespaces
Savepoints
Point-in-time recovery
Two-phase commit
TOAST (The Oversized-Attribute Storage Technique) is used to transparently store large table attributes (such as big MIME attachments or XML messages) in a separate area, with automatic compression.
Regular expressions [3]


[edit] Add-ons

Geographic objects via PostGIS. GPL.
Shortest-Path-Algorithms with pgRouting using PostGIS. GPL.
Full text search via Tsearch2 and OpenFTS. (As of version 8.3, Tsearch2 is included in core PostgreSQL)
Some synchronous multi-master derivatives or extensions exist, including

pgcluster (BSD license)
Postgres-R (in early stages of development)


Several asynchronous master/slave replication packages, including

Slony-I (BSD license)
Mammoth Replicator. (BSD license[10], formerly proprietary)
Bucardo


There are proxy (middleware) tools that enable replication, failover or load management and balancing for PostgreSQL:

PGPool-II.
Sequoia available for a number of different server besides PostgreSQL.




[edit] Database administration front-ends

[edit] Open source

[edit] psql
The primary front-end for PostgreSQL is the psql command-line program, which can be used to enter SQL queries directly, or execute them from a file. In addition, psql provides a number of meta-commands and various shell-like features to facilitate writing scripts and automating a wide variety of tasks; for example tab completion of object names and SQL syntax.

[edit] pgAdmin
pgAdmin is a graphical front-end administration tool for PostgreSQL, which is supported on most popular computer platforms. The program is available in more than a dozen languages, and is free software released under the Artistic License. The first prototype, named pgManager, was written for PostgreSQL 6.3.2 from 1998. The stable release (named pgAdmin II) was first released on 16 January 2002. The current version is pgAdmin III, which is released under the Artistic License.

[edit] phpPgAdmin
phpPgAdmin is a web-based administration tool for PostgreSQL written in PHP and based on the popular phpMyAdmin interface originally written for MySQL administration.[11]

[edit] Commercial
A number of companies offer commercial tools for PostgreSQL. They often consist of an universal core that is adapted for various specific database products. These tools mostly share the administration features with the open source tools but offer improvements in data modeling, im/exporting or reporting. Among them are Navicat, TeamPostgreSQL [4], SQLMaestro [5], DBtools manager [6] or EMS SQL studio [7] as well as pure data modeling tools like Toad data modeler [8], DeZign for Databases [9] or the open-source Mogwai ER designer [10].

See also: Comparison of database tools


[edit] Benchmarks
Many informal performance studies of PostgreSQL have been done[12] but the first industry-standard and peer-validated benchmark was completed in June 2007 using the Sun Java System Application Server (commercial version of GlassFish) 9.0 Platform Edition, UltraSPARC T1 based Sun Fire server and Postgres 8.2[13]. This result of 778.14 SPECjAppServer2004 JOPS@Standard compares favourably with the 874 JOPS@Standard with Oracle 10 on an Itanium based HP-UX [12]
In August 2007, Sun submitted an improved benchmark score of 813.73 SPECjAppServer2004 JOPS@Standard. With the system under test at a reduced price, the price/performance improved from $US 84.98/JOPS to $US 70.57/JOPS. [14]

[edit] Prominent users

Yahoo! for web user behavioral analysis, storing 2 petabytes and claimed to be the largest data warehouse using a heavily modified version of PostgreSQL with an entirely different column-based storage engine and different query processing layer. While for performance, storage, and query purposes the database bears little resemblance to PostgreSQL, the front-end maintains compatibility so that Yahoo can use many off-the-shelf tools already written to interact with PostgreSQL.[15][16]
Afilias, domain registries for .org, .info and others.[17]
Sony Online multiplayer online games.[18]
BASF, shopping platform for their agribusiness portal.[19]
hi5.com social networking portal.[20]
Skype VoIP application, central business databases.[21]
Sun xVM, Sun's virtualization and datacenter automation suite [22]
Evergreen, an open source integrated library system providing an Online Public Access Catalog and cataloging, management, and other functions for hundreds of libraries in the United States, Canada, and elsewhere
NextBus, provider of arrival-time prediction and GPS tracking systems for public transportation
Snooth, a wine database, featuring millions of reviews and hundreds of thousands of wines.


[edit] Awards
As of 2008[update] PostgreSQL has received the following awards[23]:

1999 LinuxWorld Editor's Choice Award for Best Database
2000 Linux Journal Editors' Choice Awards for Best Database
2002 Linux New Media Editors Choice Award for Best Database
2003 Linux Journal Editors' Choice Awards for Best Database
2004 Linux New Media Award For Best Database
2004 Linux Journal Editors' Choice Awards for Best Database
2004 ArsTechnica Best Server Application Award
2005 Linux Journal Editors' Choice Awards for Best Database
2006 Linux Journal Editors' Choice Awards for Best Database
2008 Developer.com Product of the Year, Database Tool


[edit] See also




free software portal




Comparison of relational database management systems
Comparison of database tools
EnterpriseDB
MySQL
Change control


[edit] References

Douglas, Korry (2005). PostgreSQL (Second Edition ed.). Sams. ISBN 0672327562. 
Gilmore, W. Jason; Treat, Robert (2006). Beginning PHP and PostgreSQL 8: From Novice to Professional. Apress. ISBN 1590595475. 
Matthew, Neil; Stones, Richard (2005). Beginning Databases with PostgreSQL (Second Edition ed.). Apress. ISBN 1590594789. 
Worsley, John C.; Drake, Joshua D. (2002). Practical PostgreSQL. O'Reilly Media. ISBN 1565928466. http://www.commandprompt.com/ppbook/. 


[edit] Notes


^ PostgreSQL Update Versions 8.3.7, 8.2.13, etc. Released
^ What is PostgreSQL?
^ "Project name - statement from the core team". archives.postgresql.org. 2007-11-16. http://archives.postgresql.org/pgsql-advocacy/2007-11/msg00109.php. Retrieved on 2007-11-16. 
^ Maya Tamiya (2001-01-10). "Interview: Bruce Momjian". LWN.net. http://lwn.net/2001/features/Momjian/. Retrieved on 2007-09-07. 
^ Great Bridge (2001-09-06). Great Bridge ceases operations. Press release. http://findarticles.com/p/articles/mi_m0EIN/is_2001_Sept_6/ai_77869978/print. Retrieved on 2007-09-07. 
^ John Farr (2006-07-25). "Open letter to the PostgreSQL Community". Pervasive Software. http://web.archive.org/web/20070225141652/http://www.pervasive-postgres.com/letter.asp. Retrieved on 2007-02-13. 
^ Rodney Gedda (2005-10-05). "Sun's software chief eyes databases, groupware". Computerworld. http://www.computerworld.com.au/index.php/id;116679278;fp;16;fpid;0. Retrieved on 2007-02-13. 
^ Sun Microsystems (2005-11-17). Sun Announces Support for Postgres Database on Solaris 10. Press release. http://www.sun.com/smi/Press/sunflash/2005-11/sunflash.20051117.1.html. Retrieved on 2007-02-13. 
^ EnterpriseDB (2007-08-07). EnterpriseDB Announces First-Ever Professional-Grade PostgreSQL Distribution for Linux. Press release. http://www.enterprisedb.com/news_events/press_releases/07_08_07.do. Retrieved on 2007-08-07. 
^ Command prompt's Mammoth replicator page lists replicator's availability as "open source"
^ phpPgAdmin Project (2008-04-25). "About phpPgAdmin". http://phppgadmin.sourceforge.net/?page=about. Retrieved on 2008-04-25. 
^ a b Josh Berkus (2007-07-06). "PostgreSQL publishes first real benchmark". http://blogs.ittoolbox.com/database/soup/archives/postgresql-publishes-first-real-benchmark-17470. Retrieved on 2007-07-10. 
^ "SPECjAppServer2004 Result". SPEC. 2007-07-06. http://www.spec.org/jAppServer2004/results/res2007q3/jAppServer2004-20070606-00065.html. Retrieved on 2007-07-10. 
^ "SPECjAppServer2004 Result". SPEC. 2007-07-04. http://www.spec.org/jAppServer2004/results/res2007q3/jAppServer2004-20070703-00073.html. Retrieved on 2007-09-01. 
^ Eric Lai (2008-05-22). "Size matters: Yahoo claims 2-petabyte database is world's biggest, busiest". Computerworld. http://www.computerworld.com/action/article.do?command=viewArticleBasic&taxonomyId=18&articleId=9087918&intsrc=hm_topic. 
^ Thomas Claburn (2008-05-21). "Yahoo Claims Record With Petabyte Database". InformationWeek. http://www.informationweek.com/news/showArticle.jhtml?articleID=207801579. 
^ PostgreSQL affiliates .ORG domain
^ Sony Online opts for open-source database over Oracle
^ A Web Commerce Group Case Study on PostgreSQL
^ Rodney Gedda (2007-05-30). "Open source PostgreSQL hits another Hi5". Computerworld. http://www.linuxworld.com/news/2007/053007-open-source-postgresql-hits-another.html. Retrieved on 2007-10-23. 
^ "PostgreSQL at Skype". Skype Developer Zone. 2006. https://developer.skype.com/SkypeGarage/DbProjects/SkypePostgresqlWhitepaper. Retrieved on 2007-10-23. 
^ "How Much Are You Paying For Your Database?". Sun Microsystems blog. 2007. http://blogs.sun.com/marchamilton/entry/how_much_are_you_paying. Retrieved on 2007-12-14. 
^ "PostgreSQL, Award Winning Software". postgresql.org. 2008-01-19. http://www.postgresql.org/about/awards. Retrieved on 2008-01-31. 



[edit] External links




Free software portal




[edit] About PostgreSQL

PostgreSQL at the Open Directory Project
Planet PostgreSQL, blog aggregator
Database Journal articles on PostgreSQL
Linux Productivity Magazine: a complete issue on PostgreSQL
PostgreSQL Guide
a rebuttal to the FUD (fear, uncertainty, and doubt) surrounding much of the criticism against PostgreSQL.
PostgreSQL gotchas, documented but counterintuitive behavior
Test_PGC, Example embedded SQL/C program for PostgreSQL showing database operations and SQLSTATE testing.
LinuxChix PostgreSQL Course on Moodle


[edit] Documentation

PostgreSQL FAQ (Frequently Asked Questions)
PostgreSQL Website
PostgreSQL Wiki
PostgreSQL Documentation

Performance tuning documentation

PostgreSQL Performance Tuning
Tuning PostgreSQL for performance
Annotated POSTGRESQL.CONF Guide for PostgreSQL


[edit] External projects
The developers of PostgreSQL try to keep the system itself down to a set of "core" features, rather than encouraging extensions to be rolled into the main system. Here are places where "secondary" projects are managed:

PgFoundry PostgreSQL-related projects
SourceForge PostgreSQL-related projects
Benetl is a free ETL tool for files working with the latest postgreSQL release.
pgAdmin III
Postgres Rocks








v • d • e

Database management systems





Database models · Database normalization · Database storage · Distributed DBMS · Referential integrity · Relational algebra · Relational calculus · Relational database · Relational DBMS · Relational model · Object-relational database · Transaction processing





Concepts

Database · ACID · CRUD · Null · Candidate key · Foreign key · Primary key · Superkey · Surrogate key






Objects

Trigger · View · Table · Cursor · Log · Transaction · Index · Stored procedure · Partition






SQL

Select · Insert · Update · Merge · Delete · Join · Union · Create · Drop · Begin work · Commit · Rollback · Truncate · Alter






Components

Concurrency control · Data dictionary · JDBC · ODBC · Query language · Query optimizer · Query plan






Database products: Object-oriented (comparison) · Relational (comparison) · Document-oriented








Retrieved from "http://en.wikipedia.org/wiki/PostgreSQL"
Categories: Database management systems | PostgreSQL | Open source database management systems | Cross-platform softwareHidden categories: Articles containing potentially dated statements from 2008 | All articles containing potentially dated statements 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Català
Česky
Dansk
Deutsch
Español
Euskara
Français
한국어
Bahasa Indonesia
Italiano
Lietuvių
Nederlands
日本語
‪Norsk (bokmål)‬
Polski
Português
Română
Русский
Slovenčina
Српски / Srpski
Srpskohrvatski / Српскохрватски
Suomi
Svenska
Tiếng Việt
ไทย
Türkçe
Українська
中文









 This page was last modified on 2 April 2009, at 19:54.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
