













Software-defined radio - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Software-defined_radio";
		var wgTitle = "Software-defined radio";
		var wgAction = "view";
		var wgArticleId = "83137";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281905665;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Software-defined radio

From Wikipedia, the free encyclopedia

Jump to: navigation, search 





This article includes a list of references or external links, but its sources remain unclear because it has insufficient inline citations. Please help to improve this article by introducing more precise citations where appropriate.




Multiplex
techniques





Circuit mode
(constant bandwidth)


TDM · FDM · WDM
Polarization multiplexing
Spatial multiplexing (MIMO)


Statistical multiplexing
(variable bandwidth)


Packet mode · Dynamic TDM
FHSS · DSSS · OFDMA


Related topics


Channel access methods
Media Access Control (MAC)




This box: view • talk • edit





Modulation techniques


Analog modulation


AM · SSB · FM · PM · SM


Digital modulation


OOK · FSK · ASK · PSK · QAM
MSK · CPM · PPM · TCM · OFDM


Spread spectrum



v • d • e
FHSS · DSSS


See also: Demodulation


A Software-Defined Radio (SDR) system is a radio communication system where components that have typically been implemented in hardware (e.g. mixers, filters, amplifiers, modulators/demodulators, detectors. etc.) are instead implemented using software on a personal computer or other embedded computing devices. While the concept of SDR is not new, the rapidly evolving capabilities of digital electronics are making practical many processes that were once only theoretically possible.
A basic SDR may consist of a computer (PC) equipped with a sound card, or other analog-to-digital converter, preceded by some form of RF front end. Significant amounts of signal processing are handed over to the general purpose processor, rather than done using special-purpose hardware. Such a design produces a radio that can receive and transmit a different form of radio protocol (sometimes referred to as a waveform) just by running different software.
Software radios have significant utility for the military and cell phone services, both of which must serve a wide variety of changing radio protocols in real time.
In the long term, software-defined radio is expected by its proponents to become the dominant technology in radio communications. It is the enabler of the cognitive radio.




Contents


1 Operating principles

1.1 Ideal concept
1.2 Receiver architecture


2 History

2.1 SPEAKeasy phase I
2.2 SPEAKeasy phase II
2.3 Joint Tactical Radio System
2.4 Software defined radios for amateur or ham use


3 Receivers
4 See also
5 Notes
6 References
7 Further reading
8 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Operating principles

[edit] Ideal concept
The ideal receiver scheme would be to attach an analog to digital converter to an antenna. A digital signal processor would read the converter, and then its software would transform the stream of data from the converter to any other form the application requires.
An ideal transmitter would be similar. A digital signal processor would generate a stream of numbers. These would be sent to a digital to analog converter connected to a radio antenna.
The ideal scheme is, due to the actual technology progress limits, not completely realizable, however.

[edit] Receiver architecture
Most receivers utilize a variable frequency oscillator, mixer, and filter to tune the desired signal to a common intermediate frequency or baseband, where it is then sampled by the analog to digital converter. However, in some applications it is not necessary to tune the signal to an intermediate frequency and the radio frequency signal is directly sampled by the analog to digital converter (after amplification).
Real analog-to-digital converters lack the discrimination to pick up sub-microvolt, nanowatt radio signals. Therefore a low-noise amplifier must precede the conversion step and this device introduces its own problems. For example if spurious signals are present (which is typical), these compete with the desired signals within the amplifier's dynamic range. They may introduce distortion in the desired signals, or may block them completely. The standard solution is to put band-pass filters between the antenna and the amplifier, but these reduce the radio's flexibility - which some see as the whole point of a software radio. Real software radios often have two or three analog "channels" that are switched in and out. These contain matched filters, amplifiers and sometimes a mixer.
SDR hardware local oscillator phase noise and spurs
Currently the Direct Digital Synthesizers (DDS) for deriving the internal local oscillator signals for tuning the SDR receiver hardwares, are notorious for generating spurious RF byproducts in the passband of the receiver. These spurs as they are called, can mask weak signals and make entire band segments in the RF spectrum useless.

[edit] History
The term "Software Defined Radio" was coined in 1991 by Joseph Mitola, who published the first paper on the topic in 1992[1]. Though the concept was first proposed in 1991, software-defined radios have their origins in the defense sector since the late 1970s in both the U.S. and Europe (for example, Walter Tuttlebee described a VLF radio that used an ADC and an 8085 microprocessor)[2]. One of the first public software radio initiatives was a U.S. military project named SpeakEasy. The primary goal of the SpeakEasy project was to use programmable processing to emulate more than 10 existing military radios, operating in frequency bands between 2 and 2000 MHz[3]. Further, another design goal was to be able to easily incorporate new coding and modulation standards in the future, so that military communications can keep pace with advances in coding and modulation techniques.

[edit] SPEAKeasy phase I
From 1992 to 1995, the goal was to produce a radio for the U.S. Army that could operate from 2 MHz to 2 GHz, and operate with ground force radios (frequency-agile VHF, FM, and SINCGARS), Air Force radios (VHF AM), Naval Radios (VHF AM and HF SSB teleprinters) and satellites (microwave QAM). Some particular goals were to provide a new signal format in two weeks from a standing start, and demonstrate a radio into which multiple contractors could plug parts and software.
The project was demonstrated at TF-XXI Advanced Warfighting Exercise, and met all these goals. There was some discontent with certain unspecified features. Its cryptographic processor could not change context fast enough to keep several radio conversations on the air at once. Its software architecture, though practical enough, bore no resemblance to any other.
The basic arrangement of the radio receiver used an antenna feeding an amplifier and down-converter (see Frequency mixer) feeding an automatic gain control, which fed an analog to digital converter that was on a computer VMEbus with a lot of digital signal processors (Texas Instruments C40s). The transmitter had digital to analog converters on the PCI bus feeding an up converter (mixer) that led to a power amplifier and antenna. The very wide frequency range was divided into a few sub-bands with different analog radio technologies feeding the same analog to digital converters. This has since become a standard design scheme for wide band software radios.

[edit] SPEAKeasy phase II
The goal were to get a more quickly reconfigurable architecture (i.e. several conversations at once), in an open software architecture, with cross-channel connectivity (the radio can "bridge" different radio protocols). The secondary goals were to make it smaller, weigh less and cheaper.
The project produced a demonstration radio only fifteen months into a three year research project. The demonstration was so successful that further development was halted, and the radio went into production with only a 4 MHz to 400 MHz range.
The software architecture identified standard interfaces for different modules of the radio: "radio frequency control" to manage the analog parts of the radio, "modem control" managed resources for modulation and demodulation schemes (FM, AM, SSB, QAM, etc), "waveform processing" modules actually performed the modem functions, "key processing" and "crytographic processing" managed the cryptographic functions, a "multimedia" module did voice processing, a "human interface" provided local or remote controls, there was a "routing" module for network services, and a "control" module to keep it all straight.
The modules are said to communicate without a central operating system. Instead, they send messages over the PCI computer bus to each other with a layered protocol.
As a military project, the radio strongly distinguished "red" (unsecured secret data) and "black" (cryptographically-secured data).
The project was the first known to use FPGAs (field programmable gate arrays) for digital processing of radio data. The time to reprogram these is an issue limiting application of the radio.

[edit] Joint Tactical Radio System
The Joint Tactical Radio System (JTRS) is a program of the US military to produce radios that provide flexible and interoperable communications. Examples of radio terminals that require support include hand-held, vehicular, airborne and dismounted radios, as well as base-stations (fixed and maritime).
This goal is achieved through the use of SDR systems based on an internationally endorsed open Software Communications Architecture (SCA). This standard uses CORBA on POSIX operating systems to coordinate various software modules.
The program is providing a flexible new approach to meet diverse warfighter communications needs through software programmable radio technology. All functionality and expandability is built upon the Software Communications Architecture (SCA).
The SCA, despite its military origin, is under evaluation by commercial radio vendors for applicability in their domains.

[edit] Software defined radios for amateur or ham use
A typical amateur software radio, such as the FlexRadio systems or the design described in the ARRL Handbook (1999), uses a direct conversion receiver. Unlike direct conversion receivers of the more distant past, the mixer technology used are based on the quadrature sampling detector and the quadrature sampling exciter.[4][5][6][7] The receiver performance of both the original first generation SDR and the more advanced FLEX-5000 is directly related to the dynamic range of the analog to digital converters (ADCs) utilized.[8] Radio frequency signals are down converted to the audio frequency band, which is sampled by a high performance audio frequency ADC. First generation SDRs used a standard (or enhanced) PC sound card to provide ADC functionality. The newer software defined radios use embedded ultra-high performance ADCs that provide higher dynamic range and are more immune to noise and RF interference.
A fast PC performs the digital signal processing (DSP) operations using software (usually amateur-written) specific for the radio hardware. In the case of FlexRadio Systems Inc., and several other software radio efforts (principally amateur radio), the actual code is based on the open source sdr library DttSP[9]. One such example is the FlexRadio Systems PowerSDR software that is used by various SDR manufacturers.
The SDR software performs all of the demodulation, filtering (both radio frequency and audio frequency), signal enhancement (equalization and binaural presentation). Uses include every common amateur modulation: morse code, single sideband modulation, frequency modulation, amplitude modulation, and a variety of digital modes such as radioteletype, slow-scan television, and packet radio. Amateurs also experiment with new modulation methods: for instance, the DREAM open-source project decodes the COFDM technique used by Digital Radio Mondiale.
More recently, the GNU Radio using primarily the Universal Software Radio Peripheral (USRP) uses a USB 2.0 interface, an FPGA, and a high-speed set of analog-to-digital and digital-to-analog converters, combined with reconfigurable free software. Its sampling and synthesis bandwidth is a thousand times that of PC sound cards, which enables an entirely new set of applications.
The HPSDR (High Performance Software Defined Radio) project uses a 16-bit 135MSPS analog-to-digital converter that provides performance over the range 0 to 55 MHz comparable to that of a conventional analogue HF radio. The receiver will also operate in the VHF and UHF range using either mixer image or alias responses. Interface to a PC is provided by a USB 2.0 interface. The project is modular and comprises a backplane onto which other boards plug in. This allows experimentation with new techniques and devices without the need to replace the entire set of boards. An exciter provides 1/2W of RF over the same range or into the VHF and UHF range using image or alias outputs. The HPSDR project is open-source for both hardware and software. A Wiki provides frequent updates as to project progress.

[edit] Receivers





This section is written like an advertisement. Please help rewrite this section from a neutral point of view. (December 2008)


NXP Semiconductors has created an SDR concept in which signal processing blocks become functions that can be shared between different standards. Using embedded digital-signal-processing (DSP) cores, it can adapt itself to the present set of radio standards used in an automotive application and,[10] using software, can accommodate new standards:

Digital Radio Mondiale (DRM) and DRM+
Digital Audio Broadcasting (DAB) and DAB+
Terrestrial Digital Multimedia Broadcasting (T-DMB) digital TV
HD-radio AM and HD-radio FM.


[edit] See also




Radio portal




Digital radio
Digital signal processing
On-the-fly
PACTOR
AMTOR
Radio Interface Layer


[edit] Notes


^ J Mitola, "The Software Radio," IEEE National Telesystems Conference, 1992 - Digital Object Identifier 10.1109/NTC.1992.267870
^ First International Workshop on Software Radio, Greece 1998
^ RJ Lackey and DW Upmal, "Speakeasy: The Military Software Radio," IEEE Communications Magazine, May 1995.
^ "A Software Defined Radio for the Masses, Part 1", QEX, ARRL, July/Aug. 2002 http://www.flex-radio.com/Data/Doc/qex1.pdf
^ "A Software Defined Radio for the Masses, Part 2", QEX, ARRL, Sept/Oct 2002 http://www.flex-radio.com/Data/Doc/qex2.pdf
^ "A Software Defined Radio for the Masses, Part 3", QEX, ARRL, Nov./Dec. 2002 http://www.flex-radio.com/Data/Doc/qex3.pdf
^ "A Software Defined Radio for the Masses, Part 4", QEX, ARRL, Mar/Apr 2003 http://www.flex-radio.com/Data/Doc/qex4.pdf
^ Rick Lindquist; Joel R. Hailas (October 2005), FlexRadio Systems; SDR-1000 HF+VHF Software Defined Radio Redux, QST, http://www.redorbit.com/news/technology/258812/flexradio_systems_sdr1000_hfvhf_software_defined_radio_redux/index.html, retrieved on 2008-12-07 
^ DttSP http://dttsp.org/wiki/index.php?title=Main_Page
^ Leland Key (2008). "Automotive radio receiver harnesses Software Defined Radio". EE Times. http://www.automotivedesign-europe.com/showArticle.jhtml?articleID=212001381&cid=NL_ADLeu. Retrieved on 2008-12-07. 



[edit] References

Ulrich L. Rohde "Digital HF Radio: A Sampling of Techniques, presented at the Third International Conference on HF Communication Systems and Techniques ", London, England, February 26-28, 1985.
Ulrich L. Rohde "Digital HF Radio: A Sampling of Techniques" , Ham Radio Magazine, April, 1985.
2006 SDR Forum papers
2005 SDR Forum papers
2004 SDR Forum papers


[edit] Further reading

Software defined radio : architectures, systems, and functions. Dillinger, Madani, Alonistioti. Wiley, 2003. 454 pages. ISBN 0470851643 ISBN-13: 9780470851647
Cognitive Radio Technology. Bruce Fette. Elsevier Science & Technology Books, 2006. 656 pags. ISBN 0750679522 ISBN-13: 9780750679527
Software Defined Radio for 3G, Burns. Artech House, 2002. ISBN 1-58053-347-7
Software Radio: A Modern Approach to Radio Engineering, Jeffrey H. Reed. Prentice Hall PTR, 2002. ISBN 0-13-081158-0
Signal Processing Techniques for Software Radio, Behrouz Farhang-Beroujeny. LuLu Press.


[edit] External links





This article's external links may not follow Wikipedia's content policies or guidelines. Please improve this article by removing excessive or inappropriate external links.



SDR Europe
SDR Design and Verification
OMG Software Based Communication (SBC) Domain Task Force
Tools for SDR A collaborative website about SDR
F4DAN Some amateur radio SDR projects and resources
Using model-driven engineering, domain-specific languages, and software product lines in developing Software-Defined Radio components and applications
Evolution and standardization of the software communications architecture
A Holistic Approach to Designing SDRs for Power
Software Radio Resource Page Other SDR projects and resources
Component-based SDR and JTRS-SCA in PocoCapsule Applying inversion-of-control (IoC) and domain-specific-modeling (DSM) to SDR
SOFTWARE DEFINED RADIO A briefing paper for the European Parliament's Subcommittee on Security and Defence.
The world's first web-based software-defined monitoring receiver for 40m and 80m running at the university of Twente, EEMCS, Enschede, The Netherlands.
Alcatel-Lucent Chair on Flexible Radio
Open Air Interface project
High Performance Software Defined Radio - An Open Source Design
SDR Forum








v • d • e

Radio spectrum











ELF
3 Hz
30 Hz




SLF
30 Hz
300 Hz




ULF
300 Hz
3 kHz




VLF
3 kHz
30 kHz




LF
30 kHz
300 kHz




MF
300 kHz
3 MHz




HF
3 MHz
30 MHz




VHF
30 MHz
300 MHz




UHF
300 MHz
3 GHz




SHF
3 GHz
30 GHz




EHF
30 GHz
300 GHz


















v • d • e

Electromagnetic spectrum





← shorter wavelengths       longer wavelengths →
Gamma rays · X-rays · Ultraviolet · Visible · Infrared · Terahertz radiation · Microwave · Radio





Visible (optical)

Violet · Blue · Green · Yellow · Orange · Red






Microwaves

W band · V band · Q band · Ka band · K band · Ku band · X band · S band · C band · L band






Radio

EHF · SHF · UHF · VHF · HF · MF · LF · VLF · ULF · SLF · ELF






Wavelength types

Microwave · Shortwave · Medium wave · Longwave









Retrieved from "http://en.wikipedia.org/wiki/Software-defined_radio"
Categories: Digital radio | Digital technology | Military radio systems | Radio frequency propagation | Radio modulation modes | Radio resource management | Radio technology | Amateur radioHidden categories: Articles lacking in-text citations | Wikipedia articles needing style editing from December 2008 | All articles needing style editing | Wikipedia external links cleanup 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Català
Dansk
Deutsch
Français
Italiano
日本語
Polski
Русский
Suomi
Українська
中文









 This page was last modified on 5 April 2009, at 15:12.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
