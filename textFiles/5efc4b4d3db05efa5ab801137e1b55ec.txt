













SWIG - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "SWIG";
		var wgTitle = "SWIG";
		var wgAction = "view";
		var wgArticleId = "531490";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 278646057;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); SWIG

From Wikipedia, the free encyclopedia

Jump to: navigation, search 

SWIG

Developed by
SWIG developers


Latest release
1.3.39 / March 21, 2009


Operating system
Cross-platform


License
BSD licenses


Website
www.swig.org/


SWIG (Simplified Wrapper and Interface Generator) is an open source software tool used to connect programs or libraries written in C/C++ with scripting languages such as Tcl, Perl, Python, Ruby, PHP, Lua, R and other languages like Java, C#, Scheme and Ocaml. Output can also be in the form of XML or Lisp S-expressions.




Contents


1 How does it work?
2 Purpose
3 History
4 See also
5 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] How does it work?
The aim is to achieve the connection between the programs and the scripting languages with minimal effort: a small number of directives are added to the program's header files, and then the SWIG tool creates source code which provides the glue between C/C++ and the target language. Depending on the language, this glue comes in three forms:

an executable that behaves like the original program but embeds an interpreter for the scripting language,
a shared library that an existing interpreter can link to as some form of extension module, or
a shared library that can be linked to other programs compiled in the target language (for example, using JNI in Java).


[edit] Purpose
There are two main purposes of embedding a scripting engine into an existing C/C++ program:

The program can then be customized much more quickly, using the scripting language rather than C/C++. The scripting engine may even be exposed to the end user, so that they can automate common tasks by writing scripts.
Even if the final product is not to contain the scripting engine, it may nevertheless be quite useful to write testing scripts.

There are several reasons to create dynamic libraries that can be loaded into existing interpreters, including:

Provide access to a C/C++ library which has no equivalent in the scripting language.
Write the whole program in the scripting language first, and after profiling, rewrite performance critical code in C or C++.


[edit] History
SWIG is written in C and C++ and has been publicly available since February 1996. The initial author and main developer was Dave Beazley who developed SWIG while working as a graduate student at Los Alamos National Laboratory and the University of Utah and while on the faculty at the University of Chicago. Development is currently supported by an active group of volunteers led by William Fulton. SWIG has been released under a BSD type license, meaning it can be used, copied, modified and redistributed freely, for commercial and non-commercial purposes.

[edit] See also




Free software portal




Foreign function interface


[edit] External links

Project home page
Project home page at SourceForge
SwigWiki - Wiki containing information about using SWIG.
Article "Expose Your C/C++ Program's Internal API with a Quick SWIG" by Victor Volkman
Article "Python Extensions In C++ Using SWIG" by Michael Fötsch
Presentation "Application overview for openSUSE" by Klaus Kämpf
Citations from CiteSeer
sKWash: the open source SWIG GUI




Retrieved from "http://en.wikipedia.org/wiki/SWIG"
Categories: Computer programming tools | Free computer programming tools | Scripting languages | Cross-platform software 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Deutsch
Français
日本語
Polski
Русский









 This page was last modified on 21 March 2009, at 01:05 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
