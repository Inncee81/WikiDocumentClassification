













GNU General Public License - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "GNU_General_Public_License";
		var wgTitle = "GNU General Public License";
		var wgAction = "view";
		var wgArticleId = "18938683";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281397318;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); GNU General Public License

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
"GPL" redirects here. For other uses, see GPL (disambiguation).

GNU General Public License


GNU GPLv3 Logo


Author
Free Software Foundation


Version
3


Publisher
Free Software Foundation, Inc.


Published
June 29, 2007


DFSG compatible
Yes


Free software
Yes


OSI approved
Yes


GPL compatible
Yes


Copyleft
Yes


Linking from code with a different license
No


The GNU General Public License (GNU GPL or simply GPL) is a widely used free software license, originally written by Richard Stallman for the GNU project. The GPL is the most popular and well-known example of the type of strong copyleft license that requires derived works to be available under the same copyleft. Under this philosophy, the GPL grants the recipients of a computer program the rights of the free software definition and uses copyleft to ensure the freedoms are preserved, even when the work is changed or added to. This is in distinction to permissive free software licences, of which the BSD licences are the standard examples.
The GNU Lesser General Public License (LGPL) is a modified, more permissive, version of the GPL, originally intended for some software libraries. There is also a GNU Free Documentation License, which was originally intended for use with documentation for GNU software, but has also been adopted for other uses, such as the Wikipedia project.
The Affero General Public License (GNU AGPL) is a similar licence with a focus on networking server software. The GNU AGPL is similar to the GNU General Public License, except that it additionally covers the use of the software over a computer network, requiring that the complete source code be made available to any network user of the AGPLed work, for example a web application. The Free Software Foundation recommends that this license is considered for any software that will commonly be run over the network.




Contents


1 History
2 Versions

2.1 Version 1
2.2 Version 2
2.3 Version 3


3 Terms and conditions

3.1 Copyleft


4 Licensing and contractual issues
5 Copyright holders
6 The GPL in court
7 Compatibility and multi-licensing
8 Adoption
9 Criticism
10 See also
11 References
12 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] History
The GPL was written by Richard Stallman in 1989 for use with programs released as part of the GNU project. The original GPL was based on a unification of similar licenses used for early versions of GNU Emacs, the GNU Debugger and the GNU Compiler Collection. These licenses contained similar provisions to the modern GPL, but were specific to each program, rendering them incompatible, despite being the same license.[1] Stallman's goal was to produce one license that could be used for any project, thus making it possible for many projects to share code.
As of August 2007, the GPL accounted for nearly 65% of the 43,442 free software projects listed on Freshmeat,[2] and as of January 2006[update], about 68% of the projects listed on SourceForge.net.[3] Similarly, a 2001 survey of Red Hat Linux 7.1 found that 50% of the source code was licensed under the GPL[4] and a 1997 survey of MetaLab, then the largest free software archive, showed that the GPL accounted for about half of the licenses used. One survey of a large repository of open-source software reported that in July 1997, about half the software packages with explicit license terms used the GPL.[5] Prominent free software programs licensed under the GPL include the Linux kernel and the GNU Compiler Collection (GCC). Some other free software programs are dual-licensed under multiple licenses, often with one of the licenses being the GPL.
Some observers believe that the strong copyleft provided by the GPL was crucial to the success of Linux, giving the programmers who contributed to it the confidence that their work would benefit the whole world and remain free, rather than being exploited by software companies that would not have to give anything back to the community.[6]
The second version of the license, version 2, was released in 1991. Over the following 15 years, some members of the FOSS (Free and Open Source Software) community came to believe that some software and hardware vendors were finding loopholes in the GPL, allowing GPL-licensed software to be exploited in ways that were contrary to the intentions of the programmers. These concerns included tivoization (the inclusion of GPL-licensed software in hardware that will refuse to run modified versions of its software); the use of unpublished, modified versions of GPL software behind web interfaces; and patent deals between Microsoft and Linux and Unix distributors that may represent an attempt to use patents as a weapon against competition from Linux.
Version 3 was developed to attempt to address these concerns. It was officially released on June 29, 2007.

[edit] Versions

[edit] Version 1
Version 1 of the GNU GPL, released in January 1989, prevented what were then the two main ways that software distributors restricted the freedoms that define free software. The first problem was that distributors may publish binary files only – executable, but not readable or modifiable by humans. To prevent this, GPLv1 said that any vendor distributing binaries must also make the human readable source code available under the same licensing terms.
The second problem was the distributors might add additional restrictions, either by adding restrictions to the licence, or by combining the software with other software which had other restrictions on its distribution. If this was done, then the union of the two sets of restrictions would apply to the combined work, thus unacceptable restrictions could be added. To prevent this, GPLv1 said that modified versions, as a whole, had to be distributed under the terms in GPLv1. Therefore, software distributed under the terms of GPLv1 could be combined with software under more permissive terms, as this would not change the terms under which the whole could be distributed, but software distributed under GPLv1 could not be combined with software distributed under a more restrictive licence, as this would conflict with the requirement that the whole be distributable under the terms of GPLv1.

[edit] Version 2
According to Richard Stallman, the major change in GPLv2 was the "Liberty or Death" clause, as he calls it — Section 7.[7] This section says that if someone has restrictions imposed that prevent him or her from distributing GPL-covered software in a way that respects other users' freedom (for example, if a legal ruling states that he or she can only distribute the software in binary form), he or she cannot distribute it at all.
By 1990, it was becoming apparent that a less restrictive licence would be strategically useful for some software libraries; when version 2 of the GPL (GPLv2) was released in June 1991, therefore, a second licence — the Library General Public License (LGPL) was introduced at the same time and numbered with version 2 to show that both were complementary. The version numbers diverged in 1999 when version 2.1 of the LGPL was released, which renamed it the GNU Lesser General Public License to reflect its place in the GNU philosophy.

[edit] Version 3
In late 2005, the Free Software Foundation (FSF) announced work on version 3 of the GPL (GPLv3). On January 16, 2006, the first "discussion draft" of GPLv3 was published, and the public consultation began. The public consultation was originally planned for nine to fifteen months but finally stretched to eighteen months with four drafts being published. The official GPLv3 was released by FSF on June 29, 2007. GPLv3 was written by Richard Stallman, with legal counsel from Eben Moglen and Software Freedom Law Center.[8]
According to Stallman, the most important changes are in relation to software patents, free software licence compatibility, the definition of "source code", and hardware restrictions on software modification ("tivoization").[8][9] Other changes relate to internationalisation, how license violations are handled, and how additional permissions can be granted by the copyright holder.
Other notable changes include allowing authors to add certain additional conditions or requirements to their contributions. One of those new optional requirements, sometimes referred to as the Affero clause, is intended to fulfill a request regarding software as a service; the permitting addition of this requirement makes GPLv3 compatible with the Affero General Public License.
The public consultation process was coordinated by the Free Software Foundation with assistance from Software Freedom Law Center, Free Software Foundation Europe,[10] and other free software groups. Comments were collected from the public via the gplv3.fsf.org web portal.[11] That portal runs purpose-written software called stet. These comments were passed to four committees comprising approximately 130 people, including supporters and detractors of FSF's goals. Those committees researched the comments submitted by the public and passed their summaries to Stallman for a decision on what the licence would do.
During the public consultation process, 962 comments were submitted for the first draft.[12] By the end, a total of 2,636 comments had been submitted.[13][14][15]
The third draft was released on March 28, 2007.[16] This draft included language intended to prevent patent cross-licences like the controversial Microsoft-Novell patent agreement and restricts the anti-tivoization clauses to a legal definition of a "User" or "consumer product." It also explicitly removed the section on "Geographical Limitations", whose probable removal had been announced at the launch of the public consultation.
The fourth discussion draft,[17] which was the last, was released on May 31, 2007. It introduced Apache License compatibility, clarified the role of outside contractors, and made an exception to avoid the perceived problems of a Microsoft-Novell style agreement, saying in section 11 paragraph 6 that


You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent licence [...]


This aims to make future such deals ineffective. The licence is also meant to cause Microsoft to extend the patent licences it grants to Novell customers for the use of GPLv3 software to all users of that GPLv3 software; this is possible only if Microsoft is legally a "conveyor" of the GPLv3 software.[18][19]
Others, notably some high-profile developers of the Linux kernel, commented to the mass media and made public statements about their objections to parts of discussion drafts 1 and 2.[20]

[edit] Terms and conditions
The terms and conditions of the GPL are available to anybody receiving a copy of the work that has a GPL applied to it ("the licensee"). Any licensee who adheres to the terms and conditions is given permission to modify the work, as well as to copy and redistribute the work or any derivative version. The licensee is allowed to charge a fee for this service, or do this free of charge. This latter point distinguishes the GPL from software licenses that prohibit commercial redistribution. The FSF argues that free software should not place restrictions on commercial use,[21] and the GPL explicitly states that GPL works may be sold at any price.
The GPL additionally states that a distributor may not impose "further restrictions on the rights granted by the GPL". This forbids activities such as distributing of the software under a non-disclosure agreement or contract. Distributors under the GPL also grant a license for any of their patents practiced by the software, to practice those patents in GPL software.
Section three of the license requires that programs distributed as pre-compiled binaries are accompanied by a copy of the source code, a written offer to distribute the source code via the same mechanism as the pre-compiled binary or the written offer to obtain the source code that you got when you received the pre-compiled binary under the GPL.

[edit] Copyleft
Main article: Copyleft
The distribution rights granted by the GPL for modified versions of the work are not unconditional. When someone distributes a GPL'd work plus their own modifications, the requirements for distributing the whole work cannot be any greater than the requirements that are in the GPL.
This requirement is known as copyleft. It earns its legal power from the use of copyright on software programs. Because a GPL work is copyrighted, a licensee has no right to redistribute it, not even in modified form (barring fair use), except under the terms of the license. One is only required to adhere to the terms of the GPL if one wishes to exercise rights normally restricted by copyright law, such as redistribution. Conversely, if one distributes copies of the work without abiding by the terms of the GPL (for instance, by keeping the source code secret), he or she can be sued by the original author under copyright law.
Copyleft thus uses copyright law to accomplish the opposite of its usual purpose: instead of imposing restrictions, it grants rights to other people, in a way that ensures the rights cannot subsequently be taken away. It also ensures that unlimited redistribution rights are not granted, should any legal flaw be found in the copyleft statement.
Many distributors of GPL'ed programs bundle the source code with the executables. An alternative method of satisfying the copyleft is to provide a written offer to provide the source code on a physical medium (such as a CD) upon request. In practice, many GPL'ed programs are distributed over the Internet, and the source code is made available over FTP or HTTP. For Internet distribution, this complies with the license.
Copyleft applies only when a person seeks to redistribute the program. One is allowed to make private modified versions, without any obligation to divulge the modifications as long as the modified software is not distributed to anyone else. Note that the copyleft applies only to the software and not to its output (unless that output is itself a derivative work of the program). For example, a public web portal running a modified derivative of a GPL'ed content management system is not required to distribute its changes to the underlying software because its output is not a derivative. A counter example is the GPL'ed GNU Bison: the parsers it outputs do contain parts of itself and are therefore derivatives which would fall under the GPL, if it were not for a special exception granted by GNU Bison.[22]

[edit] Licensing and contractual issues
The GPL was designed as a licence, rather than a contract.[23][24] In some Common Law jurisdictions, the legal distinction between a licence and a contract is an important one: contracts are enforceable by contract law, whereas licences are enforced under copyright law. However, this distinction is not useful in the many jurisdictions where there are no differences between contracts and licences, such as Civil Law systems.[25]
Those who do not agree to the GPL's terms and conditions do not have permission, under copyright law, to copy or distribute GPL licenced software or derivative works. However, if they do not redistribute the GPL:ed program, they may still use the software within their organisation however they like, and products constructed by the use of the program are not covered by this license.

[edit] Copyright holders
The text of the GPL is itself copyrighted, and the copyright is held by the Free Software Foundation. However, the FSF does not hold the copyright for a work released under the GPL, unless an author explicitly assigns copyrights to the FSF (which seldom happens except for programs that are part of the GNU project). Only the individual copyright holders have the authority to sue when a licence violation takes place.
The FSF permits people to create new licences based on the GPL, as long as the derived licences do not use the GPL preamble without permission. This is discouraged, however, since such a licence is generally incompatible with the GPL.[26] (See the GPL FAQ for more information.)
Other licences created by the GNU project include the GNU Lesser General Public License and the GNU Free Documentation License.

[edit] The GPL in court
A key dispute related to the GPL is whether or not non-GPL software can dynamically link to GPL libraries. The GPL is clear in requiring that all derivative works of code under the GPL must themselves be under the GPL. However, it is not clear whether an executable that dynamically links to a GPL code should be considered a derivative work (see Weak Copyleft). The free/open-source software community is split on this issue. The FSF asserts that such an executable is indeed a derivative work if the executable and GPL code "make function calls to each other and share data structures,"[27] with others agreeing,[28] while some (e.g. Linus Torvalds) agree that dynamic linking can create derived works but disagree over the circumstances.[29] On the other hand, some experts have argued that the question is still open: one Novell lawyer has written that dynamic linking not being derivative "makes sense" but is not "clear-cut,"[30] and Lawrence Rosen has claimed that a court of law would "probably" exclude dynamic linking from derivative works although "there are also good arguments" on the other side and "the outcome is not clear"[31] (on a later occasion, he argued that "market-based" factors are more important than the linking technique[32]). This is ultimately a question not of the GPL per se, but of how copyright law defines derivative works. In Galoob v. Nintendo the Ninth Circuit Court of Appeals defined a derivative work as having "'form' or permanence" and noted that "the infringing work must incorporate a portion of the copyrighted work in some form," but there have been no clear court decisions to resolve this particular conflict.
Since there is no record of anyone circumventing the GPL by dynamic linking and contesting when threatened with lawsuits by the copyright holder, the restriction appears de facto enforceable even if not yet proven de jure.[citation needed]
In 2002, MySQL AB sued Progress NuSphere for copyright and trademark infringement in United States district court. NuSphere had allegedly violated MySQL's copyright by linking code for the Gemini table type into the MySQL server. After a preliminary hearing before Judge Patti Saris on February 27, 2002, the parties entered settlement talks and eventually settled. At the hearing, Judge Saris "saw no reason" that the GPL would not be enforceable.[33]
In August 2003, the SCO Group stated that they believed the GPL to have no legal validity, and that they intended to take up lawsuits over sections of code supposedly copied from SCO Unix into the Linux kernel. This was a problematic stand for them, as they had distributed Linux and other GPL'ed code in their Caldera OpenLinux distribution, and there is little evidence that they had any legal right to do so except under the terms of the GPL. For more information, see SCO-Linux controversies and SCO v. IBM.
In April 2004 the netfilter/iptables project was granted a preliminary injunction against Sitecom Germany by Munich District Court after Sitecom refused to desist from distributing Netfilter's GPL'ed software in violation of the terms of the GPL. On July 2004, the German court confirmed this injunction as a final ruling against Sitecom.[34] The court's justification for its decision exactly mirrored the predictions given earlier by the FSF's Eben Moglen:

Defendant has infringed on the copyright of plaintiff by offering the software 'netfilter/iptables' for download and by advertising its distribution, without adhering to the licence conditions of the GPL. Said actions would only be permissible if defendant had a licence grant... This is independent of the questions whether the licensing conditions of the GPL have been effectively agreed upon between plaintiff and defendant or not. If the GPL were not agreed upon by the parties, defendant would notwithstanding lack the necessary rights to copy, distribute, and make the software 'netfilter/iptables' publicly available.

This ruling was important because it was the first time that a court had confirmed that violating terms of the GPL could effect copyright violation.
In May of 2005, Daniel Wallace filed suit against the Free Software Foundation in the Southern District of Indiana, contending that the GPL is an illegal attempt to fix prices at zero. The suit was dismissed in March 2006, on the grounds that Wallace had failed to state a valid anti-trust claim; the court noted that "the GPL encourages, rather than discourages, free competition and the distribution of computer operating systems, the benefits of which directly pass to consumers."[35] Wallace was denied the possibility of further amending his complaint, and was ordered to pay the FSF's legal expenses.
On September 8, 2005, Seoul Central District Court ruled that GPL has no legal relevance concerning the case dealing with trade secret derived from GPL-licensed work.[36] Defendants argued that since it is impossible to maintain trade secret while being compliant with GPL and distributing the work, they aren't in breach of trade secret. This argument was considered without ground.
On September 6, 2006, the gpl-violations.org project prevailed in court litigation against D-Link Germany GmbH regarding D-Link's copyright infringing use of parts of the Linux Kernel in storage devices they distrobuted.[37] The judgment provided legal precedent that the GPL is valid, legally binding, and stands in German court.[38]
In late 2007, the BusyBox developers and the Software Freedom Law Center embarked upon a program to gain GPL compliance from distributors of BusyBox in embedded systems, suing those who would not comply. These were claimed to be the first US uses of courts for enforcement of GPL obligations. See BusyBox GPL lawsuits.

[edit] Compatibility and multi-licensing




Quick Guide of licence compatibility with GPL


Many of the most common free software licences, such as the original MIT/X license, the BSD license (in its current 3-clause form), and the LGPL, are "GPL-compatible". That is, their code can be combined with a program under the GPL without conflict (the new combination would have the GPL applied to the whole). However, some free/open source software licences are not GPL-compatible. Many GPL proponents have strongly advocated that free/open source software developers use only GPL-compatible licences, because doing otherwise makes it difficult to reuse software in larger wholes. Note that this issue only arises in concurrent use of licences which impose conditions on their manner of combination. Some licences, such as the BSD licence, impose no conditions on the manner of their combination.
Also see the list of FSF approved software licences for examples of compatible and incompatible licences.
A number of businesses use dual-licensing to distribute a GPL version and sell a proprietary licence to companies wishing to combine the package with proprietary code, using dynamic linking or not. Examples of such companies include MySQL AB, Nokia (Qt toolkit), Namesys (ReiserFS) and Red Hat (Cygwin).

[edit] Adoption
The Open Source License Resource Center maintained by Black Duck Software shows that GPL is the licence used in about 60% of all free / open source software.[39] The vast majority of projects are released under GPL 2 with 3000 free software / open source projects having migrated to GPL 3.

[edit] Criticism
In 2001, Microsoft CEO Steve Ballmer referred to Linux as "a cancer that attaches itself in an intellectual property sense to everything it touches."[40] Critics of Microsoft claimed that the real reason Microsoft dislikes the GPL is that the GPL resists proprietary vendors' attempts to "embrace, extend and extinguish".[41] Microsoft has released Microsoft Windows Services for UNIX which contains GPL-licensed code.[42] In response to Microsoft's attacks on the GPL, several prominent Free Software developers and advocates released a joint statement supporting the licence.[43]
The GPL has been described as being "viral" by many of its critics[44] because the GPL only allows conveyance of whole programs, which means that programmers are not allowed to convey programs that link to libraries having GPL-incompatible licences. The so-called "viral" effect of this is that under such circumstances disparately licenced software cannot be combined unless one of the licences is changed. Although theoretically either licence could be changed, in the "viral" scenario the GPL cannot be practically changed (because the software may have so many contributors, some of whom will likely refuse), whereas the licence of the other software can be practically changed.
This is part of a philosophical difference between the GPL and permissive free software licences such as the BSD-style licences, which do not put such a requirement on modified versions. While proponents of the GPL believe that free software should ensure that its freedoms are preserved all the way from the developer to the user, others believe that intermediaries between the developer and the user should be free to redistribute the software as non-free software. More specifically, the GPL requires that redistribution occur subject to the GPL, whereas more "permissive" licences allow redistribution to occur under licences more restrictive than the original licence.
While the GPL does allow commercial distribution of GPL software, the market price will settle near the price of distribution—near zero—since the purchasers may redistribute the software and its source code for their cost of redistribution. This could be seen to inhibit commercial use of GPL'ed code by others wishing to use that code for proprietary purposes—if they don't wish to avail themselves of GPL'ed code, they will have to re-implement it themselves. Microsoft has included anti-GPL terms in their open source software.[45]
In addition, the FreeBSD project has stated that "a less publicized and unintended use of the GPL is that it is very favorable to large companies that want to undercut software companies. In other words, the GPL is well suited for use as a marketing weapon, potentially reducing overall economic benefit and contributing to monopolistic behavior".[46]
The GPL has no indemnification clause explicitly protecting maintainers and developers from litigation resulting from unscrupulous contribution. (If a developer submits existing patented or copyright work to a GPL project claiming it as their own contribution, all the project maintainers and even other developers can be held legally responsible for damages to the copyright or patent holder.) Lack of indemnification is one criticism that led Mozilla to create the Mozilla Public License rather than use the GPL or LGPL.[citation needed] However, Mozilla later relicenced their work under a GPL/LGPL/MPL triple licence, due to problems with the GPL-incompatibility of the MPL.
Some software developers have found the extensive scope of the GPL to be too restrictive. For example, Bjørn Reese and Daniel Stenberg felt that their choice of the GPL for their software created a "quodque pro quo" (Latin, "Everything in return for something") for the developers of other software that linked with theirs. For that reason, in 2001 they abandoned the GPLv2 in favor of less restrictive copyleft licences. [47]
As a specific example of licence incompatibility, Sun Microsystems' ZFS cannot be included in the GPL-licensed linux kernel, because it is licensed under the GPL-incompatible CDDL. Furthermore, ZFS is protected by patents, and a GPL-ed implementation would violate Sun's patent license.[48]
Some have also argued that the GPL could, and should, be shorter.[49]

[edit] See also




Free software portal




GNU Lesser General Public License
BSD Licence
List of software licences
Permissive and copyleft licences
Dual-licensing


[edit] References


^ Presentation by Richard Stallman, made on April 21, 2006, at the second international GPLv3 conference, held in Porto Alegre. Direct link to the section about the prehistory of the GPL.
^ "Freshmeat's statistics page". http://freshmeat.net/stats/. 
^ "SourceForge.net: Software Map". Dwheeler.com. http://www.dwheeler.com/frozen/sourceforge-stats-20031110.html. Retrieved on 2008-11-17. 
^ David A. Wheeler. "Estimating Linux's Size". http://www.dwheeler.com/sloc/redhat62-v1/redhat62sloc.html. 
^ Eric S. Raymond’s "Homesteading the Noosphere," referenced in Make Your Open Source Software GPL-Compatible. Or Else By David A. Wheeler
^ "why the GPL rocketed Linux to success". http://www.dwheeler.com/blog/2006/09/01/#gpl-bsd.  "So while the BSDs have lost energy every time a company gets involved, the GPL'ed programs gain every time a company gets involved." 
^ Presentation by Richard Stallman, made on April 21, 2006, at the second international GPLv3 conference, held in Porto Alegre. Direct link to the section about the "Liberty or Death" clause.
^ a b Presentation by Richard Stallman on February 25, 2006 in Brussels, Belgium - the first day of that year's FOSDEM conference.
^ Interview with Richard Stallman, Free Software Magazine, January 23, 2008.
^ "GPLv3: Drafting version 3 of the GNU General Public License". Free Software Foundation Europe. http://fsfeurope.org/projects/gplv3/. 
^ "gplv3.fsf.org comments for discussion draft 4". http://gplv3.fsf.org/comments/gplv3-draft-4.html. 
^ "gplv3.fsf.org comments for draft 1". http://gplv3.fsf.org/comments/gplv3-draft-1.  "Showing comments in file 'gplv3-draft-1' [...] found 962" 
^ "gplv3.fsf.org comments for draft 2". http://gplv3.fsf.org/comments/gplv3-draft-2.html.  "Showing comments in file 'gplv3-draft-1' [...] found 727" 
^ "gplv3.fsf.org comments for draft 3". http://gplv3.fsf.org/comments/gplv3-draft-3.  "Showing comments in file 'gplv3-draft-3' [...] found 649" 
^ "gplv3.fsf.org comments for draft 4". http://gplv3.fsf.org/comments/gplv3-draft-4.html.  "Showing comments in file 'gplv3-draft-4' [...] found 298" 
^ Guide to the third draft of GPLv3
^ Final Discussion Draft, accessed June 4, 2007
^ GPLv3 FAQ, accessed June 4, 2007. This is from the FAQ instead of the licence, for readability purposes.
^ Fourth Discussion Draft Rationale, accessed June 4, 2007.
^ Kernel developers' position on GPLv3 -- http://lwn.net/Articles/200422/, accessed June 4, 2007
^ "Selling Free Software". Free Software Foundation. http://www.gnu.org/philosophy/selling.html. 
^ "Bison 2.3". http://www.gnu.org/software/bison/manual/html_mono/bison.html. Retrieved on 2008-12-11.  "Conditions for Using Bison" 
^ "Essay by Stallman explaining why a licence is more suitable than a contract". http://www.gnu.org/philosophy/no-ip-ethos.html. 
^ "Eben Moglen explaining why the GPL is a licence and why it matters". http://fsfeurope.org/projects/gplv3/barcelona-moglen-transcript.en.html#q7-a-contract. 
^ Guadamuz-Gonzalez, Andres (2004). "Viral contracts or unenforceable documents? Contractual validity of copyleft licences". European Intellectual Property Review 26 (8): 331–339. http://papers.ssrn.com/sol3/papers.cfm?abstract_id=569101. 
^ "GPL FAQ: Can I modify the GPL and make a modified licence?". http://www.fsf.org/licensing/licenses/gpl-faq.html#ModifyGPL. 
^ Can I apply the GPL when writing a plug-in for a non-free program?, GPL FAQ, Free Software Foundation.
^ Jerry Epplin, Using GPL software in embedded applications, LinuxDevices.com (March 4, 2001).
^ Linus Torvalds, GPL only modules, linux-kernel mailing list (December 17, 2006).
^ Matt Asay, The GPL: Understanding the License that Governs Linux, Novell Cool Solutions Feature (Jan 16. 2004).
^ Lawrence Rosen, Derivative Works, Linux Journal (Jan 1, 2003).
^ Lawrence Rosen, Derivative Works, rosenlaw.com (May 25, 2004)
^ See Progress Software Corporation v. MySQL AB, 195 F. Supp. 2d 328 (D. Mass. 2002), on defendant's motion for preliminary injunction.
^ Harald Welte vs. Sitecom, final order, translated from German by Jens Maurer
^ Dismissal of Wallace v. FSF. From this article on Groklaw.
^ Seoul Central District Court ruling (?) (in Korean)
^ http://gpl-violations.org/news/20060922-dlink-judgement_frankfurt.html
^ D-Link Judgement
^ "Open Source License Resource Center | Black Duck Software". Blackducksoftware.com. http://www.blackducksoftware.com/oss. Retrieved on 2008-11-17. 
^ Newbart, Dave (2001-06-01). "Microsoft CEO takes launch break with the Sun-Times". Chicago Sun-Times. Archived from the original on 2001-06-15. http://web.archive.org/web/20010615205548/http://suntimes.com/output/tech/cst-fin-micro01.html. (Internet archive link)
^ "Deadly embrace". The Economist. 2000-03-30. http://www.economist.com/displayStory.cfm?Story_ID=298112. Retrieved on 2006-03-31. 
^ text of GPL v1 with reference to source code download site at microsoft.com
^ Free Software Leaders Stand Together
^ "Speech Transcript - Craig Mundie, The New York University Stern School of Business", Prepared Text of Remarks by Craig Mundie, Microsoft Senior Vice President, The Commercial Software Model The New York University Stern School of Business May 3, 2001
^ Microsoft anti-GPL fine print threatens competition | The Register
^ GPL Advantages and Disadvantages, FreeBSD: doc/en_US.ISO8859-1/articles/bsdl-gpl/article.sgml,v 1.5 2006/10/16 12:35:23 keramida Exp
^ Bjørn Reese and Daniel Stenberg, Working Without Copyleft (December 19, 2001)
^ Linux: ZFS, Licenses and Patents | KernelTrap
^ Allison Randal. "GPLv3, Clarity and Simplicity". http://radar.oreilly.com/archives/2007/05/gplv3_clarity_a.html. 



[edit] External links



Wikibooks has a book on the topic of
FOSS Licensing




GNU General Public License v1.0 - This version is deprecated by the FSF.
GNU General Public License v2.0 - This version is deprecated by the FSF but is still used by many software projects, including Linux and GNU packages
GNU General Public License v3.0
A Practical Guide to GPL Compliance (Covers GPLv2 and v3) - from the Software Freedom Law Center
A paper on enforcing the GPL
Free Software Leaders Stand Together, a joint statement in support of the GPL
Frequently Asked Questions about the GPL
GPL, BSD, and NetBSD - why the GPL rocketed Linux to success by David A. Wheeler
GNU General Public License and Commentaries - Edited by Robert Chassell.
GNU Lesser General Public License v2.1
History of the GPL
List of presentation transcripts about the GPL and free software licenses
Make Your Open Source Software GPL-Compatible. Or Else. (David A. Wheeler, April 7, 2004) — why a GPL-compatible licence is important to the health of a project
The Emacs General Public License, a February 1988 version, a direct predecessor of the GNU GPL
[1] EUPL European Union Public License officially approved on January 9, 2008








v • d • e

GNU Project





History

GNU Manifesto · Free Software Foundation · History of free software







Licences

GNU General Public License · GNU Lesser General Public License · Affero General Public License · GNU Free Documentation License · GPL linking exception






Software

GNU (variants) · Hurd · GNOME · Gnuzilla · IceCat · Gnash · Bash · GCC · GNU Emacs · glibc · Coreutils · Build system · Bazaar · LilyPond · Other GNU packages and programs






Public speakers

Robert J. Chassell · Loïc Dachary · Ricardo Galli · Joshua Gay · Georg C. F. Greve · Federico Heinz · Benjamin Mako Hill · Bradley M. Kuhn · Matt Lee · Eben Moglen · Alexandre Oliva · Richard Stallman · John Sullivan






Other topics

GNU/Linux naming controversy · Revolution OS













v • d • e

Free and open source software





General

Copyleft · Events and Awards · Free software · Free Software Definition · Gratis versus Libre · Open source software






Free software
portal









Notable packages

Apache · CUPS · Firefox · GNOME · KDE · OpenOffice.org · Thunderbird · X Window System






Operating systems

AROS · BSD · Darwin · FreeDOS · GNU · Haiku · Linux · Mach · MINIX · OpenSolaris · ReactOS






Development

GCC · LLVM · Java · Open64 · Perl · PHP · Python · Lua · Ruby · Tcl






History

GNU · Linux · Mozilla (Application Suite · Firefox · Thunderbird)






Organizations

Apache Software Foundation · Blender Foundation · Eclipse Foundation · FLOSS Manuals · freedesktop.org · Free Software Foundation · GNOME Foundation · GNU Project · Google Code · Linux Foundation · Mozilla Foundation · Open Source Geospatial Foundation · Open Source Initiative · SourceForge · Xiph.Org Foundation · X.Org Foundation






Licences

Apache · BSD · GNU GPL · LGPL · MIT · MPL · Permissive · Microsoft Public License · Microsoft Reciprocal License · FSF approved licenses






Challenges

Binary blob · Digital rights management · License proliferation · Mozilla software rebranding · Proprietary software · SCO-Linux controversies · Security · Software patents · Tivoization · Trusted Computing






Other topics

Alternative terms · Community · Linux distribution · Forking · Movement · Microsoft Open Specification Promise · Revolution OS · Comparison with closed source






List of open source software packages








Retrieved from "http://en.wikipedia.org/wiki/GNU_General_Public_License"
Categories: GNU project | Computer law | Free content licenses | Free software licenses | Open source licenses | Copyleft licensing | LibreHidden categories: Articles containing potentially dated statements from 2006 | All articles containing potentially dated statements | All articles with unsourced statements | Articles with unsourced statements since November 2008 | Articles with unsourced statements since October 2007 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Afrikaans
العربية
Bosanski
Български
Català
Česky
Cymraeg
Dansk
Deutsch
Eesti
Ελληνικά
Español
Esperanto
Euskara
فارسی
Français
Galego
한국어
Hrvatski
Ilokano
Bahasa Indonesia
Italiano
עברית
ქართული
Lietuvių
Lumbaart
Magyar
മലയാളം
Bahasa Melayu
Монгол
Nederlands
日本語
‪Norsk (bokmål)‬
‪Norsk (nynorsk)‬
Polski
Português
Română
Русский
Sardu
Simple English
Slovenčina
Slovenščina
Ślůnski
Српски / Srpski
Suomi
Svenska
Tagalog
தமிழ்
ไทย
Tiếng Việt
Türkçe
Українська
中文









 This page was last modified on 2 April 2009, at 23:53.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
