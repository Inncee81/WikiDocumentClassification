













Parrot virtual machine - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Parrot_virtual_machine";
		var wgTitle = "Parrot virtual machine";
		var wgAction = "view";
		var wgArticleId = "60511";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281508372;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Parrot virtual machine

From Wikipedia, the free encyclopedia

Jump to: navigation, search 





This article needs additional citations for verification. Please help improve this article by adding reliable references (ideally, using inline citations). Unsourced material may be challenged and removed. (February 2008)







This article or section contains information about computer software currently in development.
The content may change as the software development progresses.






Parrot virtual machine

Developed by
Parrot Foundation


Latest release
1.0 Haru Tatsu / 2009-03-17; 25 days ago


Written in
C


Operating system
Cross-platform


Type
Virtual machine


License
Artistic License 2.0


Website
http://www.parrot.org/


Parrot is a register-based virtual machine being developed using the C programming language and intended to run dynamic languages efficiently. It uses just-in-time compilation for speed to reduce the interpretation overhead. It is currently possible to compile Parrot assembly language and PIR (an intermediate language) to Parrot bytecode and execute it. Parrot is an open source project[1] distributed with a free software licence, making Parrot free software.
Parrot was started by the Perl community, and is developed with help from the open source and free software communities. As a result, it is focused on license compatibility (Artistic License 2.0), platform compatibility across a broad array of systems, processor architectures compatibility across most modern processors, speed of execution, small size (around 700k depending on platform), and being flexible enough to handle the varying demands of Perl, and most, if not all, other modern dynamic languages. It is also focusing on improving introspection, debugger capabilities, and compile-time semantic modulation.
Version 1.0, with a stable API for development was released on March 17, 2009.[2]




Contents


1 History
2 Languages

2.1 Static and dynamic languages
2.2 Functional concepts
2.3 Compiler tools
2.4 Existing client languages


3 Internals
4 Examples

4.1 Registers
4.2 Arithmetic operations


5 Culture
6 License
7 References
8 See also
9 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] History
The project started to implement Perl 6 and originally had the very dull name "The software we're writing to run Perl 6".[citation needed] The name Parrot came from an April Fool's joke in which a hypothetical language named Parrot was announced that would unify Python and Perl.[3] The name was later adopted by this project, which aims to support Perl and Python.
Several languages are being developed along with it which target the Parrot virtual machine.
Previous version's release dates are documented on Parrot's website.[4]
The Parrot Foundation has been recently created to hold the copyright and trademarks of the Parrot project, to help drive development of language implementations and the core codebase, to provide a base for growing the Parrot community, and to reach out to other language communities.[5] As with the Parrot design documents, the bylaws and articles of incorporation were drafted on the mailing list and in the wiki.

[edit] Languages
The goal of the Parrot virtual machine is to host client languages, and allow interoperation between them. Several hurdles exist in accomplishing this goal, in particular the difficulty of mapping high-level concepts between languages and providing interoperability of data and data structures.
Once developed within the scope of the Parrot project, language implementations such as Rakudo Perl have been split from it to be developed independently.

[edit] Static and dynamic languages
The differing properties of statically and dynamically typed languages have motivated the design of Parrot. Current popular virtual machines such as the Java virtual machine and the Common Language Runtime have been designed for statically typed languages, while the languages targeted by Parrot are dynamically typed.
Virtual machines such as the Java virtual machine and the current Perl 5 virtual machine are also stack based. Parrot developers see it as an advantage of the Parrot machine that it has registers, and therefore more closely resembles an actual hardware design, allowing the vast literature on compiler optimization to be used generating code for the Parrot virtual machine so that it will run bytecode at speeds closer to machine code.

[edit] Functional concepts
Parrot has rich support for several features of functional programming including closures and continuations, both of which can be particularly difficult to implement correctly and portably, especially in conjunction with exception handling and threading. Approaching such problems at the level of the virtual machine and solving them only once thus offers a tremendous saving of effort when implementing them in any of Parrot's client languages.

[edit] Compiler tools
Main article: Parser Grammar Engine
Parrot provides a suite of compiler-writing tools which includes the Parser Grammar Engine (PGE), a hybrid parser-generator that can express a recursive descent parser as well as a operator-precedence parser, allowing free transition between the two in a single grammar. The PGE feeds into the Tree Grammar Engine (TGE) which further transforms the parse-tree generated by PGE for optimization and ultimately for code generation.

[edit] Existing client languages
Besides Perl 6, an increasing number of languages have partial or complete implementations including APL, BASIC, Befunge, Cola, ECMAScript, Forth, Jako, Lisp, Lua, m4, Miniperl, OpenComal, PHP (pipp), Plot, Pheme, Punie, Python, Ruby (Cardinal), Scheme, Smalltalk (Chitchat), Squaak, Tcl (aka partcl), URM, YAL, and Z-code. However almost all of these language implementations are currently incomplete or experimental.[6]

[edit] Internals
Parrot code has three forms. Bytecode is natively interpreted by Parrot. Parrot Assembly Language (PASM) is the low level language that compiles down to bytecode. Parrot Intermediate Representation (PIR) is a slightly higher level language than PASM and also compiles down to Bytecode. It is the primary target of language implementations. PIR transparently manages Parrot's inter-routine calling conventions, provides improved syntax, register allocation, and more. PIR code is usually stored in files with the suffix ".pir".

[edit] Examples

[edit] Registers
Parrot is register-based like most hardware CPUs, unlike most virtual machines, which are stack-based. Parrot provides four types of registers:

I: native integer type
N: floating-point numbers
S: advanced string registers with Unicode support
P: PMC, or Parrot Magic Cookie — Parrot object type

Parrot provides an arbitrary number of registers; this number is fixed at compile time per subroutine.

[edit] Arithmetic operations
In PASM

   set I1, 4
   inc I1        # I1 is now 5
   add I1, 2     # I1 is now 7
   set N1, 42.0
   dec N1        # N1 is now 41.0
   sub N1, 2.0   # N1 is now 39.0
   print I1
   print ', '
   print N1
   print "\n"
   end

In PIR

.sub 'main' :main
   $I1 = 4
   inc $I1     # $I1 is now 5
   $I1 += 2    # $I1 is now 7
   $N1 = 42.0
   dec $N1     # $N1 is now 41.0
   $N1 -= 2.0  # $N1 now 39.0
   print $I1
   print ', '
   print $N1
   print "\n"
.end


[edit] Culture
The tagline of the Parrot project is "speaks your language."
Until late 2005, Dan Sugalski was the lead designer and chief architect of Parrot. Chip Salzenberg, a longtime Perl, Linux kernel, and C++ hacker, took over until mid-2006, when he became the lead developer. Allison Randal, the lead developer of Punie and chief architect of Parrot's compiler tools, is now the chief architect.
Development discussions take place primarily on the parrot-porters mailing list, hosted by perl.org. In addition, there are weekly moderated meetings for Parrot and language developers hosted in #parrotsketch on irc.perl.org. The #parrot channel on the same network is often full of Parrot hackers.
Design discussions exist in the form of Parrot Design Documents, or PDDs, in the Parrot repository [1]. The chief architect or another designated designer produces these documents to explain the philosophy of a feature as well as its interface and design notes. Parrot hackers turn these documents into executable tests, and then existing features.
The Parrot team releases a new stable version of the software on the third Tuesday of every month. Core committers take turns producing releases in a revolving schedule, where no single committer is responsible for multiple releases in a row. This practice has improved the project's velocity and stability.

[edit] License
Parrot is a free software project, distributed under the terms Artistic License Version 2.0.

[edit] References


^ "Parrot Contributor License Agreement 1.0" (PDF). Parrot Foundation. http://www.parrot.org/files/parrot_cla.pdf. Retrieved on March 18, 2009. 
^ "Parrot Roadmap". Parrot Foundation. 2008-11-20. https://trac.parrot.org/parrot/wiki/ParrotRoadmap. Retrieved on 2008-11-20. 
^ http://www.oreilly.com/news/parrotstory_0401.html
^ http://docs.parrot.org/parrot/latest/html/docs/parrothist.pod.html
^ http://www.parrotblog.org/2008/06/announcing-parrot-foundation.html
^ https://trac.parrot.org/parrot/wiki/Languages



[edit] See also




Free software portal




Common Language Runtime (CLR)
Comparison of application virtual machines
mod_parrot


[edit] External links

Parrot homepage
Perl 6 and Parrot links




Retrieved from "http://en.wikipedia.org/wiki/Parrot_virtual_machine"
Categories: Beta software | Perl | Register-based virtual machines | Free compilers and interpreters | Cross-platform softwareHidden categories: Articles needing additional references from February 2008 | All articles with unsourced statements | Articles with unsourced statements since November 2008 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Deutsch
Español
Français
Italiano
Nederlands
日本語
Polski
Português
Русский









 This page was last modified on 3 April 2009, at 14:48 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
