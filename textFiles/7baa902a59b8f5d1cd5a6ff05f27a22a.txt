













Web application framework - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Web_application_framework";
		var wgTitle = "Web application framework";
		var wgAction = "view";
		var wgArticleId = "2342095";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 280008441;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Web application framework

From Wikipedia, the free encyclopedia

Jump to: navigation, search 





This article needs additional citations for verification. Please help improve this article by adding reliable references (ideally, using inline citations). Unsourced material may be challenged and removed. (August 2008)







It has been suggested that this article or section be merged into web template system. (Discuss)


A web application framework is a software framework that is designed to support the development of dynamic websites, Web applications and Web services. The framework aims to alleviate the overhead associated with common activities used in Web development. For example, many frameworks provide libraries for database access, templating frameworks and session management, and often promote code reuse.




Contents


1 History
2 Architectures

2.1 Model view controller(MVC)

2.1.1 Push-based vs. Pull-based


2.2 Content Management Systems


3 Features

3.1 Security
3.2 Database access and mapping
3.3 URL mapping
3.4 Web template system
3.5 Caching
3.6 Ajax
3.7 Automatic configuration
3.8 Web services


4 Technologies

4.1 Languages

4.1.1 Java
4.1.2 C# and VB.NET
4.1.3 ColdFusion
4.1.4 PHP
4.1.5 Perl, Python, Ruby, Lua
4.1.6 Common Lisp
4.1.7 TCL
4.1.8 Smalltalk
4.1.9 JavaScript


4.2 Operating Systems


5 References
6 See also





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] History





This article lacks historical information. Specifically: sources and the dates some of the ideas arose should be addedÂ  Please add it if you can. For help, see Wikipedia:WikiProject Historical information.


As the design of the World Wide Web was not inherently dynamic, early hypertext consisted of hand-coded HTML that was published on web servers. Any modifications to published pages needed to be performed by the pages' author. To provide a dynamic web page that reflected user inputs, the Common Gateway Interface (CGI) standard was introduced for interfacing external applications with web servers.[1] CGI could adversely affect server load, though, since each request had to start a separate process.
Programmers wanted tighter integration with the web server to enable high traffic web applications. The Apache HTTP Server, for example, supports modules that can extend the web server with arbitrary code executions (such as mod perl) or forward specific requests to a web server that can handle dynamic content (such as mod jk). Some web servers (such as Apache Tomcat) were specifically designed to handle dynamic content by executing code written in some languages, such as Java.
Around the same time, new languages were being developed specifically for use in the web, such as ColdFusion, PHP and Active Server Pages.
While the vast majority of languages available to programmers to use in creating dynamic web pages have libraries to help with common tasks, web applications often require specific libraries that are useful in web applications, such as creating HTML (for example, JavaServer Faces).
Eventually, mature, "full stack" frameworks appeared, that often gathered multiple libraries useful for web development into a single cohesive software stack for web developers to use. Examples of this include JavaEE (Servlets), WebObjects, OpenACS, and Ruby on Rails.

[edit] Architectures

[edit] Model view controller(MVC)
Many frameworks follow the Model View Controller (MVC) architectural pattern to separate the data model with business rules from user interface.

[edit] Push-based vs. Pull-based
Most MVC frameworks follow a push-based architecture. These frameworks use actions that do the required processing, and then "push" the data to the view layer to render the results.[2] Struts, Django, Ruby on Rails and Spring MVC are good examples of this architecture. An alternative to this is pull-based architecture, sometimes also called "component-based". These frameworks start with the view layer, which can then "pull" results from multiple controllers as needed. In this architecture, multiple controllers can be involved with a single view. Struts2, Tapestry, JBoss Seam and Wicket are examples of pull-based architectures.

[edit] Content Management Systems
Some self-described content management systems have begun to expand into higher layer web application frameworks. For instance, Drupal's structure provides a minimal core whose function is extended through modules that provide functions generally associated with web application frameworks. Joomla, XOOPS, Plone and TYPO3 have similar functionality. Historically these projects have been termed content management systems. However, it is debatable whether "management of content" is the primary value of such systems, especially when some, like SilverStripe, provide an object-oriented MVC framework. Add-on modules now enable these systems to function as full fledged applications beyond the scope of content management. They may provide functional APIs, functional frameworks, coding standards, and many of the functions traditionally associated with Web application frameworks.

[edit] Features

[edit] Security
Some web application frameworks come with authentication and authorization frameworks, that enable the web server to identify the users of the application, and restrict access to functions based on some defined criteria. Django is one example that provides role-based access to pages, and provides a web-based interface for creating users and assigning them roles.

[edit] Database access and mapping
Many web application frameworks create a unified API to a database backend, enabling web applications to work with a variety of databases with no code changes, and allowing programmers to work with higher-level concepts. For higher performance, database connections should be pooled as e.g. AOLserver does. Additionally, some object-oriented frameworks contain mapping tools to provide Object-Relational Mapping, which will map objects to tuples.
Other features web application frameworks may provide include transactional support and database migration tools.

[edit] URL mapping
A framework's URL mapping facility is the mechanism by which the framework interprets URLs. Some frameworks, such as Django, match the provided URL against pre-determined patterns using regular expressions, while some others use URL Rewriting to translate the provided URL into one that the underlying engine will recognize.
A URL mapping system that uses pattern matching or URL rewriting allows more "friendly" URLs to be used, increasing the simplicity of the site and allowing for better indexing by search engines. For example, a URL that ends with "/page.cgi?cat=science&topic=physics" could be changed to simply "/page/science/physics". This makes the URL easier to read and provides search engines with better information about the structural layout of the site.

[edit] Web template system
Main article: Web template system
Dynamic web pages usually consist of a static part (HTML) and a dynamic part, which is code that generates HTML. The code that generates the HTML can do this based on variables in a template, or on code. The text to be generated can come from a database, thereby making it possible to dramatically reduce the number of pages in a site.
Consider the example of a real estate agent with 500 houses for sale. In a static web site, the agent would have to create 500 pages in order to make the information available. In a dynamic website, the agent would simply connect the dynamic page to a database table of 500 records.
In a template, variables from the programming language can be inserted without using code, thereby losing the requirement of programming knowledge to make updates to the pages in a web site. A syntax is made available to distinguish between HTML and variables. E.g. in JSP the <c:out> tag is used to output variables, and in Smarty, {$variable} is used.
Many template engines do support limited logic tags, like IF and FOREACH. These are to be used only for decisions that need to be made for the presentation layer, in order to keep a clean separation from the business logic layer, or the M(odel) in the MVC pattern.

[edit] Caching
Main article: Web cache
Web caching is the caching of web documents in order to reduce bandwidth usage, server load, and perceived "lag". A web cache stores copies of documents passing through it; subsequent requests may be satisfied from the cache if certain conditions are met. Some application frameworks provide mechanisms for caching documents and bypassing various stages of the page's preparation, such as database access or template interpretation.

[edit] Ajax
Main article: Ajax framework
Ajax, shorthand for "Asynchronous JavaScript and XML", is a web development technique for creating interactive web applications. The intent is to make web pages feel more responsive by exchanging small amounts of data with the server behind the scenes, so that the entire web page does not have to be reloaded each time the user requests a change. This is intended to increase the web page's interactivity, speed, and usability.
Due to the complexity of Ajax programming in Javascript, there are numerous Ajax frameworks that exclusively deal with Ajax support. Some Ajax frameworks are even embedded as a part of larger frameworks. For example, the Prototype JavaScript Framework is included in Ruby on Rails.
With the increased interest in developing "Web 2.0" Rich Media Applications, the complexity of programming directly in Ajax and Javascript has become so apparent that compiler technology has stepped in, to allow developers to code in high-level languages such as Java, Python and Ruby. The first of these compilers was Google Web Toolkit, with ports to Python and Ruby in the form of Pyjamas and RubyJS following some time after. These compilers and their associated widget set libraries make the development of Rich Media Ajax Applications much more akin to that of developing Desktop applications.

[edit] Automatic configuration
Some frameworks minimize web application configuration through the use of introspection and/or following known conventions. For example, many Java frameworks use Hibernate as a persistence layer, which can generate a database schema at runtime capable of persisting the necessary information. This allows the application designer to design business objects without needing to explicitly define a database schema. Frameworks such as Ruby on Rails can also work in reverse, that is, define properties of model objects at runtime based on a database schemas.

[edit] Web services
Main article: Web services
Some frameworks provide tools for creating and providing web services. These utilities may offer similar tools as the rest of the web application.

[edit] Technologies
See also: List of web application frameworks

[edit] Languages
Many languages have an associated web application framework. However, certain languages either have a critical mass of developers to give a higher level of support to frameworks, or provide features that prove conducive to the development of web application frameworks

[edit] Java
There are numerous Java frameworks either in development or in use. Many of these frameworks are built on top of, or borrow elements from the Java EE platform or Eclipse etc.
As an alternative to Java language frameworks, there is Grails (previously known as Groovy on Rails) â Groovy framework, built on top of Java Platform.

[edit] C# and VB.NET
C# and VB.NET are the most popular languages used to create web applications using Microsoft's ASP.NET platform. (ASP.NET is built on the Common Language Runtime, allowing programmers to use any supported .NET language.) ASP.NET has an integrated AJAX framework, ASP.NET AJAX.

[edit] ColdFusion
ColdFusion has several active frameworks, including:

cfwheels
ColdBox
Fusebox
Mach-II
Model-Glue
onTap


[edit] PHP
PHP's original design for dynamic web pages has given support to projects such as CakePHP, CodeIgniter, PRADO, ThinkPHP, Qcodo, symfony, Zoop Framework, Orinoco Framework, the eZ publish web publishing framework and the Zend Framework. These frameworks assist application structure and modeling by providing a framework layer on top of the core language. These attack the programming problem from the "bottom-up."[3]
In contrast with the mentioned frameworks, software projects like Drupal, Joomla, MODx, or TYPO3 have begun to morph from web content management systems to a higher layer web application framework. Their structure generally provides a minimal core whose function is extended through modules that provide functions generally associated with web application frameworks. SilverStripe began life as both a framework and CMS rather than starting with one and going to the other. As open source projects, their communities contribute many modules (for example, Drupal has over 3,000 such modules[4]). Use of these CMS's core+modules constitutes a method for assembling a website with a broad range of application features without actually doing any PHP-level coding.

[edit] Perl, Python, Ruby, Lua
There are numerous dynamic language frameworks:

Perl has Catalyst, Maypole, Jifty, CGI::Application, and WebGUI, amongst others.[5]


Python has, for example, Django, TurboGears, Pylons, Zope, Quixote, Karrigell and web2py. There are many other options available as well.[6]


Ruby has Ruby on Rails and Merb among others.


Lua has Kepler and Orbit.


[edit] Common Lisp
There are a number of web application frameworks written in Common Lisp, including UnCommon Web, Webactions, BKNR, ABCL-web, blow, and cl-terrace.

[edit] TCL
OpenACS is an open source web application framework designed for developing high traffic web applications in Tcl.

[edit] Smalltalk
Seaside is an open source web application framework for developing web applications in Smalltalk. Although the main development of Seaside happens in Squeak there exist ports to all major Smalltalk dialects.
AIDA/Web is another open source web framework and application server based on many open source and commercial dialects of Smalltalk.

[edit] JavaScript
Helma is an open source web application framework / publishing system written in Java which uses JavaScript as programming language.

[edit] Operating Systems
With very few exceptions, web application frameworks are based upon platform independent languages that run on a variety of platforms. While some frameworks may recommend particular configurations, most can run on Windows, Linux, Mac and other Unix-based platforms.

[edit] References


^ "CGI: Common Gateway Interface". http://hoohoo.ncsa.uiuc.edu/cgi/intro.html. Retrieved on 2007-07-29.Â 
^ Thomson, Kris (2003-10-29). "Clarification on MVC Pull and MVC Push". http://www.theserverside.com/patterns/thread.tss?thread_id=22143. Retrieved on 2007-07-29.Â 
^ Interview with SilverStripe co-founder at Googleplex
^ [1]
^ Multiple (Wiki) (2007-07-26). "Web Frameworks". Perl Foundation. http://www.perlfoundation.org/perl5/index.cgi?web_frameworks. Retrieved on 2008-07-11.Â 
^ Multiple (Wiki). "Web Frameworks for Python". http://wiki.python.org/moin/WebFrameworks. Retrieved on 2008-07-11.Â 




Tony Shan and Winnie Hua (2006). Taxonomy of Java Web Application Frameworks. Proceedings of the 2006 IEEE International Conference on e-Business Engineering (ICEBE 2006), October 2006, p378-385.



[edit] See also

Application framework
Application security
Comparison of web application frameworks
Don't repeat yourself (DRY)
List of web application frameworks
List of Web service Frameworks
Rich Internet Application
Software framework
Solution stack
JavaScript library




Retrieved from "http://en.wikipedia.org/wiki/Web_application_framework"
Categories: Web application frameworksHidden categories: Articles needing additional references from August 2008 | All articles to be merged | Articles to be merged since July 2008 | Articles lacking historical information 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




Â 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Deutsch
EspaÃ±ol
ÙØ§Ø±Ø³Û
íêµ­ì´
æ¥æ¬èª









 This page was last modified on 27 March 2009, at 13:59 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  WikipediaÂ® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
