













WebObjects - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "WebObjects";
		var wgTitle = "WebObjects";
		var wgAction = "view";
		var wgArticleId = "317400";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 282326202;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); WebObjects

From Wikipedia, the free encyclopedia

Jump to: navigation, search 

WebObjects


WebObjects 5.3 project in Xcode and WebObjects Builder


Developed by
Apple Inc.


Latest release
5.4.3 / 2008-09-15; 207 days ago


Written in
Java


Operating system
Mac OS X


Type
Web application server


License
Proprietary


Website
http://www.apple.com/webobjects


WebObjects is a Java web application server from Apple Inc., and a web application framework that runs on the server. It is available, at no additional cost, as part of the Xcode Developer Tools included with Apple's Mac OS X operating system. Its hallmark features are its deep object-orientation, powerful database connectivity, and rapid prototyping tools. Applications created with WebObjects can be deployed as web sites, Java Web Start desktop applications, and/or standards-based web services.
WebObjects was created by NeXT Software, Inc., and was released to the public in March 1996. The time and cost benefits of rapid, object-oriented development attracted major corporations to WebObjects in the early days of e-commerce, with clients including Disney, Dell Computer, and BBC News. However, following NeXT's merger into Apple Inc. in 1997, WebObjects' public profile has languished in the marketplace. With many early adopters having since switched to alternative technologies, Apple is now the biggest client for WebObjects, relying on it to power its online Apple Store, MobileMe online services, and the iTunes Store — WebObjects' highest-profile implementation to date.
Despite the drop in interest, Apple has continued to grow and improve WebObjects, announcing a renewed commitment to the product and its developer base at their World Wide Developer's Conference in June 2007. The WebObjects development tools and frameworks are now a part of the install package for Apple's free Xcode IDE for Mac OS X, and the deployment runtime is included with Mac OS X Server. WebObjects license keys are also a thing of the past, allowing development and unlimited deployment capabilities right out of the box.
While WebObjects is supported only on the Mac OS X platform, the deployment runtime is, nonetheless, pure Java and Apple allows users to deploy WebObjects applications on any platform which supports Java. You can use the included WebObjects Java SE application server or deploy on third-party Java EE application servers such as JBoss, Apache Tomcat, WebLogic Server or IBM WebSphere.
To ease the transition to a Mac OS X-only development solution, Apple continues to sell the earlier version 5.2, which includes development tools for Windows 2000 Professional and official deployment support for Windows 2000 Server and Solaris 8.





Contents


1 Tools
2 History of WebObjects

2.1 2005: WebObjects is bundled with Mac OS X
2.2 2006: Apple deprecates WebObjects developer tools
2.3 2007: License key no longer required


3 Advantages of WebObjects
4 Core WebObjects frameworks
5 Rules-Based Rapid Application Development (RBRAD)

5.1 Advantages of RBRAD


6 Java compatibility
7 WebObjects version history
8 WOWODC
9 OpenSource alternatives
10 Notes
11 See also
12 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Tools
As of 2008 most WebObjects architects and engineers are using the tools being developed by the WebObjects community. These tools run within the Eclipse IDE and are open-source. The WebObjects plug-ins for Eclipse are known as WOLips.
Building WebObjects frameworks and applications for deployment is typically achieved using the WOProject set of tools for ant or maven. These tools are distributed with WOLips.

[edit] History of WebObjects
Under Apple's ownership WebObjects has aligned more closely with the company's corporate strategy of using software to drive hardware sales. In 2000, the price was dramatically slashed from $50,000 (for the full deployment license) to $699. WebObjects has been included with Mac OS X Server since May 2001, and no longer requires a license key for development or deployment.

[edit] 2005: WebObjects is bundled with Mac OS X
WebObjects fully transitioned from a stand-alone product to an integral part of the Mac OS X platform with the release of version 5.3 in June 2005. The developer tools and frameworks, which previously sold for US$699, were now bundled with Apple's Xcode IDE. The corollary of this move was that support for other platforms, such as Windows, was discontinued.
Apple said that it would further integrate WebObjects development tools with Xcode in future releases. This included a new EOModeler Plugin for Xcode. This strategy, however, was soon altered.

[edit] 2006: Apple deprecates WebObjects developer tools
Apple announced the deprecation of Mac OS X's Cocoa-Java bridge with the release of Xcode 2.4 at the August 2006 Worldwide Developers Conference and, with it, all dependent features, including the entire suite of WebObjects developer applications — EOModeler, EOModeler Plugin, WebObjects Builder, WebServices Assistant, RuleEditor and WOALauncher.
Apple had decided to concentrate its engineering resources on the runtime engine of WebObjects, leaving the future responsibility for developer applications with the open source community. The main open source alternative — the Eclipse IDE with the WOLips suite of plugins — had matured to such an extent that its capabilities had, in many areas, surpassed those of Apple's own tools, which had not seen significant updates for a number of years.
Apple promised to provide assistance to the community in its efforts to extend such tools and develop new ones. In a posting to the webobjects-dev mailing list [1] Daryl Lee from Apple's WebObjects team publicly disclosed the company's new strategy for WebObjects. It promised, in short, to "make WebObjects the best server-side runtime environment" by:

Improving performance, manageability, and standards compliance
Making WebObjects work well with ANT and the most popular IDEs, including Xcode and Eclipse
Opening and making public all standards and formats that WebObjects depends upon


[edit] 2007: License key no longer required
WebObjects 5.4, which shipped with Mac OS X Leopard in October 2007, eliminated the license key requirement for both development and deployment of WebObjects applications on all platforms. All methods for checking license limitations were deprecated.

[edit] Advantages of WebObjects
WebObjects has a number of key technologies that differentiate it from some application servers:

Zero Cost to Mac Developers: The tools and frameworks required to develop and deploy WebObjects applications are free-of-charge.
Streamlined Database Access: Database tables are represented in WebObjects as collections of Java classes called Enterprise Objects. The developer creates a "model" that maps objects to database rows. This high level of abstraction relieves developers from the drudgery of writing inflexible, database-specific code. With the use of drivers, such as JDBC, WebObjects automatically handles the writing of appropriate SQL code.
Separation of Presentation Logic, Business Logic, and Data: WebObjects conforms to the MVC programming paradigm, enforcing a clean separation of presentation (Web pages), logic (Java code) and data (data store).
State Management: Without using cookies, WebObjects provides objects that allow you to maintain information for the life of a particular user session, or longer.
Pure Java: WebObjects applications are 100% Pure Java, which means they can be deployed on any platform with a certified Java 2 virtual machine.
Scalability and Performance: Administrators run multiple instances of an application, either on one or on multiple application servers. Developers can choose from one of several load-balancing algorithms (or create their own).


[edit] Core WebObjects frameworks
A WebObjects application is essentially a server-side executable, created by combining prebuilt application framework objects with the developer's own custom code. WebObjects' frameworks can be broken down into three core parts:

The WebObjects Framework (WOF) is at the highest level of the system. It is responsible for the application's user interface and state management. It uses a template-based approach to take that object graph and turn it into HTML, or other tag-based information display standards, such as XML or SMIL. It provides an environment where you can use and create reusable components. Components are chunks of presentation (HTML) and functionality (Java code) often with a parameter list to enhance reusability. WebObjects Builder is used to create the HTML-templates and creates the .wod-file linking, for instance, a Java String object to interface objects like an input field in a web form.


The Enterprise Objects Framework (EOF) is, perhaps, the hallmark feature of WebObjects. EOF communicates with relational databases and turns database rows into an object graph. Using EOModeler the developer can create an abstraction of the database in the forms of Java objects. In order to access or insert information into the database the developer simply accesses the Java Enterprise Objects (EOs) from their business logic. After that EOF manages the Enterprise Objects and automatically creates the required SQL-code to commit the changes to the database.


Java Foundation. Both Enterprise Objects and WebObjects rest on the aptly-named Java Foundation classes. This framework contains the fundamental data structure implementations and utilities used throughout the rest of WebObjects. Examples include basic value and collection classes, such as arrays, dictionaries (objects that contain key-value pairs) and formatting classes. Java Foundation is similar to the Foundation framework contained in Apple's Cocoa API for Mac OS X desktop applications, however Java Foundation is written in Pure Java as opposed to Cocoa's Objective-C (with its Java bridge runtime wrapper). Foundation classes are prefixed with the letters "NS" (a reference to their NeXTStep OS heritage). Since the transition of WebObjects to Java in 2000, the functionality of many of Apple's Java Foundation classes is replicated in the Sun's own JDK. However, they persist largely for reasons of backwards-compatibility and developers are free to use whichever frameworks they prefer.


[edit] Rules-Based Rapid Application Development (RBRAD)
WebObjects features a set of rapid development technologies that can automatically create a Web application without the need to write any Java code. Given a model file for a database, WebObjects will create an interface supporting nine common database tasks, including querying, editing and listing. Such applications are useful for prototyping or administering a database, perhaps to check relationships or to seed the database with data.
The user interface is generated dynamically, on-the-fly at runtime using a rules-based system — no code is generated. Consequently, you can modify your application's configuration at runtime (using an assistant program) without recompiling or relaunching the application.
Developers can utilize one of three different technologies, depending upon the type of interface they wish to employ:

Direct To Web (D2W) allows developers to rapidly create an HTML-based Web application that accesses a database.


Direct To Java Client allows developers to rapidly create a client desktop application using the Java Swing toolkit. An advantage of Java Client applications is that they can take advantage of the processing power of the client computer to perform operations such as sorting a list of items received from the server.


Direct To Web Services allows developers to rapidly develop Web service-based applications that provide access to a data store.


[edit] Advantages of RBRAD

Vastly decreased development and debugging time;
Increased stability through the use of highly-exercised code;
By using the information contained in the data model file, applications will not violate database integrity. Normally you would have to write code to avoid such situations and handle errors generated by bad data;
Fully utilizes the validation services provided by WebObjects and Enterprise Objects.


[edit] Java compatibility
WebObjects is a 100% Pure Java solution with the following Java-based features:

Deployment: Applications can be deployed on any operating system that has Java 1.3 or later. Many developers have successfully deployed on Windows and various Linux systems such as Red Hat Linux, Debian and SUSE. Applications can also be hosted on any Java EE compatible application server such as JBoss.
Java EE integration: WebObjects applications can be packaged in a single directory (an exploded .war file) that make it easier to deploy to a Java EE servlet container.
JDBC: Since WebObjects uses JDBC for database connectivity any DBMS that has a JDBC-driver can be used within WebObjects.
Swing interface: WebObjects applications can be delivered to the user as a "Java Client application" or as a Java applet.


[edit] WebObjects version history
WebObjects was originally released by NeXT Computer in March 1996, but was acquired by Apple Inc. with their acquisition of NeXT in December of that year.


1.0 — March 28, 1996

Debut release.




2.0 — June 25, 1996

Pre-release version of WebObjects Builder application.




3.0 — November 1996


3.1

Supports a subset of the Java APIs.




3.5 — December 1997

Enhanced Java support: all objects and components can be worked on as a set of Java APIs based on a complete implementation of the JDK 1.1.3.




4.0 — September 1998

First version of WebObjects to run on the Mac platform — specifically Mac OS X Server 1.0 (a public release of the beta OS formerly code-named 'Rhapsody').
OPENSTEP 4.2 OS no longer supported; Windows NT now uses a new version of the OpenStep base of libraries and binary support called Yellow Box.
Direct actions introduced whereby actions can be sent directly to an object that can handle it, allowing for simpler, static URLs.
Direct to Web code-free development assistant introduced.
WebObjects and Enterprise Objects Framework provide thread-safe APIs. This means that you can write a multithreaded WebObjects application where you couldn't before. This enables applications that can provide user feedback for long-running requests.
Better tools for managing, configuring and testing the scalability of applications.
Java capabilities are greatly improved over previous version, however compiled Objective-C is still two to three times faster;
Possible to build a fully capable Java client either as a stand-alone app or as an applet with the Interface Builder - all sorts of Swing and Java Bean components are sitting on IB palettes for wiring up.
Developers can now debug applications on a machine that doesn't have a web server present.
EOF 3.0 adds support for a new database, OpenBase Lite, which ships with EOF 3.0 as an unsupported demo.
EOF 3.0 introduces new API, mainly in EOUtilities, to facilitate common programming tasks.
EOModeler adds support for prototype attributes and the ability to create and store complex queries (or EOFetchSpecifications).




4.5 — March 2000

Last version which supported the Objective-C API.
Integrated XML support using IBM's alphaWorks parser.
New WebObjects Builder interface, specifically in the main window toolbar, the user interface for binding keys, and the table editing user interface. A path view, an API editor, and component validation have been added.
Application profiling tools.
EOF 4.5 comes with a new sample adaptor: the LDAP adaptor.
Direct to Web now allows you to create your own visual style and exposes a great deal of new API.
Java Client extended considerably, including a new user interface generation layer, Direct to Java Client.




5.0 [2] — May 2001

Major rewrite from Objective-C to Java.




5.1 [3] — January 10, 2002

Create and deploy Enterprise JavaBeans using the built-in container based on OpenEJB.
Deploy WebObjects applications as JSPs or Servlets on top of third-party application servers.
Access and manipulate data stored in JNDI or LDAP directory services.
Automatically generate desktop Java client applications with rich, interactive user interfaces.
Utilize the WebObjects template engine and object-relational mapping for seamless XML messaging.





5.1.2 [4] — May 7, 2002

Contains general bug fixes for WebObjects 5.1 on all platforms.




5.1.3 [5] — June 7, 2002

Contains targeted bug fixes for WebObjects 5.1 on all platforms.




5.1.4 [6] — August 22, 2002

Compatibility with Mac OS X 10.2.




5.2 [7] — November 12, 2002

Web Services support.
Improvements to J2EE integration
Java Web Start support.
Improvements to robustness and stability of Enterprise Objects.
Major bug fixes led many developers to hail this as the first stable 5.x release of WebObjects.


5.2.1 [8] — March 21, 2003

Resolved some incompatibilities with the latest Java 1.4.1 implementation for Mac OS X.




5.2.2 [9] — October 22, 2003

Compatibility with Mac OS X 10.3 Panther and the Xcode IDE.
JBoss on Panther Server qualification.
Qualified for Java 1.4.1.
Fixes for EOF runtime and WOFileUpload.




5.2.3 [10] — March 16, 2004

Performance and stability update addressing issues with CLOSE_WAIT states in deployment using JavaMonitor and wotaskd and issues related to EOF under high load.
Qualified for Java 1.4.2.




5.2.4 [11] — May 2, 2005

Compatibility with Mac OS X 10.4 Tiger and the Xcode 2.0 IDE.




5.3 (developer) for Mac OS X 10.4 [12] — June 6, 2005

WebObjects developer tools included free with the Xcode IDE (v2.1).
Development and deployment on platforms other than Mac OS X no longer supported by Apple.
EOModels can be created and edited within Xcode with a new EOModeler plugin that integrates with the CoreData modeling tools.
WebObjects Builder has UI enhancements and generates HTML 4.0.1 code.
WebObjects runtime now supports HTML 4.0.1.
NSArray, NSDictionary and NSSet now implement the java.util.Collection interfaces.
Axis 1.1 integrated with the Direct To WebServices feature.
WebObjects is qualified against Oracle 10g using the 10.1.0.2 JDBC drivers; Microsoft SQL Server 2000 8.00.194; MySQL 4.1.10a; OpenBase 8.0; Oracle 9i Enterprise Edition Sybase ASE 12.5




5.3 (deployment) for Mac OS X Server 10.4 — June 23, 2005

Installer updates the Application Server components in Mac OS X Server 10.4 to WebObjects 5.3.




5.3.1 [13] — November 10, 2005

Addresses incompatibilities with Xcode 2.2 Developer tools on Mac OS X 10.4.
Adds a modified Developer tools license that allows WebObjects applications developed with Xcode 2.2 to be deployed on any compatible platform. The license is available at /System/Library/Frameworks/JavaWebObjects.framework/Resources/License.key after installation.
Adds better SQL Generation in the EOModeler Plug-in design tool in Xcode.
Improved FetchSpecification building in the EOModeler Plugin design tool in Xcode.
Adds a "components and elements" window for improved workflow in WebObjects Builder.
Bug fixes.




5.3.2 [14] — August 7, 2006

Addresses incompatibilities with Xcode 2.4 Developer tools on Mac OS X 10.4.
Security improvements.
Other improvements.
As part of the simultaneous release of Xcode 2.4, the Cocoa Java bridge is deprecated along with the following WebObjects applications: EOModeler, EOModeler Plugin, WebObjects Builder, WebServices Assistant, RuleEditor and WOALauncher.




5.3.3 [15] — February 15, 2007

"WebObjects DST Update": Updates WebObjects 5.3 systems to observe the Daylight Saving Time (DST) changes due to come into effect in March 2007 in many countries, including the United States and Canada. Uses the latest DST and time zone information available as of January 8, 2007.




5.4 [16] — October 26, 2007

License key no longer required or supported
Deprecations: Java Client Nib based applications, Direct to JavaClient based applications, EOCocoaClient based applications, OpenBase no longer example database, Tools (EOModeler, WebObjects Builder, Rule editor)
Combined Component Template Parser that reduces .wo components to single .html files
Generation of XHTML compliant pages
AJAX request handler for enhanced page caching
Added support for secure URL generation
JMX monitoring support
Entity index management in the model
Improved the synchronization with the database
Added support for index generation
Support for enum in attribute conversion
Improved support for vendor specific prototypes (EOJDBCOraclePrototype, EOJDBCFrontBasePrototype, etc.)
Derby support (Embedded database)
Support for Generics
WebServices update (Axis 1.4)
Full support for Apple XML plist (Read and Write)
Ant build support
Open Specifications




5.4.1 [17] — February, 11 2008

"WebObjects 5.4.1 is an update release for the version of WebObjects included in the Mac OS X Leopard tools. This release fixes several bugs in areas such as web services serialization, deployment tools, and database compatibility, among others. This update can be installed on Mac OS X 10.5 Leopard. "
Fixed bugs in web services serialization, deployment, databases.




5.4.2 [18] — July, 11 2008

Addresses WOComponent parser issues
Includes WebServices data types and API changes
Includes EOF SQL Generation fixes
Resolves additional issues





[edit] WOWODC
Since 2007, the community hold an annual conference for WebObjects developers, WOWODC. In 2007 and 2008, the conference was held the week-end before WWDC, and in 2009, the community promoted two conferences: WOWODC West in San Francisco on June 6th and 7th 2009, again right before WWDC, and WOWODC East in Montreal on August 29th and 30th. West is for experienced WebObjects developers, East is for developers who have little or no knowledge of WebObjects.

[edit] OpenSource alternatives
Interest in OpenSource alternatives to WebObjects which use the Objective-C language grew with WebObjects' move from Objective-C (last version WO 4.5.1) to Java (first version WO 5.0). The two frameworks available are SOPE, which has been used as the basis of the OpenGroupware.org groupware server for about eight years, and GNUstepWeb, which is part of the GNUstep project. An open-source rewrite of the EOF framework also exists: AJRDatabase [19].
There are also Java-based alternatives:
Wotonomy is a project, hosted on Sourceforge, that implements a clean-room, open-source version of the WebObjects 5.x system.[20] It provides a near-complete implementation of the MVC web-framework, as well as partial implementations of Foundation, Control, and Data layers, and other features. It is sufficiently functional for low-transaction volume, single-source database applications. While the project's structure was re-organized in 2006 around an Apache Maven build infrastructure[21] and migrated to the Subversion revision control system[22], there has not been any substantial update to the codebase since 2003.[23]
Apache Tapestry has a design and philosophy similar to that of WebObjects[24]. Tapestry is frequently combined with Apache Cayenne, a persistence framework inspired by EOF.

[edit] Notes


^ Apple Mailing Lists: RE: Xcode 2.4 Deprecation Announcements by Daryl Lee
^ WebObjects 5.0 Release Notes
^ WebObjects 5.1 Release Notes
^ WebObjects 5.1.2: Update Overview
^ WebObjects 5.1.3: Update Overview
^ WebObjects 5.1.4: Update Overview
^ WebObjects 5.2 Release Notes
^ WebObjects 5.2.1: Update Overview
^ WebObjects 5.2.2: Update Overview
^ WebObjects 5.2.3: Update Overview
^ WebObjects 5.2.4: Update Overview
^ WebObjects 5.3 Release Notes
^ WebObjects 5.3.1: Update Overview
^ WebObjects 5.3.2: Update Overview
^ WebObjects 5.3.3: Update Overview
^ WebObjects 5.4: Update in Leopard Server
^ 5.4.1: Update in Leopard Client
^ About the WebObjects 5.4.2 Update
^ AJRDatabase
^ Wotonomy Project
^ "Wotonomy moves to maven, removes non-free software" - Christian Gruber
^ "Wotonomy moves subversion" - Christian Gruber
^ "Wotonomy web is coming together" - Micheal Powers
^ Tapestry In Action - Preface



[edit] See also


Mac OS X
NeXT
Apple Computer
iTunes Store
Enterprise Objects Framework
Java Platform
Java EE
Comparison of application servers
UM.SiteMaker



[edit] External links

Apple WebObjects product page
Apple WebObjects developer page
Apple WebObjects Reference Library
Project WONDER - a collection of free WebObjects frameworks and tools
WOCode - a repository of WebObjects code samples
WODev - a WikiWikiWeb site for the WebObjects developers
stepwise.com - Helping developers learn what WebObjects is all about and how to take advantage of the technology
WebObjects General Information
Official WebObjects Community Website
Official WebObjects Community Wiki
WODeveloper - WebObjects Developer Resource
WebObjects Additional blogs/Resources
WOWODC - The annual conference promoted by the community








v • d • e

List of Web Application Frameworks





Actionscript

PureMVC






ASP.NET

ASP.NET MVC · BFC · DotNetNuke · MonoRail · Umbraco






ColdFusion

ColdSpring · Fusebox · Mach-II · Model-Glue · onTap






Common Lisp

ABCL-web · blow · BKNR · SymbolicWeb · UnCommon Web






Java

Apache Struts · AppFuse · Flexive · Google Web Toolkit · IT Mill Toolkit · ItsNat · JavaServer Faces · JBoss Seam · Makumba · OpenXava · Reasonable Server Faces · RIFE · Restlet · Spring · Stripes · Tapestry · WebWork · Wicket · ZK






JavaScript (client-side)

Ample SDK · Clean AJAX · CougarXML · Dojo · Echo · Ext · jQuery · midori · MochiKit · MooTools · OpenLink AJAX · Prototype JavaScript · Pyjamas · qooxdoo · Rialto · Rico · script.aculo.us · SmartClient · SproutCore · Spry · Yahoo! UI Library · Google Web Toolkit






JavaScript (server-side)

AppJet · Jaxer






Perl

Catalyst · Interchange · Mason






PHP

Akelos · CakePHP · Chisimba · CodeIgniter · Drupal · Horde · Kohana · Kolibri · KumbiaPHP · Midgard · PEAR · PHPNuke · PHPonTrax · Seagull · Simplicity · Symfony · Zend · Zoop






Python

CherryPy · Django · Karrigell · Nevow · Pyjamas · Pylons · Quixote · Spyce · TurboGears · Twisted · web2py · Zope






Ruby

Adhearsion · Camping · eRuby (RHTML) · Merb · Nitro · RubyCocoa · Ruby on Rails






Smalltalk

AIDA/Web · Seaside






Other languages

Application Express (PL/SQL) · Fusebox (ColdFusion and PHP) · OpenACS (Tcl) · Yaws (Erlang) · HAppS (Haskell) · Cappuccino (Objective-J)













v • d • e

Apple Inc. software





OS

Darwin · Mac OS X (Public Beta · "Cheetah" · "Puma" · "Jaguar" · "Panther" · "Tiger" · "Leopard" · "Snow Leopard") · iPhone OS






Consumer

Bento · MobileMe · iLife (iMovie · iDVD · iPhoto · GarageBand · iWeb · iTunes) · iWork (Keynote · Pages · Numbers · iWork.com)






Prosumer

Final Cut Express · Logic Express






Professional

Aperture · FileMaker Pro · Final Cut Studio (Final Cut Pro · DVD Studio Pro · Motion · Soundtrack Pro · Color · Compressor) · Logic Studio · Shake






Bundled

Front Row · iChat · Mail · Photo Booth · QuickTime · Safari · TextEdit






Server

Apple Remote Desktop · Mac OS X Server · WebObjects · Xsan






Developer

Dashcode · Instruments · Interface Builder · Quartz Composer · Xcode






Discontinued

.Mac · AppleWorks · HyperCard · Mac OS (System 6, 7 · Mac OS 8, 9) · MacDraw · MacPaint · MacProject · MacTerminal · MacWrite · ResEdit













v • d • e

NeXT (1985 to 1996)





Corporate Directors:

Steve Jobs · Ross Perot · John Patrick Crecine (as of 1988)






Hardware Products:

NeXT Computer · NeXTstation · NeXTcube · NeXTdimension · NeXT MegaPixel Display · NeXT Laser Printer






Software Products:

NeXTSTEP · OpenStep · WebObjects · Interface Builder






Annual Sales: $140 million USD ( FY 1992) · Employees: 240 (1993) · Website: www.next.com (web archive)








Retrieved from "http://en.wikipedia.org/wiki/WebObjects"
Categories: Web application frameworks | Java enterprise platform | Apple Inc. software 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Deutsch
Français
Italiano
日本語
Polski
Svenska









 This page was last modified on 7 April 2009, at 12:24 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
