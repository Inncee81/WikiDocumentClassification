













Fractal art - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Fractal_art";
		var wgTitle = "Fractal art";
		var wgAction = "view";
		var wgArticleId = "48253";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 279670721;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Fractal art

From Wikipedia, the free encyclopedia

Jump to: navigation, search 




A piece of fractal art generated in Apophysis.


Fractal art is created by calculating fractal objects and representing the calculation results as still images, animations, music, or other media. Fractal art is usually created indirectly with the assistance of fractal generating software, iterating through three phases: setting parameters of appropriate fractal software, executing the possibly lengthy calculation and evaluating the product. In some cases, other graphics programs, such as Photoshop, are used to further modify the images produced. This is called post-processing.




Contents


1 Types

1.1 Escape time fractals
1.2 Lindenmayer systems and other constructions based on replacement rules
1.3 Iterated function systems
1.4 Stochastic synthesis
1.5 Animations and Zooms


2 Techniques
3 See also
4 Notes
5 References
6 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Types




A fractal image generated by Sterling Fractal by Stephen Ferguson.


Fractal objects in fractal art fall into four main categories depending on how an artist can manipulate their construction and rendering to exercise artistic control over the resulting fractal art:

[edit] Escape time fractals
Escape time fractals are defined by a recurrence relation at each point in a space (such as the complex plane). These fractals are manipulated with the choice of the formula to be iterated and its parameters, the choice of what points are iterated (usually a tiny region of the complex plane containing interesting shapes) and how they are mapped to an image, and the choice of how to compute a colour from the numbers produced by the calculations. All these components have an explicitly mathematical and nonvisual nature and they can often be very complex. Examples of this type of fractal are the Mandelbrot and Julia sets, the Lyapunov fractal, the Newton fractal, its relative, the Nova fractal, and the Burning Ship fractal. Some fractal image creation programs for this type of fractal art are Fractint, Sterling, Ultra Fractal, XaoS, ChaosPro, and Gnofract4D.
Since few people can predict the shape of a fractal created by a particular formula (except for the famous Mandelbrot Set and perhaps a few others), this kind of fractal art has a pseudo-random element: the artist selects a formula and is presented with an image, which can then be altered in various ways. The initial image acts as a seed to the process of creating fractal images. The process is analogous to starting with a photograph and then applying various effects to it using a graphics program. The most common method of changing the fractal image is zooming into it, especially into a part that looks interesting or promising.

[edit] Lindenmayer systems and other constructions based on replacement rules
Examples of this type include the Peano curve, the Hilbert curve, the Sierpinski gasket, the Menger sponge, and the Koch snowflake. Stochastic systems, where the replaced shapes and/or the choice of rules are random are very popular, especially to make simulations of trees and other natural objects.




Child's Play by Karl Scherer


Design relies on simple geometry (angles and lengths) and being able to predict the shapes resulting from a rule system. The possibility of fast or realtime previews of the result greatly facilitates small adjustements of sizes, angles and probabilities.

[edit] Iterated function systems
Iterated function systems and variants thereof have a fixed geometric replacement rule. An example is the fractal flame. Shapes and colours are determined by easily understood transformations of shrunk copies of the whole pattern, and since the transformation matrices and deformations have no particular significance, they are usually input in fractal software visually and often with a realtime preview. Another trend is manual editing, starting from a random fractal (the arbitrary parameters are many and mostly independent). Apophysis is a popular and very sophisticated example of this category.

[edit] Stochastic synthesis
Stochastic synthesis of fractal noise (typically fractal landscapes) is controlled through a few simple high level parameters and by trying different pseudorandom number generator seeds.

[edit] Animations and Zooms
Many fractal artists generate animations of fractal images rather than single still images. Fractal animations can be divided into two broad types: zooms and parameter interpolations. Some fractal animations use a combination of both techniques.
Zooms and "deep zooms" are animations that zoom into a portion of a fractal, magnifying it as the animation progresses. (Some zooms are actually zoom-outs, which start from a high magnification and zoom out to a lower magnification.) Typically, deep zoom animations will magnify the fractal by a factor of 10 to the 50th power or more. A few animations render the fractal frame-by-frame up to a magnification factor of 10 to the 80th - 120th power. Some animations magnify beyond this using techniques to interpolate between a small number of key frames.
Parameter interpolations (also called parameter iterations or rolls) change some parameter of the fractal as the animation progresses. For example, changing the starting value of Z in the Mandelbrot set function Z = Z2 + C (normally Z=0 is used as the initial value) will yield a shape that changes with time. Another example would be changing the exponent of the function, using Z = Za + C, and varying a over time.
Some fractal artists focus primarily on animations, which are far more demanding computationally than still images. A typical fractal animation lasts 1-5 minutes (some are longer), which means that thousands of individual frames must be generated to make a standard 24 frame/s or 30 frame/s video. Some well-known animations took months of computer time to render [1]. Deep-zoom animations in particular are extraordinarily demanding on computing time because they require the use of specialized software high-precision mathematical routines to progress beyond the limit of most personal computer math hardware, which limits zooming magnifications to about 10E15.[2]
Due to the extreme computational requirements of producing fractal animations, many of them are generated using techniques that are optimized to render an image with high-speed, rather than with maximum fidelity to the "pure" fractal image. There is a wide variety of "guessing" algorithms used in fractal image generating software [3] that are intended to render images as quickly as possible in order to make generating animations practical. In addition, software designed to render deep-zoom fractal animations must use specialized software arithmetic techniques generally known as bignum arithmetic in order to work with precision far beyond what is generally available in computer hardware.[4]. These techniques are an interesting branch of computer science in their own right, independent of fractal animations, and are similar to the techniques used to find large prime numbers and large lists of the digits of pi. Many other optimizations[5] are used in most well-known fractal rendering software.
Generally, complex layering techniques are used less often in fractal animations than in still image fractal art, although some multi-layer fractal animations do exist. Some types of fractals (for example, iterated function systems) do not lend themselves well to deep zooms, since they populate a wide area very sparsely and would require impractically vast computer resources even for a modest zoom.

[edit] Techniques




A 3D landscape generated with Terragen


Fractals of all four kinds have been used as the basis for digital art and animation. Starting with 2-dimensional details of fractals, such as the Mandelbrot Set, fractals have found artistic application in fields as varied as texture generation, plant growth simulation and landscape generation.
Fractals are sometimes combined with human-assisted evolutionary algorithms, either by iteratively choosing good-looking specimens in a set of random variations of a fractal artwork and producing new variations, to avoid dealing with cumbersome or unpredictable parameters, or collectively, like in the Electric Sheep project, where people use fractal flames rendered with distributed computing as their screensaver and "rate" the flame they are viewing, influencing the server, which reduces the traits of the undesirables, and increases those of the desirables to produce a computer-generated, community-created piece of art.

[edit] See also




Visual arts portal




Systems art
Fractals in wikimedia
Carlos Ginzburg


[edit] Notes


^ Ultimate Fractal Video Project
^ HPDZ.NET Technical Pages
^ FractInt drawing methods, with an explanation of "guessing" techniques
^ Fractal Extreme discussion of bignum multiplication with consideration of 64-bit architecture
^ Almond Bread discussion of fractal rendering optimizations



[edit] References

Briggs, John. Fractals. ISBN 0-671-74217-5. 
Pickover, Clifford. Computers, Pattern, Chaos and Beauty. ISBN 0-486-41709-3. 
Schroeder, Manfred. Fractals, Chaos, Power Laws. ISBN 0-7167-2357-3. 
Michael Michelitsch and Otto E. Rössler, The "Burning Ship" and Its Quasi-Julia Sets, Computers & Graphics Vol. 16, No. 4, pp. 435-438, 1992, reprinted in [9]
Michael Michelitsch and Otto E. Rössler, "A New Feature in Hénon's Map." Comput. & Graphics Vol. 13, No. 2, pp. 263-265, 1989, reprinted in [9]


[edit] External links

Fractal Art at the Open Directory Project
Art and the Mandelbrot set (in commons.wikimedia)




Retrieved from "http://en.wikipedia.org/wiki/Fractal_art"
Categories: Fractals | Computer art | Digital art 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Deutsch
Français
Galego
Italiano
日本語
Português
Svenska









 This page was last modified on 25 March 2009, at 21:29.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
