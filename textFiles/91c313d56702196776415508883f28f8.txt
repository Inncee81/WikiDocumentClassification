













DO-178B - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "DO-178B";
		var wgTitle = "DO-178B";
		var wgAction = "view";
		var wgArticleId = "2625968";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 284159726;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); DO-178B

From Wikipedia, the free encyclopedia

Jump to: navigation, search 





This article does not cite any references or sources. Please help improve this article by adding citations to reliable sources (ideally, using inline citations). Unsourced material may be challenged and removed. (September 2007)




DO-178B / ED-12B


Software Considerations in Airborne Systems and Equipment Certification


Latest Revision
December 1, 1992


Prepared by
RTCA SC-167
EUROCAE WG-12


DO-178B, Software Considerations in Airborne Systems and Equipment Certification is a guidance for software development published by RTCA, Incorporated. The standard was developed by RTCA and EUROCAE. The FAA accepts use of DO-178B as a means of certifying software in avionics[1].




Contents


1 Software level
2 Processes and documents

2.1 Planning
2.2 Development
2.3 Verification
2.4 Configuration management
2.5 Quality assurance
2.6 Certification liaison


3 Certification in Europe
4 Tools
5 Requirements Management
6 Resources
7 See Also
8 References
9 External Links
10 Industry Websites





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Software level
The required Design Assurance Level (DAL) is determined from the safety assessment process and hazard analysis by examining the effects of a failure condition in the system. The failure conditions are categorized by their effects on the aircraft, crew, and passengers.

Catastrophic - Failure may cause a crash.
Hazardous - Failure has a large negative impact on safety or performance, or reduces the ability of the crew to operate the plane due to physical distress or a higher workload, or causes serious or fatal injuries among the passengers.
Major - Failure is significant, but has a lesser impact than a Hazardous failure (for example, leads to passenger discomfort rather than injuries).
Minor - Failure is noticeable, but has a lesser impact than a Major failure (for example, causing passenger inconvenience or a routine flight plan change)
No Effect - Failure has no impact on safety, aircraft operation, or crew workload.

The number of objectives to be satisfied (with independence) is determined by the software level. In the standard, "with independence" refers to a separation of responsibilities where the person(s) who verify an objective must not be the developers of the item in question. In some cases, an automated tool may be equivalent to independence[2].



Level
Failure condition
Objectives
With independence


A
Catastrophic
66
25


B
Hazardous
65
14


C
Major
57
2


D
Minor
28
2


E
No effect
0
0




[edit] Processes and documents
Processes are intended to support the objectives, according to the software level (A through D - Level E is outside the purview of DO-178B). Processes are described as abstract areas of work in DO-178B, and it is up to the planners of a real project to define and document the specifics of how a process will be carried out. Therefore, on a real project, the actual activities that will be done in the context of a process must be shown to support the objectives. In fact, these activities are defined by the project planners as part of the Planning process.
This objective-based nature of DO-178B allows a great deal of flexibility in regard to following different styles of software life cycle. However, once an activity within a process has been defined, it is generally expected that the project respect that documented activity within its process. Furthermore, processes (and their concrete activities) must have well defined entry and exit criteria, according to DO-178B, and a project must show that it is respecting those criteria as it performs the activities in the process.
The flexible nature of DO-178B's processes and entry/exit criteria make it difficult to implement the first time, because these aspects are abstract and there is no "base set" of activities from which to work. The intention of DO-178B was not to be prescriptive. Therefore, there are many possible and acceptable ways for a real project to define these aspects. This can be difficult the first time a company attempts to develop a civil avionics system under this standard, and has created a niche market for DO-178B training and consulting.
The processes, activities and documents described here reflect naming and structure from DO-178B. This can be different in a real-life project.

[edit] Planning
Output documents from this process:

Plan for software aspects of certification (PSAC)
Software development plan (SDP)
Software verification plan (SVP)
Software configuration management plan (SCMP)
Software quality assurance plan (SQAP)
System requirements
Software requirements Specifications(SRS)
Software design standard (SDS)
Software code standard (SCS)

System requirements are typically input to the entire project.
The last 3 documents (standards) are not required for software level D.

[edit] Development
This process can be divided into sub-processes: requirements, design, code and integration.
The development process output documents:

Software requirements data (SRD)
Software design description (SDD)
Source code
Executable object code

Traceability from system requirements to all source code or executable object code is typically required (depending on software level).
Typically used software development process:

Waterfall model
Spiral model
V model


[edit] Verification
Document outputs made by this process:

Software verification cases and procedures (SVCP)
Software verification results (SVR):

Review of all requirements, design and code
Testing of executable object code
Code coverage analysis



Analysis of all code and traceability from tests and results to all requirements is typically required (depending on software level).
This process typically also involves:

Requirements based test tools
Code coverage analyser tools

Other names for tests performed in this process can be:

Unit testing
Integration testing
Black box and acceptance testing


[edit] Configuration management
Documents maintained by the configuration management process:

Software configuration index (SCI)
Software life cycle environment configuration index (SECI)

This process handles problem reports, changes and related activities. The configuration management process typically provides archive and revision identification of:

Source code development environment
Other development environments (for e.g. test/analysis tools)
Software integration tool
All other documents, software and hardware


[edit] Quality assurance
Output documents from the quality assurance process:

Software quality assurance records (SQAR)
Software conformity review (SCR)
Software accomplishment summary (SAS)

This process performs reviews and audits to show compliance with DO-178B. The interface to the certification authority is also handled by the quality assurance process.

[edit] Certification liaison
Typically a Designated Engineering Representative (DER) working for e.g. FAA in an airplane manufacturing company.

[edit] Certification in Europe

Replace FAA with EASA, JAA or CAA
Replace FAR with JAR or CS
Replace AC with AMJ


[edit] Tools
Software can automate, assist or otherwise handle or help in the DO-178B processes. All tools used for DO-178B development must be part of the certification process. Tools generating embedded code are qualified as development tools, with the same constraints as the embedded code. Tools used to verify the code (simulators, test execution tool, coverage tools, reporting tools, etc.) must be qualified as verification tools, a much lighter process consisting in a comprehensive blackbox testing of the tool .
As a consequence, one can qualify a third party tool as verification tool, but development tools must have been developed following the DO-178 process. Companies providing this kind of tools as COTS are subject to audits from the certification authorities, to which they give complete access to source code, specifications and all certification artifacts.
Outside of this scope, output of any used tool must be manually verified by humans.


A problem management tool can provide traceability for changes.
SCI and SECI can be created from logs in a revision control tool.


[edit] Requirements Management
Requirements traceability is concerned with documenting the life of a requirement. It should be possible to trace back to the origin of each requirement and every change made to the requirement should therefore be documented in order to achieve traceability. Even the use of the requirement after the implemented features have been deployed and used should be traceable. Various softwares such as

DOORS from Telelogic
REMA from Accord Software and Systems
TBreq from LDRA
CaliberRM[1] from Borland
RTMS from Qualtech Consulting, Inc.

are quite helpful for the requirements management.

[edit] Resources

FAR Part 23/25 §1301/§1309
FAR Part 27/29
AC 23/25.1309
AC 20-115B
RTCA DO-178B
FAA Order 8110.49 Software Approval Guidelines


[edit] See Also

Avionics software
ARP4761 (Safety assessment process)
ARP4754 (System development process)
DO-248B (Final Report for clarification of DO-178B)
DO-254 (similar to DO-178B, but for hardware)
Requirements management (too general to be "directly applied" to DO-178B)
IEC 61508


[edit] References


^ FAA Advisory Circular 20-115B
^ RTCA/DO-178B "Software Considerations in Airborne Systems and Equipment Certification", p.82



[edit] External Links

DO-178B Training

Official RTCA DO-178B Training
DO-178B Training From Level A FAA DER's provided by Qualtech Consulting, Inc.




DO-178B Docs & Papers

AC 25.1309-1A
AC 20-115B
FAA Order 8110.49
Software Development under DO-178B




DO-178B Compliance Management Tools and Templates

DO-178B Web-Based Tools from Qualtech Consulting, Inc.
DO-178B Document Templates from Qualtech Consulting, Inc.




DO-178B Web Sites

Birds Project - Introduction to DO-178B
Inside Functional Safety - Technical magazine focusing on functional safety




DO-178B FAA Designated Engineering Representatives (DER's)

FAA DER's With Software (DO-178B) Delegation from Qualtech Consulting, Inc.




[edit] Industry Websites

DO-178 Industry Group (www.do178site.com) is the world’s largest group of avionics companies and DO-178 avionics product and services providers
DO-178 Blogs from www.do178blog.com DO-178 Blogs for sharing information among avionics engineers and services providers.
DO-178B guidance from the Avionics Standardisation Committee (ASSC) Training and guidance documentation on DO-178B Development.




Retrieved from "http://en.wikipedia.org/wiki/DO-178B"
Categories: Avionics | Safety | Embedded systems | Software development | RTCA standardsHidden categories: Articles lacking sources from September 2007 | All articles lacking sources 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Deutsch
Français
한국어









 This page was last modified on 16 April 2009, at 06:40 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
