













Qt (toolkit) - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Qt_(toolkit)";
		var wgTitle = "Qt (toolkit)";
		var wgAction = "view";
		var wgArticleId = "25204";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 282138906;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
/*<![CDATA[*/
.source-cpp {line-height: normal;}
.source-cpp li, .source-cpp pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for cpp
 * CSS class: source-cpp, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-cpp .de1, .source-cpp .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-cpp  {}
.source-cpp .head {}
.source-cpp .foot {}
.source-cpp .imp {font-weight: bold; color: red;}
.source-cpp .ln-xtra {color: #cc0; background-color: #ffc;}
.source-cpp li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-cpp li.li2 {font-weight: bold;}
.source-cpp .kw1 {color: #0000ff;}
.source-cpp .kw2 {color: #0000ff;}
.source-cpp .kw3 {color: #0000dd;}
.source-cpp .kw4 {color: #0000ff;}
.source-cpp .co1 {color: #ff0000;}
.source-cpp .co2 {color: #339900;}
.source-cpp .coMULTI {color: #ff0000; font-style: italic;}
.source-cpp .es0 {color: #666666; font-weight: bold;}
.source-cpp .br0 {color: #000000;}
.source-cpp .st0 {color: #666666;}
.source-cpp .nu0 {color: #0000dd;}
.source-cpp .me1 {color: #00eeff;}
.source-cpp .me2 {color: #00eeff;}

/*]]>*/

/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
 <!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Qt (toolkit)

From Wikipedia, the free encyclopedia

Jump to: navigation, search 

Qt





The Qt designer used for GUI designing


Developed by
Qt Software (formerly known as Trolltech)


Latest release
4.5 / 2009-3-3; 35 days ago


Written in
C++


Operating system
Cross-platform


Type
Widget toolkit


License
GNU LGPL
GNU GPL with Qt special exception
Q Public License
Proprietary


Website
http://qtsoftware.com/


Qt (pronounced as the English word "cute"[1]) is a cross-platform application development framework, widely used for the development of GUI programs (in which case it is known as a widget toolkit), and also used for developing non-GUI programs such as console tools and servers. Qt is most notably used in KDE, Opera, Google Earth, Skype, Qt Extended, Adobe Photoshop Album, VirtualBox and OPIE. It is produced by the Norwegian company Qt Software, formerly known as Trolltech, a wholly owned subsidiary of Nokia since June 17, 2008.[2]
Qt uses C++ with several non-standard extensions implemented by an additional pre-processor that generates standard C++ code before compilation. Qt can also be used in several other programming languages; via language bindings. It runs on all major platforms, and has extensive internationalization support. Non-GUI features include SQL database access, XML parsing, thread management, network support and a unified cross-platform API for file handling.
Distributed under the terms of the GNU Lesser General Public License (among others), Qt is free and open source software.




Contents


1 Varieties
2 License
3 Current

3.1 Bindings
3.2 Migration tools


4 History

4.1 Training and Consulting Partners


5 Design

5.1 Use of native UI-rendering APIs
5.2 Meta object compiler

5.2.1 Criticism


5.3 QtScript ECMAScript interpreter
5.4 Qt hello world
5.5 Compiling and executing Qt hello world program


6 Applications built using Qt
7 See also
8 References
9 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Varieties
Qt is released by Trolltech on the following platforms:

Qt/X11 – Qt for X Window System (Unix / Linux)
Qt/Mac – Qt for Apple Mac OS X
Qt/Windows – Qt for Microsoft Windows
Qt/Embedded – Qt for embedded platforms (PDA, Smartphone, etc.)
Qt/WinCE – Qt for Windows CE[3]
Qt Jambi – Qt for Java
Qt Extended – Application platform for Embedded Linux-based mobile computing devices (Discontinued)

Qt software on October 20, 2008 announced a version of Qt on S60 platform.[4][5][6][7][8][9][10][11]
There are four editions of Qt available on each of these platforms, namely:

Qt Console – edition for non-GUI development
Qt Desktop Light – entry level GUI edition, stripped of network and database support
Qt Desktop – complete edition
Qt Open Source Edition – "complete" edition, with some exceptions,[12] for free software/open source developers


[edit] License
Until version 1.45, source code for Qt was released under the FreeQt license — which was viewed as not compliant with the open source principle by the Open Source Initiative and the free software definition by Free Software Foundation, because while the source was available it did not allow the redistribution of modified versions.
With the release of version 2.0 of the toolkit, the license was changed to the Q Public License (QPL), a free software license but one regarded by the Free Software Foundation as incompatible with the GPL. Compromises were sought between KDE and Trolltech whereby Qt would not be able to fall under a more restrictive license than the QPL, even if Trolltech were bought out or went bankrupt. This led to the creation of the KDE Free Qt foundation, which guarantees that Qt would fall under a BSD-style license should no free software/open source version of Qt be released during 12 months.
Later Qt became available under a dual license, the GPL v2 or v3 with special exception[13] and a proprietary commercial license on all supported platforms. The commercial license allows the final application to be licensed under various free software/open source licenses such as the LGPL or the Artistic License, or a proprietary software license.
As announced on January 14, 2009, Qt version 4.5 adds another option, the LGPL, [14] which should make Qt more suitable for non-GPL open source projects and for commercial users.[15]
All editions support a wide range of compilers, including the GCC C++ compiler and the Visual Studio suite.

[edit] Current
Trolltech released Qt 4 on June 28, 2005 and introduced five new technologies in the framework:

Tulip A set of template container classes.
Interview A model/view architecture for item views.
Arthur A 2D painting framework.
Scribe A Unicode text renderer with a public API for performing low-level text layout.
MainWindow A modern action-based main window, toolbar, menu, and docking architecture.

Qt 4.1, released on December 19, 2005, introduced integrated SVG Tiny support, a PDF backend to Qt's printing system, and a few other features.
Qt 4.2, released on October 4, 2006, introduced Windows Vista support, introduced native CSS support for widget styling, as well as the QGraphicsView framework for efficient rendering of thousands of 2D objects onscreen, to replace Qt 3.x's QCanvas class.
Qt 4.3, released on May 30, 2007, improved Windows Vista support, improved OpenGL engine, SVG file generation, added QtScript (ECMAScript scripting engine based on QSA).[16]
Qt 4.4, released on May 6, 2008. Features included are improved multimedia support using Phonon, enhanced XML support, a concurrency framework to ease the development of multi-threaded applications, an IPC framework with a focus on shared memory, and WebKit integration.
Qt 4.5, released on March 3, 2009. Major included features are QtCreator, improved graphical engine, improved integration with WebKit, OpenDocument Format read support and new licensing options. Mac OS X Cocoa Framework support.

[edit] Bindings
Qt has a range of bindings for various languages which implementing some or all of widget set.

PyQt -- Binding for Python, has an associated text (ISBN 0132354187)
Qyoto -- A binding for C# or other .NET languages. There is an additional set of bindings Kimono for KDE
Korundum -- Binding for Ruby
Qt Jambi -- A complete port to Java (will be defunct 3/10)
QtAda -- Binding for Ada
FreePascal QT4 -- Bindings for Pascal
Perl Qt -- Bindings for Perl
PHP Qt -- Bindings for PHP
Qt Haskell -- Bindings for Haskell


[edit] Migration tools

Qt/MFC Migration Framework -- For migration of Windows Microsoft Foundation Class Library based code
Qt Motif extension -- For migration of Motif applications


[edit] History
Haavard Nord and Eirik Chambe-Eng (the original developers of Qt and the CEO and President, respectively, of Trolltech) began development of "Qt" in 1991, three years before the company was incorporated as Quasar Technologies, then changed the name to Troll Tech, and then to Trolltech.
The toolkit was called Qt because the letter Q looked appealing in Haavard's Emacs font, and "t" was inspired by Xt, the X toolkit.[17]
Controversy erupted around 1998 when it became clear that KDE was going to become one of the leading desktop environments for Linux. As KDE was based on Qt, many people in the free software movement worried that an essential piece of one of their major operating systems would be proprietary.
This gave rise to two efforts: the Harmony toolkit, which sought to duplicate the Qt Toolkit under a free software license, and the GNOME desktop, which intended to supplant KDE entirely. The GNOME Desktop uses the GTK+ toolkit, which was originally written for the GIMP, and primarily uses the C programming language.
The first two versions of Qt had only two flavours: Qt/X11 for Unix and Qt/Windows for the Windows platform. The Windows platform was only available under the proprietary license which meant free/open source applications written in Qt for X11 could not be ported to Windows without purchasing the QPL edition. In the end of 2001, Trolltech released Qt 3.0 which added support for the Mac OS X platform. The Mac OS X support was available only in the proprietary license, until June 2003, where Trolltech released Qt 3.2 with Mac OS X support available under the GPL.
In 2002 members of the KDE on Cygwin project began porting the GPL licensed Qt/X11 code base to Windows.[18] This was in response to Trolltech's refusal to license Qt/Windows under the GPL on the grounds that Windows was not a free software/open source platform.[19][20] The project achieved reasonable success although it never reached production quality.
This was resolved when Trolltech released Qt/Windows 4 under the GPL in June 2005. Qt 4 now supports the same set of platforms in the free software/open source editions as in the proprietary edition, so it is now possible to create GPL-licensed free/open source applications using Qt on all supported platforms.
In June 2008 Nokia acquired Trolltech ASA to enable the acceleration of their cross-platform software strategy for mobile devices and desktop applications, and to develop its Internet services business. On September 29, 2008 Nokia renamed Trolltech to Qt Software.

[edit] Training and Consulting Partners


Region
Company


 North America
ICS, KDAB,SCS


 Europe
BasysKom, Digia, KDAB


 Japan
SRA International


 Poland
ARISE


 India
GTE



[edit] Design
The innovation of Qt when it was first released relied on a few key concepts.

[edit] Use of native UI-rendering APIs
Qt used to emulate the native look of its intended platforms, which occasionally led to slight discrepancies where that emulation was imperfect. Recent versions of Qt use the native APIs of the different platforms to draw the Qt controls, and so do not suffer from such issues.[21]

[edit] Meta object compiler
Known as the moc, this is a tool that is run on the sources of a Qt program prior to compiling it. The tool will generate C++ code with "Meta Information" about the classes used in the program. This meta information is used by Qt to provide programming features not available natively in C++: The signal/slot system (which has also been implemented in native C++ by other parties), introspection and asynchronous function calls.

[edit] Criticism
The use of an additional tool has been criticized for making Qt programming different from pure C++ programming. In particular, the choice of an implementation based on macros has been criticized for its absence of type safety and pollution of the namespace.[1] Trolltech viewed this as a necessary trade-off to provide introspection and the dynamically generated slot and signal mechanism.[2]

[edit] QtScript ECMAScript interpreter
Qt Script for Applications is a cross-platform toolkit that allows developers to make their Qt/C++ applications scriptable using an interpreted scripting language: Qt Script (based on ECMAScript/JavaScript).
From Qt 4.3.0 onward, the scripting API [22], which is based on QSA [23] is integrated as a core part of Qt and is no longer a separate library.

[edit] Qt hello world


#include <QtGui/QApplication>
#include <QtGui/QLabel>
 
int main(int argc, char *argv[])
{
    QApplication app(argc, argv);
    QLabel label("Hello, world!");
    label.show();
    return app.exec();
}



[edit] Compiling and executing Qt hello world program
1. Create a folder named Hello
2. Copy paste the above program as Hello.cpp in folder Hello
3. At Hello folder run

 a. qmake -project
 b. qmake 
 c. make/gmake/nmake - as needed by OS and your compiler setups

4. Exeute ./release/Hello (Or release/Hello.exe in Windows)

[edit] Applications built using Qt
Popular examples of applications which use Qt include:

Adobe Photoshop Album, an image organizing application [24]
Avidemux, a Free Software program designed for multi-purpose video editing and processing, has a Qt frontend since version 2.4
Doxygen, an API document generator
Freemat, a free numerical computing environment and programming language
Gadu-Gadu, a popular Polish instant messaging client
Google Earth, a 3D map program
KDE, a popular desktop environment for Unix-like operating systems

KDELibs, a library base for many KDE applications including Amarok, K3b, KDevelop and KOffice


Last.fm Player, the desktop client for the popular internet radio and music community website.
Launchy, the open source keystroke launcher for Windows
LMMS, a free open source sequencer and software synthesis package
LyX, a GUI frontend to LaTeX
Mathematica, Linux version uses Qt for the GUI front-end
Mixxx, cross-platform open source DJ mixing software
Motorola A760, uses Qt/Embedded in its UI
MythTV, an open source digital video recorder
Opera, a web browser (only Linux and *BSD builds)
Psi, an instant messaging client for XMPP
Quantum GIS, a free desktop GIS
Scribus, a desktop publishing application
Skype, a P2P VOIP application
TeamSpeak, cross-platform voice communication software
Tlen.pl, a popular Polish instant messaging client
TOra, a database administration tool[25]
VirtualBox, a PC virtualization application
VisIt, an interactive parallel visualization tool for viewing scientific data
VisTrails, a scientific workflow management and visualization system
VLC Media Player, an open source media player, Qt frontend since version 0.9
Xconfig, Linux Kernel configuration tool


[edit] See also




Free software portal




FLTK
GTK+
Widget toolkit
wxWidgets
List of widget toolkits


[edit] References


^ http://video.google.com/videoplay?docid=-1435432529445611697
^ Nokia acquired Trolltech
^ Qt for Windows CE Technology Preview Download — Trolltech
^ Nokia - Nokia enriches application development with Qt for S60
^ Qt for S60 - Forum Nokia Wiki
^ Symbian - Nokia enriches application development with Qt for S60
^ All About Symbian - Nokia Announce Technology preview of Qt on S60
^ ars technica - Nokia releases first Qt preview for Symbian S60
^ Qt Labs Blogs - We’re porting Qt to S60!
^ Qt Software - Technology Preview - Qt for S60
^ Qt Sftware - How to get Qt running on your S60 phone
^ The ActiveQt class for ActiveX on Windows, for example, is not available in the Open Source Edition
^ Nokia Corporation Qt GPL Exception Version 1.3
^ LGPL License Option Added to Qt January 14, 2009
^ ICS Whitepaper on the Implications of Qt under LGPL for Commercial and Government users
^ Trolltech: What’s New in Qt 4.3
^ "A Brief History of Qt". http://safari.oreilly.com/0131872494/pref04. Retrieved on 2007-12-20. 
^ Q../Windows Edition history, 5 June 2006
^ E-mail to the kde-cygwin mailing list by Chris January, 4 February 2003
^ Qt Non-commercial FAQ, 5 October 2003
^ Products - Qt – A cross-platform application and UI framework 'Qt uses the native graphics APIs of each platform it supports, taking full advantage of system resources and ensuring that applications have native look and feel.'
^ Qt 4.3: QtScript Module
^ QSA 1.2: Qt Script for Applications
^ Adobe Photoshop Elements® Album – Qt Software
^ TOra uses the Qt library



[edit] External links

Qt Homepage
The GPL Versus Qt "War" (19.2.3) (regarding Qt licensing from before version 2.2)
O'Reilly Programming with Qt (book in html)
An Introduction to Design Patterns in C++ with Qt4. Excerpts from a Prentice Hall book teaching C++ programming from the ground up, using Qt 4.1
Qt Creator - new open-source cross-platform integrated development environment for the Qt application framework








v • d • e

KDE





Series

KDE 1 · KDE 2 · KDE 3 · KDE 4






Core technologies

Akonadi · D-Bus · Decibel · Flake · KJS · KDOM · KHTML · KIO · Kiosk · KPart · Kross · KSVG · KWin · NEPOMUK · Oxygen · Phonon · Plasma · Qt · Solid · Sonnet · Soprano · Strigi · ThreadWeaver · WebKit · XMLGUI






Applications

Akregator · Amarok · digiKam · Dolphin · Dragon Player · Gwenview · JuK · K3b · Kaffeine · Kate · Kdenlive · KDevelop · KGet · KMess · KOffice · Konqueror · Konsole · Kontact · Kopete · KTorrent · Okular






Packaging

KDELibs · KDEBase · Accessibility · Administration · Education · Extragear · Games · Graphics · PIM






Related topics

Qt Software · Freedesktop.org · GNOME · Xfce · CDE













v • d • e

List of Widget toolkits





Low-level

Macintosh Toolbox/Carbon · Windows API · Intrinsics · Intuition · Xlib






High-level





On Amiga OS


BOOPSI · Magic User Interface · Zune · ReAction GUI







On Mac OS
and Mac OS X


Cocoa · MacApp · MacZoop · PowerPlant







On Microsoft
Windows


Microsoft Foundation Class Library · Windows Template Library · SmartWin++ · Object Windows Library · Visual Component Library · Windows Forms · Windows Presentation Foundation







On Unix,
under the X


Xaw · Motif · LessTif · InterViews







Cross-
platform






Based on
Flash


Adobe Flex · Gnash · SWF2EXE Software







Based on XML,
AJAX or SVG


GladeXML · XAML · XML User Interface · XUL · CougarXML · Rialto Toolkit · Dojo Toolkit · jQuery · script.aculo.us · Echo · qooxdoo · MooTools · Google Web Toolkit · Yahoo! UI Library · Ext · Pyjamas







Based on Java


Abstract Window Toolkit · Swing · Standard Widget Toolkit







Based on
C or C++


Agar · CEGUI · Component Library for Cross Platform · dlib C++ Library · FLTK · FOX toolkit · OpenGL User Interface Library · GTK+ · IUP · Juce · Qt · Tk · TnFOX · Visual Component Framework · wxWidgets · YAAF · XForms · XVT







Based on
Pascal


IP Pascal · Lazarus · fpGUI







Based on
Objective C


GNUstep















Retrieved from "http://en.wikipedia.org/wiki/Qt_(toolkit)"
Categories: KDE | Qt | Widget toolkits | X-based libraries | Free development toolkits and libraries | Embedded Linux | Free software programmed in C++ | Formerly proprietary software | Application programming interfaces | Cross-platform software | S60 (software platform) | C++ libraries 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


العربية
Català
Česky
Deutsch
Español
Français
한국어
Bahasa Indonesia
Italiano
עברית
Lietuvių
Magyar
Nederlands
日本語
‪Norsk (bokmål)‬
‪Norsk (nynorsk)‬
Polski
Português
Română
Русский
Suomi
Svenska
ไทย
Türkçe
Українська
Tiếng Việt
中文









 This page was last modified on 6 April 2009, at 16:38.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
