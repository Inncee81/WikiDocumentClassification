













XML pipeline - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "XML_pipeline";
		var wgTitle = "XML pipeline";
		var wgAction = "view";
		var wgArticleId = "261151";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 278166568;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); XML pipeline

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
In computer science, an XML Pipeline is formed when XML (Extensible Markup Language) processes, sometimes called XML transformations, are connected together.
For instance, given two transformations T1 and T2, the two can be connected together so that an input XML document is transformed by T1 and then the output of T1 is fed as input document to T2. Simple pipelines like the one described above are called linear; a single input document always goes through the same sequence of transformations to produce a single output document.




Contents


1 Linear Operations
2 Non-linear
3 XML Pipeline languages
4 Pipe Granularity
5 Standardization
6 XML Pipeline History
7 See also
8 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Linear Operations
Examples of operations on linear pipeline may include:

Identity transform - makes a verbatim copy of its input to the output
Transform - execute a transform on the input file using a specified XSLT file. Version 1.0 or 2.0 should be specified.
Rename - renames elements or attributes without modifying the content
Replace - replaces elements or attributes
Insert - adds a new data element to the output stream at a specified point
Delete - removes an element or attribute (also known as pruning the input tree)
Split - take a single XML document and split it into distinct documents
Wrap - wraps elements with additional elements
Reorder - changes the order of elements


[edit] Non-linear
Non-linear operations on pipelines may include:

Conditionals — where a given transformation is executed if a condition is met while another transformation is executed otherwise
Loops — where a transformation is executed on each node of a node set selected from a document or a transformation is executed until a condition evaluates to false
Tees — where a document is fed to multiple transformations potentially happening in parallel
Aggregations — where multiple documents are aggregated into a single document
Exception Handling — where failures in processing can result an alternate pipeline being processed

Some standards also categorize transformation as macro (changes impacting an entire file) or micro (impacting only an element or attribute)

[edit] XML Pipeline languages
XML pipeline languages are used to define pipelines. A program written with an XML pipeline language is implemented by software known as an XML pipeline engine, which creates processes, connects them together and finally executes the pipeline. Existing XML pipeline languages include:

XProc: An XML Pipeline Language is currently a W3C Working Draft [1]
W3C XML Pipeline Definition Language is specified in a W3C Note and Sun provides an implementation.[citation needed]
W3C XML Pipeline Language (XPL) Version 1.0 (Draft) [2] [3] is specified in a W3C Submission and a component of Orbeon Presentation Server OPS (now called Orbeon Forms). This specification provides an implementation of an earlier version of the language. XPL allows the declaration of complex pipelines with conditionals, loops, tees, aggregations, and sub-pipelines.
Cocoon sitemaps allow, among other functionality, the declaration of XML pipelines. Cocoon sitemaps are one of the earliest implementations of the concept of XML pipeline.
smallx XML Pipelines are used by the smallx project.
ServingXML defines a vocabulary for expressing flat-XML, XML-flat, flat-flat, and XML-XML transformations in pipelines.
PolarLake Circuit Markup Language used by PolarLake's runtime to define XML pipelines. Circuits are collections of paths through which fragments of XML stream (usually as SAX or DOM events). Components are placed on paths to interact with the stream (and/or the outside world) in a low latency process.
xmlsh is a scripting language based on the unix shells which natively supports xml and text pipelines [4]


[edit] Pipe Granularity
Different XML Pipeline implementations support different granularity of flow.

Document: Whole documents flow through the pipe as atomic units. A document can only be in one place at a time. Though usually multiple documents may be in the pipe at once.
Event: Element/Text nodes events may flow through different paths. A document may be concurrently flowing through many components at the same time.


[edit] Standardization
There is currently no widely used standard for XML pipeline languages. However the W3C XProc standard is a Candidate Recommendation stage as of November 2008 [5] [6].

[edit] XML Pipeline History

1972 Douglas McIlroy of Bell Laboratories adds the pipe operator to the UNIX command shell. This allows the output from one shell program to go directly into input of another shell program without going to disk. This allowed programs such as the UNIX awk and sed to be specialized yet work together [7] [8]. For more details see Pipeline (Unix).
1993 Sean McGrath developed a C++ toolkit for SGML processing [9].
1998 Stefano Mazzocchi releases the first version of Apache Cocoon, one of the first software programs to use XML pipelines.
1998 PolarLake build XML Operating System, which includes XML Pipelining.
2002 Notes submitted by Norman Walsh and Eve Maler from Sun Microsystems, as well as a W3C Submission submitted in 2005 by Erik Bruchez and Alessandro Vernet from Orbeon, were important steps toward spawning an actual standardization effort. While neither submission directly became a W3C recommendation, they were considered key sources of inspiration for the W3C XML Processing Working Group.
September 2005 W3C XML Processing Working Group started. The task of this working group was to create a specification for an XML pipelining language.


[edit] See also

Apache Cocoon
Identity transform
NetKernel
Pipeline (Unix)
W3C recommendation
XSLT


[edit] External links

W3C XML Pipeline Definition Language Note
W3C XML Pipeline Language (XPL) Version 1.0 (Draft) Submission
W3C XML Processing Model Working Group
Oracle's XML Pipeline Definition Language Controller Implementation Part of XML Developer's kit, no individual download
Cocoon sitemap
NetKernel XML Pipelines
Managing Complex Document Generation through Pipelining
XML Pipeline Language (XPL) Documentation
SXPipe
PolarLake PolarLake XML circuits
smallx
ServingXML
XML Pipeline Implementation from Stylus Studio - This program allows XML transforms to be chained together along with other operations on XML files such as validation and HTML tidy.
Norman Walsh's XProc web site - Norman Walsh is the chair of the W3C XProc standards committee.
yax - an XProc Implementation currently with commandline and Apache ant interface
Yahoo! Pipes let's users create multi-source data mashups in a web-based visual environment
xmlsh A shell for manipulating xml based on the unix shells. An xproc implementation using xmlsh is in progress.
[10] How to implement XML Pipeline in XSLT




Retrieved from "http://en.wikipedia.org/wiki/XML_pipeline"
Categories: XML-based standards | Inter-process communicationHidden categories: All articles with unsourced statements | Articles with unsourced statements since October 2007 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Deutsch
Français
Українська









 This page was last modified on 18 March 2009, at 19:06 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
