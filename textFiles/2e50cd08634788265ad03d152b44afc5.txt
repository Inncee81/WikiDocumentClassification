













Interpreted language - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Interpreted_language";
		var wgTitle = "Interpreted language";
		var wgAction = "view";
		var wgArticleId = "15089";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281549298;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Interpreted language

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
In computer programming an interpreted language is a programming language whose implementation often takes the form of an interpreter. Theoretically, any language may be compiled or interpreted, so this designation is applied purely because of common implementation practice and not some underlying property of a language.
Many languages have been implemented using both compilers and interpreters, including Lisp, Pascal, C, BASIC, and Python. While Java is translated to a form that is intended to be interpreted, just-in-time compilation is often used to generate machine code. The Microsoft .NET languages compile to CIL from which is often then compiled into native machine code; however there is a virtual machine capable of interpreting CIL. Many Lisp implementations can freely mix interpreted and compiled code. These implementations also use a compiler that can translate arbitrary source code at runtime to machine code.




Contents


1 Historical background of interpreted/compiled
2 Language features suiting interpreters well
3 List of frequently interpreted languages

3.1 Languages usually compiled to a virtual machine code


4 See also





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Historical background of interpreted/compiled
In the early days of computing, language design was heavily influenced by the decision to use compilation or interpretation as a mode of execution. For example, some compiled languages require that programs must explicitly state the data-type of a variable at the time it is declared or first used while some interpreted languages take advantage of the dynamic aspects of interpretation to make such declarations unnecessary. For example, Smalltalk—which was designed to be interpreted at run-time—allows generic Objects to dynamically interact with each other.
Initially, interpreted languages were compiled line-by-line; that is, each line was compiled as it was about to be executed, and if a loop or subroutine caused certain lines to be executed multiple times, they would be recompiled every time. This has become much less common. Most so-called interpreted languages use an intermediate representation, which combines both compilation and interpretation. In this case, a compiler may output some form of bytecode or threaded code, which is then executed by a bytecode interpreter. Examples include Python, and Java. Similarly, Ruby uses an abstract syntax tree as intermediate representation. The intermediate representation can be compiled once and for all (as in Java), each time before execution (as in Perl or Ruby), or each time a change in the source is detected before execution (as in Python).

[edit] Language features suiting interpreters well
Interpreted languages still give programs certain extra flexibility over compiled languages. Features that are easier to implement in interpreters than in compilers include (but are not limited to):

platform independence (Java's byte code, for example)
reflective usage of the evaluator (e.g. a first-order eval function)
dynamic typing
ease of debugging (it is easier to get source code information in interpreted languages)
small program size (since interpreted languages have flexibility to choose instruction code)[citation needed]
object polymorphism
dynamic scoping


[edit] List of frequently interpreted languages

APL A vector oriented language using an unusual character set.
ASP Web page scripting language
BASIC (although the original version, Dartmouth BASIC, was compiled, as are many modern BASICs)

thinBasic


COBOL
ECMAScript

ActionScript
DMDScript
E4X
JavaScript (first named Mocha, then LiveScript)
JScript


Equation manipulation and solving systems

GNU Octave
IDL (programming language)
Mathematica
MATLAB


Euphoria Interpreted or compiled.
Forth (traditionally threaded interpreted)
Inform
J An APL variant in which tacit definition provides some of the benefits of compilation.
Lava
PHP
Lisp

Scheme


Logo
MUMPS (traditionally interpreted, modern versions compiled)
R (programming language)
Ruby

JRuby( A Java implementation of Ruby)


Smalltalk (pure object-orientation, originally from Xerox PARC, often supports debugging across machines.)

Bistro
Dolphin Smalltalk
F-Script
Little Smalltalk
Squeak
VisualAge
VisualWorks


Scripting languages
Spreadsheets

Excel stores formulas, interprets them from a tokenized format.


S (programming language)
Tcl

XOTcl




[edit] Languages usually compiled to a virtual machine code
Many interpreted languages are first compiled to some form of virtual machine code, which is then either interpreted or compiled at runtime to native code.

Java (frequently translated to bytecode, but can also be compiled to a native binary using an AOT compiler)

Groovy
Join Java
ColdFusion


Lua
.NET Framework languages (translated to CIL code)

C#
Visual Basic .NET


Perl
Pike
Python


Visual FoxPro


[edit] See also

Compiled language
Scripting language




Retrieved from "http://en.wikipedia.org/wiki/Interpreted_language"
Categories: Programming language classificationHidden categories: All articles with unsourced statements | Articles with unsourced statements since March 2009 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


العربية
Català
Deutsch
Español
Français
Polski
Português
Русский
Svenska
Türkçe









 This page was last modified on 3 April 2009, at 18:50.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
