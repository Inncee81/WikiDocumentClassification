













CAPTCHA - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = "Captcha";
		var wgNamespaceNumber = 0;
		var wgPageName = "CAPTCHA";
		var wgTitle = "CAPTCHA";
		var wgAction = "view";
		var wgArticleId = "230834";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 280910827;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); CAPTCHA

From Wikipedia, the free encyclopedia

Jump to: navigation, search 




Early CAPTCHAs such as these, generated by the EZ-Gimpy program, were used on Yahoo!. However, technology was developed to read this type of CAPTCHA[1]






A modern CAPTCHA, rather than attempting to create a distorted background and high levels of warping on the text, might focus on making segmentation difficult by adding an angled line






Another way to make segmentation difficult is to crowd symbols together. This, though, is often very difficult for humans to read






A newer type of CAPTCHA which uses generated images of 3D objects randomly rotated [2].


A CAPTCHA or Captcha (IPA: /ˈkæptʃə/) is a type of challenge-response test used in computing to ensure that the response is not generated by a computer. The process usually involves one computer (a server) asking a user to complete a simple test which the computer is able to generate and grade. Because other computers are unable to solve the CAPTCHA, any user entering a correct solution is presumed to be human. Thus, it is sometimes described as a reverse Turing test, because it is administered by a machine and targeted to a human, in contrast to the standard Turing test that is typically administered by a human and targeted to a machine. A common type of CAPTCHA requires that the user type letters or digits from a distorted image that appears on the screen.
The term "CAPTCHA" (based upon the word capture) was coined in 2000 by Luis von Ahn, Manuel Blum, Nicholas J. Hopper (all of Carnegie Mellon University), and John Langford (then of IBM). It is a contrived acronym for "Completely Automated Public Turing test to tell Computers and Humans Apart." Carnegie Mellon University attempted to trademark the term,[3] but the trademark application was abandoned on 21 April 2008.[4] Currently, CAPTCHA creators recommend use of reCAPTCHA as the official implementation.[5]




Contents


1 Characteristics
2 History
3 Applications
4 Accessibility

4.1 Attempts at more accessible CAPTCHAs


5 Circumvention

5.1 Insecure implementation
5.2 Computer character recognition
5.3 Human solvers
5.4 Legal concerns


6 Image-recognition CAPTCHAs
7 Collateral benefits
8 See also
9 References
10 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Characteristics
A CAPTCHA system is a means of automatically generating new challenges which:

Current software is unable to solve accurately.
Most humans can solve

The visually disabled who rely on screen reading technology cannot solve a visual CAPTCHA, thus limiting or preventing their access to some sites (see below for accessibility considerations)


Does not rely on the type of CAPTCHA being new to the attacker.

Although a checkbox "check here if you are not a bot" might serve to distinguish between humans and computers, it is not a CAPTCHA because it relies on the fact that an attacker has not spent effort to break that specific form.
Withholding of the algorithm can increase the integrity of a limited set of systems, as in the practice of security through obscurity. The most important factor in deciding whether an algorithm should be made open or restricted is the size of the system. Although an algorithm which survives scrutiny by security experts may be assumed to be more conceptually secure than an unevaluated algorithm, an unevaluated algorithm specific to a very limited set of systems is always of less interest to those engaging in automated abuse. Breaking a CAPTCHA generally requires some effort specific to that particular CAPTCHA implementation, and an abuser may decide that the benefit granted by automated bypass is negated by the effort required to engage in abuse of that system in the first place.

[edit] History
Moni Naor was the first person to theorize a list of ways to verify that a request comes from a human and not a bot.[6] Primitive CAPTCHAs seem to have been developed in 1997 by Andrei Broder, Martin Abadi, Krishna Bharat, and Mark Lillibridge to prevent bots from adding URLs to their search engine.[7] In order to make the images resistant to OCR (Optical Character Recognition), the team simulated situations that scanner manuals claimed resulted in bad OCR. In 2000, Luis von Ahn and Manuel Blum coined the term 'CAPTCHA', improved and publicized the notion, which included any program that can distinguish humans from computers. They invented multiple examples of CAPTCHAs, including the first CAPTCHAs to be widely used, which were those adopted by Yahoo!.

[edit] Applications
CAPTCHAs are used to prevent automated software from performing actions which degrade the quality of service of a given system, whether due to abuse or resource expenditure. CAPTCHAs can be deployed to protect systems vulnerable to e-mail spam, such as the webmail services of Gmail, Hotmail, and Yahoo! Mail. CAPTCHAs are also used on Wikipedia for anonymous or new users who attempt to add links.
CAPTCHAs have found active use in stopping automated posting to blogs, forums and wikis, whether as a result of commercial promotion, or harassment and vandalism. CAPTCHAs also serve an important function in rate limiting, as automated usage of a service might be desirable until such usage is done in excess, and to the detriment of human users. In such a case, a CAPTCHA can enforce automated usage policies as set by the administrator when certain usage metrics exceed a given threshold. The article rating systems used by many news web sites are another example of an online facility vulnerable to manipulation by automated software.[8]

[edit] Accessibility
See also: Web accessibility
Because CAPTCHAs rely on visual perception, users unable to view a CAPTCHA (for example, due to a disability or because it is difficult to read) will be unable to perform the task protected by a CAPTCHA. Therefore, sites implementing CAPTCHAs may provide an audio version of the CAPTCHA in addition to the visual method. The official CAPTCHA site recommends providing an audio CAPTCHA for accessibility reasons.

[edit] Attempts at more accessible CAPTCHAs
Even an audio and visual CAPTCHA will require manual intervention for some users, such as those who have visual disabilities and also are deaf. There have been various attempts at creating CAPTCHAs that are more accessible. Attempts include the use of JavaScript, mathematical questions ("what is 1+1"), or "common sense" questions ("what color is the sky on a clear day"). However, none of these attempts meet both the criteria of being able to be automatically generated and not relying on the type of CAPTCHA being new to the attacker. Therefore, they are not CAPTCHAs and do not provide the protection that true CAPTCHAs provide.

[edit] Circumvention
There are a few approaches to defeating CAPTCHAs:

exploiting bugs in the implementation that allow the attacker to completely bypass the CAPTCHA,
improving character recognition software, or
using cheap human labor to process the tests.


[edit] Insecure implementation
Like any security system, design flaws in a system implementation can prevent the theoretical security from being realized. Many CAPTCHA implementations, especially those which have not been designed and reviewed by experts in the fields of security, are prone to common attacks.
Some CAPTCHA protection systems can be bypassed without using OCR simply by re-using the session ID of a known CAPTCHA image. A correctly designed CAPTCHA does not allow multiple solution attempts at one CAPTCHA. This prevents the reuse of a correct CAPTCHA solution or making a second guess after an incorrect OCR attempt.[9] Other CAPTCHA implementations use a hash (such as an MD5 hash) of the solution as a key passed to the client to validate the CAPTCHA. Often the CAPTCHA is of small enough size that this hash could be cracked.[10] Further, the hash could assist an OCR based attempt. A more secure scheme would use an HMAC. Finally, some implementations use only a small fixed pool of CAPTCHA images. Eventually, when enough CAPTCHA image solutions have been collected by an attacker over a period of time, the CAPTCHA can be broken by simply looking up solutions in a table, based on a hash of the challenge image.

[edit] Computer character recognition
A number of research projects have attempted (often with success) to beat visual CAPTCHAs by creating programs that contain the following functionality:

Pre-processing: Removal of background clutter and noise.
Segmentation: Splitting the image into regions which each contain a single character.
Classification: Identifying the character in each region.

Steps 1 and 3 are easy tasks for computers.[11] The only step where humans still outperform computers is segmentation. If the background clutter consists of shapes similar to letter shapes, and the letters are connected by this clutter, the segmentation becomes nearly impossible with current software. Hence, an effective CAPTCHA should focus on the segmentation.
Several research projects have broken real world CAPTCHAs, including one of Yahoo's early CAPTCHAs called "EZ-Gimpy"[1] and the CAPTCHA used by popular sites such as Paypal,[12] LiveJournal, phpBB, and other open source solutions.[13][14][15] In January 2008 Network Security Research released their program for automated Yahoo! CAPTCHA recognition.[16] Windows Live Hotmail and Gmail, the other two major free email providers, were cracked shortly after.[17][18]
In February 2008 it was reported that spammers had achieved a success rate of 30% to 35%, using a bot, in responding to CAPTCHAs for Microsoft's Live Mail service[19] and a success rate of 20% against Google's Gmail CAPTCHA.[20] A Newcastle University research team has defeated the segmentation part of Microsoft's CAPTCHA with a 90% success rate, and claim that this could lead to a complete crack with a greater than 60% rate.[21]

[edit] Human solvers
CAPTCHA is vulnerable to a relay attack that uses humans to solve the puzzles. One approach involves relaying the puzzles to a group of human operators who can solve CAPTCHAs. In this scheme, a computer fills out a form and when it reaches a CAPTCHA, it gives the CAPTCHA to the human operator to solve.
Another variation of this technique involves copying the CAPTCHA images and using them as CAPTCHAs for a high-traffic site owned by the attacker. With enough traffic, the attacker can get a solution to the CAPTCHA puzzle in time to relay it back to the target site.[22] In October 2007, a piece of malware appeared in the wild which enticed users to solve CAPTCHAs in order to see progressively further into a series of striptease images.[23][24]
These methods have been used by spammers to set up thousands of accounts on free email services such as Gmail and Yahoo!. [25] Since Gmail and Yahoo! are unlikely to be blacklisted by anti-spam systems, spam sent through these compromised accounts is less likely to be blocked.

[edit] Legal concerns
The circumvention of CAPTCHAs may violate the anti-circumvention clause of the Digital Millennium Copyright Act (DMCA) in the United States. In 2007, Ticketmaster sued software maker RMG Technologies[26] for its product which circumvented the ticket seller's CAPTCHAs on the basis that it violates the anti-circumvention clause of the DMCA. In October 2007, an injunction was issued stating that Ticketmaster would likely succeed in making its case.[27] In June 2008, Ticketmaster filed for Default Judgment against RMG. The Court granted Ticketmaster the Default and entered an $18.2M judgment in favor of Ticketmaster.
CAPTCHA without audio may also violate the Americans With Disabilities Act, according to the American Council of the Blind.[28]

[edit] Image-recognition CAPTCHAs
Some researchers promote image recognition CAPTCHAs as a possible alternative for text-based CAPTCHAs. To date only rapidshare made use of an image based CAPTCHA. Many amateur users of the phpBB forum software (which has suffered greatly from spam) have implemented an open source image recognition CAPTCHA system in the form of an addon called KittenAuth[29] which in its default form presents a question requiring the user to select a stated type of animal from an array of thumbnail images of assorted animals. The images (and the challenge questions) can be customized, for example to present questions and images which would be easily answered by the forum's target userbase. Furthermore, for a time, RapidShare free users had to get past a CAPTCHA where you had to only enter letters attached to a cat, while others were attached to dogs.[30] This was later removed because users had trouble entering the correct letters.
Image recognition CAPTCHAs face many potential problems which have not been fully studied. It is difficult for a small site to acquire a large dictionary of images which an attacker does not have access to and without a means of automatically acquiring new labelled images, an image based challenge does not meet the definition of a CAPTCHA. KittenAuth, by default, only had 42 images in its database.[29] Microsoft's "Asirra," which it is providing as a free web service, attempts to address this by means of Microsoft Research's partnership with Petfinder.com, which has provided it with more than three million images of cats and dogs, classified by people at thousands of US animal shelters.[31] Unfortunately for Microsoft, researchers claim to have written a program than can break the Microsoft Asirra CAPTCHA.[32]
Human solvers are a potential weakness for strategies such as Asirra. If the database of cat and dog photos can be downloaded, then paying workers $0.01 to classify each photo as either a dog or a cat means that almost the entire database of photos can be deciphered for $30,000. Photos that are subsequently added to the Asirra database are then a relatively small data set that can be classified as they first appear. Causing minor changes to images each time they appear will not prevent a computer from recognizing a repeated image as there are robust image comparator functions (e.g., image hashes, color histograms) that are insensitive to many simple image distortions. Warping an image sufficiently to fool a computer will likely also be troublesome to a human.[33]
A new type of image-based CAPTCHA renders 3D models as 2D images and challenges the user to classify the 2D renderings. [2] The security and usability of this CAPTCHA has yet to be determined.

[edit] Collateral benefits
Some of the original inventors of the CAPTCHA system have implemented a means by which some of the effort and time spent by people who are responding to challenges can be harnessed as a distributed work system. This system, called reCAPTCHA, works by including "solved" and "unrecognized" elements (images which were not successfully recognized via OCR) in each challenge. The respondent thus answers both elements and roughly half of his or her effort validates the challenge while the other half is captured as work[34]. This however could limit the efficiency of the CAPTCHA, as attackers can be reasonably certain what they're trying to solve is a dictionary word, vastly restricting the possible set.

[edit] See also

Image spam, where spammers exploit the inability of computers to read text in images to avoid junkmail filtering
One-way function


[edit] References


^ a b Greg, Mori,; Malik, Jitendra. "Breaking a Visual CAPTCHA". Simon Fraser University. http://www.cs.sfu.ca/~mori/research/gimpy/. Retrieved on 2008-12-21. 
^ a b Ngo, Dong (2009-03-25). "3D-based Captchas becomes reality". CNET News. http://news.cnet.com/8301-17938_105-10204300-1.html. Retrieved on 2009-03-25. 
^ "Computer Literacy Tests: Are You Human?". Time (magazine). http://www.time.com/time/magazine/article/0,9171,1812084,00.html. Retrieved on 2008-06-12.  "The Carnegie Mellon team came back with the CAPTCHA. (It stands for "completely automated public Turing test to tell computers and humans apart"; no, the acronym doesn't really fit.) The point of the CAPTCHA is that reading those swirly letters is something that computers aren't very good at." 
^ "Latest Status of CAPTCHA Trademark Application". USPTO. 2008-04-21. http://tarr.uspto.gov/servlet/tarr?regser=serial&entry=78500434. Retrieved on 2008-12-21. 
^ "reCAPTCHA homepage". Captcha.net. http://www.captcha.net/. Retrieved on 2008-12-21. 
^ Moni Naor (July, 1996) (PS). Verification of a human in the loop or Identification via the Turing Test. http://www.wisdom.weizmann.ac.il/~naor/PAPERS/human.ps. Retrieved on 2008-07-06. 
^ [1] US Patent no. 6,195,698, "Method for selectively restricting access to computer systems"
^ Amrinder Arora (2007). "Statistics Hacking — Exploiting Vulnerabilities in News Websites" (PDF). International Journal of Computer Science and Network Security 7: 342–347. http://paper.ijcsns.org/07_book/200703/20070348.pdf. 
^ "Breaking CAPTCHAs Without Using OCR". Howard Yeend (pureMango.co.uk). 2005. http://www.puremango.co.uk/cm_breaking_captcha_115.php. Retrieved on 2006-08-22. 
^ "Online services allow MD5 hashes to be cracked". http://milw0rm.com/cracker/list.php. Retrieved on 2007-01-04. 
^ Kumar Chellapilla, Kevin Larson, Patrice Simard, Mary Czerwinski (2005) (PDF). Computers beat Humans at Single Character Recognition in Reading based Human Interaction Proofs (HIPs). Microsoft Research. http://www.ceas.cc/papers-2005/160.pdf. Retrieved on 2006-08-02. 
^ Kluever, Kurt (May 12, 2008). "Breaking the PayPal CAPTCHA". Kloover.com. http://www.kloover.com/2008/05/12/breaking-the-paypalcom-captcha/. Retrieved on 2008-12-21. 
^ Kluever, Kurt (February 28, 2008). "Breaking ASP Security Image Generator". Kloover.com. http://www.kloover.com/2008/02/28/breaking-the-asp-security-image-generator/. Retrieved on 2008-12-21. 
^ Hocevar, Sam. "PWNtcha - captcha decoder". Sam.zoy.org. http://sam.zoy.org/pwntcha/. Retrieved on 2008-12-21. 
^ Sergei, Kruglov. "Defeating of some weak CAPTCHAs". Captcha.ru. http://www.captcha.ru/en/breakings/. Retrieved on 2008-12-21. 
^ "Network Security Research and AI". http://network-security-research.blogspot.com/. Retrieved on 2008-12-21. 
^ Dawson (2008-04-15). "Windows Live Hotmail CAPTCHA Cracked, Exploited". Slashdot (SourceForge). http://tech.slashdot.org/article.pl?sid=08/04/15/1941236&from=rss. Retrieved on 2008-04-16. 
^ Dawson (2008-02-26). "Gmail CAPTCHA Cracked". Slashdot (SourceForge). http://it.slashdot.org/article.pl?sid=08/02/27/0045242. Retrieved on 2008-04-16. 
^ Gregg Keizer, "Spammers' bot cracks Microsoft's CAPTCHA: Bot beats Windows Live Mail's registration test 30% to 35% of the time, says Websense", Computerworld"', February 7, 2008
^ Prasad, Sumeet (2008-02-22). "Google’s CAPTCHA busted in recent spammer tactics". Websense. http://www.websense.com/securitylabs/blog/blog.php?BlogID=174. Retrieved on 2008-12-21. 
^ Jeff Yan; Ahmad Salah El Ahmad (April 13, 2008) (PDF). A Low-cost Attack on a Microsoft CAPTCHA. School of Computing Science, Newcastle University, UK. http://homepages.cs.ncl.ac.uk/jeff.yan/msn_draft.pdf. Retrieved on 2008-12-21. 
^ Doctorow, Cory (2004-01-27). "Solving and creating CAPTCHAs with free porn". Boing Boing. http://www.boingboing.net/2004/01/27/solving_and_creating.html. Retrieved on 2006-08-22. 
^ Robertson, Jordan (2007-11-01). "Scams Use Striptease to Break Web Traps". San Jose, California. Archived from the original on 2007-11-06. http://web.archive.org/web/20071106170737/http://ap.google.com/article/ALeqM5jnNrQKxFzt7mPu3DZcP7_UWr8UfwD8SKE6Q80. 
^ Vaas, Lisa (2007-11-01). "Striptease Used to Recruit Help in Cracking Sites". PC Magazine. http://www.pcmag.com/article2/0,2704,2210674,00.asp. Retrieved on 2008-12-21. 
^ "Spam filtering services throttle Gmail to fight spammers". 2008-04-10. http://www.theregister.co.uk/2008/04/10/web_mail_throttled/. Retrieved on 2008-04-10. 
^ Ulanoff, Lance (October 31, 2007). "Deep-Sixing CAPTCHA". PC Magazine. Ziff Davis Media. http://www.pcmag.com/article2/0,2704,2209782,00.asp. Retrieved on 2007-12-12. 
^ "TicketMaster v. RMG". http://www.scribd.com/doc/404395/ticketmaster-v-rmg. 
^ {{cite web | url = http://www.acb.org/board-minutes/bm070802.html
^ a b The Cutest Human-Test: KittenAuth from ThePCSpy.com
^ David (June 04, 2008). "Attached to a Captcha". randomwire.com. http://www.randomwire.com/2008/06/04/attached-to-a-captcha/. Retrieved on 2008-12-21. 
^ Asirra from Microsoft Research (PDF)
^ Golle, Philippe. Machine Learning Attacks Against the Asirra CAPTCHA. Stanford Crypto. http://crypto.stanford.edu/~pgolle/papers/dogcat.html. Retrieved on 2008-12-21. 
^ Asirra: A CAPTCHA that Exploits Interest-Aligned Manual Image Categorization from Microsoft Research (PDF)
^ Luis von Ahn, Ben Maurer, Colin McMillen, David Abraham and Manuel Blum (2008). "reCAPTCHA: Human-Based Character Recognition via Web Security Measures" (PDF). Science 321: 1465–1468. http://www.cs.cmu.edu/~biglou/reCAPTCHA_Science.pdf. 



[edit] External links

CAPTCHA at the Open Directory Project




Look up captcha in
Wiktionary, the free dictionary.





Retrieved from "http://en.wikipedia.org/wiki/CAPTCHA"
Categories: Turing tests | Computer security | Internet forum terminology 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


العربية
Bân-lâm-gú
Bosanski
Български
Català
Česky
Dansk
Deutsch
Español
Esperanto
فارسی
Français
Galego
한국어
Հայերեն
Íslenska
Italiano
עברית
Latviešu
Lietuvių
Magyar
Nederlands
日本語
‪Norsk (bokmål)‬
Polski
Português
Română
Русский
Српски / Srpski
Suomi
Svenska
தமிழ்
ไทย
Tiếng Việt
Türkçe
Українська
中文









 This page was last modified on 31 March 2009, at 18:32.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
