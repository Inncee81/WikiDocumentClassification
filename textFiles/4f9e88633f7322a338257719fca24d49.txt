













Secure Shell - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Secure_Shell";
		var wgTitle = "Secure Shell";
		var wgAction = "view";
		var wgArticleId = "28814";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 280240642;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Secure Shell

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
Secure Shell or SSH is a network protocol that allows data to be exchanged using a secure channel between two networked devices. [1] Used primarily on Linux and Unix based systems to access shell accounts, SSH was designed as a replacement for TELNET and other insecure remote shells, which send information, notably passwords, in plaintext, leaving them open for interception.[2] The encryption used by SSH provides confidentiality and integrity of data over an insecure network, such as the Internet.


The Internet Protocol Suite


Application Layer


BGP · DHCP · DNS · FTP · GTP · HTTP · IMAP · IRC · Megaco · MGCP · NNTP · NTP · POP · RIP · RPC · RTP · RTSP · SDP · SIP · SMTP · SNMP · SOAP · SSH · Telnet · TLS/SSL · XMPP · (more)


Transport Layer


TCP · UDP · DCCP · SCTP · RSVP · ECN · (more)


Internet Layer


IP (IPv4, IPv6) · ICMP · ICMPv6 · IGMP · IPsec · (more)


Link Layer


ARP · RARP · NDP · OSPF · Tunnels (L2TP) · Media Access Control (Ethernet, MPLS, DSL, ISDN, FDDI) · Device Drivers · (more)



This box: view • talk • edit







Contents


1 Definition
2 History
3 Uses of SSH
4 SSH architecture
5 Security cautions
6 How SSH uses public-key cryptography
7 See also
8 References
9 Further reading
10 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Definition
SSH uses public-key cryptography to authenticate the remote computer and allow the remote computer to authenticate the user, if necessary.[1]
SSH is typically used to log into a remote machine and execute commands, but it also supports tunneling, forwarding TCP ports and X11 connections; it can transfer files using the associated SFTP or SCP protocols.[1] SSH uses the client-server model.
An SSH server, by default, listens on the standard TCP port 22.[3]
An SSH client program is typically used for establishing connections to an SSH daemon accepting remote connections. Both are commonly present on most modern operating systems, including Mac OS X, Linux, FreeBSD, Solaris and OpenVMS. Proprietary, freeware and open source versions of various levels of complexity and completeness exist.

[edit] History
In 1995, Tatu Ylönen, a researcher at Helsinki University of Technology, Finland, designed the first version of the protocol (now called SSH-1) prompted by a password-sniffing attack at his university network. The goal of SSH was to replace the earlier rlogin, TELNET and rsh protocols, which did not provide strong authentication or guarantee confidentiality. Ylönen released his implementation as freeware in July 1995, and the tool quickly gained in popularity. Towards the end of 1995, the SSH user base had grown to 20,000 users in fifty countries.
In December 1995, Ylönen founded SSH Communications Security to market and develop SSH. The original version of the SSH software used various pieces of free software, such as GNU libgmp, but later versions released by SSH Secure Communications evolved into increasingly proprietary software.
In 1996, a revised version of the protocol was designed, SSH-2, which is incompatible with SSH-1. SSH-2 features both security and feature improvements over SSH-1. Better security, for example, comes through Diffie-Hellman key exchange and strong integrity checking via message authentication codes. New features of SSH-2 include the ability to run any number of shell sessions over a single SSH connection.[4]
In 1999, developers wanting a free software version to be available went back to the older 1.2.12 release of the original ssh program, which was the last released under an open source license. Björn Grönvall's OSSH was subsequently developed from this codebase. Shortly thereafter, OpenBSD developers forked Björn's code and did extensive work on it, creating OpenSSH, which shipped with the 2.6 release of OpenBSD. From this version, a "portability" branch was formed to port OpenSSH to other operating systems.
It is estimated that, at the end of as of 2000[update], there were 2,000,000 users of SSH.[5]
As of 2005[update], OpenSSH is the single most popular ssh implementation, coming by default in a large number of operating systems. OSSH meanwhile has become obsolete.[6]
In 2006, the aforementioned SSH-2 protocol became a proposed Internet standard with the publication by the IETF "secsh" working group of RFCs (see references).

[edit] Uses of SSH




Example of tunneling an X11 application over SSH: the user 'josh' has SSHed from the local machine 'foofighter' to the remote machine 'tengwar' to run xeyes.






Logging into OpenWRT via SSH using PuTTY running on Windows.


Note that SSH is a protocol that can be used for many applications. Some of the applications below may require features that are only available or compatible with specific SSH clients or servers. For example, using the SSH protocol to implement a VPN is possible, but presently only with the OpenSSH server and client implementation.

for login to a shell on a remote host (replacing Telnet and rlogin)
for executing a single command on a remote host (replacing rsh)
for copying files from a local server to a remote host. See SCP, as an alternative for rcp
in combination with SFTP, as a secure alternative to FTP file transfer
in combination with rsync to backup, copy and mirror files efficiently and securely
for port forwarding or tunneling a port (not to be confused with a VPN which routes packets between different networks or bridges two broadcast domains into one.).
for using as a full-fledged encrypted VPN. Note that only OpenSSH server and client supports this feature.
for forwarding X11 through multiple hosts
for browsing the web through an encrypted proxy connection with SSH clients that support the SOCKS protocol.
for automated remote monitoring and management of servers
for securely mounting a directory on a remote server as a filesystem on a local computer using SSHFS.


[edit] SSH architecture




Diagram of the SSH-2 binary packet.


The SSH-2 protocol has a clean internal architecture (defined in RFC 4251) with well-separated layers. These are:

The transport layer (RFC 4253). This layer handles initial key exchange and server authentication and sets up encryption, compression and integrity verification. It exposes to the upper layer an interface for sending and receiving plaintext packets of up to 32,768 bytes each (more can be allowed by the implementation). The transport layer also arranges for key re-exchange, usually after 1 GB of data has been transferred or after 1 hour has passed, whichever is sooner.
The user authentication layer (RFC 4252). This layer handles client authentication and provides a number of authentication methods. Authentication is client-driven, a fact commonly misunderstood by users; when one is prompted for a password, it may be the SSH client prompting, not the server. The server merely responds to client's authentication requests. Widely used user authentication methods include the following:

"password": a method for straightforward password authentication, including a facility allowing a password to be changed. This method is not implemented by all programs.
"publickey": a method for public key-based authentication, usually supporting at least DSA or RSA keypairs, with other implementations also supporting X.509 certificates.
"keyboard-interactive" (RFC 4256): a versatile method where the server sends one or more prompts to enter information and the client displays them and sends back responses keyed-in by the user. Used to provide one-time password authentication such as S/Key or SecurID. Used by some OpenSSH configurations when PAM is the underlying host authentication provider to effectively provide password authentication, sometimes leading to inability to log in with a client that supports just the plain "password" authentication method.
GSSAPI authentication methods which provide an extensible scheme to perform SSH authentication using external mechanisms such as Kerberos 5 or NTLM, providing single sign on capability to SSH sessions. These methods are usually implemented by commercial SSH implementations for use in organizations, though OpenSSH does have a working GSSAPI implementation.


The connection layer (RFC 4254). This layer defines the concept of channels, channel requests and global requests using which SSH services are provided. A single SSH connection can host multiple channels simultaneously, each transferring data in both directions. Channel requests are used to relay out-of-band channel specific data, such as the changed size of a terminal window or the exit code of a server-side process. The SSH client requests a server-side port to be forwarded using a global request. Standard channel types include:

"shell" for terminal shells, SFTP and exec requests (including SCP transfers)
"direct-tcpip" for client-to-server forwarded connections
"forwarded-tcpip" for server-to-client forwarded connections


The SSHFP DNS record (RFC 4255) provides the public host key fingerprints in order to aid in verifying the authenticity of the host.

This open architecture provides considerable flexibility, allowing SSH to be used for a variety of purposes beyond secure shell. The functionality of the transport layer alone is comparable to TLS; the user authentication layer is highly extensible with custom authentication methods; and the connection layer provides the ability to multiplex many secondary sessions into a single SSH connection, a feature comparable to BEEP and not available in TLS.

[edit] Security cautions
Since SSH-1 has inherent design flaws which make it vulnerable (e.g., man-in-the-middle attacks), it is now generally considered obsolete and should be avoided by explicitly disabling fallback to SSH-1. While most modern servers and clients support SSH-2, some organizations still use software with no support for SSH-2, and thus SSH-1 cannot always be avoided.
In all versions of SSH, it is important to verify unknown public keys before accepting them as valid. Accepting an attacker's public key as a valid public key has the effect of disclosing the transmitted password and allowing man-in-the-middle attacks.

[edit] How SSH uses public-key cryptography
Main article: Public-key cryptography
First, a pair of cryptographic keys is generated. One is the private key; the other is the public key. The public key is installed on the remote machine (SSH Server) and is used by ssh to authenticate users (client machine) which use private key. As a user of the public key infrastructure system, you don’t care who can see or copy the public key. When the user wants to access a remote system, he opens the private key with his passphrase, and the private key to validate him with the public key on the remote computer (SSH server). Neither the passphrase nor the private key leaves the user's machine (SSH client). However, the user still needs to trust the local machine not to scrape his passphrase or copy his private key while it's out of the secure box.

[edit] See also




Cryptography portal




Comparison of SSH clients
Corkscrew - a tool that enables a user to run SSH over HTTPS proxy servers
Cygwin allows many Linux/BSD programs to run on Windows, including the OpenSSH client and server
Dropbear - Free SSH-2 client and server software useful for embedded systems
FISH - FIles transferred over SHell protocol
Ident
OpenSSH
Lsh - the GNU SSH client and server
PuTTY - Free Serial, Telnet, and SSH client
SSHFS - Secure protocol to share files over SSH
TeraTerm - Free Serial, Telnet, and SSH client
Transport Layer Security
VNC can be tunneled through SSH to securely access a remote machine that is behind a firewall
Web-based SSH - Access to SSH servers through standard web browsers
WinSCP


[edit] References


^ a b c RFC 4252
^ SSH Hardens the Secure Shell
^ port-numbers assignments at iana.org
^ SSH Frequently Asked Questions
^ Nicholas Rosasco and David Larochelle. "How and Why More Secure Technologies Succeed in Legacy Markets: Lessons from the Success of SSH". Quoting Barrett and Silverman, SSH, the Secure Shell: The Definitive Guide, O'Reilly & Associates (2001). Dept. of Computer Science, Univ. of Virginia. http://www.cs.virginia.edu/~drl7x/sshVsTelnetWeb3.pdf. Retrieved on 2006-05-19. 
^ OSSH Information for VU#419241



[edit] Further reading

Daniel J. Barrett, Richard E. Silverman, and Robert G. Byrnes — SSH: The Secure Shell (The Definitive Guide), O'Reilly 2005 (2nd edition). ISBN 0-596-00895-3
Michael Stahnke — Pro OpenSSH, Apress 2005 ISBN 1-59059-476-2
"Announcement: Ssh (Secure Shell) Remote Login Program". comp.security.unix. 12 July 1995. http://groups.google.com/group/comp.security.unix/msg/67079d812a19f499?dmode=source&hl=en.  Original announcement of Ssh by Tatu Ylönen
This article was originally based on material from the Free On-line Dictionary of Computing, which is licensed under the GFDL.
Himanshu Dwivedi; Implementing SSH, Wiley 2003. ISBN 978-0-471-45880-7


[edit] External links



Wikibooks has a book on the topic of
Internet Technologies/SSH




Old homepage for IETF 'secsh' working group, which has concluded (for SSH-2)








v • d • e

URI scheme





Official

aaa: · aaas: · acap: · cap: · cid: · crid: · data: · dav: · dict: · dns: · fax: · file: · ftp: · go: · gopher: · h323: · http: · https: · im: · imap: · Info: · ldap: · mailto: · mid: · news: · nfs: · nntp: · pop: · pres: · rtsp: · sip: · sips: · snmp: · tel: · telnet: · urn: · wais: · xmpp:






Unofficial

about: · afp: · aim: · apt: · bolo: · bzr: · callto: · cel: · cvs: · daap: · ed2k: · feed: · fish: · gg: · git: · gizmoproject: · iax2: · irc: · ircs: · itms: · lastfm: · ldaps: · magnet: · mms: · msnim: · psyc: · rsync: · secondlife: · skype: · ssh: · svn: · sftp: · smb: · sms: · soldat: · steam: · unreal: · ut2004: · view-source: · vzochat: · webcal: · wyciwyg: · xfire: · ymsgr:









Retrieved from "http://en.wikipedia.org/wiki/Secure_Shell"
Categories: Cryptographic protocols | Cryptographic software | Internet protocols | Internet standards | Remote administration software | Unix softwareHidden categories: Articles containing potentially dated statements from 2000 | All articles containing potentially dated statements | Articles containing potentially dated statements from 2005 | Wikipedia articles incorporating text from FOLDOC 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Afrikaans
العربية
Bosanski
Български
Català
Česky
Dansk
Deutsch
Español
Esperanto
Euskara
Français
Galego
한국어
Italiano
עברית
Lietuvių
Magyar
Македонски
Nederlands
日本語
‪Norsk (bokmål)‬
Polski
Português
Русский
Simple English
Slovenčina
Slovenščina
Suomi
Svenska
ไทย
Tiếng Việt
Türkçe
Українська
中文









 This page was last modified on 28 March 2009, at 16:56.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
