













Vorbis - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Vorbis";
		var wgTitle = "Vorbis";
		var wgAction = "view";
		var wgArticleId = "32489";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281624054;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Vorbis

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
This article is about the audio compression codec.  For the Discworld character, see Discworld characters.

Vorbis


Xiph.org Logo


Filename extension
.ogg .oga


Internet media type
audio/ogg


Developed by
Xiph.Org Foundation


Type of format
Audio codec


Contained by
Ogg


Standard(s)
Specification


Vorbis is a free and open source software project headed by the Xiph.Org Foundation. The project produces an audio format specification and software implementation (codec) for lossy audio compression that is intended to be a replacement for the proprietary MP3 format.[1] Vorbis is most commonly used in conjunction with the Ogg container format[2] and it is therefore often referred to as Ogg Vorbis.
Vorbis development began following a September 1998 letter from Fraunhofer Society announcing plans to charge licensing fees for the MP3 audio format. Soon after, Vorbis founder Chris Montgomery began work on the project and was assisted by a growing number of other developers. They continued refining the source code until a stable version (1.0) of the software was released on July 19, 2002.
The latest official version is 1.2.0 released on July 25, 2007, but there are some fine-tuned forks, most notably aoTuV, that offer better audio quality, particularly at low bitrates. Work is in progress to merge back those improvements. The software implementation, called libvorbis, for the Xiph.Org Foundation release is available from the official download page.[3]




Contents


1 Name
2 Usage
3 Quality: Codec comparisons

3.1 Listening tests
3.2 Audio quality: Characteristic artifacts


4 Technical details

4.1 Outline of coder algorithm
4.2 Tuned versions
4.3 Bitrate peeling
4.4 Container formats
4.5 Metadata


5 Licensing
6 Support

6.1 Hardware
6.2 Application software


7 Other implementations

7.1 aoTuV
7.2 Tremor
7.3 FFmpeg
7.4 stb_vorbis


8 See also
9 References
10 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Name
"Vorbis" is named after a Discworld character, Exquisitor Vorbis in Small Gods, by Terry Pratchett. Coincidentally, Nanny Ogg is another Discworld character, a witch who appears in several books including Witches Abroad, though the Ogg format was not named after her. "Ogg" is in fact derived from ogging, jargon that arose in the computer game Netrek.[4]

[edit] Usage
The Vorbis format has proven popular among supporters of free software.[5] They argue that its higher fidelity and completely free nature, unencumbered by patents, make it a well-suited replacement for patented and restricted formats like MP3. However, MP3 has been widely used since the late-1990s and as of 2009, continues to remain popular in the consumer electronics industry.
Vorbis has different uses for consumer products. Many video game titles such as 18 Wheels of Steel, Halo, Unreal Tournament, Mafia: The City of Lost Heaven, Grand Theft Auto: San Andreas, Crimsonland, Devil May Cry 3 and Guitar Hero: On Tour store in-game audio as Vorbis. Popular software players support Vorbis playback either natively or through an external plugin. A number of Web sites use it, such as Jamendo and Mindawn, as well as several national radio stations like CBC Radio, JazzRadio, Virgin Radio and Radio New Zealand[6]. The Spotify audio streaming service uses Vorbis for its audio streams[7].

[edit] Quality: Codec comparisons
For many applications, Vorbis has clear advantages over other lossy audio codecs in that it is patent-free and has free and open-source implementations and therefore is free to use, implement, or modify as one sees fit, yet produces smaller files than most other codecs at equivalent or higher quality.[8][9]
Listening tests have attempted to find the best quality lossy audio codecs at certain bitrates. Some conclusions made by recent listening tests:

Low bitrate (less than 64 kbit/s): the most recent public multiformat test at 48 kbit/s shows that aoTuV Vorbis has a better quality than WMA and LC-AAC, the same quality as WMA Professional, and a lower quality than HE-AAC.[10]
Mid to low bitrates (less than 128 kbit/s down to 64 kbit/s): private tests at 80 kbit/s and 96 kbit/s shows that aoTuV Vorbis has a better quality than other lossy audio codecs (LC-AAC, HE-AAC, MP3, MPC, WMA).[11] [12]
Mid bitrate (128kbit/s): most recent public multiformat test at 128 kbit/s shows a four-way tie between aoTuV Vorbis, LAME-encoded MP3, WMA Pro, and QuickTime AAC, with each codec essentially transparent (sounds identical to the original music file).[13]
High bitrates (more than 128 kbit/s): most people do not hear significant differences. However, trained listeners can often hear significant differences between codecs at identical bitrates, and aoTuV Vorbis performs better than LC-AAC, MP3, and MPC.[14]

Many of these results, however, are difficult to keep up to date due to the ever-evolving nature of the codecs.

[edit] Listening tests
See also: Codec listening test#Results
Listening tests are normally carried out as ABX tests, i.e., the listener has to identify an unknown sample X as being A or B, with A (the original) and B (the encoded version) available for reference. The outcome of a test must be statistically significant. This setup ensures that the listener is not biased by his/her expectations, and that the outcome is very unlikely to be the result of chance. If sample X can be identified reliably, the listener can assign a score as a subjective judgement of the quality. Otherwise, the encoded version is considered to be transparent. Below are links to several listening test results.

2005-2006 Public group test of Lame MP3, Vorbis AoTuV, iTunes AAC, Nero AAC, and WMA Pro at ~135 kbit/s nominal. Results suggest that further group testing at this bitrate is unnecessary because all codecs are statistically tied near transparency.[13]
2005, July comparison - AAC vs MP3 vs Vorbis vs WMA at 80 kbit/s. States that aoTuV beta 4 is the best encoder for either classical or various music in this bitrate, and that its quality is comparable to the LAME ABR MP3 at 128 kbit/s.[11]
2005, August comparison - AAC vs MP3 vs Vorbis vs WMA at 96 kbit/s. States that aoTuV beta 4 and AAC are tied as the best encoders for classical music in this bitrate, while aoTuV beta 4 is the best encoder for pop music, even better than LAME at 128 kbit/s.[12]
2005, August comparison - MPC vs VORBIS vs MP3 vs AAC at 180 kbit/s. An audiophile listening test, which states that, for classical music, aoTuV beta 4 has 93% percent probability of being the best encoder, tied with MPC. MPC is tied with both Vorbis, in the first place, and LAME in the second.[14]


[edit] Audio quality: Characteristic artifacts
The most consistently cited problem with Vorbis is pre-echo,[citation needed] a faint copy of a sharp attack that occurs just before the actual sound (the sound of castanets is commonly cited as causing this effect). This also occurs in similar codecs based on transforming to the frequency domain, including MP3 and AAC.
When the bitrate is too low to encode the audio without perceptible loss, Vorbis exhibits an analog noise-like failure mode, which can be described as reverberations in a room or amphitheater. This is considered more pleasant than the metallic warbling that MP3 exhibits in the same situation;[citation needed] Vorbis's behavior is due to the noise floor approach to encoding; see technical details.

[edit] Technical details

Vorbis nominal bitrate at quality levels for 44.1 kHz stereo input. The new libvorbis v1.2 usually compress better than these values (effective bitrate may vary).

Quality
Nominal Bitrate



Official Xiph.Org Foundation Vorbis
aoTuV beta 3 and later


-q-2
not available
32 kbit/s


-q-1
45 kbit/s
48 kbit/s


-q0
64 kbit/s


-q1
80 kbit/s


-q2
96 kbit/s


-q3
112 kbit/s


-q4
128 kbit/s


-q5
160 kbit/s


-q6
192 kbit/s


-q7
224 kbit/s


-q8
256 kbit/s


-q9
320 kbit/s


-q10
500 kbit/s


Given 44.1 kHz (standard CD audio sampling frequency) stereo input, the encoder will produce output from roughly 45 to 500 kbit/s (32 to 500 kbit/s for aoTuV tunings) depending on the specified quality setting. Quality settings run from -1 to 10 (-2 to 10 for aoTuV tunings). Files encoded with a given quality setting should have the same quality of sound in all versions of the encoder, but newer versions should be able to achieve that quality with a lower bitrate. The bit rates mentioned above are only approximate; Vorbis is inherently variable-bitrate (VBR), so bitrate may vary considerably from sample to sample.
Vorbis aims to be more efficient than MP3, with data compression transparency being available at lower bitrates.

[edit] Outline of coder algorithm
Vorbis uses the modified discrete cosine transform (MDCT) for converting sound data from the time domain to the frequency domain. The resulting frequency-domain data is broken into noise floor and residue components, and then quantized and entropy coded using a codebook-based vector quantization algorithm. The decompression algorithm reverses these stages. The noise floor approach gives Vorbis its characteristic analog noise-like failure mode when the bitrate is too low to encode the audio without perceptible loss. Many people[who?] find this more pleasant than the metallic warbling of the MP3 format. The sound of compression artifacts at low bitrates can be perhaps described as reverberations in an amphi-threatre or a room.

[edit] Tuned versions
Various tuned versions of the encoder (Garf, aoTuV or MegaMix) attempt to provide better sound at a specified quality setting, usually by dealing with certain problematic waveforms by temporarily increasing the bitrate. The most consistently cited problem with Vorbis is pre-echo, a faint copy of a sharp attack that occurs just before the actual sound (the sound of castanets is commonly cited as causing this effect). Most of the tuned versions of Vorbis attempt to fix this problem and to increase the sound quality of lower quality settings (-q-2 through -q4). Some tuning suggestions created by the Vorbis user community (especially the aoTuV beta 2 tunings) have been incorporated into the 1.1.0 release.[15]

[edit] Bitrate peeling
The Vorbis format supports bitrate peeling for reducing the bitrate of already encoded files without re-encoding, and several experimental implementations exist.[16][17] However, the quality is "unusable",[16] and markedly inferior to decoding and re-encoding.
The reason that naïve peeling programs degrade quality so severely is that the format does not specify the relative importance of signal data, nor do existing encoders order the data in order of importance, hence peelers cannot easily determine if data is important or not.

[edit] Container formats
See also: Container format
Vorbis streams can be encapsulated in other media container formats besides Ogg.[18] A commonly used alternative is Matroska.

[edit] Metadata
Vorbis metadata, called Vorbis comments, support metadata 'tags' similar to those implemented in the ID3 standard for MP3. The metadata is stored in a vector of eight-bit-clean strings of arbitrary length and size. The size of the vector and the size of each string in bytes is limited to 232-1 (about 4.3 billion, or any integer that can be expressed in 32 bits). This vector is stored in the second header packet that begins a Vorbis bitstream.[19]
The strings are assumed to be encoded as UTF-8. Music tags are typically implemented as strings of the form "[TAG]=[VALUE]", for instance, "ARTIST=The John Smith Band". The tags are case-insensitive, thus typing "ARTIST=The John Smith Band" would be the same as "artist=The John Smith Band". Like the current version of ID3, users and encoding software are free to use whichever tags are appropriate for the content. For example, an encoder could use localized tag labels, live music tracks might contain a "Venue=" tag or files could have multiple genre definitions. Most applications also support common de facto standards such as discnumber and Replay Gain information.

[edit] Licensing
Knowledge of Vorbis' specifications is in the public domain. Concerning the specification itself, the Xiph.Org Foundation reserves the right to set the Vorbis specification and certify compliance. Its libraries are released under the revised 3-clause BSD license and its tools are released under the GNU General Public License. The libraries were originally released under the GNU Lesser General Public Licence, but a BSD license was later chosen with the endorsement of Richard Stallman.[20] The Xiph.Org Foundation states that Vorbis, like all its developments, is completely free from the licensing or patent issues raised by other proprietary formats such as MP3. Although the Xiph.Org Foundation states it has conducted a patent search that supports its claims, outside parties (notably engineers working on rival formats) have expressed doubt that Vorbis is free of patented technology.[21]
The Xiph.Org Foundation maintains that it was privately issued a legal opinion subject to attorney-client privilege.[citation needed] It has not released an official statement on the patent status of Vorbis, pointing out that such a statement is technically impossible due to the number and scope of patents in existence and the questionable validity of many of them. Such issues cannot be resolved outside of a court of law. Some Vorbis proponents[who?] have derided the uncertainty concerning the patent status as "fear, uncertainty and doubt" (also known as "FUD"): misinformation spread by large companies with a vested interest.[citation needed]
Vorbis is supported by several large digital audio player manufacturers such as Samsung, Rio, Neuros Technology, Cowon, and iriver. Many[who?] feel that the growing support for the Vorbis codec within the industry supports their interpretation of its patent status, as multinational corporations are unlikely to distribute software with questionable legal status. The same could be said about its growing popularity in other commercial application areas, such as mainstream computer games.[vague]

[edit] Support

[edit] Hardware
Tremor, a version of the Vorbis decoder which uses fixed-point arithmetic (rather than floating point), was made available to the public on September 2, 2002 (also under a BSD-style license).[22] Tremor, or platform specific versions based on it, is more suited to implementation on the limited facilities available in commercial portable players. A number of versions that make adjustments for specific platforms and include customized optimizations for given embedded microprocessors have been produced. Several hardware manufacturers have expressed[citation needed] intentions to produce Vorbis-compliant devices and new Vorbis devices seem to be appearing at a steady rate.[citation needed]

Telephones based on Google's Android platform support Ogg Vorbis media files[23].
Digital audio players such as Cowon's D2,
Samsung YP series of digital audio players[1]and iAudio X5 ship with Ogg Vorbis support.
the majority of iRiver devices provide Ogg Vorbis support up to Q10 bitrates[24][25][26]. (as July 2008)
Sandisk added Vorbis capability to the 1.01.29 firmware for the Sansa Clip player. (added in May 2008)
Sandisk added Vorbis capability for the Sansa Fuze player in the 1.01.15 firmware update. (added October 3, 2008)
Meizu's M6 and M3 Digital Audio Players
Elta 8844 MPEG4 DVD/DivX player can play music files in both MP3 or Ogg/Vorbis format

Apple's iPod does not natively support Vorbis but through the use of Rockbox, an open-source firmware project, is capable of decoding Vorbis files. The Xiph.Org Foundation wiki has an up-to-date list of Vorbis-supporting hardware, such as portables, PDAs, and microchips.[27] Also see Internet radio device for an overview.

[edit] Application software
Software supporting Vorbis exists for many platforms. Although Apple iTunes does not natively support Vorbis, the Xiph.Org Foundation provides a QuickTime component[28] which can be used in iTunes and QuickTime on both Microsoft Windows and Mac OS. Windows Media Player also does not natively support Vorbis; however, DirectShow filters exist[29] to decode Vorbis in Windows Media Player and other Windows multimedia players that support DirectShow. Vorbis is well-supported on the Linux platform in programs like XMMS, xine, and many more. More information about Vorbis-supporting software can be found at the Xiph.Org Foundation wiki.[30] Users can test these programs using the list of Vorbis audio streams available on the same wiki.[31] Winamp can also play ".ogg" vorbis files, as can the open-source VLC media player and Foobar2000.

[edit] Other implementations
The Xiph.Org Foundation's reference implementation is free and open sourced and it is dual-licensed under the BSD License and the GNU Lesser General Public License (LGPL). There are no restriction to other developers for writing compliant encoders and decoders.

[edit] aoTuV
aoTuV is a modified version of the reference encoder which improves its quality, especially at lower bitrates. Initially built upon Vorbis 1.0, the improvements of aoTuV Beta2 were merged back into Vorbis 1.1. Further improvements were released, the current Beta 5.7 version (released on March 3rd, 2009) is an improvement of libvorbis 1.2.1 RC2.
Lancer is a modified version of aoTuV which keeps the quality of aoTuV and significantly improves its encoding speed, using architecture-specific SIMD instructions instead of floating-point instructions. The last version is based on aoTuV Beta 5 (released on November 11th, 2006).

[edit] Tremor
Main article: Tremor (software)
Tremor is an implementation of a Vorbis decoder using fixed-point arithmetic. It is intended for environments when a floating-point arithmetic unit is unavailable. The Xiph.Org Foundation has expressed interest in modifying Tremor into a floating-point version, which would replace the current floating-point reference decoder.[32]

[edit] FFmpeg
Main article: FFmpeg
The libavcodec library contains an LGPL-licensed Vorbis decoder that is faster than the reference implementation. [33]

[edit] stb_vorbis
stb_vorbis is a C implementation of an Ogg Vorbis decoder placed in the public domain. It lacks some minor features present in the reference implementation (notably seeking), but is still fully compliant with the format specification.

[edit] See also




Free software portal




Comparison of audio codecs
FreeCast, peer-to-peer Vorbis streaming
Juce, cross-platform C++ toolkit with embedded Vorbis support
Ogg bitstream format
PocketOgg: a Vorbis player program for Windows CE for Pocket PC
Sb0, a file format related to Vorbis, used in certain Ubisoft games
Vorbis comment, metadata format used by Vorbis
XSPF, playlist format
Xiph QuickTime Components, official QuickTime implementation


[edit] References


^ Xiph.Org Foundation (1999-05-14). "Xiph.org: About". http://www.xiph.org/about/. Retrieved on 2008-03-15. 
^ "Xiph.org wiki, MIME Types and File Extensions". http://wiki.xiph.org/index.php/MIME_Types_and_File_Extensions. Retrieved on 2007-10-13. 
^ Xiph.Org Foundation. "Xiph.org: Downloads". http://www.xiph.org/downloads/. Retrieved on 2008-01-12. 
^ Xiph.Org Foundation. "xiph.org: naming". http://xiph.org/xiphname. 
^ "Recordings about our Philosophy - GNU Project - Free Software Foundation (FSF)". http://www.gnu.org/philosophy/audio/audio.html. Retrieved on 2008-01-12. 
^ "Radio New Zealand Oggcasts". http://www.radionz.co.nz/oggcasts. Retrieved on 2009-01-14. 
^ "Spotify FAQ". http://www.spotify.com/en/help/faq/. Retrieved on 2009-03-16. 
^ MedO. "Ogg Vorbis - Better Than Mp3?". http://www.bbc.co.uk/dna/h2g2/A6556511. 
^ Nanook. "Ogg Vorbis - An Alternative to MP3". http://www.eskimo.com/~nanook/knowledge/oggvorbis.html. 
^ "Results of Public, Multiformat Listening Test @ 48 kbps (November 2006)". http://www.maresweb.de/listening-tests/mf-48-1/results.htm. Retrieved on 2008-01-12. 
^ a b "80 kbps personal listening test (summer 2005) - Hydrogenaudio Forums". http://www.hydrogenaudio.org/forums/index.php?showtopic=35438. Retrieved on 2008-01-12. 
^ a b "MP3, WMA, AAC, OGG qualité à 96 kbps (évaluation) - Traitement Audio - Video & Son - FORUM HardWare.fr" (in French). http://forum.hardware.fr/hardwarefr/VideoSon/MP3-WMA-AAC-OGG-qualite-kbps-evaluation-sujet-84950-1.htm. Retrieved on 2008-01-12. 
^ a b "Results of Public, Multiformat Listening Test @ 128 kbps (December 2005)". http://www.maresweb.de/listening-tests/mf-128-1/results.htm. Retrieved on 2008-01-12. 
^ a b "MPC vs VORBIS vs MP3 vs AAC at 180 kbit/s - Hydrogenaudio Forums". http://www.hydrogenaudio.org/forums/index.php?showtopic=36465. Retrieved on 2008-01-12. 
^ "Recommended Encoder Versions and Settings - Hydrogenaudio Forums". http://www.hydrogenaudio.org/forums/index.php?showtopic=15049&st=0. Retrieved on 2008-01-13. 
^ a b Experimental Ogg vorbis Bitrate Peeler, Bitrate reduction of ogg vorbis
^ VINJEY. "Vorbis & Downloads". http://www.vinjey.com/ogg_downloads.html. Retrieved on 2006-11-13. 
^ The Community. "Oggless proposal". http://wiki.xiph.org/index.php/Oggless. 
^ Xiph.Org Foundation. "Vorbis Comment Field Documentation". http://www.xiph.org/vorbis/doc/v-comment.html. Retrieved on 2007-03-14. 
^ Jack Moffitt (2001-02-26). "[icecast-dev] Xiph.org announces Vorbis Beta 4 and the Xiph.org Foundation". http://lists.xiph.org/pipermail/icecast-dev/2001-February/000005.html. Retrieved on 2006-11-13. 
^ "Vorbis development, status & patent issues". http://www.hydrogenaudio.org/forums/index.php?showtopic=13531. Retrieved on 2006-11-13. 
^ "[vorbis-dev] tremor relicensed as BSD". 2002-09-03. http://lists.xiph.org/pipermail/vorbis-dev/2002-September/006399.html. Retrieved on 2008-03-15. 
^ "Android SDK m5-rc14 now available". Android Developers' Blog. http://android-developers.blogspot.com/2008/02/android-sdk-m5-rc14-now-available.html. Retrieved on 2008-12-15. 
^ http://www.iriver.com/product/p_detail.asp?pidx=80
^ http://www.iriver.com/product/p_detail.asp?pidx=82
^ http://www.iriver.com/product/p_detail.asp?pidx=85
^ "VorbisHardware - XiphWiki". Xiph.Org Foundation. http://wiki.xiph.org/VorbisHardware. Retrieved on 2008-01-13. 
^ "Xiph.Org: QuickTime Components". http://www.xiph.org/quicktime/. Retrieved on 2008-01-13. 
^ "illiminable Ogg Directshow Filters for Speex, Vorbis, Theora and FLAC". http://www.xiph.org/dshow/. Retrieved on 2008-06-24. 
^ "VorbisSoftwarePlayers - XiphWiki". Xiph.Org Foundation. http://wiki.xiph.org/index.php/VorbisSoftwarePlayers. Retrieved on 2008-01-13. 
^ "VorbisStreams - XiphWiki". Xiph.Org Foundation. http://wiki.xiph.org/index.php/VorbisStreams. Retrieved on 2008-01-13. 
^ "Xiph.Org Monthly Meeting log for October 2006". http://xiph.org/minutes/2006/10/200610_meeting.txt. 
^ "mailing list thread comparing Vorbis decoding performance". http://lists.mplayerhq.hu/pipermail/mplayer-dev-eng/2006-August/044907.html. Retrieved on 2007-08-17. 



[edit] External links

The Xiph.Org Foundation
Vorbis site - Xiph reference implementation

Listening test comparing Vorbis to MP3, RealAudio, WMA, etc.
Vorbis wiki — mostly developer information
List of video games using Vorbis
Vorbis FAQ
Vorbis documentation
Cross Reference and Data Structures


Other encoder / decoder implementation:

List of decoders
List of encoders
Xiph reference implementation
aoTuV - aoTuV Vorbis tuned implementation
Vorbis acceleration project - Optimized versions of aoTuV Vorbis encoder and other SSE/MultiThread optimizations
Fixed-point version of the Vorbis decoder


Software / hardware supporting Vorbis:

List of encoder frontends
RealPlayer Plug-In
Vorbis binaries at Rarewares
Directshow Filters for Ogg Vorbis, Speex, Theora and FLAC
QuickTime component for QuickTime and iTunes


Other useful links:

Modified discrete cosine transform Description
Christopher "Monty" Montgomery (main developer) interview, slashdot.org
Vorbis at Hydrogenaudio wiki
jamendo.com : Largest archive of Creative Commons licensed Vorbis music
An Introduction to Compressed Audio with Vorbis










v • d • e

Xiph.Org Foundation





Ogg Project

Vorbis · Theora · FLAC · Speex · Tremor · OggUVS · OggPCM · Ogg Writ






Other projects

XSPF · Annodex · Xiph QuickTime Components · cdparanoia · Icecast · IceShare






Related articles

Chris Montgomery · CMML · Ogg Media · Ogg page · Ogg Squish













v • d • e

Multimedia compression formats





Video compression





ISO/IEC


MJPEG · Motion JPEG 2000 · MPEG-1 · MPEG-2 · MPEG-4 ASP · MPEG-4/AVC







ITU-T


H.120 · H.261 · H.262 · H.263 · H.264







Others


AMV · AVS · Bink · Dirac · Indeo · Pixlet · RealVideo · RTVideo · SheerVideo · Smacker  · Theora · VC-1 · VP6 · VP7 · VP8 · WMV  · XVD









Audio compression





ISO/IEC


MPEG-1 Layer III (MP3) · MPEG-1 Layer II · MPEG-1 Layer I · AAC · HE-AAC







ITU-T


G.711 · G.718 · G.719 · G.722 · G.722.1 · G.722.2 · G.723 · G.723.1 · G.726 · G.728 · G.729 · G.729.1 · G.729a







Others


AC3 · AMR · Apple Lossless · ATRAC · FLAC · iLBC · Monkey's Audio · μ-law · Musepack · Nellymoser · OptimFROG · RealAudio · RTAudio · SHN · Siren · Speex · Vorbis · WavPack · WMA · TAK · True Audio









Image compression





ISO/IEC/ITU-T


JPEG · JPEG 2000 · lossless JPEG · JBIG · JBIG2 · PNG · WBMP







Others


APNG · BMP · EXR · GIF · ICER · ILBM · MNG · PCX · PGF · TGA · TIFF · JPEG XR / HD Photo









Media containers





General


3GP · ASF · AVI · Bink · BXF · DMF · DPX · EVO · FLV · VVF · Matroska · MPEG-PS · MPEG-TS · MP4 · MXF  · Ogg · Ogg Media · QuickTime · RealMedia · Smacker · RIFF · VOB







Audio only


AIFF · AU · WAV









See Compression Methods for methods and Compression Software Implementations for codecs








Retrieved from "http://en.wikipedia.org/wiki/Vorbis"
Categories: Xiph.Org projects | Audio codecs | Ogg files | Free multimedia codecs, containers, and splitters | Lossy compression algorithmsHidden categories: All articles with unsourced statements | Articles with unsourced statements since October 2008 | Articles with unsourced statements since September 2008 | All pages needing cleanup | Articles with specifically-marked weasel-worded phrases since April 2009 | Articles with unsourced statements since March 2009 | Articles with specifically-marked weasel-worded phrases since March 2009 | Wikipedia articles needing clarification from March 2009 | Articles with unsourced statements since January 2008 | Articles with unsourced statements since April 2009 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Afrikaans
Asturianu
Català
Česky
Dansk
Deutsch
Español
Esperanto
Euskara
Français
Galego
한국어
Italiano
עברית
Lumbaart
Magyar
Nederlands
日本語
‪Norsk (bokmål)‬
Polski
Português
Русский
Slovenčina
Suomi
Svenska
Türkçe
Українська









 This page was last modified on 4 April 2009, at 02:45.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
