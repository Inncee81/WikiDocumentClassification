













TurboGears - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "TurboGears";
		var wgTitle = "TurboGears";
		var wgAction = "view";
		var wgArticleId = "3177599";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 279396598;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); TurboGears

From Wikipedia, the free encyclopedia

Jump to: navigation, search 

TurboGears




Developed by
Kevin Dangoor et al.


Latest release
1.0.8 / December 17, 2008


Preview release
2.0.rc1 / March 23, 2009


Written in
Python


Operating system
Cross-platform


Type
Web application framework


License
MIT License, LGPL


Website
http://www.turbogears.org


TurboGears is a Python web application framework consisting of several underlying components such as MochiKit, SQLObject, CherryPy and Kid.
TurboGears was created in 2005 by Kevin Dangoor as the framework behind the as yet unreleased Zesty News product. When he released it as an open source framework in the end of September 2005, it received more than 30,000 screencast downloads in the first 3 months.[citation needed]
TurboGears is designed around the model-view-controller architecture, much like Struts or Ruby on Rails, designed to make rapid web application development in Python easier and more maintainable.




Contents


1 TurboGears components
2 Template plugins
3 Project history
4 Future of TurboGears
5 Further reading
6 References
7 See also
8 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] TurboGears components
TurboGears components are as follows:

SQLObject as the Model - data backend that can create a database or interface with existing data on many database servers.
SQLAlchemy can be used as an alternative model layer and is slated to be the default in TurboGears >= 1.1.
Kid as the View - XHTML frontend templating engine where all templates are valid XHTML or XML files that are usually made in a way that allows opening these templates as simple XHTML files to check the design. At the same time features are provided to embed snippets of Python in a XMLish manner.
Genshi is the successor project to Kid and replaces the latter as the default templating engine in TurboGears >= 1.1. It is nearly 100% syntax-compatible to Kid. See also the "Template plugins" section below.
CherryPy as the Controller - middleware that allows web applications to be programmed by writing event handlers that return data to (in TurboGears case) templates. The same data can also be received in Ajax fashion as a JSON data stream.
MochiKit is an optional piece of TurboGears - it is a JavaScript library to make programming in JavaScript more Pythonic. It is mostly used for implementing Ajax features as it provides an interface to get JSON data streams in asynchronous manner.


[edit] Template plugins
Templating languages other than Kid can be used through a plugin system. Plugins currently exist for Genshi, Cheetah, Django templates, Mako, and Jinja. Several template engines can be used in the same application.

[edit] Project history
January 2007 Kevin Dangoor retired as project leader and Alberto Valverde managed the project as his successor,[1] but subsequently stepped down due to other personal commitments. Alberto is still involved in the TurboGears community through his ToscaWidgets project. The TurboGears project is now managed jointly by a group of about half a dozen core developers under the leadership of Mark Ramm (as the TurboGears 2 development lead) and Florent Aide (as the Turbogears 1.x release manager).
In June 2007 the community began experiments to put the TurboGears API on top of components and protocols used in Pylons and there was speculation that the two frameworks may finally be merging.[2] However, the official TurboGears 2 documentation states that this is unlikely to happen, due to the "different, but compatible priorities"[3] of both projects.
As of Fall 2008, TurboGears has a large and healthy community with over 3000 users on the TurboGears mailing list, a book from Prentice Hall published in Nov. '06, and a number of open source and proprietary TurboGears applications deployed to the real world. The development progresses at a moderate but steady pace and was also newly fueled by a successful participation of the project as a Google Summer of Code mentoring organization in 2008. TurboGears 1.1 is well underway, with several beta releases in 2008, and TurboGears 2 entered the release candidate phase as of March 2009[update].

[edit] Future of TurboGears
Development currently happens in two main branches:

The TurboGears 1.x branch, which is based on the original code-base and uses CherryPy as the underlying web application server.
TurboGears 2 (trunk), which basically rebuild the TurboGears 1 API on top of Pylons.

TurboGears 1.1 will be a newer version of TurboGears 1.0, which continues to support exactly the same API. The main difference between 1.0 and 1.1 will be the choice of default templating engine and default ORM, i.e. it aims to replace SQLObject with SQLAlchemy and Kid with Genshi. The 1.1 branch is regarded as an intermediate step towards the Pylons-based 2.0 version. Recently, however, there has been made good progress to adapt the 1.x code-base to CherryPy 3.0 and a new 1.5 branch, which is currently in alpha-state, has been created.
A stable version of TurboGears 2 is expected to be released in the first quarter 2009.

[edit] Further reading
Ramm, M (Nov 7, 2006). Rapid Web Applications with TurboGears, Prentice Hall. ISBN 0132433885

[edit] References


^ "TurboGears has a new leader". Kevin Dangoor. 2007-01-03. http://www.blueskyonmars.com/2007/01/03/turbogears-has-a-new-leader/. Retrieved on 2007-04-12. 
^ "Pylons Merge". http://compoundthinking.com/blog/index.php/2007/06/27/turbogears-11-and-beyond/. Retrieved on 2007-06-27. 
^ "What’s new in TurboGears 2". http://turbogears.org/2.0/docs/main/WhatsNew.html#why-not-just-merge-with-pylons. Retrieved on 2008-09-16. 



[edit] See also




Free software portal




Django
Comparison of web application frameworks


[edit] External links

TurboGears homepage
TurboGears Blogs
TurboGears google group
TurboGears screencasts and related videos at showmedo
TurboGears from start to finish








v • d • e

Python web application frameworks






Karrigell · Nevow · Spyce · TurboGears · TwistedWeb · Webware · web.py · web2py · Zope · more...













v • d • e

Web Application Frameworks






Apache  · Eclipse
Open Project Directory  · OSI  · SourceForge







Actionscript

PureMVC






ASP.NET

ASP.NET MVC · BFC · DotNetNuke · MonoRail · Umbraco






ColdFusion

ColdSpring · Fusebox · Mach-II · Model-Glue · onTap · on Wheels






Common Lisp

ABCL-web · blow · BKNR · SymbolicWeb · UnCommon Web






Java

Apache Struts · AppFuse · Flexive · Google Web Toolkit · IT Mill Toolkit · ItsNat · JavaServer Faces · JBoss Seam · Makumba · OpenXava · Reasonable Server Faces · RIFE · Restlet · Spring · Stripes · Tapestry · WebWork · Wicket · ZK






Perl

Catalyst · Interchange · Mason






PHP

Akelos · CakePHP · Chisimba · CodeIgniter · Drupal · Horde · Kohana · Kolibri · KumbiaPHP · Midgard · Orinoco Framework · PEAR · PHPNuke · PHPonTrax · Seagull · Simplicity · Symfony · WASP · Zend · Zoop






Smalltalk

AIDA/Web · Seaside






Runtimes

Siverlight · AIR · FLV · JavaFX · JRE / JVM · Virtual Machines (Platforms  · Applications) more...






Other languages

Application Express (PL/SQL) · Fusebox (ColdFusion and PHP) · OpenACS (Tcl) · Yaws (Erlang) · HAppS (Haskell) · Cappuccino (Objective-J)






See Also

Facelets · Interface · Widget · Ajax · API · RIA · CMS · IDE · DBMS









Retrieved from "http://en.wikipedia.org/wiki/TurboGears"
Categories: Python web application frameworks | Python softwareHidden categories: All articles with unsourced statements | Articles with unsourced statements since February 2007 | Articles containing potentially dated statements from March 2009 | All articles containing potentially dated statements 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Español
Français
Magyar
日本語
Português
Suomi
ไทย
中文









 This page was last modified on 24 March 2009, at 17:10 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
