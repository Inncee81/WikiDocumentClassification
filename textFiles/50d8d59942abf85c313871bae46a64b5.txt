













Human-based computation - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Human-based_computation";
		var wgTitle = "Human-based computation";
		var wgAction = "view";
		var wgArticleId = "4253446";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 279666572;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Human-based computation

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
Human-based computation is a computer science technique in which a computational process performs its function by outsourcing certain steps to humans (Kosorukoff, 2001). This approach leverages differences in abilities and alternative costs between humans and computer agents to achieve symbiotic human-computer interaction.
In traditional computation, a human employs a computer to solve a problem; a human provides a formalized problem description to a computer, and receives a solution to interpret. Human-based computation frequently reverses the roles; the computer asks a person or a large group of people to solve a problem, then collects, interprets, and integrates their solutions.




Contents


1 Early work
2 Classes of human-based computation
3 Methods of human-based computation
4 Incentives to participation
5 Human-based computation as a form of social organization
6 See also
7 References
8 Footnotes
9 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Early work
Human-based computation research has its origins in the early work on interactive evolutionary computation. The idea behind interactive evolutionary algorithms is due to Richard Dawkins. In the Biomorphs software accompanying his book The Blind Watchmaker (Dawkins, 1986) the preference of a human experimenter is used to guide the evolution of two-dimensional sets of line segments. In essence, this program asks a human to be the fitness function of an evolutionary algorithm, so that the algorithm can use human visual perception and aesthetic judgment to do something that a normal evolutionary algorithm cannot do. However, it is difficult to get enough evaluations from a single human if we want to evolve more complex shapes. Victor Johnston and Karl Sims extended this concept by harnessing power of many people for fitness evaluation (Caldwell and Johnston, 1991; Sims, 1991). As a result, their programs could evolve beautiful faces and pieces of art appealing to public. These programs effectively reversed the common interaction between computers and humans. In these programs, the computer is no longer an agent of its user, but instead, a coordinator aggregating efforts of many human evaluators. These and other similar research efforts became the topic of research in interactive evolutionary computation or aesthetic selection, however the scope of this research was limited to outsourcing evaluation and, as a result, it was not fully exploring the full potential of the outsourcing.
Human-based genetic algorithm (HBGA) encourages human participation in multiple different roles. Humans are not limited to the role of evaluator, but can choose to perform a more diverse set of functions. In particular, they can contribute their innovative solutions into the evolutionary process, make incremental changes to existing solutions, and perform intelligent recombination. In short, HBGA outsources to humans all operations of a typical genetic algorithm. As a result of this outsourcing, HBGA can process the representations for which there is no computational innovation operators available, for example, natural languages. Thus, HBGA obviated the need for a fixed representational scheme that was a limiting factor of both standard and interactive EC. These algorithms can be also be viewed as novel forms of social organization coordinated by a computer program (Kosorukoff and Goldberg, 2002).

[edit] Classes of human-based computation
Human-based computation methods combine computers and humans in different roles. Kosorukoff (2000) proposed a way to describe division of labor in computation, that groups human-based methods into three classes. The following table uses the evolutionary computation model to describe four classes of computation, three of which rely on humans in some role. For each class, a representative example is shown. The classification is in terms of the roles (innovation or selection) performed in each case by humans and computational processes. This table is a slice of three-dimensional table. The third dimension defines if the organizational function is performed by humans or a computer. Here it is assumed to be performed by a computer.






Division of labor in computation


Selection agent

Innovation agent
Computer
Human


Computer
Genetic Algorithm
Interactive genetic algorithm


Human
Computerized Tests
Human-based genetic algorithm






Classes of human-based computation from this table can be referred by two-letter abbreviations: HC, CH, HH. Here the first letter identifies the type of agents performing innovation, the second letter specifies the type of selection agents. In some implementations (wiki is the most common example), human-based selection functionality might be limited, it can be shown with small h.

[edit] Methods of human-based computation

(HC) Darwin (Vyssotsky, Morris, McIlroy, 1961) and Core War (Jones, Dewdney 1984) These are games where several programs written by people compete in a tournament (computational simulation) in which fittest programs will survive. Authors of the programs copy, modify, and recombine successful strategies to improve their chances of winning.


(CH) Interactive EC (Caldwell and Johnston, 1991; Sims, 1991) IEC enables the user to create an abstract drawing only by selecting his/her favorite images, so human only performs fitness computation and software performs innovative role. [Unemi 1998] Simulated breeding style introduces no explicit fitness, just selection, which is easier for humans.


(HH2) Wiki (Cunningham, 1995) enabled editing the web content by multiple users, i.e. supported two types of human-based innovation (contributing new page and its incremental edits). However, the selection mechanism was absent until 2002, when wiki has been augmented with a revision history allowing for reversing of unhelpful changes. This provided means for selection among several versions of the same page and turned wiki into a tool supporting collaborative content evolution (would be classified as human-based evolution strategy in EC terms).


(HH3) Human-based genetic algorithm (Kosorukoff, 1998) uses both human-based selection and three types of human-based innovation (contributing new content, mutation, and recombination). Thus, all operators of a typical genetic algorithm are outsourced to humans (hence the origin of human-based). Examples include the 3form Free Knowledge Exchange (website), Knowledge iN, and Yahoo! Answers, all of which implement some form of collaborative problem-solving.


(HH1) Social search applications accept contributions from users and attempt to use human evaluation to select the fittest contributions that get to the top of the list. These use one type of human-based innovation. Early work was done in the context of HBGA. Digg and Reddit are recently popular examples.


(HC) Computerized tests. A computer generates a problem and presents it to evaluate a user. For example CAPTCHA tells human users from computer programs by presenting a problem that is supposedly easy for a human and difficult for a computer. While CAPTCHAs are effective security measures for preventing automated abuse of online services, the human effort spent solving them is otherwise wasted. The reCAPTCHA system makes use of these human cycles to help digitize books by presenting words from scanned old books that optical character recognition cannot decipher. (von Ahn et al., 2008).


(HC) Interactive online games: These are programs that extract knowledge from people in an entertaining way (Burgener, 1999; von Ahn 2003).


[edit] Incentives to participation
In different human-based computation projects people are motivated by one or more of the following.

Receiving a fair share of the result
Direct monetary compensation (e.g. in Amazon Mechanical Turk, Answerly Operator, ChaCha Search guide, Mahalo Answers members), HumanGrid
Desire to diversify their activity (e.g. "people aren't asked in their daily lives to be creative" [1])
Esthetic satisfaction
Curiosity, desire to test if it works
Volunteerism, desire to support a cause of the project
Reciprocity, exchange, mutual help
Desire to be entertained with the competitive spirit of a game
Desire to communicate and share knowledge
Desire to share a user innovation to see if someone else can improve on it
Desire to game the system and influence the final result

Many projects had explored various combinations of these incentives. See more information about motivation of participants in these projects in Kosorukoff (2000) and von Hippel (2005).

[edit] Human-based computation as a form of social organization
Viewed as a form of social organization, human-based computation often surprisingly turns out to be more robust and productive than traditional organizations (Kosorukoff and Goldberg, 2002). The latter depend on obligations to maintain their more or less fixed structure, be functional and stable. Each of them is similar to a carefully designed mechanism with humans as its parts. However, this limits the freedom of their human employees and subjects them to various kinds of stresses. Most people, unlike mechanical parts, find it difficult to adapt to some fixed roles that best fit the organization. Evolutionary human-computation projects offer a natural solution to this problem. They adapt organizational structure to human spontaneity, accommodate human mistakes and creativity, and utilize both in a constructive way. This leaves their participants free from obligations without endangering the functionality of the whole, making people happier. There are still some challenging research problems that need to be solved before we can realize the full potential of this idea.
The algorithmic outsourcing techniques used in human-based computation are much more scalable than the manual or automated techniques used to manage outsourcing traditionally. It is this scalability that allows to easily distribute the effort among thousands of participants. It was suggested recently that this mass outsourcing is sufficiently different from traditional small-scale outsourcing to merit a new name crowdsourcing (Howe, 2006).

[edit] See also

Citizen science
Citizen sensor network
Collaborative intelligence
Collaborative Innovation Networks
Collaborative human interpreter
Crowdsourcing
Game with a purpose (or GWAP)
Galaxy Zoo
Human computer
Human Computer Information Retrieval
Simulated reality
Social software
Social computing
Social organization
Symbiotic intelligence


[edit] References

Dawkins, R. (1986) The Blind Watchmaker, Longman, 1986; Penguin Books 1988.
Caldwell, C. and Johnston V. S. (1991), Tracking a Criminal Suspect through "Face-Space" with a Genetic Algorithm, in Proceedings of the Fourth International Conference on Genetic Algorithm, Morgan Kaufmann Publisher, pp. 416-421, July 1991. (US Patent 5,375,195 filed 1992.06.29) U.S. Patent 5,375,195 
Sims, K. (1991) Artificial Evolution for Computer Graphics, Computer Graphics, 25(4) (SIGGRAPH'91), 319-328 (US Patent 6,088,510 filed 1992.07.02) U.S. Patent 6,088,510 
Herdy, M. (1996) Evolution strategies with subjective selection. In Parallel Problem Solving from Nature, PPSN IV, Volume 1141 of LNCS (pp. 22-31)
Unemi, T. (1998) A Design of multi-field user interface for simulated breeding, Proceedings of the Third Asian Fuzzy and Intelligent System Symposium, 489-494
Kosorukoff (1998) Alex Kosorukoff, Free Knowledge Exchange, human-based genetic algorithm on the web archive description
Lillibridge, M.D., et al. (1998) Method for selectively restricting access to computer systems, US Patent U.S. Patent 6,195,698 
Burgener (1999) Twenty questions: the neural-net on the Internet archive website
Kosorukoff, A. (2000) Social classification structures. Optimal decision making in an organization, Genetic and Evolutionary Computation Conference, GECCO-2000, Late breaking papers, 175-178 online
Kosorukoff, A. (2000) Human-based genetic algorithm online
Cunningham, Ward and Leuf, Bo (2001): The Wiki Way. Quick Collaboration on the Web. Addison-Wesley, ISBN 0-201-71499-X.
Hideyuki Takagi (2001) Interactive Evolutionary Computation: Fusion of the Capabilities of EC Optimization and Human Evaluation, Proceedings of the IEEE, vol.89, no. 9, pp. 1275-1296
Kosorukoff, A. (2001) Human-based Genetic Algorithm. IEEE Transactions on Systems, Man, and Cybernetics, SMC-2001, 3464-3469
Kosorukoff, A. & Goldberg, D. E. (2001) Genetic algorithms for social innovation and creativity (Illigal report No 2001005). Urbana, IL: University of Illinois at Urbana-Champaign online
Kosorukoff, A., Goldberg D. E. (2002) Genetic algorithm as a form of organization, Proceedings of Genetic and Evolutionary Computation Conference, GECCO-2002, pp 965-972 online
Fogarty, T.C., (2003) Automatic concept evolution, Proceedings of The Second IEEE International Conference on Cognitive Informatics.
von Ahn, L., Blum, M., Hopper, N., and Langford, J. (2003) CAPTCHA: Using Hard AI Problems for Security, in Advances in Cryptology, E. Biham, Ed., vol. 2656 of Lecture Notes in Computer Science (Springer, Berlin, 2003), pp. 294–311. online
von Ahn, L. (2003) Method for labeling images through a computer game US Patent Application 10/875913
von Ahn, L. and Dabbish, L. (2004) Labeling Images with a Computer Game. Proceedings of the SIGCHI Conference on Human Factors in Computing Systems (Association for Computing Machinery, New York, 2004), pp. 319–326. online
Fogarty, T.C. and Hammond, M.O. (2005) Co-operative OuLiPian Generative Literature using Human Based Evolutionary Computing, GECCO 2005, Washington DC.
von Hippel, E. (2005) Democratizing Innovation, MIT Press online
Gentry, C., et al. (2005) Secure Distributed Human Computation In Ninth International Conference on Financial Cryptography and Data Security FC'2005 online
Howe, J. (2006) The Rise of Crowdsourcing, Wired Magazine, June 2006. online
von Ahn, L., Kedia, M., and Blum, M. (2006) Verbosity: A Game for Collecting Common-Sense Facts, ACM CHI Notes 2006 online
von Ahn, L., Ginosar, S., Kedia, M., and Blum, M. (2006) Improving Accessibility of the Web with a Computer Game, ACM CHI Notes 2006 online
Sunstein, C. (2006) Infotopia: How Many Minds Produce Knowledge, Oxford University Press, website
Tapscott, D., Williams, A. D. (2007) Wikinomics, Portfolio Hardcover website
von Ahn, L., Maurer, B., McMillen, C., Abraham, D., and Blum, M. (2008) reCAPTCHA: Human-Based Character Recognition via Web Security Measures. Science, September 12, 2008. Pages 1465-1468. online


[edit] Footnotes


^ (Q&A) Your Assignment: Art



[edit] External links

Human Computation, a Google Tech Talk by Luis von Ahn
Utyp, Open Source Human Computation based Search Engine for images and pictures utilizing a Flash game




Retrieved from "http://en.wikipedia.org/wiki/Human-based_computation"
Categories: Human-based computation 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


한국어
Português









 This page was last modified on 25 March 2009, at 21:08 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
