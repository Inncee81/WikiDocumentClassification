













Wireless sensor network - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Wireless_sensor_network";
		var wgTitle = "Wireless sensor network";
		var wgAction = "view";
		var wgArticleId = "1076662";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 278141876;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Wireless sensor network

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
"WSN" redirects here. For the metasyntax, see Wirth syntax notation.





The lists in this article may contain items that are not notable, encyclopedic, or helpful. Please help out by removing such elements and incorporating appropriate items into the main body of the article. (January 2008)






Typical Multihop Wireless Sensor Network Architecture


A wireless sensor network (WSN) is a wireless network consisting of spatially distributed autonomous devices using sensors to cooperatively monitor physical or environmental conditions, such as temperature, sound, vibration, pressure, motion or pollutants, at different locations.[1][2] The development of wireless sensor networks was originally motivated by military applications such as battlefield surveillance. However, wireless sensor networks are now used in many industrial and civilian application areas, including industrial process monitoring and control, machine health monitoring, environment and habitat monitoring, healthcare applications, home automation, and traffic control.[1][3]
In addition to one or more sensors, each node in a sensor network is typically equipped with a radio transceiver or other wireless communications device, a small microcontroller, and an energy source, usually a battery. The envisaged size of a single sensor node can vary from shoebox-sized nodes down to devices the size of grain of dust,[1] although functioning 'motes' of genuine microscopic dimensions have yet to be created. The cost of sensor nodes is similarly variable, ranging from hundreds of dollars to a few cents, depending on the size of the sensor network and the complexity required of individual sensor nodes.[1] Size and cost constraints on sensor nodes result in corresponding constraints on resources such as energy, memory, computational speed and bandwidth.[1]
A sensor network normally constitutes a wireless ad-hoc network, meaning that each sensor supports a multi-hop routing algorithm (several nodes may forward data packets to the base station).
In computer science and telecommunications, wireless sensor networks are an active research area with numerous workshops and conferences arranged each year.




Contents


1 Applications

1.1 Area monitoring
1.2 Environmental monitoring


2 Characteristics
3 Platforms

3.1 Standards
3.2 Hardware
3.3 Software

3.3.1 Operating systems
3.3.2 Middleware
3.3.3 Programming languages
3.3.4 Algorithms




4 Simulators
5 Data visualization
6 See also
7 References
8 Further reading

8.1 Journals


9 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Applications
The applications for WSNs are many and varied, but typically involve some kind of monitoring, tracking, and controlling. Specific applications for WSNs include habitat monitoring, object tracking, nuclear reactor control, fire detection, and traffic monitoring. In a typical application, a WSN is scattered in a region where it is meant to collect data through its sensor nodes.

[edit] Area monitoring
Area monitoring is a common application of WSNs. In area monitoring, the WSN is deployed over a region where some phenomenon is to be monitored. For example, a large quantity of sensor nodes could be deployed over a battlefield to detect enemy intrusion instead of using landmines.[4] When the sensors detect the event being monitored (heat, pressure, sound, light, electro-magnetic field, vibration, etc), the event needs to be reported to one of the base stations, which can take appropriate action (e.g., send a message on the internet or to a satellite). Depending on the exact application, different objective functions will require different data-propagation strategies, depending on things such as need for real-time response, redundancy of the data (which can be tackled via data aggregation techniques), need for security, etc.

[edit] Environmental monitoring
A number of WSN deployments have been done in the past in the context of environmental monitoring[5]. Many of these have been short lived, often due to the prototypical nature of the projects. A more long-lived deployment is monitoring the state of permafrost in the swiss alps: [The PermaSense Project], [PermaSense Live Data Browser]

[edit] Characteristics





This section does not cite any references or sources. Please help improve this article by adding citations to reliable sources (ideally, using inline citations). Unsourced material may be challenged and removed. (August 2006)


Unique characteristics of a WSN include:

Limited power they can harvest or store
Ability to withstand harsh environmental conditions
Ability to cope with node failures
Mobility of nodes
Dynamic network topology
Communication failures
Heterogeneity of nodes
Large scale of deployment
Unattended operation

Sensor nodes can be imagined as small computers, extremely basic in terms of their interfaces and their components. They usually consist of a processing unit with limited computational power and limited memory, sensors (including specific conditioning circuitry), a communication device (usually radio transceivers or alternatively optical), and a power source usually in the form of a battery. Other possible inclusions are energy harvesting modules, secondary ASICs, and possibly secondary communication devices (e.g. RS-232 or USB).
The base stations are one or more distinguished components of the WSN with much more computational, energy and communication resources. They act as a gateway between sensor nodes and the end user.

[edit] Platforms

[edit] Standards
Several standards are currently either ratified or under development for wireless sensor networks. ZigBee is a mesh-networking standard intended for uses such as embedded sensing, medical data collection, consumer devices like television remote controls, and home automation. Zigbee is promoted by a large consortium of industry players. WirelessHART is an extension of the HART Protocol and is specifically designed for Industrial applications like Process Monitoring and Control. WirelessHART was added to the overall HART protocol suite as part of the HART 7 Specification, which was approved by the HART Communication Foundation in June 2007[6]. 6LoWPAN [7] is the IETF standards track specification for the IP-to-MAC-Layer mapping for IPv6 on IEEE 802.15.4. ISA100 is a new standard under development that makes use of 6lowpan and provides additional agreements for industrial control applications[citation needed]. ISA100 is scheduled for completion in 2009. ZigBee, WirelessHART, and 6lowpan/ISA100 all are based on the same underlying radio standard: IEEE 802.15.4 - 2006.

[edit] Hardware
Main article: sensor node
The main challenge is to produce low cost and tiny sensor nodes. With respect to these objectives, current sensor nodes are mainly prototypes. Miniaturization and low cost are understood to follow from recent and future progress in the fields of MEMS and NEMS. Some of the existing sensor nodes are given below. Some of the nodes are still in research stage.
An overview of commonly used sensor network platforms, components, technology and related topics is available in the SNM - Sensor Network Museumtm.

[edit] Software
Energy is the scarcest resource of WSN nodes, and it determines the lifetime of WSNs. WSNs are meant to be deployed in large numbers in various environments, including remote and hostile regions, with ad-hoc communications as key. For this reason, algorithms and protocols need to address the following issues:

Lifetime maximization
Robustness and fault tolerance
Self-configuration

Some of the "hot" topics in WSN software research are:

Security
Mobility (when sensor nodes or base stations are moving)
Middleware: the design of middle-level primitives between the software and the hardware


[edit] Operating systems
Operating systems for wireless sensor network nodes are typically less complex than general-purpose operating systems both because of the special requirements of sensor network applications and because of the resource constraints in sensor network hardware platforms. For example, sensor network applications are usually not interactive in the same way as applications for PCs. Because of this, the operating system does not need to include support for user interfaces. Furthermore, the resource constraints in terms of memory and memory mapping hardware support make mechanisms such as virtual memory either unnecessary or impossible to implement.
Wireless sensor network hardware is not different from traditional embedded systems and it is therefore possible to use embedded operating systems such as eCos or uC/OS for sensor networks. However, such operating systems are often designed with real-time properties. Unlike traditional embedded operating systems, however, operating systems specifically targeting sensor networks often do not have real-time support.
TinyOS[8] is perhaps the first[citation needed] operating system specifically designed for wireless sensor networks. Unlike most other operating systems, TinyOS is based on an event-driven programming model instead of multithreading. TinyOS programs are composed into event handlers and tasks with run to completion-semantics. When an external event occurs, such as an incoming data packet or a sensor reading, TinyOS calls the appropriate event handler to handle the event. Event handlers can post tasks that are scheduled by the TinyOS kernel some time later. Both the TinyOS system and programs written for TinyOS are written in a special programming language called nesC which is an extension to the C programming language. NesC is designed to detect race conditions between tasks and event handlers.
There are also operating systems that allow programming in C. Examples of such operating systems include Contiki,[9] MANTIS,[10] BTnut,[11] SOS[12] and Nano-RK.[13] Contiki is designed to support loading modules over the network and supports run-time loading of standard ELF files.[14] The Contiki kernel is event-driven, like TinyOS, but the system supports multithreading on a per-application basis.[15] Furthermore, Contiki includes protothreads that provide a thread-like programming abstraction but with a very small memory overhead.[16] Unlike the event-driven Contiki kernel, the MANTIS and Nano-RK kernels are based on preemptive multithreading.[17][18] With preemptive multithreading, applications do not need to explicitly yield the microprocessor to other processes. Instead, the kernel divides the time between the active processes and decides which process that currently can be run which makes application programming easier. Nano-RK is a real-time resource kernel that allows fine grained control of the way tasks get access to CPU time, networking and sensors. Like TinyOS and Contiki, SOS is an event-driven operating system.[19] The prime feature of SOS is its support for loadable modules. A complete system is built from smaller modules, possibly at run-time. To support the inherent dynamism in its module interface, SOS also focuses on support for dynamic memory management.[20] BTnut[21] is based on cooperative multi-threading and plain C code, and is packaged with a developer kit and tutorial[22]

[edit] Middleware
There is considerable research effort currently invested in the design of middleware for WSN's.[3] In general approaches can be classified into distributed database, mobile agents, and event-based.[23]

[edit] Programming languages
Programming the sensor nodes is difficult when compared with normal computer systems. The resource constrained nature of these nodes gives rise to new programming models although most nodes are currently programmed in C.

c@t (Computation at a point in space (@) Time)
DCL (Distributed Compositional Language)
galsC
nesC
Protothreads
SNACK
SNAPpy (Python)
SQTL
Java Sun SPOT
uSWN


[edit] Algorithms





This section does not cite any references or sources. Please help improve this article by adding citations to reliable sources (ideally, using inline citations). Unsourced material may be challenged and removed. (August 2006)


WSNs are composed of a large number of sensor nodes, therefore, an algorithm for a WSN is implicitly a distributed algorithm. In WSNs the scarcest resource is energy, and one of the most energy-expensive operations is data transmission. For this reason, algorithmic research in WSN mostly focuses on the study and design of energy aware algorithms for data transmission from the sensor nodes to the base stations. Data transmission is usually multi-hop (from node to node, towards the base stations), due to the polynomial growth in the energy-cost of radio transmission with respect to the transmission distance.
The algorithmic approach to WSN differentiates itself from the protocol approach by the fact that the mathematical models used are more abstract, more general, but sometimes less realistic than the models used for protocol design.

[edit] Simulators
There are platforms specifically designed to simulate Wireless Sensor Networks, like TOSSIM, which is a part of TinyOS. Traditional network simulators like ns-2 have also been used. A platform independent component based simulator with wireless sensor network framework,J-Sim(www.j-sim.org) can also be used. An extensive list of simulation tools for Wireless Sensor Networks can be found at the CRUISE WSN Simulation Tool Knowledgebase

[edit] Data visualization
The data gathered from wireless sensor networks is usually saved in the form of numerical data in a central base station. Additionally, the Open Geospatial Consortium (OGC) is specifying standards for interoperability interfaces and metadata encodings that enable real time integration of heterogeneous sensor webs into the Internet, allowing any individual to monitor or control Wireless Sensor Networks through a Web Browser. There are several techniques to retrieve data from the nodes ,some of the protocols rely on flooding mechanisms , other map the data to nodes by applying the concept of DHT[24] [25]

[edit] See also

Sensor node
Mesh networking
Mobile ad-hoc network (MANETS)
neuRFon
Smartdust
Sensor Web
TSMP
Visual sensor network
Key distribution in wireless sensor networks
EnOcean
Sun SPOT
telemetry
Location estimation in sensor networks
Dust Networks


[edit] References


^ a b c d e Römer, Kay; Friedemann Mattern (December 2004). "The Design Space of Wireless Sensor Networks". IEEE Wireless Communications 11 (6): 54–61. doi:10.1109/MWC.2004.1368897. http://www.vs.inf.ethz.ch/publ/papers/wsn-designspace.pdf. 
^ Thomas Haenselmann (2006-04-05). Sensornetworks. GFDL Wireless Sensor Network textbook. http://www.informatik.uni-mannheim.de/~haensel/sn_book. Retrieved on 2006-08-29. 
^ a b Hadim, Salem; Nader Mohamed (2006). "Middleware Challenges and Approaches for Wireless Sensor Networks". IEEE Distributed Systems Online 7 (3): 1. doi:10.1109/MDSO.2006.19. http://dsonline.computer.org/portal/pages/dsonline/2006/03/o3001.html.  art. no. 0603-o3001.
^ Sample, Ian (April 2001), Alternatives to landmines, New Scientist, http://www.scienceblog.com/community/older/2001/C/200113355.html, retrieved on 15-1-2009 
^ Hart, Jane (2006), Environmental Sensor Networks:A revolution in the earth system science?, [1], http://eprints.ecs.soton.ac.uk/13093/, retrieved on 15-1-2009 
^ WirelessHART Standard Approved and Released
^ RFC 4944 - Transmission of IPv6 Packets over IEEE 802.15.4-2006 Networks
^ TinyOS Community Forum || An open-source OS for the networked sensor regime
^ The Contiki Operating System - Home
^ MANTIS: HomePage
^ BTnodes - A Distributed Environment for Prototyping Ad Hoc Networks: Main - Overview browse
^ Automatic Re-direct to new SOS website
^ nano-RK - Trac
^ Adam Dunkels, Niclas Finne, Joakim Eriksson, and Thiemo Voigt. Run-Time Dynamic Linking for Reprogramming Wireless Sensor Networks. In Proceedings of the Fourth ACM Conference on Embedded Networked Sensor Systems (SenSys 2006), Boulder, Colorado, USA, November 2006.
^ Adam Dunkels, Björn Grönvall, and Thiemo Voigt. Contiki - a Lightweight and Flexible Operating System for Tiny Networked Sensors. In Proceedings of the First IEEE Workshop on Embedded Networked Sensors 2004 (IEEE EmNetS-I), Tampa, Florida, USA, November 2004.
^ Adam Dunkels, Oliver Schmidt, Thiemo Voigt, and Muneeb Ali. Protothreads: Simplifying Event-Driven Programming of Memory-Constrained Embedded Systems. In Proceedings of the Fourth ACM Conference on Embedded Networked Sensor Systems (SenSys 2006), Boulder, Colorado, USA, November 2006.
^ S. Bhatti, J. Carlson, H. Dai, J. Deng, J. Rose, A. Sheth, B. Shucker, C. Gruenwald, A. Torgerson, R. Han, MANTIS OS: An Embedded Multithreaded Operating System for Wireless Micro Sensor Platforms, ACM/Kluwer Mobile Networks & Applications (MONET), Special Issue on Wireless Sensor Networks, vol. 10, no. 4, August 2005.
^ A. Eswaran, A. Rowe and R. Rajkumar, Nano-RK: An Energy-Aware Resource-Centric Operating System for Sensor Networks, IEEE Real-Time Systems Symposium, December 2005.
^ Chih-Chieh Han, Ram Kumar Rengaswamy, Roy Shea, Eddie Kohler and Mani Srivastava. SOS: A dynamic operating system for sensor networks, Proceedings of the Third International Conference on Mobile Systems, Applications, And Services (Mobisys), 2005.
^ [Han, C., Kumar, R., Shea, R., Kohler, E., and Srivastava, M. 2005. A dynamic operating system for sensor nodes. In Proceedings of the 3rd international Conference on Mobile Systems, Applications, and Services (Seattle, Washington, June 6-8, 2005). MobiSys '05. ACM Press, New York, NY, 163-176.]
^ BTnodes - A Distributed Environment for Prototyping Ad Hoc Networks
^ BTnode Programming - An Introduction to BTnut Applications
^ Römer, Kay (February 2004). "Programming Paradigms and Middleware for Sensor Networks". GI/ITG Fachgespräch Sensornetze, Karlsruhe. http://www.vs.inf.ethz.ch/publ/papers/middleware-kuvs.pdf. 
^ Awad, Abdalkarim and Sommer, Christoph and German, Reinhard and Dressler, Falko. [Virtual Cord Protocol (VCP): A Flexible DHT-like Routing Service for Sensor Networks]. 5th IEEE International Conference on Mobile Ad-hoc and Sensor Systems (IEEE MASS 2008), Atlanta, Georgia, USA, September 2008.
^ Ratnasamy, Sylvia and Karp, Brad and Shenker, Scott and Estrin, Deborah and Govindan, Ramesh and Yin, Li and Yu, Fang [Data-Centric Storage in Sensornets with GHT, a Geographic Hash Table]. ACM/Springer Mobile Networks and Applications (MONET), Special Issue on Wireless Sensor Networks, August 2003.



[edit] Further reading

SensorNetBib: an online wireless sensor networks bibliography, organized by subject, with links to more than 1000 technical papers.
Wireless Sensor Networks, Cauligi S. Raghavendra (Editor), Krishna M. Sivalingam (Editor), Taieb Znati
Wireless Sensor Networks: Architectures and Protocols, Edgar H. Callaway, Jr., CRC Press, August 2003, 352 pages, ISBN 0-8493-1823-8.
Wireless Sensor Networks: An Information Processing Approach, Feng Zhao and Leonidas Guibas, Morgan Kaufmann, 2004. ISBN 1-55860-914-8.
Handbook of sensor networks; algorithms and architectures, Edited by Ivan Stojmenovic, Wiley-Interscience, 2005, 531 pages.
Wireless Sensor Network A Systems Perspective, Nirupama Bulusu, Sanjay Jha, Artech House, Published July 2005, ISBN 1-58053-867-3
Protocols and Architectures for Wireless Sensor Networks, Holger Karl, Andreas Willig, ISBN 0-470-09511-3, 526 pages, January 2006
Self-Organization in Sensor and Actor Networks, Falko Dressler, Wiley & Sons, 2007, ISBN 978-0470028209.
Adhoc and Sensor Networks Theory and Applications, Carlos de Morais Cordeiro (Philips Research North America, USA) & Dharma Prakash Agrawal (University of Cincinnati, USA), March 2006.
Networking Wireless Sensors, Bhaskar Krishnamachari (University of Southern California), (ISBN-13: 9780521838474 | ISBN-10: 0521838479)
Power Sources for Wireless Networks, S. Roundy, D. Steingart, L. Fréchette, P. K. Wright, J. Rabaey, Proc. 1st European Workshop on Wireless Sensor Networks (EWSN '04), Berlin, Germany, Jan. 2004.
Energy Scavenging for Wireless Sensor Networks: With Special Focus on Vibrations, Shad Roundy, Paul Kenneth Wright, Jan M. Rabaey, 232 pages, Kluwer Academic Publishers; (January 1, 2004), ISBN 1-4020-7663-0.
Distributed Sensor Networks", S. S. Iyengar, R. R. Brooks, Chapman & Hall/CRC; (October 22, 2004), ISBN 1-58488-383-9 .
Handbook of Sensor Networks: Compact Wireless and Wired Sensing Systems, Mohammad Ilyas, Imad Mahgoub, 672 pages CRC Press; (July 16, 2004), ISBN 0-8493-1968-4 .
Algorithmic Aspects Of Wireless Sensor Networks (Lecture Notes in Computer Science)", Sotiris Nikoletseas, Jose Rolim, Springer-Verlag; (September 30, 2004), ISBN 3-540-22476-9 .
Mobile, Wireless, and Sensor Networks: Technology, Applications, and Future Directions Rajeev Shorey, A. Ananda, Mun Choon Chan, Wei Tsang Ooi, ISBN 0-471-75558-3, 422 pages, March 2006 .
Sensornetworks, Thomas Haenselmann, GFDL Wireless Sensor Network textbook
Overview of wireless sensor networks David Culler, Deborah Estrin, Mani Srivastava, IEEE Computer, Special Issue in Sensor Networks, August 2004
VIP Bridge: Leading Ubiquitous Sensor Networks to the Next Generation Lei Shu, Jinsung Cho, Zhang Lin, and Manfred Hauswirth, Journal of Internet Technology, special issue on “IPv6-based Mobile/Multimedia Applications”, July 15, 2007
A TinyOS-Based Ad Hoc Wireless Sensor Network, Rainer Matischek, VDM, 2008 (104 pages), ISBN 3639039866


[edit] Journals

ACM Transactions on Sensor Networks [2]
International Journal of Distributed Sensor Networks [3]


[edit] External links

The Sensor Network Museumtm
Wireless Sensing Interest Group A UK-based Interest Group on Wireless Sensing and Sensor Networks.
Brussels WSN research lab Wireless Sensor Networks at the University of Brussels.
CRISP Wireless Sensor Network Research Group at the Cornell University.
A WSN wiki Contains some of the material which has been removed from this page for being not enough "general audience" oriented.
WSN Resources WSN, ZigBee and 802.15.4 resources including white papers and glossary
BiSNET: Biologically-inspired architecture for Sensor NETworks
Wireless Sensor Network Security
Wireless Sensor Networks Research Group Projects and tutorials' compilation related to the WSN field
Wireless Sensor Networks for Ecology A video about high performance wireless research education networks




Topics in Wireless Sensor Networks


Software
Hardware
Conferences/Journals
Standards


Operating Systems
Programming Languages
Middleware
Simulators


TinyOS, SOS, Contiki, Nano-RK
nesC
TinyDB
TOSSIM,NS-2
Sun SPOT
Sensys, IPSN, EWSN,SECON, INSS, DCOSS,MASS
ZigBee, 6LoWPAN, ROLL









v • d • e

Computer sizes





Larger

Super · Minisuper · Mainframe · Mini · Supermini · Server









Micro

Personal · Workstation · Home · Desktop · SFF (Nettop) · Plug






Mobile





Portable / Desktop replacement computer · Laptop · Subnotebook · Tablet (Ultra-Mobile PC) · Portable / Mobile data terminal · Electronic organizer · E-book reader · Pocket computer · Handheld game console · Wearable computer







PDAs / IAs


Handheld PC · Pocket PC · Smartphone · PMPs · DAPs







Calculators


Graphing









Other

Single-board computer · Wireless sensor network · Microcontroller · Smartdust · Nanocomputer









Retrieved from "http://en.wikipedia.org/wiki/Wireless_sensor_network"
Categories: Wireless sensor networkHidden categories: Cleanup from January 2008 | Wikipedia laundry list cleanup | Articles needing additional references from August 2006 | All articles with unsourced statements | Articles with unsourced statements since August 2008 | Articles with unsourced statements since April 2007 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


العربية
Deutsch
Español
فارسی
Français
한국어
Hrvatski
Italiano
Nederlands
日本語
Polski
Português
Русский
Svenska
中文









 This page was last modified on 18 March 2009, at 17:10.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
