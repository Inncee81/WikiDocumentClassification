













Grid computing - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Grid_computing";
		var wgTitle = "Grid computing";
		var wgAction = "view";
		var wgArticleId = "49373";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281788188;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Grid computing

From Wikipedia, the free encyclopedia

Jump to: navigation, search 





This article may require copy-editing for grammar, style, cohesion, tone or spelling. You can assist by editing it now. A how-to guide is available. (November 2008)


Grid computing (or the use of computational grids) is the application of several computers to a single problem at the same time – usually to a scientific or technical problem that requires a great number of computer processing cycles or access to large amounts of data.
Grid computing depends on software to divide and apportion pieces of a program among several computers, sometimes up to many thousands. Grid computing can also be thought of as distributed[citation needed] and large-scale cluster computing, as well as a form of network-distributed parallel processing[citation needed]. It can be small -- confined to a network of computer workstations within a corporation, for example -- or it can be a large, public collaboration across many companies or networks.
It is a form of distributed computing whereby a "super and virtual computer" is composed of a cluster of networked, loosely coupled computers, acting in concert to perform very large tasks. This technology has been applied to computationally intensive scientific, mathematical, and academic problems through volunteer computing, and it is used in commercial enterprises for such diverse applications as drug discovery, economic forecasting, seismic analysis, and back-office data processing in support of e-commerce and Web services.
What distinguishes grid computing from conventional cluster computing systems is that grids tend to be more loosely coupled, heterogeneous, and geographically dispersed. Also, while a computing grid may be dedicated to a specialized application, it is often constructed with the aid of general-purpose grid software libraries and middleware.




Contents


1 Grids versus conventional supercomputers
2 Design considerations and variations
3 Market Segmentation of the Grid computing market

3.1 The Provider Side
3.2 The User Side


4 CPU scavenging
5 Taxation Issues in Grid Computing
6 History
7 Fastest virtual supercomputers
8 Current projects and applications
9 Definitions
10 See also

10.1 Concepts and related technology
10.2 Alliances and organizations
10.3 Production grids
10.4 International Grid Projects
10.5 National Grid Projects
10.6 Standards and APIs
10.7 Software implementations and middleware


11 References

11.1 Notes
11.2 Bibliographic list


12 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Grids versus conventional supercomputers
"Distributed" or "grid" computing in general is a special type of parallel computing[citation needed] that relies on complete computers (with onboard CPU, storage, power supply, network interface, etc.) connected to a network (private, public or the Internet) by a conventional network interface, such as Ethernet. This is in contrast to the traditional notion of a supercomputer, which has many processors connected by a local high-speed computer bus.
The primary advantage of distributed computing is that each node can be purchased as commodity hardware, which when combined can produce similar computing resources to a multiprocessor supercomputer, but at lower cost. This is due to the economies of scale of producing commodity hardware, compared to the lower efficiency of designing and constructing a small number of custom supercomputers. The primary performance disadvantage is that the various processors and local storage areas do not have high-speed connections. This arrangement is thus well suited to applications in which multiple parallel computations can take place independently, without the need to communicate intermediate results between processors.
The high-end scalability of geographically dispersed grids is generally favorable, due to the low need for connectivity between nodes relative to the capacity of the public Internet.
There are also some differences in programming and deployment. It can be costly and difficult to write programs so that they can be run in the environment of a supercomputer, which may have a custom operating system, or require the program to address concurrency issues. If a problem can be adequately parallelized, a "thin" layer of "grid" infrastructure can allow conventional, standalone programs to run on multiple machines (but each given a different part of the same problem). This makes it possible to write and debug on a single conventional machine, and eliminates complications due to multiple instances of the same program running in the same shared memory and storage space at the same time.

[edit] Design considerations and variations
One feature of distributed grids is that they can be formed from computing resources belonging to multiple individuals or organizations (known as multiple administrative domains). This can facilitate commercial transactions, as in utility computing, or make it easier to assemble volunteer computing networks.
One disadvantage of this feature is that the computers which are actually performing the calculations might not be entirely trustworthy. The designers of the system must thus introduce measures to prevent malfunctions or malicious participants from producing false, misleading, or erroneous results, and from using the system as an attack vector. This often involves assigning work randomly to different nodes (presumably with different owners) and checking that at least two different nodes report the same answer for a given work unit. Discrepancies would identify malfunctioning and malicious nodes.
Due to the lack of central control over the hardware, there is no way to guarantee that nodes will not drop out of the network at random times. Some nodes (like laptops or dialup Internet customers) may also be available for computation but not network communications for unpredictable periods. These variations can be accommodated by assigning large work units (thus reducing the need for continuous network connectivity) and reassigning work units when a given node fails to report its results as expected.
The impacts of trust and availability on performance and development difficulty can influence the choice of whether to deploy onto a dedicated computer cluster, to idle machines internal to the developing organization, or to an open external network of volunteers or contractors.
In many cases, the participating nodes must trust the central system not to abuse the access that is being granted, by interfering with the operation of other programs, mangling stored information, transmitting private data, or creating new security holes. Other systems employ measures to reduce the amount of trust "client" nodes must place in the central system such as placing applications in virtual machines.
Public systems or those crossing administrative domains (including different departments in the same organization) often result in the need to run on heterogeneous systems, using different operating systems and hardware architectures. With many languages, there is a tradeoff between investment in software development and the number of platforms that can be supported (and thus the size of the resulting network). Cross-platform languages can reduce the need to make this tradeoff, though potentially at the expense of high performance on any given node (due to run-time interpretation or lack of optimization for the particular platform).
Various middleware projects have created generic infrastructure, to allow diverse scientific and commercial projects to harness a particular associated grid, or for the purpose of setting up new grids. BOINC is a common one for academic projects seeking public volunteers; more are listed at the end of the article.
In fact, the middleware can be seen as a layer between the hardware and the software. On top of the middleware, a number of technical areas have to be considered, and these may or may not be middleware independent. Example areas include SLA management, Trust and Security, VO management, License Management, Portals and Data Management. These technical areas may be taken care of in a commercial solution, though the cutting edge of each area is often found within specific research projects examining the field.

[edit] Market Segmentation of the Grid computing market
According to Gridipedia, for the segmentation of the Grid computing market, two perspectives need to be considered: the provider side and the user side:

[edit] The Provider Side
The overall Grid market comprises several specific markets. These are the Grid middleware market, the market for Grid-enabled applications, the utility computing market, and the software-as-a-Service (SaaS) market.
Grid middleware is a specific software product, which enables the sharing of heterogeneous resources, and virtual organizations. It is installed and integrated into the existing infrastructure of the involved company or companies, and provides a special layer placed among the heterogeneous infrastructure and the specific user applications. Major Grid middlewares are Globus Toolkit, gLite, and UNICORE.
Utility computing is referred to as the provision of Grid computing and applications as service either as an open grid utility or as a hosting solution for one organization or a Virtual Organization. Major players in the utility computing market are Sun Microsystems, IBM, and HP.
Grid-enabled applications are specific software applications that can utilize Grid infrastructure. This is made possible by the use of Grid middleware, as pointed out above.
Software as a Service (SaaS) is “software that is owned, delivered and managed remotely by one or more providers.” (Gartner 2007) Additionally, SaaS applications are based on a single set of common code and data definitions. They are consumed in a one-to-many model, and SaaS uses a Pay As You Go (PAYG) model or a subscription model that is based on usage. Providers of SaaS do not necessarily own the computing resources themselves, which are required to run their SaaS. Therefore, SaaS providers may draw upon the utility computing market. The utility computing market provides computing resources for SaaS providers.

[edit] The User Side
For companies on the demand or user side of the Grid computing market, the different segments have significant implications for their IT deployment strategy. The IT deployment strategy as well as the type of IT investments made are relevant aspects for potential Grid users and play an important role for Grid adoption.

[edit] CPU scavenging
CPU-scavenging, cycle-scavenging, cycle stealing, or shared computing creates a "grid" from the unused resources in a network of participants (whether worldwide or internal to an organization). Typically this technique uses desktop computer instruction cycles that would otherwise be wasted at night, during lunch, or even in the scattered seconds throughout the day when the computer is waiting for user input or slow devices.
Volunteer computing projects use the CPU scavenging model almost exclusively.
In practice, participating computers also donate some supporting amount of disk storage space, RAM, and network bandwidth, in addition to raw CPU power. Since nodes are likely to go "offline" from time to time, as their owners use their resources for their primary purpose, this model must be designed to handle such contingencies.

[edit] Taxation Issues in Grid Computing
The project BEinGRID has studied the legal issues involved in Grid computing. In particular, the issue of tax is crucial:
The first question to answer is why taxation issues are likely to be relevant in a Grid environment. This is a consequence of the distributed nature of the service provided: potentially taxable income may be generated from the use in combination of servers that are located in various tax domains. The problems that tax consultants and managers have to face are thus in many cases cumbersome and novel. It is therefore necessary to provide answers to the following questions: [1]
Firstly, which VAT rules are applicable to a European ICT company that is willing to provide e-services to businesses or individuals located in the same country, in another European country or outside the EU? In particular, what services can be considered as e-services (electronically supplied services)?`
Secondly, As regards international income taxation, how should a single server, node, etc of a Grid infrastructure be considered? Is it a permanent establishment (thereinafter, PE) of the company? These questions and the corresponding solutions are likely to have a great impact on the concrete business of ICT undertakings, and taxation is one of the most important drivers when drafting business plans. As regards the former question, the solutions are based on the applicable EC law sources, namely Directive 112/2006/EC, including the amendments introduced by Directive 2008/8/EC, while for what concern the international profiles of the server (and, in more general terms, Grid components) as PE we will refer to the Model Tax Convention and its Commentaries drafted by the Organisation for Economic Cooperation and Development (OECD).

[edit] History
The term grid computing originated in the early 1990s as a metaphor for making computer power as easy to access as an electric power grid in Ian Foster's and Carl Kesselman's seminal work, "The Grid: Blueprint for a new computing infrastructure."
CPU scavenging and volunteer computing were popularized beginning in 1997 by distributed.net and later in 1999 by SETI@home to harness the power of networked PCs worldwide, in order to solve CPU-intensive research problems.
The ideas of the grid (including those from distributed computing, object-oriented programming, and Web services) were brought together by Ian Foster, Carl Kesselman, and Steve Tuecke, widely regarded as the "fathers of the grid[2]." They led the effort to create the Globus Toolkit incorporating not just computation management but also storage management, security provisioning, data movement, monitoring, and a toolkit for developing additional services based on the same infrastructure, including agreement negotiation, notification mechanisms, trigger services, and information aggregation. While the Globus Toolkit remains the de facto standard for building grid solutions, a number of other tools have been built that answer some subset of services needed to create an enterprise or global grid.
In 2007 the term cloud computing came into popularity, which is conceptually similar to the canonical Foster definition of grid computing (in terms of computing resources being consumed as electricity is from the power grid). Indeed, grid computing is often (but not always) associated with the delivery of cloud computing systems as exemplified by the AppLogic system from 3tera.

[edit] Fastest virtual supercomputers



This section requires expansion.



BOINC -- 1.3 PFLOPS as of February 9, 2009.[3]
Folding@Home -- 5 PFLOPS, as of March 17, 2009 [4]


[edit] Current projects and applications
Main article: List of distributed computing projects
Grids offer a way to solve Grand Challenge problems such as protein folding, financial modeling, earthquake simulation, and climate/weather modeling. Grids offer a way of using the information technology resources optimally inside an organization. They also provide a means for offering information technology as a utility for commercial and noncommercial clients, with those clients paying only for what they use, as with electricity or water.
Grid computing is being applied by the National Science Foundation's National Technology Grid, NASA's Information Power Grid, Pratt & Whitney, Bristol-Myers Squibb Co., and American Express.[citation needed]
One of the most famous cycle-scavenging networks is SETI@home, which was using more than 3 million computers to achieve 23.37 sustained teraflops (979 lifetime teraflops) as of September 2001[update] [2].
As of March 2008, Folding@home had achieved peaks of 1,502 teraflops on over 270,000 machines.
The European Union has been a major proponent of Grid computing. Many projects have been fundied through the framework programme of the European Commission. Many of the projects are highlighted below, but two deserve special mention: BEinGRID and Enabling Grids for E-sciencE.
BEinGRID (Business Experiments in Grid) is a research project partly funded by the as an Integrated Project under the Sixth Framework Programme (FP6) sponsorship program. Started in June 1 2006, the project will run 42 months, until November 2009. The project is coordinated by Atos Origin. According to the project factsheet, their mission is "to establish effective routes to foster the adoption of Grid Computing across the EU and to stimulate research into innovative business models using Grid technologies." To extract best practice and common themes from the experimental implementations, two groups of consultants are analysing a series of pilots, one technical, one business. The results of these cross analyses are provided by the website Gridipedia. The project is significant not only for its long duration, but also for its budget, which at 24.8 million Euros, is the largest of any FP6 integrated project. Of this, 15.7 million is provided by the European commission and the remainder by its 98 contributing partner companies.
The Enabling Grids for E-sciencE project, which is based in the European Union and includes sites in Asia and the United States, is a follow-up project to the European DataGrid (EDG) and is arguably the largest computing grid on the planet. This, along with the LHC Computing Grid [5] (LCG), has been developed to support the experiments using the CERN Large Hadron Collider. The LCG project is driven by CERN's need to handle huge amounts of data, where storage rates of several gigabytes per second (10 petabytes per year) are required. A list of active sites participating within LCG can be found online[6] as can real time monitoring of the EGEE infrastructure.[7] The relevant software and documentation is also publicly accessible.[8]
Another well-known project is distributed.net, which was started in 1997 and has run a number of successful projects in its history.
The NASA Advanced Supercomputing facility (NAS) has run genetic algorithms using the Condor cycle scavenger running on about 350 Sun and SGI workstations.
Until April 27, 2007, United Devices operated the United Devices Cancer Research Project based on its Grid MP product, which cycle-scavenges on volunteer PCs connected to the Internet. As of June 2005[update], the Grid MP ran on about 3.1 million machines [3].
Another well-known project is the World Community Grid [4]. The World Community Grid's mission is to create the largest public computing grid that benefits humanity. This work is built on the belief that technological innovation combined with visionary scientific research and large-scale volunteerism can change our world for the better. IBM Corporation has donated the hardware, software, technical services, and expertise to build the infrastructure for World Community Grid and provides free hosting, maintenance, and support.

[edit] Definitions



This section may require cleanup to meet Wikipedia's quality standards.


Today there are many definitions of Grid computing:

In his article "What is the Grid? A Three Point Checklist"[9], Ian Foster lists these primary attributes:

Computing resources are not administered centrally.
Open standards are used.
Nontrivial quality of service is achieved.




Plaszczak/Wellner[10] define grid technology as "the technology that enables resource virtualization, on-demand provisioning, and service (resource) sharing between organizations."
IBM defines grid computing as "the ability, using a set of open standards and protocols, to gain access to applications and data, processing power, storage capacity and a vast array of other computing resources over the Internet. A grid is a type of parallel and distributed system that enables the sharing, selection, and aggregation of resources distributed across 'multiple' administrative domains based on their (resources) availability, capacity, performance, cost and users' quality-of-service requirements" [11]
An earlier example of the notion of computing as utility was in 1965 by MIT's Fernando Corb. Fernando and the other designers of the Multics operating system envisioned a computer facility operating "like a power company or water company". http://www.multicians.org/fjcc3.html
Buyya/Venugopal[12] define grid as "a type of parallel and distributed system that enables the sharing, selection, and aggregation of geographically distributed autonomous resources dynamically at runtime depending on their availability, capability, performance, cost, and users' quality-of-service requirements".
CERN, one of the largest users of grid technology, talk of The Grid: "a service for sharing computer power and data storage capacity over the Internet." [13]

Grids can be categorized with a three stage model of departmental grids, enterprise grids and global grids. These correspond to a firm initially utilising resources within a single group i.e. an engineering department connecting desktop machines, clusters and equipment. This progresses to enterprise grids where nontechnical staff's computing resources can be used for cycle-stealing and storage. A global grid is a connection of enterprise and departmental grids that can be used in a commercial or collaborative manner.

[edit] See also

[edit] Concepts and related technology

Cloud Computing
Data Grid
Computer cluster
Computon
Distributed computing
Edge computing
Grid FileSystem
High-performance computing
List of distributed computing projects
Metacomputing
Network Agility
Render farm
Semantic grid
Space based architecture (SBA)
Tuple Space
Supercomputer
Wireless


[edit] Alliances and organizations

Open Grid Forum (Formerly Global Grid Forum)
Object Management Group


[edit] Production grids

Enabling Grids for E-sciencE
INFN Production Grid
NorduGrid
Open Science Grid
OurGrid
Sun Grid
Xgrid


[edit] International Grid Projects


Name
Region
Start
End


Open Middleware Infrastructure Institute Europe (OMII-Europe)
Europe
May 2006
May 2008


Enabling Grids for E-sciencE (EGEE)
Europe
March 2004
March 2006


Enabling Grids for E-sciencE II (EGEE II)
Europe
April 2006
April 2008


D4Science (DIstributed colLaboratories Infrastructure on Grid ENabled Technology 4 Science)
Europe and Asia and the Pacific
January 2008
December 2009


E-science grid facility for Europe and Latin America (EELA-2)
Europe and Latin America
April 2008
March 2010


E-Infrastructure shared between Europe and Latin America (EELA)
Europe and Latin America
January 2006
December 2008


Business Experiments in GRID (BEinGRID)
Europe
June 2006
November 2009


BREIN
Europe
September 2006
January 2010


KnowARC
Europe
June 2006
August 2009


Nordic Data Grid Facility
Scandinavia and Finland
June 2006
December 2010


DataTAG
Europe and North America
January 2001
January 2003


European DataGrid (EDG)
Europe
March 2001
March 2004


BalticGrid/BalticGrid II
Europe (Baltic States)
November 2005
April 2010


EUFORIA (EU Fusion fOR Iter Applications)
Europe
January 2008
December 2010


World Community Grid
Global
November 2004
unknown


XtreemOS
Europe
June 2006
June 2010


GridEcon
Europe
June 2006
April 2009



[edit] National Grid Projects

D-Grid (German)
GARUDA (Indian)
National Grid Service (UK)
Open Science Grid (USA)
VECC (Calcutta, India)
INFN Grid (Italian)


[edit] Standards and APIs

A Simple API for Grid Applications (SAGA)
Distributed Resource Management Application API (DRMAA)
Grid Security Infrastructure (GSI)
Open Grid Services Architecture (OGSA)
Open Grid Services Infrastructure (OGSI)
Web Services Resource Framework (WSRF)


[edit] Software implementations and middleware

Advanced Resource Connector (NorduGrid's ARC)
Berkeley Open Infrastructure for Network Computing (BOINC)
Globus Toolkit
Platform LSF
Message Passing Interface (MPI)
OurGrid
Simple Grid Protocol
Sun Grid Engine
ProActive
Portable Batch System
UNICORE
SDSC Storage resource broker (data grid)
GridWay
ZeroC ICE IceGrid


[edit] References

[edit] Notes

^ "Gridipedia: legal issues" (HTML). http://www.gridipedia.eu/taxationandgridcomputing.html. 
^ "Father of the Grid". http://magazine.uchicago.edu/0404/features/index.shtml. 
^ "BOINCstats -- BOINC combined credit overview." Retrieved on Feb 9, 2009.
^ [1], accessed 17 March 2009
^ Large Hadron Collider Computing Grid official homepage
^ GStat: 02:05:55 03/25/08 GMT - @wgoc01
^ Real Time Monitor @ Imperial College London HEP e-Science
^ LCG - Deployment
^ "What is the Grid? A Three Point Checklist" (PDF). http://www-fp.mcs.anl.gov/~foster/Articles/WhatIsTheGrid.pdf. 
^ P Plaszczak, R Wellner, Grid computing, 2005, Elsevier/Morgan Kaufmann, San Francisco
^ "IBM Solutions Grid for Business Partners: Helping IBM Business Partners to Grid-enable applications for the next phase of e-business on demand" (PDF). http://www-304.ibm.com/jct09002c/isv/marketing/emerging/grid_wp.pdf. 
^ "A Gentle Introduction to Grid Computing and Technologies" (PDF). http://www.buyya.com/papers/GridIntro-CSI2005.pdf. Retrieved on 2005-05-06. 
^ "The Grid Café -- The place for everybody to learn about grid computing". CERN. http://www.gridcafe.org. Retrieved on 2008-12-03. 


[edit] Bibliographic list

Davies, Antony (June 2004). "Computational Intermediation and the Evolution of Computation as a Commodity" (PDF). Applied Economics 36: 1131. doi:10.1080/0003684042000247334. http://www.business.duq.edu/faculty/davies/research/EconomicsOfComputation.pdf. 
Foster, Ian; Carl Kesselman. The Grid: Blueprint for a New Computing Infrastructure. Morgan Kaufmann Publishers. ISBN 1-55860-475-8. http://www.mkp.com/grids/. 
Plaszczak, Pawel; Rich Wellner, Jr. Grid Computing "The Savvy Manager's Guide". Morgan Kaufmann Publishers. ISBN 0-12-742503-9. http://savvygrid.com/. 
Berman, Fran; Anthony J. G. Hey, Geoffrey C. Fox. Grid Computing: Making The Global Infrastructure a Reality. Wiley. ISBN 0-470-85319-0. http://www.grid2002.org/. 
Li, Maozhen; Mark A. Baker. The Grid: Core Technologies. Wiley. ISBN 0-470-09417-6. http://coregridtechnologies.org/. 
Catlett, Charlie; Larry Smarr (June 1992). "Metacomputing". Communications of the ACM 35 (6). http://www.acm.org/pubs/cacm/. 
Smith, Roger (2005). "Grid Computing: A Brief Technology Analysis" (PDF). CTO Network Library. http://www.ctonet.org/documents/GridComputing_analysis.pdf. 
Buyya, Rajkumar (July 2005). "Grid Computing: Making the Global Cyberinfrastructure for eScience a Reality" (PDF). CSI Communications (Mumbai, India: Computer Society of India (CSI)) 29 (1). ISSN 0970-647X. http://www.gridbus.org/~raj/papers/CSICommunicationsJuly2005.pdf. 
Berstis, Viktors. "Fundamentals of Grid Computing". IBM. http://www.redbooks.ibm.com/abstracts/redp3613.html. 
Ferreira, Luis; et.al.. "Grid Computing Products and Services". IBM. http://www.redbooks.ibm.com/abstracts/sg246650.html. 
Ferreira, Luis; et.al.. "Introduction to Grid Computing with Globus". IBM. http://www.redbooks.ibm.com/abstracts/sg246895.html?Open. 
Jacob, Bart; et.al.. "Enabling Applications for Grid Computing". IBM. http://www.redbooks.ibm.com/abstracts/sg246936.html?Open. 
Ferreira, Luis; et.al.. "Grid Services Programming and Application Enablement". IBM. http://www.redbooks.ibm.com/abstracts/sg246100.html?Open. 
Jacob, Bart; et.al.. "Introduction to Grid Computing". IBM. http://www.redbooks.ibm.com/abstracts/sg246778.html?Open. 
Ferreira, Luis; et.al.. "Grid Computing in Research and Education". IBM. http://www.redbooks.ibm.com/abstracts/sg246649.html?Open. 
Ferreira, Luis; et.al.. "Globus Toolkit 3.0 Quick Start". IBM. http://www.redbooks.ibm.com/abstracts/redp3697.html?Open. 
Surridge, Mike; et.al.. "Experiences with GRIA – Industrial applications on a Web Services Grid" (PDF). IEEE. http://www.gria.org/docs/experiences%20with%20gria%20paper.pdf. 
Stockinger, Heinz; et al. (to be published in 2007). "Defining the Grid: A Snapshot on the Current View" (PDF). Supercomputing 42: 3. doi:10.1007/s11227-006-0037-9. http://hst.web.cern.ch/hst/publications/DefiningTheGrid-1.1.pdf. 
Global Grids and Software Toolkits: A Study of Four Grid Middleware Technologies
The Grid Technology Cookbook


[edit] External links
A good beginner's guide about making your own grid is available at GridCafe. E-learning contents about grid-computing are available at SuGI-Portal.







v • d • e

Parallel computing topics





General

High-performance computing  · Cluster computing  · Distributed computing  · Grid computing






Parallelism (levels)

Bit · Instruction  · Data  · Task






Threads

Superthreading · Hyperthreading






Theory

Amdahl's law  · Gustafson's law  · Cost efficiency · Karp-Flatt metric  · slowdown  · speedup






Elements

Process · Thread · Fiber · PRAM






Coordination

Multiprocessing · Multithreading · Memory coherency · Cache coherency · Barrier · Synchronization  · Application checkpointing






Programming

Models (Implicit parallelism · Explicit parallelism  · Concurrency)  · Flynn's taxonomy (SISD • SIMD • MISD • MIMD)






Hardware

Multiprocessing (Symmetric  · Asymmetric)  · Memory (NUMA  · COMA  · distributed  · shared  · distributed shared)  · SMT
MPP  · Superscalar  · Vector processor  · Supercomputer · Beowulf






APIs

POSIX Threads · OpenMP · MPI · UPC · Intel Threading Building Blocks · Boost.Thread · Global Arrays · Charm++






Problems

Embarrassingly parallel · Grand Challenge · Software lockout










Retrieved from "http://en.wikipedia.org/wiki/Grid_computing"
Categories: Grid computing | Distributed computingHidden categories: Wikipedia articles needing copy edit from November 2008 | All articles needing copy edit | All articles with unsourced statements | Articles with unsourced statements since January 2009 | Articles with unsourced statements since October 2008 | Articles to be expanded since June 2008 | All articles to be expanded | Articles with unsourced statements since February 2007 | Articles containing potentially dated statements from 2001 | All articles containing potentially dated statements | Articles containing potentially dated statements from 2005 | Cleanup from January 2009 | All pages needing cleanup 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


العربية
Deutsch
Español
فارسی
Français
한국어
Bahasa Indonesia
Interlingua
Italiano
עברית
Magyar
Nederlands
日本語
മലയാളം
Polski
Português
Русский
Українська
اردو
中文









 This page was last modified on 4 April 2009, at 22:42.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
