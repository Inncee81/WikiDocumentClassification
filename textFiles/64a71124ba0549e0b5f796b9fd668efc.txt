













Inform - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Inform";
		var wgTitle = "Inform";
		var wgAction = "view";
		var wgArticleId = "227989";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 280275540;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Inform

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
For the environmental organization, see Inform (environmental organization).

Inform




Design by
Graham Nelson


Developed by
Graham Nelson


Latest release
7 5U92 / 2008-09-10; 209 days ago[1]


Operating system
Microsoft Windows, Mac OS X, Linux, others


Type
Interactive fiction development and play


Website
http://www.inform-fiction.org/


Inform is a programming language and design system for interactive fiction originally created in 1993 by Graham Nelson. Inform can generate programs designed for the Z-code or Glulx virtual machines. Versions 1 through 5 were released between 1993 and 1996. Around 1996, Nelson rewrote Inform from first principles to create version 6 (or Inform 6).[2] Over the following decade, version 6 became reasonably stable and a popular language for writing interactive fiction. In 2006, Nelson released Inform 7 (briefly known as Natural Inform), a completely new language based on principles of natural language and a new set of tools based around a book-publishing metaphor. As of July, 2008, Inform 7 is still in beta, but has already begun to supplant Inform 6 in the release of new interactive fiction.




Contents


1 Z-Machine and Glulx
2 Inform 6

2.1 The Inform 6 compiler
2.2 The Inform 6 programming language
2.3 Inform 6 library
2.4 Example game
2.5 Notable games developed in Inform 6 or earlier versions


3 Inform 7

3.1 Inform 7 IDE
3.2 Inform 7 programming language
3.3 Example game
3.4 Notable games written in Inform 7


4 See also
5 Further reading
6 External links
7 References





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Z-Machine and Glulx
All versions of Inform generate files in Z-code (also called story files) from source code. These files can then be run by any Z-code interpreter â€“ that is, by any program which properly implements the Z-code virtual machine (or Z-machine) specification. The Z-machine was originally developed by Infocom in 1979 for their interactive fiction titles. Because there is at least one such interpreter for nearly every major and minor platform, this means that the same Z-code file can be run on a multitude of platforms with no alterations.
Andrew Plotkin created an unofficial version of Inform 6 that was also capable of generating files for Glulx, a virtual machine he had designed to overcome many of the limitations of the several-decades-old Z-machine. Starting with Inform 6.3, released February 29, 2004, Inform 6 has included official support for both virtual machines, based on Andrew Plotkin's work. Early release of Inform 7 did not support Glulx, but in August 2006 Glulx support was released.

[edit] Inform 6

Inform 1-6

Paradigm
object-oriented, procedural


Appeared in
1993


Designed by
Graham Nelson


Developer
Graham Nelson


Latest release
6.31/ February 10, 2006


Influenced by
natural language


Influenced
Inform 7


OS
Microsoft Windows, Mac OS X, Linux, others


License
Proprietary but freely redistributable


Website
http://www.inform-fiction.org/inform6.html


Inform was originally created by Graham Nelson in 1993. In 1996 Nelson rewrote Inform from first principles to create version 6 (or Inform 6). Over the following decade, version 6 became reasonably stable and a popular language for writing interactive fiction.
The Inform 6 system consists of two major components: the Inform compiler, which generates story files from Inform source code, and the Inform library, a suite of software which handles most of the difficult work of parsing the player's text input and keeping track of the world model. The name Inform also refers to the Inform programming language that the compiler understands.
Although Inform 6 and the Z-Machine were originally designed with interactive fiction in mind, a large number of other programs have been developed, including a BASIC interpreter, a LISP tutorial (complete with interpreter), a Tetris game, and a version of the game Snake.

[edit] The Inform 6 compiler
The Inform compiler generates files for the Z-machine or Glulx (also called story files) from Inform 6 source code.

[edit] The Inform 6 programming language
The Inform programming language is object-oriented and procedural. A key element of the language is objects. Objects are maintained in an object tree which lists the parent-child relationships between objects. Since the parent-child relationship is often used to represent location, an object which is the parent of another object is often said to "hold" it. Objects can be moved throughout the tree. Typically, top level objects represent rooms and other locations within the game, which may hold objects representing the room's contents, be they physical items, non-player characters, the player's character, or background effects. All objects can hold other objects, so a livingroom object might hold an insurancesaleman object which is holding a briefcase object which contains the insurancepaperwork object.
In early versions of Inform, objects were different from the notion of objects from object-oriented programming, in that there was no such thing as a class. Later versions added support for class definitions and allowed objects to be members of classes. Objects and classes can inherit from multiple classes. Interactive fiction games typically contain many unique objects. Because of this, many objects in Inform do not inherit from any class, other than the "metaclass" Object. However, objects very frequently have attributes (boolean properties, such as scenery or edible) that are recognized by the Inform library. In other languages this would normally be implemented via inheritance.
Here is a simple example of Inform 6 source code.

[ Main;
    print "Hello World^";
];


[edit] Inform 6 library
The Inform system also contains the Inform library, which automates nearly all of the most difficult work involved in programming interactive fiction; specifically, it includes a text parser that makes sense of the player's input, and a world model that keeps track of such things as objects (and their properties), rooms, doors, the player's inventory, etc.
The Inform compiler does not require the use of the Inform library. There are several replacement libraries available, such as Platypus[3] and InformATE, a library that codes Inform in Spanish.

[edit] Example game
Here is an example of Inform source code that makes use of the Inform library. The following description refers to Inform 6. Inform 7 is almost entirely different. The code sample below is usable in Inform 7, but not without special demarcation indicating that it is embedded legacy code.

 Constant Story "Hello Deductible";
 Constant Headline "^An Interactive Example^";

 Include "Parser";
 Include "VerbLib";

 [ Initialise;
     location = Living_Room;
     "Hello World";
 ];

 Object Kitchen "Kitchen";
 Object Front_Door "Front Door";

 Object Living_Room "Living Room"
     with
         description "A comfortably furnished living room.",
         n_to Kitchen,
         s_to Front_Door,
     has light;

 Object -> Salesman "insurance salesman"
     with
         name 'insurance' 'salesman' 'man',
         description "An insurance salesman in a tacky polyester 
               suit.  He seems eager to speak to you.",
         before [;
             Listen:
                 move Insurance_Paperwork to player;
                 "The salesman bores you with a discussion
                  of life insurance policies.  From his
                  briefcase he pulls some paperwork which he
                  hands to you.";
         ],
     has animate;

 Object -> -> Briefcase "briefcase"
     with
         name 'briefcase' 'case',
         description "A slightly worn, black briefcase.",
     has container;

 Object -> -> -> Insurance_Paperwork "insurance paperwork"
     with
         name 'paperwork' 'papers' 'insurance' 'documents' 'forms',
         description "Page after page of small legalese.";

 Include "Grammar";


[edit] Notable games developed in Inform 6 or earlier versions

Curses, by Graham Nelson (1993), the first game ever written in the Inform programming language. Considered one of the first "modern" games to meet the high standards set by Infocom's best titles.[4]
So Far, by Andrew Plotkin (1996), the first XYZZY Award for Best Game winner in 1996.
Zork: The Undiscovered Underground (1997), written by Marc Blank & Michael Berlyn, programmed by Gerry Kevin Wilson. Given away free by Activision to promote the release of Zork Grand Inquisitor.
Anchorhead, by Michael S. Gentry (1998) is a highly rated horror story inspired by H. P. Lovecraft's Cthulhu Mythos.[5]
Photopia, by Adam Cadre (1998), the first almost entirely puzzle-free game. Won the annual Interactive Fiction Competition in 1998.
Varicella by Adam Cadre (1999). It won four XYZZY Awards in 1999 including the XYZZY Award for Best Game, and had a scholarly essay written about it.[6]
Galatea, by Emily Short (2000). Galatea is focused entirely on interaction with the animated statue of the same name. Galatea has one of the most complex interaction systems for a non-player character in an interactive fiction game. Adam Cadre called Galatea "the best NPC ever".[7]
Slouching Towards Bedlam, by Star C. Foster and Daniel Ravipinto (2003). Set in a steampunk setting, the game integrates meta-game functionality (saving, restoring, restarting) into the game world itself. The game won two XYZZY Awards and received the highest average score of any game in the Interactive Fiction Competition as of 2006.


[edit] Inform 7

Inform 7




Paradigm
declarative, logic


Appeared in
2006


Designed by
Graham Nelson


Developer
Graham Nelson


Latest unstable release
5U92/ September 10, 2008


Influenced
Inform 6


OS
Microsoft Windows, Mac OS X, Linux, others


License
Proprietary but freely redistributable


Website
http://www.inform-fiction.org/


On April 30, 2006, Graham Nelson announced the beta release of Inform 7 to the rec.arts.int-fiction newsgroup.[8] Inform 7 consists of three primary parts: The Inform 7 IDE with development tools specialized for testing interactive fiction, the Inform 7 compiler for the new language, and "The Standard Rules" which form the core library for Inform 7. Inform 7 also relies on the Inform library and Inform compiler from Inform 6. The compiler compiles the Inform 7 source code into Inform 6 source code, which is then compiled separately by Inform 6 to generate Glulx or Z-code story file. Inform 7 also defaults to writing Blorb files, archives which include the Z-code together with optional "cover art" and metadata intended for indexing purposes. The full set of Inform 7 tools are currently available for Mac OS X, Microsoft Windows and Linux. The March 25, 2007 release added command line support for Linux, and new releases now include an IDE using the GNOME desktop environment under the GNOME Inform 7 SourceForge project.[9] The language and tools remain under development;[10] the March 25, 2007 release included a number of changes to the language.
Inform 7 was named Natural Inform for a brief period of time, but was later renamed Inform 7. This old name is why the Inform 7 compiler is named "NI."[11]

[edit] Inform 7 IDE




The Inform 7 IDE on Mac OS X showing source code and the skein






The Inform 7 IDE on Mac OS X showing the Index Map and the transcript


Inform 7 comes with an integrated development environment (IDE) for Mac OS X, Microsoft Windows and Linux. The Mac OS X IDE was developed by Andrew Hunter. The Microsoft Windows IDE was developed by David Kinder. The Linux IDE (known as GNOME Inform was developed by Philip Chimento
The Inform 7 IDE includes a text editor for editing Inform 7 source code. Like many other programming editors it features syntax highlighting. It marks quoted strings in one color. Headings of organizational sections (Volumes, Books, Chapters, Parts, and Sections) are bolded and made larger. Comments are set in a different color and made slightly smaller.
The IDE includes a built-in Z-code interpreter. The Mac OS X IDE's interpreter is based on the Zoom interpreter by Andrew Hunter, with contributions from Jesse McGrew[citation needed]. The Microsoft Windows IDE's interpreter is based on WinFrotz.
As a developer tests the game in the built-in interpreter, progress is tracked in the "skein" and "transcript" views of the IDE. The skein tracks player commands as a tree of branching possibilities. Any branch of the tree can be quickly re-followed, making it possible to retry different paths in a game under development without replaying the same portions of the game. Paths can also be annotated with notes and marked as solutions, which can be exported as text walkthroughs. The transcript, on the other hand, tracks both player commands and the game's responses. Correct responses from the game can be marked as "blessed." On replaying a transcript or a branch of the skein, variations from the blessed version will be highlighted, which can help the developer find errors.
The IDE also provides various indices into the program under development. The code is shown as a class hierarchy, a traditional IF map, a book-like table of contents, and in other forms. Clicking items in the index jumps to the relevant source code.
The IDE presents two side-by-side panes for working in. Each pane can contain the source code being worked on, the current status of compilation, the skein, the transcript, the indices of the source code, a running version of the game, documentation for Inform 7 or any installed extensions to it, or settings. The concept is to imitate an author's manuscript book by presenting two "facing pages" instead of a multitude of separate windows.[8]

[edit] Inform 7 programming language
Notable features include strong bias towards declarative rule-based style of programming and ability to infer types and properties of objects from the way they are used. For example, the statement "John wears a hat." creates a "person" called "John" (since only people are capable of wearing things), creates a "thing" with the "wearable" property (since only objects marked "wearable" are capable of being worn), and sets John as wearing the hat.
Another notable aspect of the language is direct support for relations which track associates between objects. This includes automatically provided relations, like one object containing another or an object being worn, but the developer can add his own relations. A developer might add relations indicating love or hatred between beings, or to track which characters in a game have met each other.
Inform 7 is a highly domain-specific programming language, providing the writer/programmer with a much higher level of abstraction than Inform 6, and highly readable resulting source code.

[edit] Example game
Statements in Inform 7 take the form of complete sentences. Blank lines and indentation are in some places structurally significant. The basic form of an Inform 7 program is as follows:
"Hello World" by "I.F. Author"
The world is a room.
When play begins, say "Hello, world."

The following is a reimplementation of the above "Hello Deductible" example written in Inform 7. It relies on the library known as "The Standard Rules" which are automatically included in all Inform 7 compilations.

"Hello Deductible" by "I.F. Author"
The story headline is "An Interactive Example".
The Living Room is a room. "A comfortably furnished living room."
The Kitchen is north of the Living Room.
The Front Door is south of the Living Room.
The Front Door is a door. The Front Door is closed and locked.
The insurance salesman is a man in the Living Room. "An insurance salesman in a tacky polyester suit. He seems eager to speak to you." Understand "man" as the insurance salesman.
A briefcase is carried by the insurance salesman. The description is "A slightly worn, black briefcase." Understand "case" as the briefcase.
The insurance paperwork is in the briefcase. The description is "Page after page of small legalese." Understand "papers" or "documents" or "forms" as the paperwork.
Instead of listening to the insurance salesman for the first time:

say "The salesman bores you with a discussion of life insurance policies. From his briefcase he pulls some paperwork which he hands to you."; move the insurance paperwork to the player.



[edit] Notable games written in Inform 7
Mystery House Possessed (2005), by Emily Short,[12] was the first Inform 7 game released to be public. It was released as part of the "Mystery House Taken Over" project.
On March 1, 2006, Short announced the release of three further games:[13] Bronze[14] (an example of a traditional puzzle-intensive game) and Damnatio Memoriae[15] (a follow-up to her award-winning Inform 6 game Savoir-Faire) were joined by Graham Nelson's The Reliques of Tolti-Aph[16] (2006). When the Inform 7 public beta was announced on April 30, 2006, six "worked examples" of medium to large scale works were made available along with their source code, including the three games previously released on March 1.[17][18][19]
Emily Short's Floatpoint was the first Inform 7 game to take first place in the Interactive Fiction Competition.[20] It also won 2006 XYZZY awards for Best Setting and Best NPCs.[21] Rendition, by nespresso (2007), is a political art experiment in the form of a text adventure game, forcing the player to confront their own complicity. Its approach to tragedy has been discussed academically by both the Association of Computing Machinery[22] and Cambridge University.[23]

[edit] See also

History of Inform releases
Interactive fiction: development systems lists software similar to Inform


[edit] Further reading

Inform 6


The bible of Inform is Graham Nelson's Inform Designer's Manual: it is a tutorial, a manual, and a technical document rolled into one. It is available online for free at Inform's official website,[24] and two printed editions are available: a softcover (ISBN 0-9713119-0-0) and a hardcover (ISBN 0-9713119-3-5).[25]
The Inform Beginner's Guide by Roger Firth and Sonja Kesserich (ISBN 0-9713119-2-7) attempts to provide a more gentle introduction to Inform. It is available for free at Inform's official website.[26]


Inform 7


The SPAG Interview - An interview with designers Graham Nelson and Emily Short about the development of Inform 7. This interview was made shortly before its release and published on the same day as the initial release.[2]
"Natural Language, Semantic Analysis and Interactive Fiction" - A paper on the design of Inform 7 by designer Graham Nelson.[27]


[edit] External links

Cloak of Darkness: Inform presents the same, short game implemented in both Inform 6 and Inform 7, as well as other languages for comparison.
Inform 6 - Official web site
Inform 6 FAQ at Roger Firth's IF Pages provides details on programming in Inform 6.
Inform 7 - Official web site.
Inform category at the Open Directory Project provides links to other sites.
The Interactive Fiction Archive provides many Inform tools, examples, and library files.


[edit] References


^ "Inform 7 Changelog". inform-fiction.org. http://www.inform-fiction.org/I7Downloads/ChangeLog.txt. Retrieved on 2008-11-05.Â 
^ a b "The SPAG Interview: Graham Nelson and Emily Short on Inform 7". SPAG #44. The Society for the Promotion of Adventure Games. 2006-04-30. http://www.sparkynet.com/spag/backissues/SPAG44. Retrieved on 2007-01-04.Â 
^ Turner, Anson (2002-03-14). "Inform Platypus release 4". http://www.elvwood.org/InteractiveFiction/Platypus/. Retrieved on 2007-01-04.Â 
^ Alan De Smet (2006-03-14). "Curses (Interactive Fiction Reviews)". http://www.highprogrammer.com/alan/rants/reviews/video_games/if/curses.html. Retrieved on 2006-11-01.Â 
^ Of the 1219 games rated at "Interactive Fiction Ratings", Anchorhead was the highest rated game as of January 4, 2007. ("IF Rating Stats". http://www.carouselchain.com/if/statistics.php. Retrieved on 2007-01-04.Â )
^ Montfort, Nick; Stuart Moulthrop (08 2003). "Face It, Tiger, You Just Hit the Jackpot: Reading and Playing Cadre's Varicella". Archived from the original on 2009-11-06. http://www.webcitation.org/query?url=http%3A%2F%2Fwww.mit.edu%2F%7Emontfort%2FVaricella.pdf&date=2008-11-06. Retrieved on 2009-11-06.Â  Published as Montfort, Nick; Moulthrop, Stuart (2003-08), "Face It, Tiger, You Just Hit the Jackpot: Reading and Playing Cadre's Varicella", Fine Art Online (Mississippi State University) 17 (8)Â 
^ "Photopia is a short story, Varicella is a world". Lâ€™avventura Ã¨ lâ€™avventura. 01 2002. http://www.avventuretestuali.com/interviste/cadre-eng. Retrieved on 2007-01-04.Â 
^ a b Graham Nelson (2006-04-30). "Inform 7: Public Beta". rec.arts.int-fiction. (Web link). Retrieved on 2007-01-04.
^ "GNOME Inform 7 SourceForge project page". 02 2008. http://sourceforge.net/projects/gnome-inform7/.Â 
^ Emily Short (2007-02-18). "Inform 7: Possible future developments". rec.arts.int-fiction. (Web link). Retrieved on 2007-03-30. Also archived at Short, Emily; Graham Nelson (01 2007). "Inform 7: Possible future developments". http://www.inform-fiction.org/I7Downloads/Documents/January2007Document.txt.Â 
^ Graham Nelson (2007-03-30). "Re: "Inform 7" is the wrong name". rec.arts.int-fiction. (Web link). Retrieved on 2007-03-30.
^ "Mystery House Taken Over". http://www.turbulence.org/Works/mystery/games.php. Retrieved on 2007-01-04.Â 
^ Emily Short (at the request of Graham Nelson) (2006-03-01). "Three games in Inform 7". rec.games.int-fiction. (Web link). Retrieved on 2007-01-04.
^ Short, Emily (2006). "Bronze". http://ifdb.tads.org/viewgame?id=9p8kh3im2j9h2881. Retrieved on 2007-01-04.Â 
^ Short, Emily (2006). "Damnatio Memoriae". http://ifdb.tads.org/viewgame?id=2103dabhxzxsraal. Retrieved on 2007-01-04.Â 
^ Nelson, Graham (2005). "The Reliques of Tolti-Aph". http://ifdb.tads.org/viewgame?id=nnhm4yp172oivtd9. Retrieved on 2007-01-04.Â 
^ Short, Emily (2006). "Bronze". http://inform-fiction.org/I7Downloads/Examples/bronze/. Retrieved on 2007-01-04.Â 
^ Short, Emily (2006). "Damnatio Memoriae". http://inform-fiction.org/I7Downloads/Examples/dm/. Retrieved on 2007-01-04.Â 
^ Nelson, Graham (2005). "The Reliques of Tolti-Aph". http://www.inform-fiction.org/I7Downloads/Examples/rota/. Retrieved on 2007-01-04.Â 
^ "12th Annual Interactive Fiction Competition". 2006. http://www.ifcomp.org/comp06/. Retrieved on 2007-05-12.Â 
^ "XYZZY Awards: Winning Games of 2006". http://www.xyzzynews.com/2006winners.html. Retrieved on 2007-05-12.Â 
^ "ACM Hypertext 2007 conference slides (PDF)". http://www.natematias.com/cam/trag-elit/Emily-Short-Tragedy.pdf.Â 
^ "Cambridge University lecture slides". http://www.natematias.com/cam/trag-elit/TragPresentation.html.Â 
^ "Download the Inform Designer's Manual". 2006-04-01. http://www.inform-fiction.org/manual/download_dm4.html. Retrieved on 2007-01-04.Â 
^ "About the Inform Designer's Manual". 2006-04-01. http://www.inform-fiction.org/manual/about_dm4.html. Retrieved on 2007-01-04.Â 
^ "Download the Inform Beginner's Guide". 2006-04-01. http://www.inform-fiction.org/manual/download_ibg.html. Retrieved on 2007-01-04.Â  Firth, Roger; Sonja Kesserich (08 2004). "The Inform Beginner's Guide: Third Edition" (PDF). http://www.inform-fiction.org/manual/IBG.pdf. Retrieved on 2007-01-04.Â 
^ Graham Nelson (2006-04-10) (PDF). Natural Language, Semantic Analysis, and Interactive Fiction. http://www.inform-fiction.org/I7Downloads/Documents/WhitePaper.pdf. Retrieved on 2007-01-04.Â 





Retrieved from "http://en.wikipedia.org/wiki/Inform"
Categories: Interactive fiction | Freeware | Curly bracket programming languages | Domain-specific programming languages | Video game creation software | Text adventure game enginesHidden categories: All articles with unsourced statements | Articles with unsourced statements since April 2008 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




Â 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Deutsch
EspaÃ±ol
FranÃ§ais
Italiano
Nederlands
æ—¥æœ¬èªž
Polski
PortuguÃªs
Suomi









 This page was last modified on 28 March 2009, at 20:09.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  WikipediaÂ® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
