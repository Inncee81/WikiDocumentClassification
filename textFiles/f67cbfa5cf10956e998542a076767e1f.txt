













Extensible Messaging and Presence Protocol - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Extensible_Messaging_and_Presence_Protocol";
		var wgTitle = "Extensible Messaging and Presence Protocol";
		var wgAction = "view";
		var wgArticleId = "192455";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281419964;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Extensible Messaging and Presence Protocol

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
"Jabber" redirects here. For computer network overloading, see maximum transmission unit.





This article needs references that appear in reliable third-party publications. Primary sources or sources affiliated with the subject are generally not sufficient for a Wikipedia article. Please add more appropriate citations from reliable sources. (December 2007)






Official logo of the XMPP Standards Foundation


Extensible Messaging and Presence Protocol (XMPP) is an open, XML-based protocol originally aimed at near-real-time, extensible instant messaging (IM) and presence information (e.g., buddy lists), but now expanded into the broader realm of message oriented middleware.[1] It remains the core protocol of the Jabber Instant Messaging and Presence technology. Built to be extensible, the protocol has been extended with features such as Voice over Internet Protocol and file transfer signaling.
Unlike most instant messaging protocols, XMPP is an open standard. Like e-mail, it is an open system where anyone who has a domain name and a suitable Internet connection can run his own Jabber server and talk to users on other servers. The standard server implementations and many clients are also free and open source software.
The Internet Engineering Task Force (IETF) formed an XMPP Working Group in 2002 to formalize the core protocols as an IETF instant messaging and presence technology. The XMPP WG produced four specifications which were approved by the IESG as Proposed Standards in 2004. RFC 3920 and RFC 3921 are now undergoing revisions in preparation for advancing them to Draft Standard within the Internet Standards Process. The XMPP Standards Foundation (formerly the Jabber Software Foundation) is active in developing open XMPP extensions. Unfortunately, no technology correctly implements the RFCs in full.[citation needed]
XMPP-based software is deployed on thousands of servers across the Internet and by 2003 was used by over ten million people worldwide, according to the XMPP Standards Foundation.[2] Popular commercial servers include the Gizmo Project and Google Talk. Popular client applications include the freeware clients offered by Google and the Gizmo Project, multi-protocol instant messengers such as iChat and Pidgin (formerly Gaim), and free dedicated clients such as Psi and Gajim. Google Talk provides XMPP gateways to its service.


The Internet Protocol Suite


Application Layer


BGP · DHCP · DNS · FTP · GTP · HTTP · IMAP · IRC · Megaco · MGCP · NNTP · NTP · POP · RIP · RPC · RTP · RTSP · SDP · SIP · SMTP · SNMP · SOAP · SSH · Telnet · TLS/SSL · XMPP · (more)


Transport Layer


TCP · UDP · DCCP · SCTP · RSVP · ECN · (more)


Internet Layer


IP (IPv4, IPv6) · ICMP · ICMPv6 · IGMP · IPsec · (more)


Link Layer


ARP · RARP · NDP · OSPF · Tunnels (L2TP) · Media Access Control (Ethernet, MPLS, DSL, ISDN, FDDI) · Device Drivers · (more)



This box: view • talk • edit







Contents


1 History
2 Strengths
3 Weaknesses
4 Decentralization and addressing
5 Message delivery scenario
6 Connecting to other protocols
7 XMPP via HTTP transport
8 Implementations
9 Development
10 See also
11 References
12 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] History
Jeremie Miller began the Jabber project in 1998. Its first major public release occurred in May 2000. The project's main product was jabberd, a Jabber server.
This early Jabber protocol formed the basis for XMPP, published as RFC 3920. It has often been regarded as a competitor to SIMPLE, based on the Session Initiation Protocol (SIP) protocol, as the standard protocol for instant messaging and presence notification.[3]
The first IM service based on XMPP was Jabber.org, which was run by a small group of volunteers. Jabber.org has operated since 1999. The first users of XMPP could sign up for a free account.[4]
In August 2005, Google introduced Google Talk, a combination VoIP and IM system which uses XMPP for its instant messaging function and as a base for its voice and file transfer signalling protocol. The initial launch did not include server-to-server communications, but as of January 17, 2006, it had server-to-server communications enabled.[5]

[edit] Strengths

Decentralization: The architecture of the XMPP network is similar to email; anyone can run his/her own XMPP server and there is no central master server.
Open standards: The Internet Engineering Task Force has formalized XMPP as an approved instant messaging and presence technology under the name of XMPP, and the XMPP specifications have been published as RFC 3920 and RFC 3921. No royalties are required to implement support of these specifications and their development is not tied to a single vendor.
History: XMPP technologies have been in use since 1998. Multiple implementations of the XMPP standards exist for clients, servers, components, and code libraries, with the backing of large companies such as Sun Microsystems and Google.
Security: XMPP servers may be isolated from the public Jabber network (e.g., on a company intranet), and robust security (via SASL and TLS) has been built into the core XMPP specifications. To encourage use of channel encryption, the XMPP Standards Foundation also runs an intermediate certification authority at xmpp.net offering free digital certificates to XMPP server administrators under the auspices of the StartCom Certification Authority (which is the root CA for the intermediate CA).
Flexibility: Custom functionality can be built on top of XMPP; to maintain interoperability, common extensions are managed by the XMPP Software Foundation. XMPP applications beyond IM include network management, content syndication, collaboration tools, file sharing, gaming, and remote systems monitoring.


[edit] Weaknesses

Presence data overhead: With typically over 70% of XMPP inter-server traffic being presence data[6] and close to 60% of it being redundantly transmitted,[7] XMPP currently has a large overhead in delivering presence data to multiple recipients. New protocols are being researched to alleviate this problem.
Scalability: XMPP currently suffers from essentially the same redundancy problem also concerning multi-user chat and brokered publish/subscribe services such as JMS.[8] These two are to be addressed by new protocol extensions.[citation needed] Until deployed, large chatrooms produce a very large amount of overhead.
No binary data: The way XMPP is encoded as a single long XML document makes it impossible to deliver unmodified binary data. Therefore, file transfers use external protocols like HTTP. If unavoidable, XMPP also provides in-band file transfers by encoding all data using base64. Other binary data like encrypted conversations or graphic icons are embedded using the same method.


[edit] Decentralization and addressing
The Jabber network is server-based (i.e. clients do not talk directly to one another) but decentralized; by design there is no central authoritative server, as there is with services such as AOL Instant Messenger or MSN Messenger. Some confusion often arises on this point as there is a public XMPP server being run at "Jabber.org", to which a large number of users subscribe. However, anyone may run his own XMPP server on his own domain. The standard TCP port for Jabber is 5222.[9]
Every user on the network has a unique Jabber ID (usually abbreviated as JID). To avoid the need for a central server with a list of IDs, the JID is structured like an e-mail address with a username and a DNS address for the server where that user resides separated by an at sign (@), such as username@domain.com.
Since a user may wish to log in from multiple locations, the clients specify a further string known as a resource, which identifies which of the user's clients it is (for example home, work and mobile). This may then be included in the JID by adding a forward slash followed by the name of the resource. Each resource may have specified a numerical value called priority. For example, the full JID of a user's mobile account would be username@domain.com/mobile. Messages that are simply sent to username@domain.com will go to the client with highest priority, but those sent to username@domain.com/mobile will only go to the mobile client.
JIDs without a username part are also valid and may be used (with or without a resource part) for system messages and control of special features on the server.

[edit] Message delivery scenario
Suppose juliet@capulet.com wants to chat with romeo@montague.net. Juliet and Romeo each respectively have accounts on the capulet.com and montague.net servers. When Juliet types in and sends her message, a sequence of events is set in motion:

Juliet's client sends her message to the capulet.com server

If montague.net is blocked on capulet.com, the message is dropped.


The capulet.com server opens a connection to the montague.net server.

If capulet.com is blocked on montague.net, the message is dropped.
If Romeo is not currently connected, the message is stored for later delivery.


The montague.net server delivers the message to Romeo.



Juliet
→
capulet.com
→
montague.net
→
Romeo



[edit] Connecting to other protocols




Alice sends a message through the Jabber net to the ICQ transport. The message is next routed to Bob via the ICQ network.


Another useful feature of the XMPP system is that of transports, also known as gateways, which allow users to access networks using other protocols. This can be other instant messaging protocols, but also protocols such as SMS or E-mail. Unlike multi-protocol clients, XMPP provides this access at the server level by communicating via special gateway services running on a remote computer. Any user can "register" with one of these gateways by providing the information needed to log on to that network, and can then communicate with users of that network as though they were Jabber users. This means that any client which fully supports XMPP can be used to access any network for which a gateway exists, without the need for any extra code in the client and without the need for the client to have direct access to the Internet. This may violate terms of service on the protocol used; however, such terms of service are not legally enforceable in several countries.

[edit] XMPP via HTTP transport
Another aspect of XMPP is the HTTP binding for users behind restricted firewalls. In the original specification, XMPP could use HTTP in two ways: polling[10] and binding.[11] Polling is now deprecated, but HTTP polling essentially implies messages stored on a server-side database are being fetched (and posted) regularly by an XMPP client by way of HTTP 'GET' and 'POST' requests. With binding, the client uses longer-lived HTTP connections to receive messages as soon as they are sent. This push-model of notification is more efficient than polling, where many of the polls return no new data.
Because the client uses HTTP, most firewalls allow clients to fetch and post messages without any hindrances. Thus, in scenarios where the TCP port used by XMPP is blocked, a server can listen on the normal HTTP port and the traffic should pass without problems. There also are various websites which allow people to sign in to Jabber via their browser. Furthermore, there are open public servers, such as www.jabber80.com that listen on standard http (port 80) and https (port 443) ports and hence allow connections from behind most firewalls.

[edit] Implementations
Main article: List of XMPP client software
XMPP is implemented by a large number of XMPP clients, servers, and code libraries. The main article contains a list of several XMPP clients for multiple platforms.

[edit] Development
The IETF XMPP working group has produced a number of RFC protocol documents:
RFC 3920, RFC 3921, RFC 3922, RFC 3923, RFC 4622, RFC 4854, RFC 4979

RFC 3920, Extensible Messaging and Presence Protocol (XMPP): Core which describes client-server messaging using two open-ended XML streams. XML streams consist of <presence/>, <message/> and <iq/> (info/query). A connection is authenticated with Simple Authentication and Security Layer (SASL) and encrypted with Transport Layer Security (TLS).
RFC 3921, Extensible Messaging and Presence Protocol (XMPP): Instant Messaging and Presence describes instant messaging (IM), the most common application of XMPP.
RFC 3922, Mapping the Extensible Messaging and Presence Protocol (XMPP) to Common Presence and Instant Messaging (CPIM) relates XMPP and the Common Presence and Instant Messaging (CPIM) specifications.
RFC 3923, End-to-End Signing and Object Encryption for the Extensible Messaging and Presence Protocol (XMPP) describes end to end encryption of XMPP messages using S/MIME. Conflicting this proposal, many clients currently use GPG for encrypting messages.[12]

The XMPP Standards Foundation (XSF) develops and publishes extensions to XMPP through a standards process centered on XMPP Extension Protocols (XEPs, previously known as Jabber Enhancement Proposals - JEPs). The following extensions are in especially wide use:

Data Forms[13]
Service Discovery[14]
Multi-User Chat[15]
XHTML-IM[16]
File Transfer[17]
Entity Capabilities[18]
HTTP Binding[11]
Personal Eventing Protocol[19]

XMPP is currently being extended to handle signaling / negotiation for Voice over Internet Protocol (VoIP) and other media sessions. This signaling protocol is called Jingle. Jingle is designed to be consistent with the Google Talk service and interoperable with the Session Initiation Protocol.

[edit] See also

Comparison of instant messaging clients
Comparison of instant messaging protocols
List of XMPP client software
List of XMPP programming libraries
List of XMPP server software
Secure communication
SIMPLE


[edit] References


^ Johansson, Leif (2005-04-18), "XMPP as MOM", Greater NOrdic MIddleware Symposium (GNOMIS), Oslo: University of Stockholm 
^ XMPP Standards Foundation (2003-09-22). Jabber Instant Messaging User Base Surpasses ICQ. Press release. http://www.xmpp.org/xsf/press/2003-09-22.shtml. Retrieved on 2007-11-30. 
^ Jabber Software Foundation Renamed to XMPP Standards Foundation January 16, 2007 [1] jabber.org is still maintained (March 2008)
^ Chatting Up the Chef, Linux Journal March 1st, 2003 by Marcel Gagné
^ Burd, Gary. "XMPP Federation". http://googletalk.blogspot.com/2006/01/xmpp-federation.html. Retrieved on 2007-11-30. 
^ [Standards-JIG] Distribution of stanza types
^ [Standards-JIG] proto-JEP: Smart Presence Distribution
^ [Standards-JIG] MUC traffic issues
^ I'm behind a firewall, can I use Jabber? | Jabber.org
^ XEP-0025: Jabber HTTP Polling
^ a b XEP-0124: Bidirectional-streams Over Synchronous HTTP (BOSH)
^ XEP-0027: Current Jabber OpenPGP Usage
^ XEP-0004: Data Forms
^ XEP-0030: Service Discovery
^ XEP-0045: Multi-User Chat
^ XEP-0071: XHTML-IM
^ XEP-0096: File Transfer
^ XEP-0115: Entity Capabilities
^ XEP-0163: Personal Eventing Protocol



[edit] External links

jabber.org - End user introduction to Jabber.
Jabber Software Foundation (JSF) (Wiki)
IM Protocol Wiki
Press release from the JSF regarding the publication of the XMPP RFCs.
XMPP Case Studies
XMPP Standards Foundation
Podcast about Jabber / XMPP; Peter Saint-Andre interviewed by Randal Schwartz and Leo Laporte




Retrieved from "http://en.wikipedia.org/wiki/Extensible_Messaging_and_Presence_Protocol"
Categories: Cloud standards | XML-based standards | Instant messaging protocols | Open standards | On-line chat | Cross-platform softwareHidden categories: Articles lacking reliable references from December 2007 | All articles lacking sources | All articles with unsourced statements | Articles with unsourced statements since July 2008 | Articles with unsourced statements since September 2008 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Česky
Deutsch
Español
Français
Italiano
Nederlands
日本語
Polski
Português
Русский
Simple English
Slovenčina
ไทย
中文









 This page was last modified on 3 April 2009, at 02:11.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
