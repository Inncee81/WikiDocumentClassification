













inotify - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Inotify";
		var wgTitle = "Inotify";
		var wgAction = "view";
		var wgArticleId = "2594628";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 282148674;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); inotify

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
inotify is a Linux kernel subsystem that provides file system event notification. It was written by John McCutchan with help from Robert Love and later Amy Griffis to replace dnotify. It was included in the mainline kernel from release 2.6.13 (June 18, 2005), and could be compiled into 2.6.12 and possibly earlier releases by use of a patch. Its function is essentially an extension to filesystems to notice changes to the filesystem, and report those changes to applications.
Its major use is therefore arguably in desktop search utilities like Beagle, where its functionality permits reindexing of changed files without scanning the filesystem for changes every few minutes, which would be very inefficient. By being told that a file has changed directly by the kernel, rather than actively looking, Beagle and such utilities can achieve change-to-reindexing times of only about a second.
It can also be used to automatically update directory views, reload configuration files, log changes, backup, synchronize, and upload.




Contents


1 Advantages
2 How it works
3 History
4 See also
5 External links

5.1 Programming APIs







//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Advantages
Inotify has many advantages over dnotify, the module that it replaced. With the older module, a program had to use one file descriptor for each directory that it was monitoring. This can become a bottleneck since the limit of file descriptors per process could be reached. The use of file descriptors along with dnotify also proved to be a problem when using removable media. Devices could not be unmounted since file descriptors kept the resource busy.
Another drawback of dnotify is the level of granularity, since programmers can only monitor changes at the directory level. To access detailed information about the environmental changes that occur when a notification message is sent, a stat structure must be used; this is considered a necessary evil in that a cache of stat structures has to be maintained, for every new stat structure generated a comparison is run against the cached one.
Inotify uses an API that uses fewer file descriptors, allowing programmers to use the established select and poll interface, rather than the signal notification system used by dnotify. This also makes integration with existing select- or poll-based libraries (like GLib) easier.

[edit] How it works
Inotify is used through a series of system calls specifically created for inotify.

#include <sys/inotify.h>

Include this header file to use inotify.

int inotify_init(void)

Creates an inotify instance. Returns a file descriptor which all events are read from.

int inotify_add_watch(int fd, const char* pathname, int mask)

Starts watching the inode pointed to by pathname for events contained in mask. Returns a watch descriptor which is unique (within this inotify instance) to the inode pointed to by the pathname (NOTE: Multiple pathnames can point to the same inode/watch descriptor).

int inotify_rm_watch(int fd, int wd)

Cancels a watch on the given watch descriptor.
Events generated by inotify contain the following information:


Identifier
Contents


wd
watch descriptor


mask
event tag


cookie
cookie used to synchronize between IN_MOVED_FROM and IN_MOVED_TO


len
length of name field


name
the (optional) filename associated with this event (local to parent directory)


Some of the events that can be monitored for are:

IN_ACCESS - read of the file
IN_MODIFY - last modification
IN_ATTRIB - attributes of file change
IN_OPEN and IN_CLOSE - open or close of file
IN_MOVED_FROM and IN_MOVED_TO - when the file is moved or renamed
IN_DELETE - a file/directory deleted
IN_CREATE - a file/directory created
IN_DELETE_SELF - file monitored is deleted


[edit] History

August 2005 - Merged into 2.6.13
July 2004 - First release announcement


[edit] See also

File alteration monitor
Gamin
DMAPI
FSEvents


[edit] External links





This article's external links may not follow Wikipedia's content policies or guidelines. Please improve this article by removing excessive or inappropriate external links.



inotify-tools A suite of userland utilities, based on inotify, to watch and log modifications on files and directories
Official inotify README
Kernel Korner - Intro to inotify by Robert Love (2005)
LWN Article on Inotify Watching filesystem events with inotify (partly out of date)
IBM Article Monitor Linux file system events with inotify
incron An inotify cron system. It works like a regular cron but handles filesystem events rather than time periods.
inotail A tail (Unix) clone that uses inotify to watch for modified files in -f (follow) mode.
Obtaining Directory Change Notifications in Windows 2000 and newer.


[edit] Programming APIs

inotify-cxx C++
inotify-java Java
Linux::Inotify2 perl
Pyinotify python
inotify wrapper Python
JNotify java
Ocaml Inotify Ocaml
PHP Inotify PHP
Hinotify Haskell
Tcl Inotify Tcl
ruby-inotify Ruby




Retrieved from "http://en.wikipedia.org/wiki/Inotify"
Categories: Linux kernel featuresHidden categories: Wikipedia external links cleanup 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Česky
Français
한국어
Polski
Русский









 This page was last modified on 6 April 2009, at 17:31.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
