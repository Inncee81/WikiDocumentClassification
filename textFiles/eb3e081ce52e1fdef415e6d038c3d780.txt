













OpenEXR - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "OpenEXR";
		var wgTitle = "OpenEXR";
		var wgAction = "view";
		var wgArticleId = "172902";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 264642681;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); OpenEXR

From Wikipedia, the free encyclopedia

Jump to: navigation, search 





This article may require cleanup to meet Wikipedia's quality standards. Please improve this article if you can. (July 2008)


OpenEXR is a high dynamic range imaging image file format, released as an open standard along with a set of software tools created by Industrial Light and Magic (ILM), released under a free software license similar to the BSD license.
It is notable for supporting 16-bits-per-channel floating point values (half precision), with a sign bit, five bits of exponent, and a ten-bit mantissa. This allows a dynamic range of over thirty stops of exposure.
Both lossless and lossy compression of high dynamic range data is also supported.[1]




Contents


1 OpenEXR Overview

1.1 History
1.2 Compression methods
1.3 Credits


2 Developing with OpenEXR
3 References
4 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] OpenEXR Overview
For a full technical introduction of OpenEXR, please see the Technical Introduction available on the OpenEXR.org website. [1]
OpenEXR, or simply EXR for short, is a deep raster format developed by ILM and very broadly used in the computer-graphics industry, both visual effects and animation.
OpenEXR's multi-resolution and arbitrary channel format makes it appealing for compositing. OpenEXR alleviates several painful elements of the compositing process. Since it can store arbitrary channels, specular, diffuse, alpha, RGB, normals, and various other types of channels in one file, it takes away the need to store this information in separate files. The multi-channel concept also reduces the necessity to "bake" in the before mentioned data to the final image. If a compositer is not happy with the current level of specularity, he or she can adjust that specific channel.
OpenEXR's API makes tools development a relative ease for developers. Since there are almost never two production pipelines that are the same, custom tools always need to be developed to address problems in the production process, e. g. to address image manipulation issue. OpenEXR's library allows quick and easy access to the image's attributes such as tiles and channels.

[edit] History
OpenEXR was created by ILM in 1999 and released to the public in 2003.
OpenEXR is directly supported by Artizen HDR, Combustion, Flame 2008, Smoke 2008, Blender, LuxRender, Indigo, CinePaint, Cinelerra, Houdini, Lightwave, modo, After Effects 7 Professional, V-Ray, Mental Ray, PRMan, Rendition, Digital Fusion, Nuke, IRIDAS FrameCycler, IRIDAS SpeedGrade, Toxik, Shake, Photoshop CS2, CINEMA 4D, Animation:Master, Pixel Image Editor, Tweak RV, Bryce and Synfig. It is also supported by the Cg programming language and Mac OS X since version 10.4.

[edit] Compression methods
There are 3 general types of lossless compression built into OpenEXR, with two different methods of Zip compressing. For most images without a lot of grain, the two Zip compression methods seem to work best, while the PIZ compression algorithm is better suited to grainy images. The following options are available:

None
Disables all compression.
Run Length Encoding (RLE)
This is a basic form of compression that is comparable to that used by standard Targa files.
Zip (per scanline)
Zip style compression applied to individual scanlines.
Zip (16 scanline blocks)
Zip style compression applied to blocks of 16 scanlines at time. This tends to be the most effective style of compression to use with rendered images that do not have film grain applied.
PIZ (wavelet compression)
This uses a new combined wavelet / Huffman compression. This form of compression is quite effective when dealing with grainy images, and will often surpass any of the other options under grainy conditions.
PXR24 (24 bit data conversion then zipped compression)
This form of compression from pixar converts data to 24 bit then uses Zip compression. It is lossless for half and 32bit integer data and slightly lossy for 32bit float data.
B44
This form of compression is lossy for half data and stores 32bit data uncompressed.
B44A
An extension to B44 where areas of flat color are further compressed. Regular B44 compresses uniformly regardless of image content.


[edit] Credits
From OpenEXR.org's Technical Introduction:

The ILM OpenEXR file format was designed and implemented by Florian Kainz, Wojciech Jarosz, and Rod Bogart. The PIZ compression scheme is based on an algorithm by Christian Rouet. Josh Pines helped extend the PIZ algorithm for 16-bit and found optimizations for the float-to-half conversions. Drew Hess packaged and adapted ILM's internal source code for public release and maintains the OpenEXR software distribution. The PXR24 compression method is based on an algorithm written by Loren Carpenter at Pixar Animation Studios.


[edit] Developing with OpenEXR
The OpenEXR library is developed in C++ and is available in source format as well as compiled format for Windows, Mac OS X and Linux. Careful attention was taken to ensure that OpenEXR easily compiles on almost any platform that supports C++.
As of version 1.3.0, released on June 8, 2006, support for multithreaded reading and writing was added to OpenEXR. Multithreaded reading and writing offers a higher performance gain for systems that have multiple cores or CPUs. OpenEXR handles reading and writing by a means of a thread pool.

[edit] References

^ a b Technical introduction: Data Compression


[edit] External links




Free software portal




OpenEXR.com
OpenEXR Documentation
OpenEXR Samples
exrtools
(PDF) Technical Introduction to OpenEXR
(PDF) Reading and Writing Image Files




Retrieved from "http://en.wikipedia.org/wiki/OpenEXR"
Categories: HDR file formats | Graphics file formats | Free graphics software | Open formatsHidden categories: Cleanup from July 2008 | All pages needing cleanup 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Dansk
Deutsch
Español
Français
한국어
日本語









 This page was last modified on 17 January 2009, at 10:12 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
