













MOO - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "MOO";
		var wgTitle = "MOO";
		var wgAction = "view";
		var wgArticleId = "3022179";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 280449765;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); MOO

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
For other uses, see Moo (disambiguation).
A MOO (MUD, object oriented) is a text-based online virtual reality system to which multiple users (players) are connected at the same time.
The term MOO is used in two distinct, but related, senses. One is to refer to those programs descended from the original MOO server, and the other is to refer to any MUD that uses object oriented techniques to organize its database of objects, particularly if it does so in a similar fashion to the original MOO or its derivatives. Most of this article refers to the original MOO and its direct descendants, but see Non-Descendant MOOs for a list of MOO-like systems.
The original MOO server was authored by Stephen White, based on his experience from creating the programmable TinyMUCK system. There was additional later development and maintenance from LambdaMOO administrator, and former Xerox PARC employee, Pavel Curtis.
One of the most distinguishing features of a MOO is that its users can perform object oriented programming within the server, ultimately expanding and changing how the server behaves to everyone. Examples of such changes include authoring new rooms and objects, creating new generic objects for others to use, and changing the way the MOO interface operates. The programming language used for extension is the MOO programming language, and many MOOs feature convenient libraries of verbs that can be used by programmers in their coding known as Utilities. The MOO programming language is a domain-specific programming language.




Contents


1 Background
2 History
3 Non-descendant MOOs
4 MOO access
5 MOO administration
6 Outline of well-known MOOs
7 See also
8 References
9 External links

9.1 Essays and documentation
9.2 MOO directories
9.3 Cores and programming guides







//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Background
MOOs are network accessible, multi-user, programmable, interactive systems well-suited to the construction of text-based adventure games, conferencing systems, and other collaborative software. Their most common use, however, is as multi-participant, low-bandwidth virtual realities. They are often used in academic environments for distance education or collaboration such as Diversity University; but others are primarily social in nature, or used for role-playing games (RPGs), or simply to take advantage of the programming possibilities.
Most commonly, MOOs are connected to by users using a client which speaks the telnet protocol, which provides a stay-alive connection with the host, to relay output and send commands. Some however have developed web interfaces, or other such methods; however this commonly limits interaction that the user can have, usually to the point they have no interaction, but instead can browse objects and discover typical information. Developments in cross-MOO networking have also lead to the creation of SunNET, a hubless network allowing cross-MOO communication and add extra possibilities to cross-MOO development, including networked channels.
Every MOO stores the content and state of all its objects within a persistent object database, which keeps objects from being lost by a reset of the MOO server software or the computer hosting it.
New MOOs have to choose a starting database from which to set their MOO up, or they can use a very minimal one which contains only the necessary objects to start a MOO. There are a handful of such MOO "core" databases which serve as foundations of code and utilities from which to start your MOO, including LambdaCore (from LambdaMOO), MinimalDB (considered the minimum necessary code and utilities to work usefully in a MOO), JHCore (from Jay's House Moo), and enCore (from LinguaMOO).
Every object in the MOO is assigned a number, and may be referred to by this number, prefixed with a #, as well as its name when the user is in the object's presence. Administrators, also known as Wizards, who are able to manage the MOO, and assign certain global names to these objects, which are prefixed with $, a process known as corifying. They also feature parenting systems, and every object will have a parent, commonly eventually leading to Root Class, otherwise known as #1. #0 is also reserved as a special system object which is responsible for managing the list of global names, incoming network connections, and other information related to the operation of the system.

[edit] History
MOO, along with all of its nephews, started out with text based adventure games. With the advent of the internet, MUD was formed as a networked version of one of those games. Eventually it developed into a tree of different types of MUD, with MOO becoming one of them.
Stephen White (also known by the handles "Ghondahrl" and "ghond") wrote the first version of the MOO server, which was released on May 2, 1990, and used for the operation of a server called "AlphaMOO". Pavel Curtis, an employee of Xerox PARC and also known by his handles "Lambda", and "Haakon", took the basic design, language, and code, fixed bugs and added features to release the first version, called "LambdaMOO" on October 30th, 1990.
According to Jill Serpentelli in her paper Conversational Structure and Personality Correlates of Electronic Communication:

Curtis went on to explain how the transition occurred from AlphaMOO to LambdaMOO. After fixing bugs in the system, rewriting some of the code, adding more programming capability, and writing documentation, he had created what he termed "a truly separate entity" from the original AlphaMOO. He dubbed this new system LambdaMOO, after one of his names on the system and, according to Curtis, "because it's a key word in some of the other non-mud research that I do." The new system was announced as open for public access on UseNet (a world-wide bulletin board system) in February of 1991 (Curtis, personal communication).

MOO was originally developed as a MUD server in the same general style (sharing much of the command syntax and community conventions) as TinyMUD.
There are currently two distributions of the MOO server code. The more popular of the two, the LambdaMOO server, is named such as indication of the close historical and continuing association of the MOO server code with the first public MOO, LambdaMOO, which is still popular today.
It is this LambdaMOO version of MOO that gained popularity in the early 90s, and it remains the most widely-used distribution of MOO. Pavel Curtis continued to maintain the server for several years. Other early contributors to the LambdaMOO server included users Tim Allen ("Gemba"), "Gary_Severn", Roger Crew ("Rog"), Judy Anderson ("yduJ"), and Eric Ostrom (known as "Joe Feedback"). Later, Eric Ostrom maintained the server, and the server is now maintained by Ben Jackson and Jay Carlson and has a LambdaMOO SourceForge.net project.
Sometime around early 2005, the GammaMOO server forked from LambdaMOO with the goal of being a testing ground for new features not yet qualified for inclusion in the main MOO distribution (which has very strict standards for any changes). It can be seen as a the equivalent of a "development branch" that most other projects have.

[edit] Non-descendant MOOs
Some servers use "MOO" style object oriented characteristics without being descended from the original MOO server, in the sense that they use little or none of that server's source code and use internal languages that are more or less incompatible with the MOO programming language. None of them have attained the popularity of LambdaMOO or its relatives.
Stephen White went on to write a new and similar system called CoolMUD, although it never obtained the same wide userbase as MOO. Another, later, attempt at a programmable object-oriented MUD server was ColdMUD, written by Greg Hudson and later maintained by Brandon Gillespie under the name "Genesis".
One unusual MOO with no real relationship to the original MOO is called mooix. mooix is unique among MUDs in that it uses the underlying UNIX operating system to handle all of the multitasking and networking issues. Several unique side effects result from this, one of which is that the MOO can be programmed in any language. mooix was written after a failed attempt by Joey Hess to write a MOO entirely in Perl, called perlmoo.
There are a number of MOOs written in Python, including POO, MOOP and ErisMUD.
MOO is often used in programming games, such as PointSet.

[edit] MOO access
Participants (usually referred to as users) connect to a MOO using telnet or some other, more specialized, client program. Upon connection, they are usually presented with a welcome message explaining how to either create a new character or connect to an existing one.
Having connected to a character, users then give one-line commands that are parsed and interpreted by the MOO as appropriate. Such commands may cause changes in the virtual reality, such as the location of a character, or may simply report on the current state of that reality, such as the appearance of some object.
The job of interpreting those commands is shared between the two major components in the MOO system: the server and the database. The server is a program, written in a standard programming language, that manages the network connections, maintains queues of commands and other tasks to be executed, controls all access to the database, and executes other programs written in the MOO programming language. The database contains representations of all the objects in the virtual reality, including the MOO programs that the server executes to give those objects their specific behaviours.
Almost every command is parsed by the server into a call on a MOO procedure, or verb, which actually does the work. Thus, programming in the MOO programming language is a central part of making non-trivial extensions to the database and hence the virtual reality.

[edit] MOO administration
All MOOs provide a flag called Wizard; when set on a player, the player gains the ability to view and modify nearly everything in the MOOs database. Such players are called Wizards, and usually form the basis for MOO administration.
These wizards are able to restrict access to the MOO, as well as make news postings and monitor logs. Wizard permissions are needed for modification and even execution of verbs and properties for which the user does not own, or is not publicly readable/writable. All verbs and properties within objects have the appropriate flags, with the user can change to determine its current state. They are also able to assign global names to any object.
Builders are players who are given the limited ability to create & program objects and areas in a MOO.
A designated owner(s) of a MOO are sometimes referred to as a Archwizard(s). The Archwizard sololy control access certain MOO functions and can designate and control access of other administrive Wizard(s), Builders, etc.

[edit] Outline of well-known MOOs





This article's external links may not follow Wikipedia's content policies or guidelines. Please improve this article by removing excessive or inappropriate external links.



LambdaMOO was created alongside the server, and has continued despite server development having slowed. It was the first public MOO, and is still one of the most active MOOs to date. [1]
JaysHouseMOO was a social MOO started by Jay Carlson at Minnesota State University at Mankato in 1992. It had the first gopher server implemented in MOO language.[1] It was also noted by Netscape as having a web server as well.[2] During the 90's, it was considered the hangout of the MOO programmer elite.[3] Notable among them were former and current LambdaMOO code maintainers Roger Crew, Erik Ostrom, Jay Carlson, and Ben Jackson.
LinguaMOO is an educational MOO dedicated to general studies of arts and humanities, created in 1995 by Cynthia Haynes of the University of Texas at Dallas and Jan Rune Holmevik of the University of Bergen. Many educational MOOs use the enCore system, derived from LinguaMOO, for their MOO database core. [2]
MediaMOO is designed for professional media researchers now hosted at Northern Illinois University's Department of English. It was originally created in 1993 by Amy Bruckman at the Epistemology and Learning Group at the MIT Media Lab. In its heyday around 1996, MediaMOO had over 1000 members, was governed by an elected council, and hosted frequent meetings, including the Tuesday Cafe, a weekly discussion of members of the Computers and Writing community. [3]
BioMOO was a professional MOO started by Gustavo Glusman and Jaime Prilusky at the Weizmann Institute of Science in 1993. It was a virtual place for Biology researchers to meet to brainstorm, hold colloquia and conferences, and explore the serious side of MOOs as a medium.[4] It sported a VR web interface.[5] During its eight years of activity, BioMOO hosted many professional activities including the Virtual School of Natural Sciences' courses on BioComputing and Principles of Protein Structure.[6] Prilusky and Glusman also released in 1994 the File Utilities Package, a MOO server modification enabling direct but controlled access to the underlying file system. [7]
Rupert is a social MOO based on The Hitchhiker's Guide to the Galaxy by Douglas Adams. It is spread out over several planets, the main being Rupert. Created by Jason R. Mills (aka SunRay), this MOO is also the home of the SunNET network, and all developments are conducted here. [4]
De digitale metro (The Digital Subway) founded in 1994 as part of De Digitale Stad (The Digital City of Amsterdam). It is seen as one of the first and largest Dutch MOOs. [5]
MOOsaico is one of the oldest Portuguese MOO (and the oldest Portuguese virtual world), created on 7 January 1994 and also the first true multilingual MOO. Hosted in the Computer Science department of University of Minho. [6]
Medieval opened in April 1999 and has quickly become the biggest Dutch MOO. It evolves round a loose Fantasy/Medieval theme and has a very strong social cohesion. [7]
ScriptersMOO is the first MOO which is accessible through a .NET Messenger Service client like Windows Live Messenger by opening a conversation with a MSN bot. Additionally, color support can be added with Messenger Plus! Live. Since its creation in July 2004, over 4000 unique visitors have used the MSN mirrors. [8]
schMOOze University is considered the first MOO created for the express purpose of language learning. It was established by Julie Falsetti and Eric Schweitzer in July, 1994 and is hosted at CUNY-Hunter College. [9]


[edit] See also

LambdaMOO - The MOO.
MOO programming language
MUSH
MUD
MUCK
CoolMUD
ColdMUD
Cyberformance


[edit] References

^ Riddle, Prentiss (1993-04-13). "GopherCon '93: Internet Gopher Workshop and Internet Gopher Conference". PrentissRiddle.com. http://prentissriddle.com/trips/gophercon1993.html. Retrieved on 2008-05-20. 
^ "What's New! June 1993". Netscape Corporation. 1993-06-24. http://wp.netscape.com/home/whatsnew/whats_new_0693.html. Retrieved on 2008-05-20. 
^ Hand, Chris (1994). "meet me in cyberspace". http://www.ibiblio.org/cmc/mag/1994/sep/meetme.html. 
^ Flusfeder, Helena (1996-11-08). "Life mutates in MOO dimension". http://www.timeshighereducation.co.uk/story.asp?storyCode=91378&sectioncode=26. Retrieved on 2008-12-16. 
^ "BioMOO announce VR web interface". 1995-04-30. http://www.bio.net/bionet/mm/bio-www/1995-April/000280.html. Retrieved on 2008-12-16. 
^ Fuellen, Georg. "GNA's Virtual School of Natural Sciences". http://www.techfak.uni-bielefeld.de/bcd/Vsns/index.html. 
^ "FUP server builtin functions". 1997-04-17. http://tecfa.unige.ch/moo/book2/node147.html. Retrieved on 2008-12-16. 


[edit] External links

[edit] Essays and documentation

Official MOO FAQ, updated October 2004
Yib's Guide to MOOing, updated November 2003
SunNET manual
The Lost Library of MOO, updated May 2005
The Purpose of MOOs by Rachel Rein, May 1996
Educational MOO: Text-Based Virtual Reality for Learning in Community by Lonnie Turbee, March 1997
Secrets Of The Mud Wizards (chapter 14: Programming MOOs) 1995
Sue Thomas (2004) Hello World: travels in virtuality York: Raw Nerve BooksISBN 0-9536585-6-2. See also the web view
Pedagogies in Virtual Spaces: Writing Classes in the MOO, ed. Michael Day. Kairos: A Journal for Teachers of Writing in Webbed Environments. Volume 1, No. 2 (Summer 1996).
MUDs, MOOs, WOOs and IRC, in Online Teaching: Tools & Projects, by Stuart D. Lee, Susan Armitage, Paul Groves, and Chris Stephens, May 1999.
MOO Resources - Links to several valuable MOO resources.


[edit] MOO directories

MOO at the Open Directory Project
Echo Duet MOO List - Active MOO directory


[edit] Cores and programming guides

LambdaMOO server source
Encore - Popular educational MOO core
JHCore - Programming MOO core
MOO programmers manual, May 1996
yduJ's MOO programming tutorial
mooix - a programming language independent MOO
MOOP - a MOO written entirely in Python. (Previously called POO)
playsh - a MOO-like text environment that runs on your local computer




Retrieved from "http://en.wikipedia.org/wiki/MOO"
Categories: MUD servers | MU* servers | Multiplayer online games | On-line chatHidden categories: Wikipedia external links cleanup 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Italiano
Nederlands
Português
Suomi









 This page was last modified on 29 March 2009, at 17:11 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
