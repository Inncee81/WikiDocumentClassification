













HyperCard - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "HyperCard";
		var wgTitle = "HyperCard";
		var wgAction = "view";
		var wgArticleId = "13567";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 274336051;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); HyperCard

From Wikipedia, the free encyclopedia

Jump to: navigation, search 

HyperCard





HyperCard Screenshot


Developed by
Apple Inc. (formerly Apple Computer, Inc.)


Latest release
2.4.1 / 1998


OS
System Software 6, System 7, Mac OS 8, Mac OS 9


Type
Hypermedia, Development


License
Proprietary


Website
N/A


HyperCard was an application program created by Bill Atkinson for Apple Computer, Inc. that was among the first successful hypermedia systems before the World Wide Web. It combined database capabilities with a graphical, flexible, user-modifiable interface. HyperCard also featured HyperTalk, written by Dan Winkler, a powerful and easy-to-learn programming language for manipulating data and the user interface. HyperCard users often employed it as a programming system for Rapid Application Development of different kinds of applications, database and otherwise.
HyperCard was originally released with System Software 6 in 1987 and was finally withdrawn from sale in March 2004, although by then it had not been updated for many years. HyperCard runs natively only in Mac OS versions 9 or earlier, but it can still be used in Mac OS X's Classic mode on non-Intel based machines (G5 and earlier). The last functional native HyperCard authoring environment is Classic mode in Mac OS X 10.4 (Tiger) on non-Intel based machines (although it can be run on modern Intel-based machines via an emulation layer such as SheepShaver, which is available for OS X, Linux and Windows).




Contents


1 Description
2 HyperTalk

2.1 Externals


3 Applications
4 History

4.1 HyperCard 2.0
4.2 HyperCard 3.0


5 Legacy
6 See also
7 References
8 Bibliography
9 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Description
HyperCard has been described as a "software erector set." It integrated a software development environment with a run-time environment in a simple, easily accessible way. The tools required to write an application, principally the creation and configuration of screen objects like buttons, fields and menus, are part and parcel with the ability to add programmed functionality to those objects. When designing and programming an application one can contemplate both structure and capability within a single well defined arena. That one could personally design and implement a custom application uniquely suited to one's own needs revolutionized the very concept of what software was. Instead of trying to force a particular task onto an Excel spreadsheet for example, a custom solution could be authored, modified and updated as needed, without functional compromise and with a personalized interface in a very short time. "Empowerment" became a catchword as this possibility was embraced by the Macintosh community, as was the phrase "programming for the rest of us", that is, anyone, in fact, not just professional programmers.





This article uses an unsuitable grammatical tense for an encyclopedia. Please consider copy editing to past tense if historic, present tense if not time-based (e.g. fiction), or future tense if upcoming.


HyperCard is based on the concept of a "stack" of virtual "cards." Cards hold data, just as they would in a rolodex. The layout engine was similar in concept to a "form" as used in most Rapid Application Development (RAD) environments (such as Borland Delphi or Visual Basic). A special "Home" stack (precursor to the home page on a website) was available as an application launcher, a repository for shared scripts, and a facility for setting preferences.
HyperCard is not only a database system. The layout of each card could be unique, just as one can write additional non-standard information on a Rolodex card. A special background layer contained elements that appeared on all cards of that stack or on all cards grouped under a certain background. Backgrounds could include pictures (its original purpose, "background picture"), in addition to the objects also available for each card: fields; buttons; (static) text; (editable) text fields; and other common GUI elements. Each card then could contain different data in the text or picture fields, as in a database.
For instance, an address book could be built by adding to the background a few text fields to hold the name and address. Once completed, the user adds a new card (by typing Command-N or under software control) and types into the fields. The background could be modified at any time, allowing changes to be made easily. Basic operations such as search, add, and delete were built-in, allowing simple databases to be set up and used by anyone able to use the Macintosh computer.
The Rolodex paradigm does not preclude the creation of standard looking applications. Arbitrary functionality could be programmed into a single card, making it resemble a traditional single-screen application. Additional cards could be linked similarly to the way that additional screens are linked in ordinary programs. Full control of the menu bar and support of virtually all native objects and controls allowed the creation of professional looking software.
HyperCard's find command would quickly navigate to cards containing text using a patented hintBits algorithm. This could be made more selective with modifications such as find "Bob" in card field "hello". Similarly, it had a "sort" command that allowed evaluating entire expressions to determine sorting order.

[edit] HyperTalk
The programming language within HyperCard is called "HyperTalk"and is object oriented. Objects exist in a message path hierarchy and respond to messages generated by either the user or the system itself. Objects inherit properties and attributes from those above them in the hierarchy. HyperTalk object classes are predetermined by the HyperCard environment, although others can be added by the use of externals (see below). HyperTalk is verbose, hence its ease of use and readability. HyperTalk code segments are referred to as "scripts", a term that was considered less daunting to beginning programmers.
Each HyperCard object class contains a number of "properties". For example, buttons are a type of object, and come in standard styles. To determine, say, whether a checkbox style button is in fact checked, a script can simply call the "checkmark" property, which would return either true or false. In a similar way, objects can be analyzed via functions. For example, the number of lines in text field (another type of object) can be determined by a variant of the "number" function, called simply as "the number of lines of field 'fieldName'". This is very useful when performing a particular action on each separate line of the field. The script that implements the action need only call the function to know exactly the number of lines it must deal with. Should the field data change, the already coded function call will still be accurate.
HyperTalk is a weakly typed language. All variables, and in fact all values of any kind, are stored as typeless character strings handled by the interpreter as numbers or text based purely on context. This has a cost in speed but makes it far easier to write (and to read) code. Variables need not be declared, but rather are created on the fly as they are required. For example, the following expression creates a variable named “total”, and sets its initial value: "put 15 into total". Then the expression "add 3 to total" would result in the string "18" being stored in that variable. Taking this further, a powerful and intuitive structure known as "chunking" allows precise manipulation of text and number strings. It is possible, for example, to have the second character of the value "123" (the 2) added to the last character of the value "12345", yielding "12347". For another example, word 3 of "life is cruel" (cruel) can be appended after the first word of "Hello world", yielding "Hello cruel world". It would then be possible to put "Goodbye" into (thus replacing) the first word of that string, yielding "Goodbye cruel world". The abovementioned terms: "character", "word", "first", "last", "after", and "into", among many others, offer exquisite control over the ability to crunch numbers and parse text, down to the character level.
HyperTalk supports most standard programming structures such as "if-then" and "repeat". The "if-then" is in such a general form that it even allows "case" structured code.
HyperTalk scripting allowed the system to be easily modified and extended. Unlike many procedural languages, and even many scripting languages, HyperTalk proved to be far more accessible to a wide range of users, partly because scripts were more or less readable as English. For instance, put the first word of the third line of field "hello" into field "goodbye" did exactly that. Referring to objects and the items on cards or backgrounds was easy. The example above shows how to access data within a field on a particular card, but one could refer to any object in the same fashion — including the stack itself. All objects could be named or renamed, as in the example above. In addition, each object (including the stack itself) had unique numeric IDs that remained unchanged throughout the life of the object.
Adding scripts was also easy. The user simply "command-option-clicked" (or they could click the "Script" button in the item's property dialog) on any element in the stack, and an editor would pop up. The script could then be edited, saved, and used immediately. In addition, HyperCard contained the "Message Box", an interactive command-line in a floating window that could execute single lines of script. This also included the "find" command, so it doubled as a search dialog. HyperCard 2.0 added a debugger, as well.
HyperTalk was sufficiently popular that one of the main uses of HyperCard was not as a database, but as a programming tool that empowered ordinary computer users. Thousands of "stacks" were written and distributed as "stackware" in the few years when HyperCard was widely available. As stated above, programming "for the rest of us", that is, for non-professionals, allowed many thousands of personal applications to be created by individuals with a need for personal software solutions. Some are still in use today. Many hardware and software vendors provided their tutorials as HyperCard stacks, since the application was bundled with all Macs.

[edit] Externals
The power of HyperCard could be increased significantly through the use of external command and external function modules, more commonly known as XCMDs and XFCNs. These were code libraries packaged in a resource fork that integrated into either the system generally or the HyperTalk language specifically; this was an early example of the plugin concept. Unlike conventional plugins, these did not require separate installation before they were available for use; they could be included in a stack, where they were directly available to scripts in that stack.
During HyperCard's peak popularity in the late 1980s, a whole ecosystem of vendors offered thousands of these externals for everything from HyperTalk compilers to graphing systems, database access, internet connectivity, and animation. Oracle offered an XCMD that allowed HyperCard to directly query Oracle databases on any platform. This was later superseded by Oracle's Oracle Card product.
Externals allowed access to the Macintosh Toolbox, which contained many lower level commands and functions not native to HyperTalk, such as control of the serial and ADB ports.
Typing set userlevel to 5 into the Message box would enable you to edit HyperCard documents and give you full user privileges, although individual stacks could be protected to prevent this.[1]

[edit] Applications
HyperCard has been used for all sorts of hypertext and artistic purposes. Before the advent of PowerPoint, HyperCard was often used as a general-purpose presentation program. Examples of HyperCard applications include simple databases, "choose your own adventure"—type games, educational teaching aids, and the first (off-line) wiki.
Due to its rapid application design facilities, HyperCard was also sometimes used for prototyping of applications and sometimes even for version 1.0 implementations. Inside Apple, the QuickTime team was one of HyperCard's biggest customers.




Beethoven's Ninth stack


A number of commercial software products were created in HyperCard, most notably the original version of the interactive game narrative Myst, the Voyager Company's Expanded Books, and multimedia CD-ROMs of Beethoven's Ninth Symphony CD-ROM, the Beatles' A Hard Day's Night, and the Voyager MacBeth.
The prototype and demo of the popular game You Don't Know Jack was written in HyperCard. Renault, the French auto manufacturer, used it to control their inventory system.
Activision, which was until that time primarily a game company, saw HyperCard as an entry point into the business market. Changing their name to Mediagenic, they published several major HyperCard based applications, most notably Danny Goodman's Focal Point, a personal information manager, and Reports For HyperCard, a program by Nine To Five Software that allowed users to treat HyperCard as a full-fledged database system with robust information viewing and printing features.
The HyperCard-inspired SuperCard for a while included the "Roadster" plugin that allowed stacks to be placed inside Web pages and viewed by browsers with an appropriate browser plugin. There was even a Windows version of this plugin allowing computers other than Macintoshes to use the plugin.

[edit] History
HyperCard was created by Bill Atkinson. Work for it began in March 1985 under the name of WildCard (hence the creator code of 'WILD'). In 1986 Dan Winkler began work on HyperTalk and the name was changed to HyperCard for trademark reasons. It was initially released in August 1987, with the understanding that Atkinson would give HyperCard to Apple only if they promised to release it for free on all Macs. Apple timed its release to coincide with the MacWorld Conference & Expo in Boston, Massachusetts to guarantee maximum publicity. HyperCard was a huge hit almost instantly. Many people who thought they would never be able to program a computer started using HyperCard for all sorts of automation and prototyping tasks, a surprise even to its creator.
Apple itself never seemed to understand what HyperCard's target market for users should be. Project managers found it was being used by a huge number of people, internally and externally. Bug reports and upgrade suggestions continued to flow in, demonstrating it had a wide variety of users. Since it was also free, it was difficult to justify dedicating engineering resources to improvements in the software. It was not lost on Apple or its mainstream developers that the power HyperCard gave to people could cut into the sales of ordinary shrink wrapped products.[citation needed]

[edit] HyperCard 2.0
In late 1989, Kevin Calhoun, then a HyperCard engineer at Apple, led an effort to upgrade the program. This resulted in 1990's HyperCard 2.0. The new version included an on the fly compiler that greatly increased performance of computationally intensive code, a new debugger and a number of improvements to the underlying HyperTalk language.
At the same time HyperCard 2.0 was being developed, a separate group within Apple developed and in 1991 released "HyperCard IIGS", a version of HyperCard for the Apple IIGS system. Aimed mainly at the education market, HyperCard IIGS had roughly the same feature set as the 1.x versions of Macintosh HyperCard, while adding support for the color graphics capabilities of the IIGS. Although "stacks" (HyperCard program documents) were not binary-compatible, a translator program (itself a HyperCard stack) allowed stacks to be moved from one platform to the other.
Then, Apple decided that most of its application software packages, including HyperCard, would be the property of a wholly owned subsidiary called Claris. Many of the HyperCard developers chose to stay at Apple rather than move to Claris, causing the development team to be split. Claris, in the business of selling software for a profit, attempted to create a business model where HyperCard could also generate revenues. They wrote a new "viewer only" version, the HyperCard Player which Apple distributed with the Macintosh operating system, while Claris sold the "full" version commercially. Many users were upset that they had to pay to use software that had traditionally been supplied free and which many considered a basic part of the Mac.
Despite the new revenue stream, Claris did little to market HyperCard. Development continued with minor upgrades, as well as the first failed attempt to create a third generation of HyperCard. During this period, HyperCard began losing market share. Without a number of important, basic features, HyperCard authors began moving to systems such as SuperCard and Macromedia Authorware. Nevertheless HyperCard continued to be popular and used for a widening range of applications, from the game The Manhole, an earlier effort by the creators of Myst, to corporate information services and many thousands in between.
Apple eventually folded Claris back into the parent company, returning HyperCard to Apple's core engineering group. In 1992, Apple released the eagerly anticipated upgrade of HyperCard 2.2 and made many HyperCard enthusiasts happy by including licensed versions of Color Tools and Addmotion II, adding support for color pictures and animations. However, these tools were limited and often cumbersome to use because HyperCard still lacked true, internal color support.

[edit] HyperCard 3.0





This section does not cite any references or sources. Please help improve this article by adding citations to reliable sources (ideally, using inline citations). Unsourced material may be challenged and removed. (April 2007)


Several attempts were made to restart HyperCard development once it returned to Apple. Because of the product's widespread use as a multimedia-authoring tool it was rolled into the QuickTime group. A new effort to allow HyperCard to create QuickTime interactive (QTi) movies started, once again under the direction of Kevin Calhoun. QTi extended QuickTime's core multimedia playback features to provide true interactive facilities and a low-level programming language based on 68000 assembly language. The resulting HyperCard 3.0 was first presented in 1996 when an alpha-quality version was shown to developers at Apple's annual Worldwide Developers Conference [2]. Under the leadership of Dan Crow development continued through the late 1990s, with public demos showing many popular features such as color support, internet connectivity, and the ability to play HyperCard stacks (which were now special QuickTime movies) in a web browser. Development of HyperCard 3.0 stalled when the QuickTime team was focused away from development of QuickTime interactive to the streaming features of QuickTime 4.0. Finally in 2000 the HyperCard engineering team was reassigned to other tasks after Steve Jobs decided to abandon the product. Calhoun and Crow both left Apple shortly after in 2001.
In the years that followed, the program saw no additional support from Apple. Apple finally ceased selling HyperCard in March 2004. According to Archive.org since at least February 11, 2008 the URL address http://www.apple.com/hypercard no longer points to Apple's site but redirects to this Wikipedia article.

[edit] Legacy
HyperCard is one of the first products that made use of and popularized the hypertext concept to a large popular base of users.[citation needed]
Jakob Nielsen has pointed out that HyperCard was really only a hypermedia program since its links started from regions on a card, not text objects; actual HTML-style text hyperlinks were possible in later versions, but were awkward to implement and seldom used. Bill Atkinson later lamented that if he had only realized the power of network-oriented stacks, instead of focusing on local stacks on a single machine, HyperCard could have become the first Web browser.[3]
HyperCard saw a loss in popularity with the growth of the World Wide Web, since the Web could handle and deliver data in much the same way as HyperCard without being limited to files on one's own hard disk. HyperCard had a significant impact on the web as it inspired the creation of both HTTP itself (through its influence on Tim Berners-Lee's colleague Robert Cailliau)[citation needed], and JavaScript (whose creator, Brendan Eich, was inspired by HyperTalk [4]). It was also a key inspiration for ViolaWWW, an early web browser[citation needed].
The pointing-finger cursor used for navigating stacks later found its way into the first web browsers, as the hyperlink cursor[5].
Other companies offered their own versions. Three products are currently available which offer HyperCard-like functionality:

Runtime Revolution's Revolution expands greatly on HyperCard's feature set and offers color and a GUI toolkit which can be deployed on many popular platforms (Classic Macintosh system software, Mac OS X, Windows 98 through Vista, and Linux/Unix). Revolution directly imports existing HyperCard stacks and provides a migration path for stacks still in use.
SuperCard is similar to HyperCard, but with many additional features such as: full color support, pixel and vector graphics, a full GUI toolkit, and support for many modern Mac OS X features. It runs only on Macs.
TileStack is an attempt to create a web based version of HyperCard that is compatible with the original HyperCard files. It is currently in Beta.

Past products included:

Plus was a product similar to HyperCard for Windows and Macintosh.
Asymetrix's Windows application ToolBook resembled HyperCard, and included an external converter to read HyperCard stacks.
Oracle purchased a cross-platform clone and released it as OracleCard, renamed Oracle Media Objects, used as a 4GL for database access.

In addition, many of the basic concepts of the original system were later re-used in other forms. Apple built their system-wide scripting engine AppleScript on a language similar to HyperTalk; it was often used for DTP workflow automation needs. In the 1990s FaceSpan provided a third-party graphical interface, and continues to do so today. AppleScript also has a native graphical programming front-end called Automator, released with Mac OS X 10.4, codenamed Tiger, in April 2005. One of HyperCard's strengths was its handling of multimedia, and many multimedia systems like Macromedia Authorware and Macromedia Director are based on concepts originating in HyperCard[citation needed].
AppWare, originally known as Serius Developer, is sometimes seen to be similar to HyperCard, as they were both rapid application development system. AppWare was sold in the early 90s and worked on both Windows and Mac systems.
On a less positive note, as HyperCard executed scripts in stacks immediately on opening it was also one of the first applications susceptible to macro viruses. The Merryxmas virus was discovered in 1993 by Ken Dunham, two years before the "Concept" virus.[6] There were very few viruses based on HyperCard, and their overall impact was minimal.
The Myst computer game franchise, initially released as a HyperCard stack, still lives on, making HyperCard a facilitating technology for starting one of the best-selling computer games of all time.
According to Ward Cunningham, the inventor of Wikis, the wiki concept can be traced back to a HyperCard stack he wrote in the late 1980s, making HyperCard one of the grandparents of the Wiki idea.[7][8][9]

[edit] See also

Apple Media Tool
Automator: an easy-to-use script-authoring environment
Morphic: a visual UI building system
mTropolis: multimedia authoring using a drag-and-drop programming system
NoteCards: from Xerox PARC, a similar system that pre-dates HyperCard
Revolution: Rapid application development environment that can be deployed on many popular platforms
Stagecast Creator: one of a number of similar "if you see this, do this" programming systems
SuperCard
ViolaWWW: early web browser initially based upon HyperCard


[edit] References

^ HyperCard® Script Language Guide: The HyperTalk™ Language. Reading, MA: Addison-Wesley Publishing Company. 1988. p. 181. ISBN 0-201-17632-7.  "The userLevel property can have a value from 1 to 5, with 5 (scripting) providing the most power…. … A script writer can invoke the Protect Stack dialog box from the File menu to impose a limit on the user level available in a stack." 
^ Colby, Clifford (September 1996). "HyperCard's new deal: QuickTime authoring". MacWeek. http://folkstream.com/muse/teachhc/hc3.html. 
^ http://www.wired.com/gadgets/mac/commentary/cultofmac/2002/08/54370 HyperCard: What Could Have Been]
^ Eich, Brendan (1998): Forward to the JavaScript Bible, 3rd Ed.
^ Scott Granneman's computing history 1968-present: 1987
^ Pantechnicon Wiki
^ Wiki History
^ Interview: Wikinewsie Kim Bruning discusses Wikimania
^ An Evening With Wiki Inventor Ward Cunningham in Conversation with John Gage


[edit] Bibliography

Danny Goodman, The Complete HyperCard Handbook (Bantam Books, 1987), ISBN 0-9665514-2-7


[edit] External links

Computer Chronicles 1987 interview with Bill Atkinson and Dan Winkler demoing HyperCard (from Archive.org)
Revolution
HyperCard Pantechnicon
A list of HyperCard links
HyperCard and AppleScript: in French
comp.sys.mac.HyperCard The original Usenet group now enshrined as a Google Group that is still somewhat active.
Open Source xTalk Interpreter Archive: An attempt to organize open source HyperCard/HyperTalk clones
HyperCard comes back from the dead to the web








v • d • e

Apple Inc. software





OS

Darwin · Mac OS X (Public Beta · "Cheetah" · "Puma" · "Jaguar" · "Panther" · "Tiger" · "Leopard" · "Snow Leopard") · iPhone OS






Consumer

Bento · MobileMe · iLife (iMovie · iDVD · iPhoto · GarageBand · iWeb · iTunes) · iWork (Keynote · Pages · Numbers · iWork.com)






Prosumer

Final Cut Express · Logic Express






Professional

Aperture · FileMaker Pro · Final Cut Studio (Final Cut Pro · DVD Studio Pro · Motion · Soundtrack Pro · Color · Compressor) · Logic Studio · Shake






Bundled

Front Row · iChat · Mail · Photo Booth · QuickTime · Safari · TextEdit






Server

Apple Remote Desktop · Mac OS X Server · WebObjects · Xsan






Developer

Dashcode · Instruments · Interface Builder · Quartz Composer · Xcode






Discontinued

.Mac · AppleWorks · HyperCard · Mac OS (System 6, 7 · Mac OS 8, 9) · MacDraw · MacPaint · MacProject · MacTerminal · MacWrite · ResEdit









Retrieved from "http://en.wikipedia.org/wiki/HyperCard"
Categories: 1987 software | Domain-specific programming languages | Hypertext | Mac OS-only software made by Apple Inc.Hidden categories: Wikipedia articles with incorrect tenses | All articles with unsourced statements | Articles with unsourced statements since March 2008 | Articles needing additional references from April 2007 | Articles with unsourced statements since June 2008 | Articles with unsourced statements since July 2008 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Deutsch
Español
Français
한국어
Italiano
Nederlands
Português
日本語
Suomi
中文









 This page was last modified on 2 March 2009, at 03:44.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
