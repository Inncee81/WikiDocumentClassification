













Algorithmic composition - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Algorithmic_composition";
		var wgTitle = "Algorithmic composition";
		var wgAction = "view";
		var wgArticleId = "479884";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 283982557;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Algorithmic composition

From Wikipedia, the free encyclopedia

Jump to: navigation, search 







This article has multiple issues. Please help improve the article or discuss these issues on the talk page.

It does not cite any references or sources. Please help improve it by citing reliable sources. Tagged since September 2008.
It may contain original research or unverifiable claims. Tagged since September 2008.





Algorithmic composition is the technique of using algorithms to create music.
Algorithms (or, at the very least, formal sets of rules) have been used to compose music for centuries; the procedures used to plot voice-leading in Western counterpoint, for example, can often be reduced to algorithmic determinacy. The term is usually reserved, however, for the use of formal procedures to make music without human intervention, either through the introduction of chance procedures or the use of computers. There is a radical distinction (both in terms of philosophy and in the heard result) between composers who use indeterminate (e.g. stochastic) procedures to compose music and those who use routines which produce deterministic results given a fixed input into the algorithm.
Many algorithms that have no immediate musical relevance are used by composers as creative inspiration for their music. Algorithms such as fractals, L-systems, statistical models, and even arbitrary data (e.g. census figures, GIS coordinates, or magnetic field measurements) are fair game for musical interpretation. The success or failure of these procedures as sources of "good" music largely depends on the mapping system employed by the composer to translate the non-musical information into a musical data stream.




Contents


1 Models for algorithmic composition

1.1 Mathematical models
1.2 Knowledge-based systems
1.3 Grammars
1.4 Evolutionary methods
1.5 Systems which learn
1.6 Hybrid systems


2 Works and applications
3 See also
4 Literature
5 External links

5.1 Samples of algorithmic music
5.2 Software
5.3 Articles







//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Models for algorithmic composition
There is no universal method to sort different compositional algorithms into categories. One way to do this is to look at the way an algorithm takes part in the compositional process. The results of the process can then be divided into 1) music composed by computer and 2) music composed with the aid of computer. Music may be considered composed by computer when the algorithm is able to make choices of its own during the creation process.
Another way to sort compositional algorithms is to examine the results of their compositional processes. Algorithms can either 1) provide notational information (sheet music) for other instruments or 2) provide an independent way of sound synthesis (playing the composition by itself). There are also algorithms creating both notational data and sound synthesis.
However, the most common way to categorise compositional algorithms is by their structure and the way of processing musical data. One of the most detailed division consists of six partly overlapping models:

mathematical models
knowledge-based systems
grammars
evolutionary methods
systems which learn
hybrid systems


[edit] Mathematical models
Mathematical models are based on mathematical equations and random events. The most common way to create compositions through mathematics is stochastic processes. In stochastic models a piece of music is composed as a result of non-deterministic methods. The compositional process is only partially controlled by the composer by weighting the possibilities of random events. One good example of stochastic algorithms is Markov chains. Stochastic algorithms are often used together with other algorithms in various decision-making processes.
Music has also been composed through natural phenomena. These chaotic models create compositions from the harmonic and inharmonic phenomena of nature. For example, since the 1970s fractals have been studied also as models for algorithmic composition.
As an example of deterministic compositions through mathematical models, the On-Line Encyclopedia of Integer Sequences provides an option to play an integer sequence as music. (It converts each integer to a note on an 88-key musical keyboard by computing the integer modulo 88.)

[edit] Knowledge-based systems
One way to create compositions is to isolate the aesthetic code of a certain musical genre and use this code to create new similar compositions. Knowledge-based systems are based on a pre-made set of arguments that can be used to compose new works of same style or genre. Usually this is accomplished by a set of tests or rules needing to be fulfilled for the composition to be complete.

[edit] Grammars
Music can also be examined as a language with a distinctive grammar set. Compositions are created by first constructing a musical grammar, which is then used to create comprehensible musical pieces. Grammars often include rules for macro-level composing, for instance harmonies and rhythm, rather than single notes.

[edit] Evolutionary methods
Evolutionary methods of composing music are based on genetic algorithms. The composition is being built by the means of evolutionary process. Through mutation and natural selection, different solutions evolve towards a suitable musical piece. Iterative action of the algorithm cuts out bad solutions and creates new ones from those surviving the process. The results of the process are supervised by the critic, a vital part of the algorithm controlling the quality of created compositions.

[edit] Systems which learn
Learning systems are programs that have no given knowledge of the genre of music they are working with. Instead, they collect the learning material by themselves from the example material supplied by the user or programmer. The material is then processed into a piece of music similar to the example material. This method of algorithmic composition is strongly linked to such studies as cognitive science and study of neural networks.

[edit] Hybrid systems
Programs based on a single algorithmic model rarely succeed in creating aesthetically satisfying results. For that reason algorithms of different type are often used together to combine the strengths and diminish the weaknesses of these algorithms. Creating hybrid systems for music composition has opened up the field of algorithmic composition and created also many brand new ways to construct compositions algorithmically. The only major problem with hybrid systems is their growing complexity and the need of resources to combine and test these algorithms.

[edit] Works and applications
Algorithmic techniques have also been employed in a number of systems intended for direct musical performance, with many using algorithmic techniques to generate infinitely-variable improvisations on a predetermined theme. An early example was Lucasfilm Games' 1982 computer game Ballblazer, where the computer improvised on a basic jazz theme composed by the game's musical director; later in the life of that company, now rechristened LucasArts, an algorithmic iMUSE engine was developed for their flagship game, Dark Forces.
Similar generative music systems have caught the attention of noted composers. Brian Eno has produced a number of works for the SSEYO's Koan generative music system, which produces ambient variations for web-pages, mobile devices, and for standalone performance. The copyright status of these "generative" works is unclear, although the original "composition" is supplied by the composer and the "performance" is largely the result of the user's computer's own algorithms.
Notable composers known for their use of algorithmic procedures:

Clarence Barlow
Sean Booth
John Cage
David Cope
Gustavo DÃ­az-Jerez
Charles Dodge
Brian Eno
Karlheinz Essl
Lejaren Hiller
Gottfried Michael Koenig
Gary Lee Nelson
Paul Lansky
Eduardo Reck Miranda
Laurie Spiegel
Morton Subotnick
Rodney Waschka II
Iannis Xenakis


[edit] See also

Artificial creativity
Computer music
Pop music automation
Evolutionary music
Generative music


[edit] Literature

Curtis Roads: The Computer Music Tutorial. MIT Press 1996
Eduardo Reck Miranda: Composing Music with Computers. Focal Press 2001
Karlheinz Essl: Algorithmic Composition. in: Cambridge Companion to Electronic Music, ed. by N. Collins and J. d'Escrivan, Cambridge University Press 2007. - ISBN 978-0521688659. - Abstract
Gerhard Nierhaus: Algorithmic Composition - Paradigms of Automated Music Generation. Springer 2008. - ISBN 978-3211755396


[edit] External links

[edit] Samples of algorithmic music

A sample of Ballblazer music: OGG vorbis format, (details)
A jazz saxophone solo automatically generated by Band-in-a-Box: OGG vorbis format.
The babelcast (RSS subscription feed, iTMS free subscription) and telequalia (RSS subscription feed, iTMS free subscription), algorithmic, computer-generated Podcast series by Christopher Ariza
Samples with piano and cello from the computer program Randomusic.
Samples of Paul Ramsay's Parallel Music (uses Shockwave): PMusic: SINGLES; Consemble Plymouth and Consemble (open compositions project).
Samples of Karlheinz Essl's Lexikon-Sonate (MIDI and mp3).
Samples of Phil Thompson's Fractal Music and software.
Samples of Gary Lee Nelson's Fractal Music.
Samples of Martin DostÃ¡l's GeneticDrummer System.
Samples from Ensemble 176's online recordings.
Impro-Visor: software that can generate jazz solos algorithmically using a user-specifiable stochastic context-free grammar.
Fractal Tunes you can make with Tune Smithy 3.0 sample fractal tunes made with Tune Smithy
Fractal Composer Examples example pieces generated by fractalcomposer.com.
Abacus Milan GuÅ¡tar's algorithmic serial minimalistic composition for player piano.


[edit] Software

Fractal Composer is a web application developed by Myron Marston that generates music using the principles of self-similarity found in fractals. Users can compose music directly at the website and submit their pieces to the library.
FractMus is a freeware algorithmic composition program written by Spanish composer and pianist Gustavo DÃ­az-Jerez.
Fractal Tune Smithy an algorithmic composition program written by Robert Walker
Musical Algorithms An interactive exploration of the relationship between music and mathematical formulas funded by the Northwest Academic Computing Consortium, project directed by Jonathan N. Middleton.
cgMusic is a free, extensible algorithmic composition program that can create tonal music in various styles. MIDI and MP3 samples are available on the website.
Lexikon-Sonate for computer-controlled piano by Karlheinz Essl (freeware for MacOS)
Fractal Music Composer by Michael Frame, Ginger Booth, and Harlan Brothers (Java)


[edit] Articles

A Few Remarks on Algorithmic Composition by Martin Supper. Computer Music Journal 25.1 (2001) 48-53




Retrieved from "http://en.wikipedia.org/wiki/Algorithmic_composition"
Categories: Musical compositionHidden categories: Articles lacking sources from September 2008 | All articles lacking sources | Articles that may contain original research since September 2008 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




Â 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Deutsch
FranÃ§ais









 This page was last modified on 15 April 2009, at 12:23 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  WikipediaÂ® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
