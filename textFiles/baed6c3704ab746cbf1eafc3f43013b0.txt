













SPICE - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "SPICE";
		var wgTitle = "SPICE";
		var wgAction = "view";
		var wgArticleId = "180251";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 284398524;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); SPICE

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
For other uses, see Spice (disambiguation).




Screen shot of Spice OPUS, a fork of Berkeley SPICE


SPICE (Simulation Program with Integrated Circuit Emphasis) is a general-purpose analog electronic circuit simulator. It is a powerful program that is used in IC and board-level design to check the integrity of circuit designs and to predict circuit behavior.




Contents


1 Introduction
2 Origins
3 Program features and structure

3.1 Analyses
3.2 Device models
3.3 Input and output: Netlists, schematic capture and plotting


4 See also
5 References
6 External links

6.1 Versions with source code available
6.2 Applications







//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Introduction
Integrated circuits, unlike board-level designs composed of discrete parts, are impossible to breadboard before manufacture. Further, the high costs of photolithographic masks and other manufacturing prerequisites make it essential to design the circuit to be as close to perfect as possible before the integrated circuit is first built. Simulating the circuit with SPICE is the industry-standard way to verify circuit operation at the transistor level before committing to manufacturing an integrated circuit.
Board-level circuit designs can often be breadboarded for testing. Even with a breadboard, some circuit properties may not be accurate compared to the final printed wiring board, such as parasitic resistances and capacitances. These parasitic components can often be estimated more accurately using SPICE simulation. Also, designers may want more information about the circuit than is available from a single mock-up. For instance, circuit performance is affected by component manufacturing tolerances. In these cases it is common to use SPICE to perform Monte Carlo simulations of the effect of component variations on performance, a task which is impractical using calculations by hand for a circuit of any appreciable complexity.
Circuit simulation programs, of which SPICE and derivatives are the most prominent, take a text netlist describing the circuit elements (transistors, resistors, capacitors, etc.) and their connections, and translate this description into equations to be solved. The general equations produced are nonlinear differential algebraic equations which are solved using implicit integration methods, Newton's method and sparse matrix techniques.

[edit] Origins
SPICE was developed at the Electronics Research Laboratory of the University of California, Berkeley by Larry Nagel with direction from his research advisor, Prof. Donald Pederson. SPICE1 was largely a derivative of the CANCER program,[1] which Nagel had worked on under Prof. Ronald Rohrer. CANCER was an acronym for "Computer Analysis of Nonlinear Circuits, Excluding Radiation," a hint to Berkeley's liberalism of 1960s: at these times many circuit simulators were developed under the United States Department of Defense contracts that required the capability to evaluate the radiation hardness of a circuit. When Nagel's original advisor, Prof. Rohrer, left Berkeley, Prof. Pederson became his advisor. Pederson insisted that CANCER, a proprietary program, be rewritten enough that restrictions could be removed and the program could be put in the public domain.[2]
SPICE1 was first presented at a conference in 1973.[3] SPICE1 was coded in FORTRAN and used nodal analysis to construct the circuit equations. Nodal analysis has limitations in representing inductors, floating voltage sources and the various forms of controlled sources. SPICE1 had relatively few circuit elements available and used a fixed-timestep transient analysis. The real popularity of SPICE started with SPICE2[4] in 1975. SPICE2, also coded in FORTRAN, was a much-improved program with more circuit elements, variable timestep transient analysis using either trapezoidal or the Gear integration method (also known as BDF), equation formulation via modified nodal analysis[5] (avoiding the limitations of nodal analysis), and an innovative FORTRAN-based memory allocation system developed by another graduate student, Ellis Cohen. The last FORTRAN version of SPICE was 2G.6 in 1983. SPICE3[6] was developed by Thomas Quarles (with A. Richard Newton as advisor) in 1989. It is written in C, uses the same netlist syntax, and added X Window System plotting.
As an early open source program, SPICE was widely distributed and used. Its ubiquity became such that "to SPICE a circuit" remains synonymous with circuit simulation.[7] SPICE source code was from the beginning distributed by UC Berkeley for a nominal charge (to cover the cost of magnetic tape). The license originally included distribution restrictions for countries not considered friendly to the USA, but the source code is currently covered by the BSD license.
SPICE inspired and served as a basis for many other circuit simulation programs, in academia, in industry, and in commercial products. The first commercial version of SPICE was ISPICE[8], an interactive version on a timeshare service, National CSS. The most prominent commercial versions of SPICE include HSPICE (now owned by Synopsys) and PSPICE (now owned by Cadence Design Systems). The academic spinoffs of SPICE include XSPICE, developed at Georgia Tech, which added mixed analog/digital "code models" for behavioral simulation, and Cider (previously CODECS, from UC Berkeley/Oregon State Univ.) which added semiconductor device simulation. The integrated circuit industry adopted SPICE quickly, and until commercial versions became well developed many IC design houses had proprietary versions of SPICE.[9] Today a few IC manufacturers, typically the larger companies, have groups continuing to develop SPICE-based circuit simulation programs. Among these are ADICE at Analog Devices, LTspice at Linear Technology, Mica at Freescale Semiconductor, and TISPICE at Texas Instruments. (Other companies maintain internal circuit simulators which are not directly based upon SPICE, among them PowerSpice at IBM, Titan at Qimonda, Lynx at Intel Corporation, and Pstar at NXP Semiconductor.)

[edit] Program features and structure
SPICE became popular because it contained the analyses and models needed to design integrated circuits of the time, and was robust enough and fast enough to be practical to use.[10] Precursors to SPICE often had a single purpose: The BIAS[11] program, for example, did simulation of bipolar transistor circuit operating points; the SLIC[12] program did only small-signal analyses. SPICE combined operating point solutions, transient analysis, and various small-signal analyses with the circuit elements and device models needed to successfully simulate many circuits.

[edit] Analyses
SPICE2 included these analyses:

AC analysis (small-signal frequency domain analysis at the quiescent point (Q-point))
DC analysis (nonlinear quiescent point calculation)
DC transfer curve analysis (a sequence of nonlinear operating points calculated while sweeping an input voltage or current, or a circuit parameter)
Noise analysis (a small signal analysis done using an adjoint matrix technique which sums uncorrelated noise currents at a chosen output point)
Transfer function analysis (a small-signal input/output gain and impedance calculation)
Transient analysis (time-domain large-signal solution of nonlinear differential algebraic equations)

SPICE2 also contained code for sensitivity analysis, pole-zero analysis, and small-signal distortion analysis. Analysis at various temperatures was done by automatically updating semiconductor model parameters for temperature, allowing the circuit to be simulated at temperature extremes.
Other circuit simulators have since added many analyses beyond those in SPICE2 to address changing industry requirements. Parametric sweeps were added to analyze circuit performance with changing manufacturing tolerances or operating conditions. Loop gain and stability calculations were added for analog circuits. Harmonic balance or time-domain steady state analyses were added for RF and switched-capacitor circuit design. However, a public-domain circuit simulator containing the modern analyses and features needed to become a successor in popularity to SPICE has not yet emerged.[10]

[edit] Device models
SPICE2 included many semiconductor device compact models: three levels of MOSFET model, a combined Ebers–Moll and Gummel-Poon bipolar model, a JFET model, and a model for a junction diode. In addition, it had many other elements: resistors, capacitors, inductors (including coupling), independent voltage and current sources, ideal transmission lines, and voltage and current controlled sources.
SPICE3 added more sophisticated MOSFET models, which were required due to advances in semiconductor technology. In particular, the BSIM family of models were added, which were also developed at UC Berkeley.
Commercial and industrial SPICE simulators have added many other device models as technology advanced and earlier models became inaccurate. To attempt standardization of these models so that a set of model parameters may be used in different simulators, an industry working group was formed, the Compact Model Council[13], to choose, maintain and promote the use of standard models. The standard models today include BSIM3, BSIM4, BSIMSOI, PSP, HICUM, and MEXTRAM.

[edit] Input and output: Netlists, schematic capture and plotting
SPICE2 took a text netlist as input and produced line-printer listings as output, which fit with the computing environment in 1975. These listings were either columns of numbers corresponding to calculated outputs (typically voltages or currents), or line-printer character "plots". SPICE3 retained the netlist for circuit description, but allowed analyses to be controlled from a command-line interface similar to the C shell. SPICE3 also added basic X-Window plotting, as UNIX and engineering workstations became common.
Vendors and various free software projects have added schematic capture front-ends to SPICE, allowing a schematic diagram of the circuit to be drawn and the netlist to be automatically generated. Also, graphical user interfaces were added for selecting the simulations to be done and manipulating the voltage and current output vectors. In addition, very capable graphing utilities have been added to see waveforms and graphs of parametric dependencies. Several free versions of these extended programs are available, some as introductory limited packages, and some without restrictions.

[edit] See also

Input Output Buffer Information Specification (IBIS)
Transistor models
PSPICE
Spectre Circuit Simulator


[edit] References

^ Nagel, L. W., and Rohrer, R. A. (August 1971). "Computer Analysis of Nonlinear Circuits, Excluding Radiation". IEEE Journal of Solid State Circuits SC-6: 166–182. doi:10.1109/JSSC.1971.1050166. http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1050166. 
^ Perry, T. (June 1998). "Donald O. Pederson". IEEE Spectrum 35: 22–27. doi:10.1109/6.681968. http://ieeexplore.ieee.org/search/wrapper.jsp?arnumber=681968. 
^ Nagel, L. W, and Pederson, D. O., SPICE (Simulation Program with Integrated Circuit Emphasis), Memorandum No. ERL-M382, University of California, Berkeley, Apr. 1973
^ Nagel, Laurence W., SPICE2: A Computer Program to Simulate Semiconductor Circuits, Memorandum No. ERL-M520, University of California, Berkeley, May 1975
^ Ho, Ruehli, and Brennan (April 1974). "The Modified Nodal Approach to Network Analysis". Proc. 1974 Int. Symposium on Circuits and Systems, San Francisco: 505–509. 
^ Quarles, Thomas L., Analysis of Performance and Convergence Issues for Circuit Simulation, Memorandum No. UCB/ERL M89/42, University of California, Berkeley, Apr. 1989.
^ Pescovitz, David (2002-05-02). "1972: The release of SPICE, still the industry standard tool for integrated circuit design". Lab Notes: Research from the Berkeley College of Engineering. http://www.coe.berkeley.edu/labnotes/0502/history.html. Retrieved on 2007-03-10. 
^ Vladimirescu, Andrei, SPICE -- The Third Decade, Proc. 1990 IEEE Bipolar Circuits and Technology Meeting, Minneapolis, Sept. 1990, pp. 96–101
^ K. S. Kundert, The Designer’s Guide to SPICE and SPECTRE, Kluwer. Academic Publishers, Boston , 1998
^ a b Nagel, L., Is it Time for SPICE4?, 2004 Numerical Aspects of Device and Circuit Modeling Workshop, June 23-25, 2004, Santa Fe, New Mexico. Retrieved on 2007-11-10
^ McCalla and Howard (February 1971). "BIAS-3 – A program for nonlinear D.C. analysis of bipolar transistor circuits". IEEE J. of Solid State Circuits 6 (1): 14–19. doi:10.1109/JSSC.1971.1050153. http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1050153. 
^ Idleman, Jenkins, McCalla and Pederson (August 1971). "SLIC—a simulator for linear integrated circuits". IEEE J. of Solid State Circuits 6 (4): 188–203. doi:10.1109/JSSC.1971.1050168. http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1050168. 
^ "CMC - Compact Model Council". GEIA. http://www.geia.org/index.asp?bid=597. 


[edit] External links

Comprehensive, detailed PSPICE tutorial and user guide at Wilfrid Laurier University, Canada
Larry Nagel, "The Life of SPICE"
The Spice Page
Thomas Quarles' dissertation (SPICE3)
SPICE on gEDA HOWTO
A brief history of SPICE
Spice 3 Userguide
Spice 3 Quickstart Tutorial
Designer's Guide Community



[edit] Versions with source code available

SPICE2 and SPICE3 at UC Berkeley
Cider at UC Berkeley
ngspice: SPICE3 with updates and XSPICE extensions
tclspice: ngspice and Tcl scripting
XSPICE at Georgia Tech


[edit] Applications

Sample Spice code and output for various circuits
NanoDotTek Report NDT14-08-2007, 12 August 2007




Retrieved from "http://en.wikipedia.org/wiki/SPICE"
Categories: Electronic design automation software | Free software programmed in C | Free software programmed in Fortran | CAD file formats | Simulation programming languages | Electronic circuit simulators 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Deutsch
Español
Français
हिन्दी
Bahasa Indonesia
日本語
Português
中文









 This page was last modified on 17 April 2009, at 11:42 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
