













V-Model - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "V-Model";
		var wgTitle = "V-Model";
		var wgAction = "view";
		var wgArticleId = "1256194";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 275149803;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); V-Model

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
For other uses, see V-Model (software development).




The V-model of the Systems Engineering Process.[1]


The V-Model (or VEE model) is a systems development model designed to simplify the understanding of the complexity associated with developing systems.[2][3][4] In systems engineering it is used to define a uniform procedure for product or project development.




Contents


1 Overview
2 V Model topics

2.1 Systems Engineering and verification
2.2 The specification stream


3 Applications
4 See also
5 References
6 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Overview
The V-model is a graphical representation of the systems development lifecycle. It summarizes the main steps to be taken in conjunction with the corresponding deliverables within computerized system validation framework.
The VEE is a process that represents the sequence of steps in a project life cycle development. It describes the activities and results that have to be produced during product. The left side of the VEE represents the decomposition of requirements, and creation of system specifications. The right side of the V represents integration of parts and their verification. [5][6][3][4][7] V stands for "Verification and Validation" 77

[edit] V Model topics




Systems engineering and verification.[8]



[edit] Systems Engineering and verification
The Systems Engineering Process (SEP) provides a path for improving the cost effectiveness of complex systems as experienced by the system owner over the entire life of the system, from conception to retirement.[1]
It involved early and comprehensive identification of goals, a concept of operations that describes user needs and the operating environment, thorough and testable system requirements, detailed design, implementation, rigorous acceptance testing of the implemented system to ensure it meets the stated requirements (system verification), measuring its effectiveness in addressing goals (system validation), on-going operation and maintenance, system upgrades over time, and eventual retirement.[1][3][4][7]
The process emphasizes requirements-driven design and testing. All design elements and acceptance tests must be traceable to one or more system requirements and every requirement must be addressed by at least one design element and acceptance test. Such rigor ensures nothing is done unnecessarily and everything that is necessary is accomplished.[1][3]

[edit] The specification stream
The specification stream mainly consists of:

User Requirement Specifications
Functional Specifications
Design Specifications

The testing stream generally consists of:

Installation Qualification (IQ)
Operational Qualification (OQ)
Performance Qualification (PQ)

The development stream can consist (depending on the system type and the development scope) in customization, configuration or coding..

[edit] Applications




Off-Core alternatives (illustrating upward and downward iterations and Time and Maturity dimension). Source - K. Forsberg and H. Mooz 2004[3][7]


The V-model is used to regulate the software development process within the German federal administration. Nowadays it is still the standard for German federal administration and defence projects, as well as software developers within in the region.
The concept of the V-Model was developed simultaneously, but independently, in Germany and in the United States in the late 1980s. The US V-Model, as documented in the 1991 proceedings for the National Council on Systems Engineering (NCOSE; now INCOSE as of 1995),[7] was developed for satellite systems involving hardware, software, and human interaction. It has now found wide-spread application in commercial as well as defence programs. Its primary use is in and Project Management[3][4] throughout the project lifecycle.
One fundamental characteristic of the US V-Model is that time and maturity move from left to right and one cannot move back in time. All iteration is along a vertical line to higher or lower levels in the system hierarchy, as shown in the figure.[3][4][7] This has proven to be an important aspect of the model. The expansion of the model to a dual-Vee concept is treated in reference [3].
As the V-model is publicly available many companies also use it. In project management it is a method comparable to PRINCE2 and describes methods for project management as well as methods for system development. The V-Model while rigid in process, can be very flexible in application, especially as it pertains to the scope outside of the realm of the System Development Lifecycle normal parameters.

[edit] See also

RUP (as a supporting software process)
Systems analysis
Systems design
ycle
Dual Vee Model


[edit] References


^ a b c d Clarus Concept of Operations. Publication No. FHWA-JPO-05-072, Federal Highway Administration (FHWA), 2005
^ "Systems Engineering for Intelligent Transportation Systems". US Dept. of Transportation. pp 10. http://ops.fhwa.dot.gov/publications/seitsguide/seguide.pdf. Retrieved on 2007-06-09. 
^ a b c d e f g h Forsberg, K., Mooz, H., Cotterman, H. Visualizing Project Management, 3rd edition, John Wiley and Sons, New York, NY, 2005. Pages 108-116, 242-248, 341-360.
^ a b c d e International Council On Systems Engineering (INCOSE), Systems Engineering Handbook Version 3.1, August 2007, pages 3.3 to 3.8
^ Forsberg, K., Mooz, H. (1998). System Engineering for Faster, Cheaper, Better. Center of Systems Management. http://web.archive.org/web/20030420130303/http://www.incose.org/sfbac/welcome/fcb-csm.pdf. 
^ "The SE VEE". SEOR, George Mason University. http://www.gmu.edu/departments/seor/insert/robot/robot2.html. Retrieved on 2007-05-26. 
^ a b c d e Forsberg, K. and Mooz, H., "The Relationship of Systems Engineering to the Project Cycle," First Annual Symposium of the National Council On Systems Engineering (NCOSE), October 1991
^ Systems Engineering Fundamentals. Defense Acquisition University Press, 2001.



[edit] External links



Wikimedia Commons has media related to: V-models 



Vee Model of Systems Engineering Design and Integration
What is the V-model? (in German)
V-Model XT Documentation
Types of Testing
Image
Software Processes (also the V-Modell)
Death of the V-Model (small software projects but not large systems of systems?)








v • d • e

Systems engineering





Fields

Biological systems engineering • Configuration management • Earth systems engineering and management • Enterprise systems engineering • Performance engineering • Reliability engineering • Safety engineering • Space Systems Engineering






System Engineering Process

Requirements analysis • Functional specification • System integration • Verification and Validation






Concepts

Business process • System • Systems engineering process • System lifecycle






Tools

Decision making • Functional modelling • Optimization • Planning • Reliable analysis • Statistical analysis • Systems analysis • System dynamics • V-Model • Work breakdown structure






Systems engineers

Wernher von Braun • Harold Chestnut • Arthur David Hall III • Derek Hitchins • Robert E. Machol • Simon Ramo • Joseph Francis Shea • John N. Warfield






Related fields

Control engineering • Computer engineering • Industrial engineering • Operations research • Project management • Quality management • Software engineering









Retrieved from "http://en.wikipedia.org/wiki/V-Model"
Categories: Software project management | Systems engineering 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Afrikaans
Català
Deutsch
Español
Français
한국어
Nederlands
日本語
Русский
中文









 This page was last modified on 5 March 2009, at 12:06.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
