













C0 and C1 control codes - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "C0_and_C1_control_codes";
		var wgTitle = "C0 and C1 control codes";
		var wgAction = "view";
		var wgArticleId = "2371820";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 288586425;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); C0 and C1 control codes

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
The C0 and C1 control code sets define control codes for use in text by computer systems that use the ISO/IEC 2022 system of specifying control and graphic characters. The C0 set defines codes in the range 00HEX–1FHEX and the C1 set defines codes in the range 80HEX–9FHEX. The default C0 set was originally defined in ISO 646 (ASCII), while the default C1 set was originally defined in ECMA-48 (harmonized later with ISO 6429). While other C0 and C1 sets are available for specialized applications, they are rarely used.
While the C1 control characters are used in conjunction with the ISO/IEC 8859 series of graphical character sets among others, and are integrated into Unicode, they are rarely used directly, except on specific platforms such as OpenVMS. When they turn up in documents, Web pages, e-mail messages, etc., which are ostensibly in an ISO-8859-n encoding, their code positions generally refer instead to the characters at that position in a proprietary, system-specific encoding such as Windows-1252 or the Apple Macintosh ("MacRoman") character set that use the codes provided for representation of the C1 set with a single 8-bit byte to instead provide additional graphic characters, though this is technically invalid under the ISO encodings. Thus the C1 control characters are more commonly accessed using the equivalent two byte escape sequence intended for use with systems that have only 7-bit bytes.
Computer applications dealing with plain text only need to concern themselves with the six format effectors (0x08 through 0x0D) in the default C0 set. Only HT, LF, and CR are universally well handled, as BS is often used by applications to indicate deleting the previous character, and VT and FF are often poorly handled by applications that do not assume the used of a fixed character and page size. On the other hand, the C1 control character NEL intended as a single byte substitute for the common two-byte sequence CR LF is often accepted by plain text applications. Very few applications interpret the other C0 and C1 control codes, as they are not needed for plain text.
The official English language names of some control codes were revised in the most recent edition of the standard for control codes in general (ISO 6429:1992 or ECMA-48:1991) to be neutral with respect to the graphic characters used with them, and to not assume that, as in the Latin script, lines are written on a page from top to bottom and that characters are written on a line from left to right. The abbreviations used were not changed, as the standard had already specified that those would remain unchanged when the standard is translated to other languages. Where the name has been changed, the original name from which the abbreviation was derived is also given in small type in the tables below.




Contents


1 C0 (ASCII and derivatives)
2 C1 (ISO 8859 and Unicode)
3 References





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] C0 (ASCII and derivatives)
These are the standard ASCII control codes. If using the ISO/IEC 2022 extension mechanism, they are designated as the active C0 control character set with the octet sequence 0x1B 0x21 0x40 (ESC ! @).


Seq
Dec
Hex
Acro
Name
C
Description


^@
00
00
NUL
Null
\0
Originally used to allow gaps to be left on paper tape for edits. Later used for padding after a code that might take a terminal some time to process (e.g. a carriage return or line feed on a printing terminal). Now often used as a string terminator, especially in the C programming language.


^A
01
01
SOH
Start of Header

First character of a message header.


^B
02
02
STX
Start of text

First character of message text, and may be used to terminate the message heading.


^C
03
03
ETX
End of Text

Often used as a "break" character (Ctrl-C) to interrupt or terminate a program or process.


^D
04
04
EOT
End of Transmission

Used on Unix to signal end-of-file condition on, or to logout from, a terminal.


^E
05
05
ENQ
Enquiry

Signal intended to trigger a response at the receiving end, to see if it is still present.


^F
06
06
ACK
Acknowledge

Response to an ENQ, or an indication of successful receipt of a message.


^G
07
07
BEL
Bell
\a
Originally used to sound a bell on the terminal. Later used for a beep on systems that didn't have a physical bell. May also quickly turn on and off inverse video (a visual bell).


^H
08
08
BS
Backspace
\b
Move the cursor one position leftwards. On input, this may delete the character to the left of the cursor. On output, where in early computer technology a character once printed could not be erased, the backspace was sometimes used to generate accented characters in ASCII. For example, à could be produced using the three character sequence a BS ` (0x61 0x08 0x60). This usage is now deprecated and generally not supported. To provide disambiguation between the two potential uses of backspace, the cancel character control code was made part of the standard C1 control set.


^I
09
09
HT
Character Tabulation
Horizontal Tabulation
\t
Position to the next character tab stop.


^J
10
0A
LF
Line Feed
\n
On typewriters, printers, and some terminal emulators, moves the cursor down one row without affecting its column position. On Unix, used to mark end-of-line. In MS-DOS, Windows, and various network standards, used following CR as part of the end-of-line mark.


^K
11
0B
VT
Line Tabulation
Vertical Tabulation
\v
Position the form at the next line tab stop.


^L
12
0C
FF
Form Feed
\f
On printers, load the next page. Treated as whitespace in many programming languages, and may be used to separate logical divisions in code. In some terminal emulators, it clears the screen.


^M
13
0D
CR
Carriage Return
\r
Originally used to move the cursor to column zero while staying on the same line. On Mac OS (pre-Mac OS X), as well as in earlier systems such as the Apple II and Commodore 64, used to mark end-of-line. In MS-DOS, Windows, and various network standards, it is used preceding LF as part of the end-of-line mark. The Enter or Return key on a keyboard will send this character, but it may be converted to a different end-of-line sequence by a terminal program.


^N
14
0E
SO
Shift Out

Switch to an alternate character set.


^O
15
0F
SI
Shift In

Return to regular character set after Shift Out.


^P
16
10
DLE
Data Link Escape

Cause the following octets to be interpreted as raw data, not as control codes or graphic characters. Returning to normal usage would be implementation dependent.


^Q
17
11
DC1
Device Control One

These four control codes are reserved for device control, with the interpretation dependent upon the device they were connected. DC1 and DC2 were intended primarily to indicate activating a device while DC3 and DC4 were intended primarily to indicate pausing or turning off a device. In actual practice DC1 and DC3 (known also as XON and XOFF respectively in this usage) quickly became the de facto standard for software flow control.


^R
18
12
DC2
Device Control Two



^S
19
13
DC3
Device Control Three



^T
20
14
DC4
Device Control Four



^U
21
15
NAK
Negative Acknowledge

Sent by a station as a negative response to the station with which the connection has been set up. In binary synchronous communication protocol, the NAK is used to indicate that an error was detected in the previously received block and that the receiver is ready to accept retransmission of that block. In multipoint systems, the NAK is used as the not-ready reply to a poll.


^V
22
16
SYN
Synchronous Idle

Used in synchronous transmission systems to provide a signal from which synchronous correction may be achieved between data terminal equipment, particularly when no other character is being transmitted.


^W
23
17
ETB
End of Transmission Block

Indicates the end of a transmission block of data when data are divided into such blocks for transmission purposes.


^X
24
18
CAN
Cancel

Indicates that the data preceding it are in error or are to be disregarded.


^Y
25
19
EM
End of medium

Intended as means of indicating on paper or magnetic tapes that the end of the usable portion of the tape had been reached.


^Z
26
1A
SUB
Substitute

Originally intended for use as a transmission control character to indicate that garbled or invalid character had been received. It has often been put to use for other purposes when the in-band signaling of errors it provides is unneeded, especially where robust methods of error detection and correction are used, or where errors are expected to be rare enough to make using the character for other purposes advisable.


^[
27
1B
ESC
Escape
\e
The ESC key on the keyboard will cause this character to be sent on most systems. It can be used in software user interfaces to exit from a screen, menu, or mode, or in device-control protocols (e.g., printers and terminals) to signal that what follows is a special command sequence rather than normal text. In systems based on ISO/IEC 2022, even if another set of C0 control codes are used, this octet is required to always represent the escape character.


^\
28
1C
FS
File Separator

Can be used as delimiters to mark fields of data structures. If used for hierarchical levels, US is the lowest level (dividing plain-text data items), while RS, GS, and FS are of increasing level to divide groups made up of items of the level beneath it.


^]
29
1D
GS
Group separator



^^
30
1E
RS
Record Separator



^_
31
1F
US
Unit separator



While not technically part of the C0 control character range, the following two characters are defined in ISO/IEC 2022 as always being available regardless of which sets of control characters and graphics characters have been registered. They can be thought of as having some characteristics of control characters.



32
20
SP
Space

Space is a graphic character. It has a visual representation consisting of the absence of a graphic symbol. It causes the active position to be advanced by one character position. In some applications, Space can be considered a lowest-level "word separator" to be used with the adjacent separator characters.


^?
127
7F
DEL
Delete

Not technically part of the C0 control character range, this was originally used to mark deleted characters on paper tape, since any character could be changed to all ones by punching holes everywhere. On VT100 compatible terminals, this is the character generated by the key labelled ⌫, usually called backspace on modern machines, and does not correspond to the PC delete key.



[edit] C1 (ISO 8859 and Unicode)
These are most common extended control codes. If using the ISO/IEC 2022 extension mechanism, they are designated as the active C1 control character set with the sequence 0x1B 0x22 0x43 (ESC " C). Individual control functions can be accessed with the 7-bit equivalents 0x1B 0x40 through 0x1B 0x5F (ESC @ through ESC _) if being used in an environment where 8-bit characters are not supported or where these octets are being used instead to add additional graphics characters.


Dec
Hex
Esc (0x1B+)
Acro
Name
Description


128
80
40
PAD
Padding Character
Listed as XXX in Unicode. Not part of ISO/IEC 6429 (ECMA-48).


129
81
41
HOP
High Octet Preset


130
82
42
BPH
Break Permitted Here
Follows a graphic character where a line break is permitted. Roughly equivalent to a soft hyphen except that the means for indicating a line break is not necessarily a hyphen. Not part of the first edition of ISO/IEC 6429. [1]


131
83
43
NBH
No Break Here
Follows the graphic character that is not to be broken. Not part of the first edition of ISO/IEC 6429. [1]


132
84
44
IND
Index
Move the active position one line down, to eliminate ambiguity about the meaning of LF. Deprecated in 1988 and withdrawn in 1992 from ISO/IEC 6429 (1986 and 1991 respectively for ECMA-48).


133
85
45
NEL
Next Line
Equivalent to CR+LF. Used to mark end-of-line on some IBM mainframes.


134
86
46
SSA
Start of Selected Area
Used by block-oriented terminals.


135
87
47
ESA
End of Selected Area


136
88
48
HTS
Character Tabulation Set
Horizontal Tabulation Set
Causes a character tabulation stop to be set at the active position.


137
89
49
HTJ
Character Tabulation With Justification
Horizontal Tabulation With Justification
Similar to Character Tabulation, except that instead of spaces or lines being placed after the preceding characters until the next tab stop is reached, the spaces or lines are placed preceding the active field so that preceding graphic character is placed just before the next tab stop.


138
8A
4A
VTS
Line Tabulation Set
Vertical Tabulation Set
Causes a line tabulation stop to be set at the active position.


139
8B
4B
PLD
Partial Line Forward
Partial Line Down
Used to produce subscripts and superscripts in ISO/IEC 6429, e.g., in a printer.
Subscripts use PLD text PLU while superscripts use PLU text PLD..


140
8C
4C
PLU
Partial Line Backward
Partial Line Up


141
8D
4D
RI
Reverse Line Feed
Reverse Index



142
8E
4E
SS2
Single-Shift 2
Next character invokes a graphic character from the G2 or G3 graphic sets respectively. In systems that conform to ISO/IEC 4873 (ECMA-43), even if a C1 set other than the default is used, these two octets may only be used for this purpose.


143
8F
4F
SS3
Single-Shift 3


144
90
50
DCS
Device Control String
Followed by a string of printable characters (0x20 through 0x7E) and format effectors (0x08 through 0x0D), terminated by ST (0x9C).


145
91
51
PU1
Private Use 1
Reserved for private use.


146
92
52
PU2
Private Use 2


147
93
53
STS
Set Transmit State



148
94
54
CCH
Cancel character
Destructive backspace, intended to eliminate ambiguity about meaning of BS.


149
95
55
MW
Message Waiting



150
96
56
SPA
Start of Protected Area
Used by block-oriented terminals.


151
97
57
EPA
End of Protected Area


152
98
58
SOS
Start of String
Followed by a control string terminated by ST (0x9C) that may contain any character except SOS or ST. Not part of the first edition of ISO/IEC 6429. [1]


153
99
59
SGCI
Single Graphic Character Introducer
Listed as XXX in Unicode. Not part of ISO/IEC 6429.


154
9A
5A
SCI
Single Character Introducer
To be followed by a single printable character (0x20 through 0x7E) or format effector (0x08 through 0x0D). The intent was to provide a means by which a control function or a graphic character that would be available regardless of which graphic or control sets were in use could be defined. Definitions of what the following byte would invoke was never implemented in an international standard. Not part of the first edition of ISO/IEC 6429. [1]


155
9B
5B
CSI
Control Sequence Introducer
Used to introduce control sequences that take parameters.


156
9C
5C
ST
String Terminator



157
9D
5D
OSC
Operating System Command
Followed by a string of printable characters (0x20 through 0x7E) and format effectors (0x08 through 0x0D), terminated by ST (0x9C). These three control codes were intended for use to allow in-band signaling of protocol information, but are rarely used for that purpose.


158
9E
5E
PM
Privacy Message


159
9F
5F
APC
Application Program Command



^ a b c d C1 Control Set of ISO 6429:1983 International Register of Coded Character Sets, Registration Number 77


[edit] References

http://www.unicode.org/charts/PDF/U0000.pdf
http://www.unicode.org/charts/PDF/U0080.pdf
ATIS Telecom Glossary 2000
De litteris regentibus C1 quaestiones septem or Are C1 characters legal in XHTML 1.0?
W3C I18N FAQ: HTML, XHTML, XML and Control Codes
International register of coded character sets to be used with escape sequences




Retrieved from "http://en.wikipedia.org/wiki/C0_and_C1_control_codes"
Categories: Control characters 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Português









 This page was last modified on 8 May 2009, at 01:01 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
