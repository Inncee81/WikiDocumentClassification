













Eight queens puzzle - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Eight_queens_puzzle";
		var wgTitle = "Eight queens puzzle";
		var wgAction = "view";
		var wgArticleId = "10474";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281143276;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Eight queens puzzle

From Wikipedia, the free encyclopedia

Jump to: navigation, search 




























































































One solution.


The eight queens puzzle is the problem of putting eight chess queens on an 8×8 chessboard such that none of them is able to capture any other using the standard chess queen's moves. The queens must be placed in such a way that no two queens would be able to attack each other. Thus, a solution requires that no two queens share the same row, column, or diagonal. The eight queens puzzle is an example of the more general n queens puzzle of placing n queens on an n×n chessboard, where solutions exist only for n = 1 or n ≥ 4.




Contents


1 History
2 Constructing a solution
3 Solutions to the eight queens puzzle
4 Counting solutions
5 Related problems
6 The eight queens puzzle as an exercise in algorithm design
7 An animated version of the recursive solution
8 See also
9 References
10 External links

10.1 Links to solutions







//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] History
The puzzle was originally proposed in 1848 by the chess player Max Bezzel, and over the years, many mathematicians, including Gauss and Georg Cantor, have worked on this puzzle and its generalized n-queens problem. The first solutions were provided by Franz Nauck in 1850. Nauck also extended the puzzle to n-queens problem (on an n×n board—a chessboard of arbitrary size). In 1874, S. Gunther proposed a method of finding solutions by using determinants, and J.W.L. Glaisher refined this approach.
Edsger Dijkstra used this problem in 1972 to illustrate the power of what he called structured programming. He published a highly detailed description of the development of a depth-first backtracking algorithm.2
This puzzle appeared in the popular early 1990s computer game The 7th Guest.

[edit] Constructing a solution
The problem can be quite computationally expensive as there are 4,426,165,368 (or 64!/(56!8!)) possible arrangements of eight queens on the board, but only 92 solutions. It is possible to use shortcuts that reduce computational requirements or rules of thumb that avoids brute force computational techniques. For example, just by applying a simple rule that constrains each queen to a single column (or row), though still considered brute force, it is possible to reduce the number of possibilities to just 16,777,216 (8^8) possible combinations, which is computationally manageable for n=8, but would be intractable for problems of n=1,000,000. Extremely interesting advancements for this and other toy problems is the development and application of heuristics (rules of thumb) that yield solutions to the n queens puzzle at an astounding fraction of the computational requirements. This heuristic solves n queens for any n n ≥ 4 or n = 1:

Divide n by 12. Remember the remainder (n is 8 for the eight queens puzzle).
Write a list of the even numbers from 2 to n in order.
If the remainder is 3 or 9, move 2 to the end of the list.
Append the odd numbers from 1 to n in order, but, if the remainder is 8, switch pairs (i.e. 3, 1, 7, 5, 11, 9, …).
If the remainder is 2, switch the places of 1 and 3, then move 5 to the end of the list.
If the remainder is 3 or 9, move 1 and 3 to the end of the list.
Place the first-column queen in the row with the first number in the list, place the second-column queen in the row with the second number in the list, etc.

For n = 8 this results in the solution shown above. A few more examples follow.

14 queens (remainder 2): 2, 4, 6, 8, 10, 12, 14, 3, 1, 7, 9, 11, 13, 5.
15 queens (remainder 3): 4, 6, 8, 10, 12, 14, 2, 5, 7, 9, 11, 13, 15, 1, 3.
20 queens (remainder 8): 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 3, 1, 7, 5, 11, 9, 15, 13, 19, 17.


[edit] Solutions to the eight queens puzzle
The eight queens puzzle has 92 distinct solutions. If solutions that differ only by symmetry operations (rotations and reflections) of the board are counted as one, the puzzle has 12 unique (or fundamental) solutions, which are presented below:































































































Unique solution 1
































































































Unique solution 2
































































































Unique solution 3


































































































Unique solution 4
































































































Unique solution 5
































































































Unique solution 6


































































































Unique solution 7
































































































Unique solution 8
































































































Unique solution 9


































































































Unique solution 10
































































































Unique solution 11
































































































Unique solution 12






[edit] Counting solutions
The following table gives the number of solutions for placing n queens on an n × n board, both unique (sequence A002562 in OEIS) and distinct (sequence A000170 in OEIS).


n:
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
..
24
25


unique:
1
0
0
1
2
1
6
12
46
92
341
1,787
9,233
45,752
285,053
..
28,439,272,956,934
275,986,683,743,434


distinct:
1
0
0
2
10
4
40
92
352
724
2,680
14,200
73,712
365,596
2,279,184
..
227,514,171,973,736
2,207,893,435,808,352


Note that the six queens puzzle has fewer solutions than the five queens puzzle.
There is currently no known formula for the exact number of solutions.[1]

[edit] Related problems

Using pieces other than queens
For example, on an 8×8 board one can place 32 knights, or 14 bishops, 16 kings or 8 rooks, so that no two pieces attack each other. Fairy chess pieces have also been substituted for queens. In the case of knights, an easy solution is to place one on each square of a given color, since they move only to the opposite color.
Nonstandard boards
Pólya studied the n queens problem on a toroidal ("donut-shaped") board. Other shapes, including three-dimensional boards, have also been studied.
Domination
Given an n×n board, find the domination number, which is the minimum number of queens (or other pieces) needed to attack or occupy every square. For the 8×8 board, the queen's domination number is 5.
Nine queens problem
Place nine queens and one pawn on an 8×8 board in such a way that queens don't attack each other. Further generalization of the problem (complete solution is currently unknown): given an n×n chess board and m > n queens, find the minimum number of pawns, so that the m queens and the pawns can be set up on the board in such a way that no two queens attack each other.
Queens and knights problem
Place m queens and m knights on an n×n board such that no piece attacks another.
Magic squares
In 1992, Demirörs, Rafraf, and Tanik published a method for converting some magic squares into n queens solutions, and vice versa.
Latin squares
In an n×n matrix, place each digit 1 through n in n locations in the matrix such that no two instances of the same digit are in the same row or column.
Exact cover
Consider a matrix with one primary column for each of the n ranks of the board, one primary column for each of the n files, and one secondary column for each of the 4n-6 nontrivial diagonals of the board. The matrix has n2 rows: one for each possible queen placement, and each row has a 1 in the columns corresponding to that square's rank, file, and diagonals and a 0 in all the other columns. Then the n queens problem is equivalent to choosing a subset of the rows of this matrix such that every primary column has a 1 in precisely one of the chosen rows and every secondary column has a 1 in at most one of the chosen rows; this is an example of a generalized exact cover problem, of which sudoku is another example.
Queens On A Chessboard - Beyond The 2nd Dimension
The N-Queens puzzle in 3 dimensions, 4 dimensions and higher. We extend the 2-dimensional n queens on an n×n board puzzle into the 3rd dimension, to populate n×n×n cubes with n2 non-competing queens. The 'first' of many maximally-populated solutions for the 11x11x11 cube is described, and a proposal is offered on how multiples of these cubes might be arranged to yield solutions for 4-dimensional tesseract versions of this puzzle.


[edit] The eight queens puzzle as an exercise in algorithm design
Main article: Eight queens puzzle solutions
Finding all solutions to the eight queens puzzle is a good example of a simple but nontrivial problem. For this reason, it is often used as an example problem for various programming techniques, including nontraditional approaches such as constraint programming, logic programming or genetic algorithms. Most often, it is used as an example of a problem which can be solved with a recursive algorithm, by phrasing the n queens problem inductively in terms of adding a single queen to any solution to the problem of placing n−1 queens on an n-by-n chessboard. The induction bottoms out with the solution to the 'problem' of placing 0 queens on an n-by-n chessboard, which is the empty chessboard.
This technique is much more efficient than the naïve brute-force search algorithm, which considers all 648 = 248 = 281,474,976,710,656 possible blind placements of eight queens, and then filters these to remove all placements that place two queens either on the same square (leaving only 64!/56! = 178,462,987,637,760 possible placements) or in mutually attacking positions. This very poor algorithm will, among other things, produce the same results over and over again in all the different permutations of the assignments of the eight queens, as well as repeating the same computations over and over again for the different sub-sets of each solution. A better brute-force algorithm places a single queen on each row, leading to only 88 = 224 = 16,777,216 blind placements.
It is possible to do much better than this. One algorithm generates the permutations of the numbers 1 through 8 (of which there are 8! = 40,320), uses the elements of each permutation as indices to place a queen on each row, guaranteeing no rook attacks. Then it rejects those boards with diagonal attacking positions. The backtracking depth-first search program below, a slight improvement on the permutation method, constructs the search tree by considering one row of the board at a time, eliminating most nonsolution board positions at a very early stage in their construction. Because it rejects diagonal attacks even on incomplete boards, it examines only 15,720 possible queen placements.
Constraint programming is even more effective on this problem. An 'iterative repair' algorithm typically starts with all queens on the board, for example with one queen per column. It then counts the number of conflicts (attacks), and uses a heuristic to determine how to improve the placement of the queens.
The 'minimum-conflicts' heuristic — moving the piece with the largest number of conflicts to the square in the same column where the number of conflicts is smallest — is particularly effective: it solves the 1,000,000 queen problem in less than 50 steps on average. This assumes that the initial configuration is 'reasonably good' — if a million queens all start in the same row, it will obviously take at least 999,999 steps to fix it. A 'reasonably good' starting point can for instance be found by putting each queen in its own row and column such that it conflicts with the smallest number of queens already on the board.
Note that 'iterative repair', unlike the 'backtracking' search outlined above, does not guarantee a solution: like all hillclimbing procedures, it may get stuck on a local optimum (in which case the algorithm may be restarted with a different initial configuration). On the other hand, it can solve problem sizes that are several orders of magnitude beyond the scope of a breadth-first search.

[edit] An animated version of the recursive solution

This animation uses backtracking to solve the problem. A queen is placed in a column that is known not to cause conflict. If a column is not found the program returns to the last good state and then tries a different column.
Algorithms that solve the eight queens puzzle implemented in different programming languages are found in the eight queens puzzle solutions article.

[edit] See also

Functional programming
Mathematical game
Mathematical puzzle
No-three-in-line problem
Rook polynomial
Distributed Computing
BOINC


[edit] References

Watkins, John J. (2004). Across the Board: The Mathematics of Chess Problems. Princeton: Princeton University Press. ISBN 0-691-11503-6.
O.-J. Dahl, E. W. Dijkstra, C. A. R. Hoare Structured Programming, Academic Press, London, 1972 ISBN 0-12-200550-3 see pp 72-82 for Dijkstra's solution of the 8 Queens problem.


[edit] External links

An Applet simulating the random-greedy solution for the n-queen problem
MathWorld article
Solutions to the 8-Queens Problem
Walter Koster's N-Queens Page
Durango Bill's N-Queens Page
On-line Guide to Constraint Programming
NQueen@home Boinc project
Queens@TUD project (uses FPGA-based solvers)
Eight queens puzzle: Flash game


[edit] Links to solutions

A000170 N Queens solutions on Sloane's On-Line Encyclopedia of Integer Sequences
N Queens solutions achieved on the NQueen@home Boinc project (code is modified from Jeff Somers' code)
N-Queens solvers in many programming languages
A Koalog Constraint Solver model
Find your own solution
Takaken's N-Queen code (around 4 times faster than Jeff Somer's code because of symmetry considerations)
Jeff Somers' N-Queen code
Atari BASIC
Atari Action!
Genetic algorithms
Haskell/Java hybrid
Java
Java||mirror
Python
Standard ML
Integer Sequences
Quirkasaurus' 8 Queens Solution
LISP solution for N-Queens Problem
ANSI C (recursive, congruence-free NxN-size queens problem solver with conflict heuristics)
javascript solution for 8-Queens Problem
Abhinanth's Simple Javascript application for quick view - chess 8 queen problem
Brute-force solution for eight queens in a web based interactive classic BASIC environment
Conflict heuristics solution for the eight queens in a web based interactive classic BASIC environment
A Simple PHP Solution
A table of first-possible N-Queens solutions, for N = 4 to 49 (less N=46 and N=48, which are work-in-progress)
Visual Prolog: N-Queen Puzzle (wiki)





Retrieved from "http://en.wikipedia.org/wiki/Eight_queens_puzzle"
Categories: Chess and mathematics | Chess problems | Recreational mathematics | Enumerative combinatorics | 1848 in chess 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Català
Česky
Dansk
Deutsch
Español
Français
Italiano
עברית
ქართული
Magyar
日本語
Polski
Português
Slovenščina
Српски / Srpski
ไทย
Tiếng Việt
Türkçe









 This page was last modified on 1 April 2009, at 20:10.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
