













XRX (web application architecture) - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "XRX_(web_application_architecture)";
		var wgTitle = "XRX (web application architecture)";
		var wgAction = "view";
		var wgArticleId = "19946654";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 278249281;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); XRX (web application architecture)

From Wikipedia, the free encyclopedia

Jump to: navigation, search 





This article appears to contain a large number of buzzwords. Please help rewrite this article to make it more concrete and meaningful. (March 2009)


In software development XRX is a web application architecture based on XForms, REST and XQuery. XRX applications store data on both the web client and on the web server in XML format and do not require a translation between data formats. XRX is considered a simple and elegant application architecture due to the minimal number of translations needed to transport data between client and server systems. The XRX architecture is also tightly coupled to W3C standards (CSS, XHTML 2.0, XPath, XML Schema) to ensure XRX applications will be robust in the future. Because XRX applications leverage modern declarative languages on the client and functional languages on the server they are designed to empower non-developers who are not familiar with traditional procedural languages such as JavaScript, Java or .Net.




Contents


1 Overview of XRX

1.1 Client Architectural Features
1.2 Server Architecture Features
1.3 Both Client and Server


2 Overall Benefits of XRX
3 Comparison with Traditional Object/Relational Web Application Architectures
4 History of XRX
5 Generalizations of XRX
6 See also
7 References
8 Additional Resource





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Overview of XRX
XRX is a "zero translation" application architecture that uses XML to store data in the client web browser, on the application server and in the database server. It is because each of these layers use XML as the same structural data model that XRX applications do not have to translate data structures to and from both object and relational data structures. Because of the lack of need for translation, XRX is considered to have a clean and elegant design. The XRX web application architecture allows developers to focus on the business problem and not the translation problem. XRX benefits from several advances in software technology:

[edit] Client Architectural Features

A Model-view controller architecture that separates the model (stored in XML) from the views of an application.
A single element (xf:submission) for all server submissions. This replaces much of the JavaScript code required in most AJAX applications.
An advanced event model (XML Events) consistent with w3c standards that frees applications from having to deal with vendor-specific event handling.
A Dependency graph that is used to store the dependency structure of the client controllers. This frees the developer from having to manually update either the model or the views when data changes in an application. This allows spreadsheet-like applications to be created on the client with very little effort.
A Declarative (programming) style that allows most client XForms applications to be created using a small set of approximately 20 elements. This allows rich client applications to be created without knowledge of JavaScript or other procedural scripting languages.
An easy-to-extend system for creating new user interface controls using the EXtensible Bindings Language. This allows developers to add new controls at any time without fear of incompatibilities with w3c standards.


[edit] Server Architecture Features

Many native XML databases have built-in REST interfaces making each XQuery inherently a RESTful web service.
A functional programming model that promotes side-effect free systems that are easier to debug and easier to run on multiple processors.
An easy-to-extend system using XQuery function and modules.


[edit] Both Client and Server

Both XRX client and server components support a wide range of XML related standards such as XPath, XML Schema and XML Namespaces
Consistent use of REST interfaces to exchange data between the client and server for all transfers of data including as-you-type data checking and suggest functions
Consistent integration of W3C standards including use of XPath and XML Schema data types
A large library of standard of functions used on both the client and server


[edit] Overall Benefits of XRX
One of the principal benefits of the XRX architecture is that it avoids the requirement to "shred" complex data structures into relational structures and then reconstitute the data back into structures when a record is edited on the client.
Another benefits of the XRX Web application architecture is that it avoids most of the problems around the object-relational impedance mismatch.
Another advantage is that the client developer does not have to learn JavaScript on the client.

[edit] Comparison with Traditional Object/Relational Web Application Architectures
Many traditional web application architectures created in the late 1990 were based on middle object tiers and persistence layers that used tabular data streams and relational database systems. Because each of these layers used different structures to store the models the systems required much additional complexity to translate between layers.

[edit] History of XRX
Early examples of using a zero-translation architecture in multi-tier systems can be traced back to the rise of object-oriented databases in the 1990s. See OODBMS History
Mark Birbeck suggested that the combination of XForms, XQuery with REST interfaces between the two had many advantages in a meeting to the UK XML User Group in September of 2006 [1] . His presentation was one of the first to specifically suggest that the combination of three technologies: XForms and XQuery with REST interfaces would have surprisingly beneficial effects. Mark termed this process "Skimming" but that term did not seem to be contagious.
Erik Bruchez of Orbeon spoke at the XML 2007 conference on Boston in December of 2007. [2]. His presentation titled: XForms and the eXist XML database: a perfect couple, Erik showed that many people were discovering synergistic benefits of XForms on the client and XQuery on the server.
The label for XRX was suggested by a blog posting by Dan McCreary on December 14th of 2007 [3] . It was in this article that Dan suggested the need for a contagious meme for the ideas behind the XRX architecture.

[edit] Generalizations of XRX
Although XRX was originally intended to connote the use of XForms on the client, REST as an interface and XQuery on the server, other proponents of the symmetrical use of XML on the client and server have generalized the term to encompass any XML-centric web client and any server that can store and query XML documents. This use of XRX is generally referred to as "shallow XRX". These generalizations do benefit from a simplified zero-translation architecture but many do not benefit from REST interfaces, XPath for consistent data selection, declarative systems in the client, and functional languages on the server (one of the key aspects of XRX). Use of all three technologies (XForms, REST and XQuery) is referred to as "deep XRX".

[edit] See also



Wikibooks has a book on the topic of
XRX




Web application framework
XForms
XQuery
REST


[edit] References


^ Birbeck, Mark (2008-09-26). "XForms and XQuery vis REST". http://www.kingston.ac.uk/~ku00597/Subjects/XML/Meetings/XMLaccessLangs2006/xmlAccessLangs2006.pdf. Retrieved on 2008-10-26. 
^ Bruchez, Erik (2007-12-04). "XForms and the eXist XML database: a perfect couple". http://www.orbeon.com/blog/2007/10/17/xforms-evening-at-xml-2007/. Retrieved on 2008-10-26. 
^ McCreary, Dan (2007-12-14). "Introducing the XRX Architecture: XForms/REST/XQuery". http://datadictionary.blogspot.com/2007/12/introducing-xrx-architecture.html. Retrieved on 2008-10-26. 



[edit] Additional Resource

XRX: Simple, Elegant, Disruptive by Dan McCreary
Google Code repository for XRX developers
Metaphorical Web and XRX by Kurt Cagle
XRX Queries using the eXist database by Jeni Tennison
XRX Mapping URLS with Orbeon Forms by Jeni Tennison
XRX Performing Updates by Jeni Tennison
XRX Locking Grain Design by Dan McCreary
XRX Wikibook XRX Wikibook with tutorials for creating CRUDS application using the eXist database
The Agile Stack by Jason Monberg




Retrieved from "http://en.wikipedia.org/wiki/XRX_(web_application_architecture)"
Categories: Web applications | Software architectureHidden categories: Wikipedia articles containing buzzwords 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Français









 This page was last modified on 19 March 2009, at 01:59 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
