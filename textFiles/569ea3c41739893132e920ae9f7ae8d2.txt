













Confused deputy problem - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Confused_deputy_problem";
		var wgTitle = "Confused deputy problem";
		var wgAction = "view";
		var wgArticleId = "207076";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 277574510;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Confused deputy problem

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
A confused deputy is a computer program that is innocently fooled by some other party into misusing its authority. It is a specific type of privilege escalation. In information security, the confused deputy problem is often cited as an example of why capability-based security is important.




Contents


1 Example

1.1 The confused deputy


2 Other examples
3 Solutions
4 External links
5 See also





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Example
In the original example of a confused deputy, there is a program that provides compilation services to other programs. The client program specifies the name of the input and output files, and the server is given the same access to those files that the client has.
The compiler service is pay-per-use, and the compiler program has access to a file (dubbed "BILL") where it stores billing information. Clients obviously cannot write into the billing file.
Now suppose a client calls the service and specifies “BILL” as the name of the output file. The service opens the output file. Even though the client did not have access to that file, the server does, so the open succeeds, and the server writes the compilation output to the file, overwriting it, and thus destroying the billing information.

[edit] The confused deputy
In this example, the compilation service is the deputy because it is acting at the request of the client. It is confused because it was tricked into overwriting its billing file.
Whenever a program tries to access a file, the operating system needs to know two things: which file the program is asking for, and whether the program has permission to access the file. In the example, the file is designated by its name, “BILL”. The server receives the file name from the client, but does not know whether the client had permission to write the file. When the server opens the file, the system uses the server’s permission, not the client’s. When the file name was passed from the client to the server, the permission did not go along with it; the permission was increased by the system silently and automatically.

[edit] Other examples
A cross-site request forgery (CSRF) is an example of a confused deputy attack against a Web browser. In this case a client's Web browser has no means to distinguish the authority of the client from any authority of a "cross" site that the client is accessing.
Clickjacking is another category of web attacks that can be analysed as confused deputy attacks [1].
An FTP bounce attack can allow an attacker to indirectly connect to TCP ports that the attacker's machine has no access to, using a remote FTP server as the confused deputy.
Another example relates to personal firewall software. It can restrict internet access for specific applications. Some applications circumvent this by starting a browser with a specific URL. The browser has authority to open a network connection, even though the application does not. Firewall software can attempt to address this by prompting the user in cases where one program starts another which then accesses the network. However, the user frequently does not have sufficient information to determine whether such an access is legitimate -- false positives are common, and there is a substantial risk that even sophisticated users will become habituated to clicking 'ok' to these prompts.
Not every program that misuses authority is a confused deputy. Sometimes misuse of authority is simply a result of a program error. The confused deputy problem occurs when the designation of an object is passed from one program to another, and the associated permission changes unintentionally, without any explicit action by either party. It is insidious because neither party did anything explicit to change the authority.

[edit] Solutions
In some systems, it is possible to ask the operating system to open a file using the permissions of another client. This solution has some drawbacks:

It requires explicit attention to security by the server. A naive or careless server might not take this extra step.
It becomes more difficult to identify the correct permission if the server is in turn the client of another service and wants to pass along access to the file.
It requires the server to be trusted with the permissions of the client. Note that intersecting the server and client's permissions does not solve the problem either, because the server may then have to be given very wide permissions (all of the time, rather than those needed for a given request) in order to act for arbitrary clients.

The simplest way to solve the confused deputy problem is to bundle together the designation of an object and the permission to access that object. This is exactly what a capability is.
Using capability security in the compiler example, the client would pass to the server a capability to the output file, not the name of the file. Since it lacks a capability to the billing file, it cannot designate that file for output. In the cross-site request forgery example, a URL supplied "cross"-site would include its own authority independent of that of the client of the Web browser (for example, by using a YURL).

[edit] External links

Norman Hardy, The Confused Deputy: (or why capabilities might have been invented), ACM SIGOPS Operating Systems Review, Volume 22, Issue 4 (October 1988).

[2] official link to ACM published document.
[3] link to document text on Norm Hardy's website.
[4] link to document text on University of Pennsylvania's website.
[5] citeseer cross reference.


Capability Theory notes from several sources (collated by Norm Hardy).
Everything2: Confused Deputy (some introductory level text).


[edit] See also

Setuid executables in Unix
Ambient authority








v • d • e

Object-capability security





OS kernels

NLTSS · KeyKOS · EROS · CapROS · Coyotos






Programming languages

Joule · E · Cajita






Systems using capabilities

CapDesk · Plash






Specialised hardware

Cambridge CAP






Concepts

Principle of least authority (POLA) · Confused deputy problem · Ambient authority · File descriptor · C-list · Capability-based security · Capability-based addressing









Retrieved from "http://en.wikipedia.org/wiki/Confused_deputy_problem"
Categories: Computer security 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


日本語









 This page was last modified on 16 March 2009, at 05:01 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
