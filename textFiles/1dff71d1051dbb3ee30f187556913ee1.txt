













Bézier curve - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Bézier_curve";
		var wgTitle = "Bézier curve";
		var wgAction = "view";
		var wgArticleId = "4664";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281025735;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Bézier curve

From Wikipedia, the free encyclopedia

Jump to: navigation, search 




Cubic Bézier curve


In the mathematical field of numerical analysis, a Bézier curve is a parametric curve important in computer graphics and related fields. Generalizations of Bézier curves to higher dimensions are called Bézier surfaces, of which the Bézier triangle is a special case.
Bézier curves were widely publicized in 1962 by the French engineer Pierre Bézier, who used them to design automobile bodies. The curves were first developed in 1959 by Paul de Casteljau using de Casteljau's algorithm, a numerically stable method to evaluate Bézier curves.
In vector graphics, Bézier curves are an important tool used to model smooth curves that can be scaled indefinitely. "Paths," as they are commonly referred to in image manipulation programs such as Inkscape, Adobe Illustrator, Adobe Photoshop, and GIMP are combinations of Bézier curves patched together. Paths are not bound by the limits of rasterized images and are intuitive to modify. Bézier curves are also used in animation as a tool to control motion in applications such as Adobe Flash, Adobe After Effects, Microsoft Expression Blend and Autodesk 3ds max.




Contents


1 Applications

1.1 Computer graphics
1.2 Animation


2 Examination of cases

2.1 Linear Bézier curves
2.2 Quadratic Bézier curves
2.3 Cubic Bézier curves


3 Generalization

3.1 Terminology


4 Constructing Bézier curves

4.1 Linear curves
4.2 Quadratic curves
4.3 Higher-order curves


5 Polynomial form
6 Rational Bézier curves
7 See also
8 Notes
9 References
10 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Applications

[edit] Computer graphics




Bézier path in Adobe Illustrator






Example of two cubic Bézier curves patched together (solid blue line) compared to a 6th-degree Bézier curve (red dots).


Bézier curves are widely used in computer graphics to model smooth curves. As the curve is completely contained in the convex hull of its control points, the points can be graphically displayed and used to manipulate the curve intuitively. Affine transformations such as translation, scaling and rotation can be applied on the curve by applying the respective transform on the control points of the curve.
Quadratic and cubic Bézier curves are most common; higher degree curves are more expensive to evaluate. When more complex shapes are needed, low order Bézier curves are patched together. This is commonly referred to as a "path" in programs like Adobe Illustrator or Inkscape. These poly-Bézier curves can also be seen in the SVG file format. To guarantee smoothness, the control point at which two curves meet and one control point on either side must be collinear.
The simplest method for scan converting (rasterizing) a Bézier curve is to evaluate it at many closely spaced points and scan convert the approximating sequence of line segments. However, this does not guarantee that the rasterized output looks sufficiently smooth, because the points may be spaced too far apart. Conversely it may generate too many points in areas where the curve is close to linear. A common adaptive method is recursive subdivision, in which a curve's control points are checked to see if the curve approximates a line segment to within a small tolerance. If not, the curve is subdivided parametrically into two segments, 0 ≤ t ≤ 0.5 and 0.5 ≤ t ≤ 1, and the same procedure is applied recursively to each half. There are also forward differencing methods, but great care must be taken to analyse error propagation. Analytical methods where a spline is intersected with each scan line involve finding roots of cubic polynomials (for cubic splines) and dealing with multiple roots, so they are not often used in practice.

[edit] Animation
In animation applications, such as Adobe Flash and Adobe Shockwave, or in applications like Game Maker, Bézier curves are used to outline, for example, movement. Users outline the wanted path in Bézier curves, and the application creates the needed frames for the object to move along the path.

[edit] Examination of cases

[edit] Linear Bézier curves
Given points P0 and P1, a linear Bézier curve is simply a straight line between those two points. The curve is given by



and is equivalent to linear interpolation.

[edit] Quadratic Bézier curves
A quadratic Bézier curve is the path traced by the function B(t), given points P0, P1, and P2,



A quadratic Bézier curve is also a parabolic segment.
TrueType fonts use Bézier splines composed of quadratic Bézier curves.

[edit] Cubic Bézier curves
Four points P0, P1, P2 and P3 in the plane or in three-dimensional space define a cubic Bézier curve. The curve starts at P0 going toward P1 and arrives at P3 coming from the direction of P2. Usually, it will not pass through P1 or P2; these points are only there to provide directional information. The distance between P0 and P1 determines "how long" the curve moves into direction P2 before turning towards P3.
The parametric form of the curve is:



Modern imaging systems like PostScript, Asymptote and Metafont use Bézier splines composed of cubic Bézier curves for drawing curved shapes.

[edit] Generalization
The Bézier curve of degree n can be generalized as follows. Given points P0, P1,..., Pn, the Bézier curve is



For example, for n = 5:



This formula can be expressed recursively as follows: Let  denote the Bézier curve determined by the points P0, P1,..., Pn. Then



In words, the degree n Bézier curve is a linear interpolation between two degree n − 1 Bézier curves.

[edit] Terminology
Some terminology is associated with these parametric curves. We have



where the polynomials



are known as Bernstein basis polynomials of degree n, defining t0 = 1 and (1 - t)0 = 1.
The points Pi are called control points for the Bézier curve. The polygon formed by connecting the Bézier points with lines, starting with P0 and finishing with Pn, is called the Bézier polygon (or control polygon). The convex hull of the Bézier polygon contains the Bézier curve.

The curve begins at P0 and ends at Pn; this is the so-called endpoint interpolation property.
The curve is a straight line if and only if all the control points are collinear.
The start (end) of the curve is tangent to the first (last) section of the Bézier polygon.
A curve can be split at any point into 2 subcurves, or into arbitrarily many subcurves, each of which is also a Bézier curve.
Some curves that seem simple, such as the circle, cannot be described exactly by a Bézier or piecewise Bézier curve (though a four-piece cubic Bézier curve can approximate a circle, with a maximum radial error of less than one part in a thousand, when each inner control point is the distance  horizontally or vertically from an outer control point on a unit circle). More generally, an n-piece cubic Bézier curve can approximate a circle, when each inner control point is the distance  from an outer control point on a unit circle, where t is 360/n degrees, and n > 2.
The curve at a fixed offset from a given Bézier curve, often called an offset curve (lying "parallel" to the original curve, like the offset between rails in a railroad track), cannot be exactly formed by a Bézier curve (except in some trivial cases). However, there are heuristic methods that usually give an adequate approximation for practical purposes.
Every quadratic Bézier curve is also a cubic Bézier curve, and more generally, every degree n Bézier curve is also a degree m curve for any m > n. In detail, a degree n curve with control points P0, …, Pn is equivalent (including the parametrization) to the degree n + 1 curve with control points P'0, …, P'n + 1, where .


[edit] Constructing Bézier curves

[edit] Linear curves





Animation of a linear Bézier curve, t in [0,1]


The t in the function for a linear Bézier curve can be thought of as describing how far B(t) is from P0 to P1. For example when t=0.25, B(t) is one quarter of the way from point P0 to P1. As t varies from 0 to 1, B(t) describes a curved line from P0 to P1.

[edit] Quadratic curves
For quadratic Bézier curves one can construct intermediate points Q0 and Q1 such that as t varies from 0 to 1:

Point Q0 varies from P0 to P1 and describes a linear Bézier curve.
Point Q1 varies from P1 to P2 and describes a linear Bézier curve.
Point B(t) varies from Q0 to Q1 and describes a quadratic Bézier curve.









Construction of a quadratic Bézier curve

Animation of a quadratic Bézier curve, t in [0,1]




[edit] Higher-order curves
For higher-order curves one needs correspondingly more intermediate points. For cubic curves one can construct intermediate points Q0, Q1 & Q2 that describe linear Bézier curves, and points R0 & R1 that describe quadratic Bézier curves:








Construction of a cubic Bézier curve

Animation of a cubic Bézier curve, t in [0,1]



For fourth-order curves one can construct intermediate points Q0, Q1, Q2 & Q3 that describe linear Bézier curves, points R0, R1 & R2 that describe quadratic Bézier curves, and points S0 & S1 that describe cubic Bézier curves:








Construction of a quartic Bézier curve

Animation of a quartic Bézier curve, t in [0,1]



(See also a construction of a fifth-order Bezier curve.)

[edit] Polynomial form
Sometimes it is desirable to express the Bézier curve as a polynomial instead of a sum of less straightforward Bernstein polynomials. Application of the binomial theorem to the definition of the curve followed by some rearrangement will yield:



where



This could be practical if  can be computed prior to many evaluations of ; however one should use caution as high order curves may lack numeric stability (de Casteljau's algorithm should be used if this occurs). Note that the product of no numbers is 1.

[edit] Rational Bézier curves




Sections of conic sections represented exactly by rational Bézier curves


The rational Bézier curve adds adjustable weights to provide closer approximations to arbitrary shapes. The numerator is a weighted Bernstein-form Bézier curve and the denominator is a weighted sum of Bernstein polynomials. Rational Bézier curves can, among other uses, be used to represent segments of conic sections exactly.[1]
Given n + 1 control points Pi, the rational Bézier curve can be described by:



or simply




[edit] See also

Vector graphics
de Casteljau's algorithm
Spline (mathematics)
NURBS
String art - Bézier curves are also formed by many common forms of string art, where strings are looped across a frame of nails.
Hermite curve


[edit] Notes


^ Neil Dodgson (2000-09-25). "Some Mathematical Elements of Graphics: Rational B-splines". http://www.cl.cam.ac.uk/teaching/2000/AGraphHCI/SMEG/node5.html. Retrieved on 2009-02-23. 



[edit] References

Paul Bourke: Bézier Surfaces (in 3D), http://local.wasp.uwa.edu.au/~pbourke/geometry/bezier/index.html
Donald Knuth: Metafont: the Program, Addison-Wesley 1986, pp. 123-131. Excellent discussion of implementation details; available for free as part of the TeX distribution.
Dr Thomas Sederberg, BYU Bézier curves, http://www.tsplines.com/resources/class_notes/Bezier_curves.pdf
J.D. Foley et al.: Computer Graphics: Principles and Practice in C (2nd ed., Addison Wesley, 1992)


[edit] External links

Don Lancaster's Cubic Spline Library describes how to approximate a circle (or a circular arc, or a hyperbola) by a Bézier curve; using cubic splines for image interpolation, and an explanation of the math behind these curves.
Eric W. Weisstein, Bézier Curve at MathWorld.
Module for Bezier Curves by John H. Mathews
Quadratic Bezier Curve Construction - An interactive applet showing how to construct a quadratic Bezier curve geometrically. (Requires Java.)
Cubic Bezier Curve Construction - An interactive applet showing how to construct a cubic Bezier curve geometrically. (Requires Java.)
Bezier / Parabola - An interactive applet showing the relationship between the quadratic Bezier curve and the parabola. (Requires Java.)
PolyBezier - The Microsoft Win32 GDI API function, which draws Bezier curves in Windows graphic applications, like MS Paint.
Finding All Intersections of Two Bezier Curves. - Locating all the intersections between two Bezier curves is a difficult general problem, because of the variety of degenerate cases. By Richard J. Kinch.
SketchPad - A small program written in C and Win32 that implements the functionality to create and edit Bezier curves. Demonstrates also the use of de Casteljau's algorithm to split a Bezier curve.
Drawing Cubic Bezier Curves explained by using Flash Actionscript
3rd order Bezier Curves applet
Living Math Bézier applet
Living Math Bézier applets of different spline types, Java programming of splines in An Interactive Introduction to Splines
From Bézier to Bernstein Feature Column from American Mathematical Society
Bezier Curves demo using Flash Actionscript




Retrieved from "http://en.wikipedia.org/wiki/B%C3%A9zier_curve"
Categories: Graphic design | Interpolation | Splines 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


বাংলা
Česky
Deutsch
Español
Français
한국어
Hrvatski
Italiano
Lietuvių
Nederlands
日本語
‪Norsk (bokmål)‬
Polski
Português
Română
Русский
Slovenščina
Suomi
Svenska
ไทย
Українська
中文









 This page was last modified on 1 April 2009, at 05:44.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
