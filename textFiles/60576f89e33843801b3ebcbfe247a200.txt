













Optimization (mathematics) - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Optimization_(mathematics)";
		var wgTitle = "Optimization (mathematics)";
		var wgAction = "view";
		var wgArticleId = "52033";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 282143037;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Optimization (mathematics)

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
In mathematics, the simplest case of optimization, or mathematical programming, refers to the study of problems in which one seeks to minimize or maximize a real function by systematically choosing the values of real or integer variables from within an allowed set. This (a scalar real valued objective function) is actually a small subset of this field which comprises a large area of applied mathematics and generalizes to study of means to obtain "best available" values of some objective function given a defined domain where the elaboration is on the types of functions and the conditions and nature of the objects in the problem domain.




Contents


1 History
2 Major subfields
3 Optimization topics

3.1 Optimization problems
3.2 Notation
3.3 Techniques
3.4 Multi-objective optimization


4 Uses
5 See also
6 Solvers
7 Notes
8 References
9 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] History
The first optimization technique, which is known as steepest descent, goes back to Gauss. Historically, the first term to be introduced was linear programming, which was invented by George Dantzig in the 1940s. The term programming in this context does not refer to computer programming (although computers are nowadays used extensively to solve mathematical problems). Instead, the term comes from the use of program by the United States military to refer to proposed training and logistics schedules, which were the problems that Dantzig was studying at the time. (Additionally, later on, the use of the term "programming" was apparently important for receiving government funding, as it was associated with high-technology research areas that were considered important.)
Other important mathematicians in the optimization field include:

Richard Bellman
Leonid Vitalyevich Kantorovich
Leonid Khachian
Arkadii Nemirovskii
Yurii Nesterov
John von Neumann
Boris Polyak
Naum Z. Shor
Michael J. Todd
Hoang Tuy
Kees Roos (personal page: http://www.isa.ewi.tudelft.nl/~roos/)


[edit] Major subfields

Linear programming studies the case in which the objective function f is linear and the set A is specified using only linear equalities and inequalities. Such a set is called a polyhedron or a polytope if it is bounded.
Integer programming studies linear programs in which some or all variables are constrained to take on integer values.
Quadratic programming allows the objective function to have quadratic terms, while the set A must be specified with linear equalities and inequalities.
Nonlinear programming studies the general case in which the objective function or the constraints or both contain nonlinear parts.
Convex programming studies the case when the objective function is convex and the constraints, if any, form a convex set. This can be viewed as a particular case of nonlinear programming or as generalization of linear or convex quadratic programming.

Second order cone programming (SOCP).


Semidefinite programming (SDP) is a subfield of convex optimization where the underlying variables are semidefinite matrices. It is generalization of linear and convex quadratic programming.
Stochastic programming studies the case in which some of the constraints or parameters depends on random variables.
Robust programming is, as stochastic programming, an attempt to capture uncertainty in the data underlying the optimization problem. This is not done through the use of random variables, but instead, the problem is solved taking into account inaccuracies in the input data.
Combinatorial optimization is concerned with problems where the set of feasible solutions is discrete or can be reduced to a discrete one.
Infinite-dimensional optimization studies the case when the set of feasible solutions is a subset of an infinite-dimensional space, such as a space of functions.
Heuristic algorithms

Metaheuristics


Constraint satisfaction studies the case in which the objective function f is constant (this is used in artificial intelligence, particularly in automated reasoning).

Constraint programming.


Disjunctive programming used where at least one constraint must be satisfied but not all. Of particular use in scheduling.
Trajectory optimization is the speciality of optimizing trajectories for air and space vehicles.

In a number of subfields, the techniques are designed primarily for optimization in dynamic contexts (that is, decision making over time):

Calculus of variations seeks to optimize an objective defined over many points in time, by considering how the objective function changes if there is a small change in the choice path.
Optimal control theory is a generalization of the calculus of variations.
Dynamic programming studies the case in which the optimization strategy is based on splitting the problem into smaller subproblems. The equation that relates these subproblems is called the Bellman equation.
Mathematical programming with equilibrium constraints is where the constraints include variational inequalities or complementarities.


[edit] Optimization topics

[edit] Optimization problems
An optimization problem can be represented in the following way

Given: a function f : A  R from some set A to the real numbers
Sought: an element x0 in A such that f(x0) ≤ f(x) for all x in A ("minimization") or such that f(x0) ≥ f(x) for all x in A ("maximization").

Such a formulation is called an optimization problem or a mathematical programming problem (a term not directly related to computer programming, but still in use for example in linear programming - see History above). Many real-world and theoretical problems may be modeled in this general framework. Problems formulated using this technique in the fields of physics and computer vision may refer to the technique as energy minimization, speaking of the value of the function f as representing the energy of the system being modeled.
Typically, A is some subset of the Euclidean space Rn, often specified by a set of constraints, equalities or inequalities that the members of A have to satisfy. The domain A of f is called the search space, while the elements of A are called candidate solutions or feasible solutions.
The function f is called, variously, an objective function, cost function, energy function, or energy functional. A feasible solution that minimizes (or maximizes, if that is the goal) the objective function is called an optimal solution.
Generally, when the feasible region or the objective function of the problem does not present convexity, there may be several local minima and maxima, where a local minimum x* is defined as a point for which there exists some δ > 0 so that for all x such that



the expression



holds; that is to say, on some region around x* all of the function values are greater than or equal to the value at that point. Local maxima are defined similarly.
A large number of algorithms proposed for solving non-convex problems – including the majority of commercially available solvers – are not capable of making a distinction between local optimal solutions and rigorous optimal solutions, and will treat the former as actual solutions to the original problem. The branch of applied mathematics and numerical analysis that is concerned with the development of deterministic algorithms that are capable of guaranteeing convergence in finite time to the actual optimal solution of a non-convex problem is called global optimization.

[edit] Notation
Optimization problems are often expressed with special notation. Here are some examples.



This asks for the minimum value for the objective function x2 + 1, where x ranges over the real numbers . The minimum value in this case is 1, occurring at x = 0.



This asks for the maximum value for the objective function 2x, where x ranges over the reals. In this case, there is no such maximum as the objective function is unbounded, so the answer is "infinity" or "undefined".



This asks for the value (or values) of x in the interval  that minimizes (or minimize) the objective function x2 + 1 (the actual minimum value of that function does not matter). In this case, the answer is x = -1.



This asks for the (x,y) pair (or pairs) that maximizes (or maximize) the value of the objective function x * cos(y), with the added constraint that x lies in the interval [ − 5;5] (again, the actual maximum value of the expression does not matter). In this case, the solutions are the pairs of the form ( 5 ; 2kπ ) and ( −5 ;(2k+1)π ), where k ranges over all integers.

[edit] Techniques
Crudely all the methods are divided according to variables called:-
SVO:- Single Variable Optimization
MVO:- Multi Variable Optimization
For twice-differentiable functions, unconstrained problems can be solved by finding the points where the gradient of the objective function is zero (that is, the stationary points) and using the Hessian matrix to classify the type of each point. If the Hessian is positive definite, the point is a local minimum, if negative definite, a local maximum, and if indefinite it is some kind of saddle point.
The existence of derivatives is not always assumed and many methods were devised for specific situations. The basic classes of methods, based on smoothness of the objective function, are:

Combinatorial methods
Derivative-free methods
First order methods
Second-order methods

Actual methods falling somewhere among the categories above include:

Bundle methods
Conjugate gradient method
Ellipsoid method
Gradient descent aka steepest descent or steepest ascent
Interior point methods
Line search - a technique for one dimensional optimization, usually used as a subroutine for other, more general techniques.
Nelder-Mead method aka the Amoeba method
Newton's method
Quasi-Newton methods
Simplex method
Subgradient method - similar to gradient method in case there are no gradients

Should the objective function be convex over the region of interest, then any local minimum will also be a global minimum. There exist robust, fast numerical techniques for optimizing twice differentiable convex functions. This is for your concern.
Constrained problems can often be transformed into unconstrained problems with the help of Lagrange multipliers.
Here are a few other popular methods:

Ant colony optimization
Beam search
Bees algorithm
Differential evolution
Dynamic relaxation
Evolution strategy
Genetic algorithms
Harmony search
Hill climbing
Particle swarm optimization
Quantum annealing
Simulated annealing
Stochastic tunneling
Tabu search


[edit] Multi-objective optimization
Main article: Multiobjective optimization
Adding more than one objective to an optimization problem adds complexity. For example, if you wanted to optimize a structural design, you would want a design that is both light and rigid. Because these two objectives conflict, a trade-off exists. There will be one lightest design, one stiffest design, and an infinite number of designs that are some compromise of weight and stiffness. This set of trade-off designs is known as a Pareto set. The curve created plotting weight against stiffness of the best designs is known as the Pareto frontier.
A design is judged to be Pareto optimal if it is not dominated by other designs: a Pareto optimal design must be better than another design in at least one aspect. If it is worse than another design in all respects, then it is dominated and is not Pareto optimal.

[edit] Uses
Problems in rigid body dynamics (in particular articulated rigid body dynamics) often require mathematical programming techniques, since you can view rigid body dynamics as attempting to solve an ordinary differential equation on a constraint manifold; the constraints are various nonlinear geometric constraints such as "these two points must always coincide", "this surface must not penetrate any other", or "this point must always lie somewhere on this curve". Also, the problem of computing contact forces can be done by solving a linear complementarity problem, which can also be viewed as a QP (quadratic programming) problem.
Many design problems can also be expressed as optimization programs. This application is called design optimization. One recent and growing subset of this field is multidisciplinary design optimization, which, while useful in many problems, has in particular been applied to aerospace engineering problems.
Mainstream economics also relies heavily on mathematical programming. An often studied problem in microeconomics, the utility maximization problem, and its dual problem the Expenditure minimization problem, are economic optimization problems. Consumers and firms are assumed to maximize their utility/profit. Also, agents are most frequently assumed to be risk-averse thereby wishing to minimize whatever risk they might be exposed to. Asset prices are also explained using optimization though the underlying theory is more complicated than simple utility or profit optimization. Trade theory also uses optimization to explain trade patterns between nations.
Another field that uses optimization techniques extensively is operations research.

[edit] See also






Arg max
Brachistochrone
Dynamic programming
Fuzzy logic
Game theory
Goal Programming






Important publications in optimization
Interior point methods
Operations research
Optimization problem
Mathematical optimization software
Process optimization






Radial basis function
Random optimization
Simplex algorithm
Topkis's Theorem
Variational calculus
Variational inequality







[edit] Solvers

CPLEX
COMET is a language dedicated to optimization: constraint-based local search, constraint-programming, mathematical programming (free for academic use).
IMSL Numerical Libraries are collections of math and statistical algorithms available in C/C++, Fortran, Java and C#/.NET. Optimization routines in the IMSL Libraries include unconstrained, linearly and nonlinearly constrained minimizations, and linear programming algorithms.
IPOPT - an open-source primal-dual interior point method NLP solver which handles sparse matrices
KNITRO - solver for nonlinear optimization problems
Mathematica - handles linear programming, integer programming and constrained non-linear optimization problems
NAG Numerical Libraries-The NAG Library contains a comprehensive collection of Optimization routines, which cover a diverse set of problems and circumstances.http://www.nag.co.uk/optimization/index.asp
OpenOpt - a free toolbox with connections to lots of solvers, for Python language programmers
Merlin - A Fortran-77, user friendly open source software package, for non-linear optimization with bound constraints. Available from the URL: http://merlin.cs.uoi.gr


[edit] Notes


[edit] References

Mordecai Avriel (2003). Nonlinear Programming: Analysis and Methods. Dover Publishing. ISBN 0-486-43227-0.
Stephen Boyd and Lieven Vandenberghe (2004). Convex Optimization, Cambridge University Press. ISBN 0-521-83378-7.
Elster K.-H. (1993), Modern Mathematical Methods of Optimization, Vch Pub. ISBN 3055014529.
Jorge Nocedal and Stephen J. Wright (2006). Numerical Optimization, Springer. ISBN 0-387-30303-0.
Panos Y. Papalambros and Douglass J. Wilde (2000). Principles of Optimal Design : Modeling and Computation, Cambridge University Press. ISBN 0-521-62727-3.
Yang X.-S. (2008), Introduction to Mathematical Optimization: From Linear Programming to Metaheuristics, Cambridge Int. Science Publishing. ISBN 1-904602827.


[edit] External links





This article's external links may not follow Wikipedia's content policies or guidelines. Please improve this article by removing excessive or inappropriate external links.



COIN-OR — Computational Infrastructure for Operations Research
Convex Optimization & Euclidean Distance Geometry by Jon Dattorro
Decision Tree for Optimization Software Links to optimization source codes
Global optimization
Mathematical Programming Glossary
Mathematical optimization
Mathematical Programming Society
NEOS Guide currently being replaced by the NEOS Wiki
Optimization Online A repository for optimization e-prints
Optimization Related Links
The Basics of Practical Optimization An undergraduate optimization text
Convex Optimization I EE364a: Course from Stanford University
Convex Optimization – Boyd and Vandenberghe Book on Convex Optimization
Simplemax Online Optimization Services Web applications to access nonlinear optimization services

Modeling languages:

AIMMS
AMPL
GAMS — General Algebraic Modeling System
MPL
OPL
OPTIMJ

Solvers:

CONOPT
CPLEX - linear, quadratic, and mixed-integer programming solver
Free Optimization Software by Systems Optimization Laboratory, Stanford University
Gurobi - parallel linear and mixed-integer programming solver
JOpt
Moocho - a very flexible open-source NLP solver
Mosek - linear, quadratic, conic and mixed-integer programming solver
SAS/OR
SmartDO - Engineering global optimization (commercial) software
TANGO Project - Trustable Algorithms for Nonlinear General Optimization

Libraries:

ALGLIB Optimization sources. C++, C#, Delphi, Visual Basic.
CPLEX Component Libraries
IOptLib (Investigative Optimization Library) - a free open source library for development of optimization algorithms (ANSI C).
OAT (Optimization Algorithm Toolkit) - a set of standard optimization algorithms and problems in Java.
OOL (Open Optimization library) - a set of optimization routines in C.








v • d • e

Major fields of mathematics








Arithmetic · Logic · Set theory · Category theory · Algebra (elementary – linear – abstract) · Number theory · Analysis (calculus)  · Geometry · Trigonometry · Topology · Dynamical systems · Combinatorics · Game theory · Information theory · Optimization · Computation · Probability · Statistics · Mathematical physics















v • d • e

Systems engineering





Fields

Biological systems engineering • Configuration management • Earth systems engineering and management • Enterprise systems engineering • Performance engineering • Reliability engineering • Safety engineering • Space Systems Engineering






System Engineering Process

Requirements analysis • Functional specification • System integration • Verification and Validation






Concepts

Business process • System • Systems engineering process • System lifecycle






Tools

Decision making • Functional modelling • Optimization • Planning • Reliable analysis • Statistical analysis • Systems analysis • System dynamics • V-Model • Work breakdown structure






Systems engineers

Wernher von Braun • Harold Chestnut • Arthur David Hall III • Derek Hitchins • Robert E. Machol • Simon Ramo • Joseph Francis Shea • John N. Warfield






Related fields

Control engineering • Computer engineering • Industrial engineering • Operations research • Project management • Quality management • Software engineering









Retrieved from "http://en.wikipedia.org/wiki/Optimization_(mathematics)"
Categories: Mathematical optimization | Operations researchHidden categories: Wikipedia external links cleanup 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


العربية
বাংলা
Česky
Dansk
Deutsch
Ελληνικά
Español
Esperanto
فارسی
Français
한국어
हिन्दी
Bahasa Indonesia
Italiano
עברית
ລາວ
Lietuvių
日本語
Polski
Română
Русский
Slovenčina
Slovenščina
Српски / Srpski
Basa Sunda
Suomi
Svenska
Tiếng Việt
Türkçe
Українська
中文









 This page was last modified on 6 April 2009, at 17:00.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
