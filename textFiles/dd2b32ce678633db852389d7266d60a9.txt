













BASIC - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "BASIC";
		var wgTitle = "BASIC";
		var wgAction = "view";
		var wgArticleId = "4015";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281718205;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
/*<![CDATA[*/
.source-qbasic {line-height: normal;}
.source-qbasic li, .source-qbasic pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for qbasic
 * CSS class: source-qbasic, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-qbasic .de1, .source-qbasic .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-qbasic  {}
.source-qbasic .head {}
.source-qbasic .foot {}
.source-qbasic .imp {font-weight: bold; color: red;}
.source-qbasic .ln-xtra {color: #cc0; background-color: #ffc;}
.source-qbasic li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-qbasic li.li2 {font-weight: bold;}
.source-qbasic .kw1 {color: #a1a100;}
.source-qbasic .kw3 {color: #000066;}
.source-qbasic .co1 {color: #808080;}
.source-qbasic .co2 {color: #808080;}
.source-qbasic .co3 {color: #808080;}
.source-qbasic .es0 {color: #000099;}
.source-qbasic .br0 {color: #66cc66;}
.source-qbasic .st0 {color: #ff0000;}
.source-qbasic .nu0 {color: #cc66cc;}

/*]]>*/

/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
/*<![CDATA[*/
.source-vbnet {line-height: normal;}
.source-vbnet li, .source-vbnet pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for vbnet
 * CSS class: source-vbnet, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-vbnet .de1, .source-vbnet .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-vbnet  {}
.source-vbnet .head {}
.source-vbnet .foot {}
.source-vbnet .imp {font-weight: bold; color: red;}
.source-vbnet .ln-xtra {color: #cc0; background-color: #ffc;}
.source-vbnet li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-vbnet li.li2 {font-weight: bold;}
.source-vbnet .kw1 {color: #0600FF;}
.source-vbnet .kw2 {color: #FF8000;}
.source-vbnet .kw3 {color: #008000;}
.source-vbnet .kw4 {color: #FF0000;}
.source-vbnet .kw5 {color: #804040;}
.source-vbnet .kw6 {color: #0600FF;}
.source-vbnet .kw7 {color: #0600FF;}
.source-vbnet .kw8 {color: #0600FF;}
.source-vbnet .co1 {color: #008080; font-style: italic;}
.source-vbnet .coMULTI {color: #008080; font-style: italic;}
.source-vbnet .es0 {color: #008080; font-weight: bold;}
.source-vbnet .br0 {color: #008000;}
.source-vbnet .st0 {color: #808080;}
.source-vbnet .nu0 {color: #FF0000;}
.source-vbnet .me1 {color: #0000FF;}

/*]]>*/

/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
 <!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); BASIC

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
This article is about the programming language.  For the think tank, see British American Security Information Council.

BASIC

Paradigm
unstructured, later procedural, later object-oriented


Appeared in
1964 (1964)


Designed by
John Kemeny and Thomas Kurtz and James Dowling


Typing discipline
strong


Major implementations
Apple BASIC, BBC BASIC, Commodore BASIC, Microsoft BASIC, TI-BASIC


Influenced by
ALGOL 60, FORTRAN II, JOSS


Influenced
COMAL, Visual Basic, Visual Basic .NET, Realbasic, REXX, Perl, GRASS






Screenshot of Atari BASIC, an early BASIC language for small computers






Three modern Basic variants running under Ubuntu 8.10: Mono Basic, Open Office Basic and Gambas


In computer programming, BASIC (an acronym for Beginner's All-purpose Symbolic Instruction Code[1]) is a family of high-level programming languages. The original BASIC was designed in 1964 by John George Kemeny and Thomas Eugene Kurtz at Dartmouth in New Hampshire, USA to provide computer access to non-science students. At the time, nearly all use of computers required writing custom software, which was something only scientists and mathematicians tended to be able to do. The language and its variants became widespread on microcomputers in the late 1970s and 1980s. BASIC remains popular to this day in a handful of highly modified dialects and new languages based on BASIC such as Microsoft Visual Basic. As of 2006, 59% of developers for the .NET platform used Visual Basic as their only language[2]




Contents


1 History

1.1 Background
1.2 Early years: the mini-computer era
1.3 Explosive growth: the home computer era
1.4 Maturity: the personal computer era


2 Examples

2.1 Unstructured BASIC


3 Structured BASIC
4 BASIC with object-oriented features
5 See also
6 Notes
7 References

7.1 Standards


8 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] History

[edit] Background
Before the mid-1960s, computers were extremely expensive and used only for special-purpose tasks. A simple batch processing arrangement ran only a single "job" at a time, one after another. But during the 1960s faster and more affordable computers became available. With this extra processing power, computers would sometimes sit idle, without jobs to run.
Programming languages in the batch programming era tended to be designed, like the machines on which they ran, for specific purposes (such as scientific formula calculations or business data processing or eventually for text editing). Since even the newer, less expensive machines were still major investments, there was a strong tendency to consider efficiency to be the most important feature of a language. In general, these specialized languages were difficult to use and had widely disparate syntax.

As prices decreased, the possibility of sharing computer access began to move from research labs to commercial use. Newer computer systems supported time-sharing, a system which allows multiple users or processes to use the CPU and memory. In such a system the operating system alternates between running processes, giving each one running time on the CPU before switching to another. The machines had become fast enough that most users could feel they had the machine all to themselves. In theory, timesharing reduced the cost of computing tremendously, as a single machine could be shared among (up to) hundreds of users.

[edit] Early years: the mini-computer era
The original BASIC language was designed in 1963 by John Kemeny and Thomas Kurtz[3] and implemented by a team of Dartmouth students under their direction. BASIC was designed to allow students to write programs for the Dartmouth Time-Sharing System. It was intended to address the complexity issues of older languages with a new language design specifically for the new class of users that time-sharing systems allowed—that is, a less technical user who did not have the mathematical background of the more traditional users and was not interested in acquiring it. Being able to use a computer to support teaching and research was quite novel at the time. In the following years, as other dialects of BASIC appeared, Kemeny and Kurtz's original BASIC dialect became known as Dartmouth BASIC.
The eight design principles of BASIC were:

Be easy for beginners to use.
Be a general-purpose programming language.
Allow advanced features to be added for experts (while keeping the language simple for beginners).
Be interactive.
Provide clear and friendly error messages.
Respond quickly for small programs.
Not to require an understanding of computer hardware.
Shield the user from the operating system.

The language was based partly on the FORTRAN II and partly on the ALGOL 60, with additions to make it suitable for timesharing. (The features of other time-sharing systems such as JOSS and CORC, and to a lesser extent LISP, were also considered.) It had been preceded by other teaching-language experiments at Dartmouth such as the DARSIMCO (1956) and DOPE (1962 implementations of SAP and DART (1963) which was a simplified FORTRAN II). Initially, BASIC concentrated on supporting straightforward mathematical work, with matrix arithmetic support from its initial implementation as a batch language and full string functionality being added by 1965. BASIC was first implemented on the GE-265 mainframe which supported multiple terminals. Contrary to popular belief[citation needed], it was a compiled language at the time of its introduction. It was also quite efficient, beating FORTRAN II and ALGOL 60 implementations on the 265 at several fairly computationally intensive (at the time) programming problems such as numerical integration by Simpson's Rule.
The designers of the language decided to make the compiler available free of charge so that the language would become widespread. They also made it available to high schools in the Dartmouth area and put a considerable amount of effort into promoting the language. As a result, knowledge of BASIC became relatively widespread (for a computer language) and BASIC was implemented by a number of manufacturers, becoming fairly popular on newer minicomputers like the DEC PDP series and the Data General Nova. The BASIC language was also central to the HP Time-Shared BASIC system in the late 1960s and early 1970s. In these instances the language tended to be implemented as an interpreter, instead of (or in addition to) a compiler.
Several years after its release, highly-respected computer professionals, notably Edsger W. Dijkstra, expressed their opinions that the use of GOTO statements, which existed in many languages including BASIC, promoted poor programming practices.[4] Some have also derided BASIC as too slow (most interpreted versions are slower than equivalent compiled versions) or too simple (many versions, especially for small computers left out important features and capabilities).

[edit] Explosive growth: the home computer era




MSX BASIC version 3.0


Notwithstanding the language's use on several minicomputers, it was the introduction of the MITS Altair 8800 "kit" microcomputer in 1975 that provided BASIC a path to universality. Most programming languages required suitable text editors, large amounts of memory and/or disk space. Where as the early microcomputers had no resident editors, limited memory and often substituted recording to and playback from audio tapes for storage. All these issue allowed a language like BASIC, in it's interpreted form with a built in code editor, to satisfy these constraints.
BASIC also had the advantage that it was fairly well known to the young designers and computer hobbyists who took an interest in microcomputers, and generally worked in the electronics industries of the day. Kemeny and Kurtz's earlier proselytizing paid off in this respect and the few hobbyists journals of the era were filled with columns that made mentions of the language or focused entirely on one version compared to others.
One of the first to appear for the 8080 machines like the Altair was Tiny BASIC, a simple BASIC implementation originally written by Dr. Li-Chen Wang, and then ported onto the Altair by Dennis Allison at the request of Bob Albrecht (who later founded Dr. Dobb's Journal). The Tiny BASIC design and the full source code were published in 1976 in DDJ.
In 1975, MITS released Altair BASIC, developed by college drop-outs Bill Gates and Paul Allen as the company Micro-Soft (who started today's corporate giant, Microsoft). The first Altair version was co-written by Gates, Allen and Monte Davidoff in a burst of enthusiasm and neglect of studies. Versions of Microsoft BASIC (also known then, and most widely as M BASIC or MBASIC, see sidebar) was soon bundled with the original floppy disk-based CP/M computers, which became widespread in small business applications. As the popularity of BASIC on CP/M spread, newer computer designs also introduced their own version of the language, or had Micro-Soft port its version to their platform.
When three major new computers were introduced in what Byte Magazine would later call the "1977 Trinity",[5] all three had BASIC as their primary programming language and operating environment. The Commodore PET licensed a version of Micro-Soft BASIC that was ported to the MOS 6502, while Apple II and TRS-80 both introduced new versions of the language that were largely similar. As new companies entered the field, additional versions were added that subtly changed the BASIC family. The Atari 8-bit family had their own Atari BASIC that was modified in order to fit on 8 kB ROM cartridge. The BBC published BBC BASIC, developed for them by Acorn Computers Ltd, incorporating many extra structuring keywords. Most of the home computers of the 1980s had a ROM-resident BASIC interpreter, allowing the machines to boot directly into BASIC. There are more dialects of BASIC than there are of any other programming language.
During this growth time for BASIC, many magazines were published such as Creative Computing Magazine that included complete source codes for games, utilities, and other programs. Given BASIC's straightforward nature, it was considered a simple matter to type in the code from the magazine and execute the program. Different magazines were published featuring programs for specific computers, though some BASIC programs were universal and could be input into any BASIC-using machine. A logical extension of the magazine idea was the publishing of BASIC source code in full-fledged books: probably the classic example was David Ahl's series of Basic Computer Games.[6][7][8]

[edit] Maturity: the personal computer era




GW-BASIC 3.22, shown here with the simple Hello world program


As early as 1979 Microsoft was in negotiations with IBM to supply them with a version of BASIC. Microsoft sold several versions of BASIC for MS-DOS/PC-DOS including BASICA, GW-BASIC (a BASICA-compatible version that did not need IBM's ROM) and QuickBASIC. Turbo Pascal-publisher Borland published Turbo BASIC 1.0 in 1985 (successor versions are still being marketed by the original author under the name PowerBASIC). Microsoft wrote the windowing based AmigaBASIC that was supplied with version 1.1 of the pre-emptive multitasking GUI Amiga computers (late 1985/ early 1986), although the product unusually did not bear any Microsoft marks.
These languages introduced many extensions to the original home computer BASIC, such as improved string manipulation and graphics support, access to the file system and additional data types. More important were the facilities for structured programming, including additional control structures and proper subroutines supporting local variables.
However, by the latter half of the 1980s newer computers were far more capable with more resources. At the same time, computers had progressed from a hobbyist interest to tools used primarily for applications written by others, and programming became less important for most users. BASIC started to recede in importance, though numerous versions remained available. Compiled BASIC or CBASIC is still used in many IBM 4690 OS point of sale systems.
BASIC's fortunes reversed once again with the introduction of Visual Basic by Microsoft. It is somewhat difficult to consider this language to be BASIC, because of the major shift in its orientation towards an object-oriented and event-driven perspective. The only significant similarity to older BASIC dialects was familiar syntax. Syntax itself no longer "fully defined" the language, since much development was done using "drag and drop" methods without exposing all code for commonly-used objects such as buttons and scrollbars to the developer. While this could be considered an evolution of the language, few of the distinctive features of early Dartmouth BASIC, such as line numbers and the INPUT keyword, remain (although Visual Basic still uses INPUT to read data from files, and INPUTBOX is available for direct user input; line numbers can also optionally be used in all VB versions, even VB.NET, albeit they cannot be used in certain places, for instance before SUB).
Ironically given the origin of BASIC as a "beginner's" language, and apparently even to the surprise of many at Microsoft who still initially marketed Visual Basic or "VB" as a language for hobbyists, the language had come into widespread use for small custom business applications shortly after the release of VB version 3.0, which is widely considered the first relatively stable version. While many advanced programmers still scoffed at its use, VB met the needs of small businesses efficiently wherever processing speed was less of a concern than easy development. (By that time, computers running Windows 3.1 had become fast enough that many business-related processes could be completed "in the blink of an eye" even using a "slow" language, as long as massive amounts of data were not involved.) Many small business owners found they could create their own small yet useful applications in a few evenings to meet their own specialized needs. Eventually, during the lengthy lifetime of VB3, knowledge of Visual Basic had become a marketable job skill.
Many BASIC dialects have also sprung up in the last few years, including Bywater BASIC and True BASIC (the direct successor to Dartmouth BASIC from a company controlled by Kurtz). Many other BASIC variants and adaptations have been written by hobbyists, equipment developers, and others, as it is a relatively simple language to develop translators for. An example of an open source interpreter, written in C, is MiniBasic.
The ubiquity of BASIC interpreters on personal computers was such that textbooks once included simple "Try It In BASIC" exercises that encouraged students to experiment with mathematical and computational concepts on classroom or home computers. Futurist and sci-fi writer David Brin mourns the loss of ubiquitous BASIC in a recent Salon article.[9]

[edit] Examples





This section does not cite any references or sources. Please help improve this article by adding citations to reliable sources (ideally, using inline citations). Unsourced material may be challenged and removed. (December 2008)



[edit] Unstructured BASIC
New BASIC programmers on a home computer might start with a simple program similar to the Hello world program made famous by Kernighan and Ritchie. This generally involves simple use of the language's PRINT statement to display the message (such as the programmer's name) to the screen. Often an infinite loop was used to fill the display with the message. Most first generation BASIC languages such as MSX BASIC and GW-BASIC supported simple data types, loop cycles and arrays. The following example is written for GW-BASIC, but will work in most versions of BASIC with minimal changes:


10 INPUT "What is your name: ", U$
20 PRINT "Hello "; U$
30 INPUT "How many stars do you want: ", N
40 S$ = ""
50 FOR I = 1 TO N
60 S$ = S$ + "*"
70 NEXT I
80 PRINT S$
90 INPUT "Do you want more stars? ", A$
100 IF LEN(A$) = 0 THEN GOTO 90
110 A$ = LEFT$(A$, 1)
120 IF A$ = "Y" OR A$ = "y" THEN GOTO 30
130 PRINT "Goodbye "; U$
140 END


[edit] Structured BASIC
Second generation BASICs (for example QuickBASIC and PowerBASIC) introduced a number of features into the language, primarily related to structured and procedure-oriented programming. Usually, line numbering is omitted from the language and replaced with labels (for GOTO) and procedures to encourage easier and more flexible design.[10]


INPUT "What is your name: ", UserName$
PRINT "Hello "; UserName$
DO
  INPUT "How many stars do you want: ", NumStars
  Stars$ = STRING$(NumStars, "*") 
  PRINT Stars$
  DO
    INPUT "Do you want more stars? ", Answer$
  LOOP UNTIL Answer$ <> ""
  Answer$ = LEFT$(Answer$, 1)
LOOP WHILE UCASE$(Answer$) = "Y"
PRINT "Goodbye "; UserName$


[edit] BASIC with object-oriented features
Third generation BASIC dialects such as Visual Basic, REALbasic, StarOffice Basic and BlitzMax introduced features to support object-oriented and event-driven programming paradigm. Most built-in procedures and functions now represented as methods of standard objects rather than operators.
The following example is in Visual Basic .NET:


 
Class stars
    Sub Main()
        Dim UserName, Answer, stars As String ' UserName$, Answer$, stars$ may be used as well.
        Dim NumStars, I As Integer
        Console.Write("What is your name: ")
        UserName = Console.ReadLine()
        Console.WriteLine("Hello {0}", UserName)
        Do
            Console.Write("How many stars do you want: ")
            NumStars = CInt(Console.ReadLine())
            stars = New String("*", NumStars)
            Console.WriteLine(stars)
            Do
                Console.Write("Do you want more stars? ")
                Answer = Console.ReadLine()
            Loop Until Answer <> ""
            Answer = Answer.Substring(0, 1)
        Loop While Answer.ToUpper() = "Y"
        Console.WriteLine("Goodbye {0}", UserName)
    End Sub
End Class


[edit] See also



Wikibooks has a book on the topic of
Programming:BASIC




List of BASIC dialects
List of BASIC dialects by platform


[edit] Notes


^ The acronym is tied to the name of an unpublished paper by Thomas Kurtz and is not a backronym, as is sometimes suggested in older versions of The Jargon File
^ http://www.linux-watch.com/news/NS5656359853.html
^ http://cis-alumni.org/TKurtz.html Thomas E. Kurtz - History of Programming Languages
^ In a 1968 letter, Dutch computer scientist Edsger Dijkstra considered programming languages using GOTO statements for program structuring purposes harmful for the productivity of the programmer as well as the quality of the resulting code ("Go To Statement Considered Harmful", Communications of the ACM Volume 11, 147-148. 1968). The letter, which contributed the phrase considered harmful to programming jargon, did not mention any particular programming language; instead it states that the overuse of GOTO is damaging and gives technical reasons why this should be so. In a 1975 tongue-in-cheek article, "How do We Tell Truths that Might Hurt", Sigplan Notices Volume 17 No. 5, Dijkstra gives a list of uncomfortable "truths", including his opinion of several programming languages of the time. Although BASIC is one of his targets ("It is practically impossible to teach good programming to students that have had a prior exposure to BASIC: as potential programmers they are mentally mutilated beyond hope of regeneration"), it receives no worse treatment in the piece than PL/I, COBOL or APL.
^ "Most Important Companies". Byte Magazine. September 1995. http://www.byte.com/art/9509/sec7/art15.htm. Retrieved on 2008-06-10. 
^ Table of Contents: BASIC Computer Games
^ Table of Contents: More BASIC Computer Games
^ Table of Contents: Big Computer Games
^ http://www.salon.com/tech/feature/2006/09/14/basic/index_np.html Why Johnny Can't Code
^ "Differences Between GW-BASIC and QBasic". 2003-05-12. http://support.microsoft.com/kb/73084. Retrieved on 2008-06-28. 



[edit] References


(PDF)A Manual for BASIC, the elementary algebraic language designed for use with the Dartmouth Time Sharing System. Dartmouth College Computation Center. 1964. http://www.bitsavers.org/pdf/dartmouth/BASIC_Oct64.pdf.  — The original Dartmouth BASIC manual.
Lien, David A. (1986). The Basic Handbook: Encyclopedia of the BASIC Computer Language (3rd ed. ed.). Compusoft Publishing. ISBN 0-932760-33-3.  — Documents dialect variations for over 250 versions of BASIC.
Kemeny, John G.; Kurtz, Thomas E. (1985). Back To BASIC: The History, Corruption, and Future of the Language. Addison-Wesley. pp. 141 pp. ISBN 0-201-13433-0. 
Sammet, Jean E. (1969). Programming languages: History and fundamentals. Englewood Cliffs, N.J.: Prentice-Hall. 
The Encyclopedia of Computer Languages. BASIC - Beginners All-purpose Symbolic Instruction Code. Murdoch University.


[edit] Standards

ANSI/ISO/IEC Standard for Minimal BASIC:

ANSI X3.60-1978 "FOR MINIMAL BASIC"
ISO/IEC 6373:1984 "DATA PROCESSING - PROGRAMMING LANGUAGES - MINIMAL BASIC"


ANSI/ISO/IEC Standard for Full BASIC:

ANSI X3.113-1987 "PROGRAMMING LANGUAGES FULL BASIC"
ISO/IEC 10279:1991 "INFORMATION TECHNOLOGY - PROGRAMMING LANGUAGES - FULL BASIC"


ANSI/ISO/IEC Addendum Defining Modules:

ANSI X3.113 INTERPRETATIONS-1992 "BASIC TECHNICAL INFORMATION BULLETIN # 1 INTERPRETATIONS OF ANSI 03.113-1987"
ISO/IEC 10279:1991/ Amd 1:1994 "MODULES AND SINGLE CHARACTER INPUT ENHANCEMENT"


ECMA-116 BASIC (withdrawn, similar to ANSI X3.113-1987)



[edit] External links

BASIC at the Open Directory Project
www.AllBasic.Info All Basic language information and code repository.
More Basic Computer Games by David Ahl
Big Computer Games by David Ahl
NGbasic BASIC in your web browser!
ScriptBasic - Open source Basic interpreter (utility, CGI and multi-threaded HTTP application server)
CellularBASIC On-phone Open Source Mobile BASIC Interpreter for J2ME
thinBasic - thinBasic programming language - Free Basic interpreter full of features (more than 1300 native commands covering many different programming areas: console programming, windows programming, math, OpenGL, FTP, SMTP, automation, ...) - Windows only. Full online help at [1]
CAPRICE - Amstrad CPC Emulator on Windows
Basic News - Foundation for success








v • d • e

BASIC Programming Language





Classical

Atari BASIC · Atari ST BASIC · Dartmouth BASIC · GW-BASIC · HP BASIC for OpenVMS · Locomotive BASIC · Microsoft BASICA · MSX BASIC · Sinclair BASIC · Turbo-Basic XL · UBasic · Vilnius BASIC






Procedure-oriented

Beta BASIC · BBC BASIC · FreeBASIC ·  · Liberty BASIC · Microsoft Small Basic · PureBasic · QBasic · QuickBASIC · SuperBasic · True BASIC · Turbo Basic · XBasic · Xblite






With object extensions

BlitzMax · FreeBASIC · Gambas · PowerBasic · ProvideX · RapidQ · REALbasic · GLBasic · StarOffice Basic · Visual Basic · Visual Basic .NET









Retrieved from "http://en.wikipedia.org/wiki/BASIC"
Categories: BASIC programming language family | Articles with example BASIC code | Programming languages created in 1964 | American inventionsHidden categories: All articles with unsourced statements | Articles with unsourced statements since June 2008 | Articles needing additional references from December 2008 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Afrikaans
አማርኛ
العربية
Azərbaycan
বাংলা
Bân-lâm-gú
Bosanski
Български
Català
Česky
Dansk
Deutsch
Eesti
Ελληνικά
Español
Esperanto
Euskara
فارسی
Français
Galego
한국어
Hrvatski
Bahasa Indonesia
Íslenska
Italiano
עברית
ಕನ್ನಡ
Latina
Latviešu
Lietuvių
Magyar
മലയാളം
मराठी
Bahasa Melayu
Nederlands
日本語
‪Norsk (bokmål)‬
‪Norsk (nynorsk)‬
Polski
Português
Română
Русский
Shqip
Simple English
Slovenčina
Slovenščina
Српски / Srpski
Srpskohrvatski / Српскохрватски
Suomi
Svenska
Taqbaylit
ไทย
Tiếng Việt
Тоҷикӣ
Türkçe
Українська
粵語
Žemaitėška
中文









 This page was last modified on 4 April 2009, at 16:05.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
