













Bourne shell - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Bourne_shell";
		var wgTitle = "Bourne shell";
		var wgAction = "view";
		var wgArticleId = "92839";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 275352158;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Bourne shell

From Wikipedia, the free encyclopedia

Jump to: navigation, search 





This article needs additional citations for verification. Please help improve this article by adding reliable references (ideally, using inline citations). Unsourced material may be challenged and removed. (January 2008)


The Bourne shell, or sh, was the default Unix shell of Unix Version 7, and replaced the Thompson shell, whose executable file had the same name, sh. It was developed by Stephen Bourne, of AT&T Bell Laboratories, and was released in 1977 in the Version 7 Unix release distributed to colleges and universities. It remains a popular default shell for Unix accounts. The binary program of the Bourne shell or a compatible program is located at /bin/sh on most Unix systems, and is still the default shell for the root superuser on many current Unix implementations.




Contents


1 Origins
2 Notable features
3 Descendants
4 Usage
5 Quotes
6 See also
7 References
8 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Origins
The shell was designed as a replacement for the original Thompson shell.
Among the primary goals were:

To allow shell scripts to be used as filters.
To provide programmability including control flow and variables.
Control over all input/output file descriptors.
Control over signal handling within scripts.
No limits on string lengths when interpreting shell scripts.
Rationalize and generalize string quoting mechanism.
The environment mechanism. This allowed context to be established at startup and provided a way for shell scripts to pass context to sub scripts (processes) without having to use explicit positional parameters.

In March 2009 Computerworld published an in-depth interview with Steve Bourne The A-Z of Programming Languages: Bourne shell, or sh which details the Bourne Shell origins and design decisions.

[edit] Notable features
Although it is used as an interactive command interpreter, it was always intended as a scripting language. It gained popularity with the publication of The UNIX Programming Environment by Brian W. Kernighan and Rob Pike. This was the first commercially published book that presented the shell as a programming language in a tutorial form.
The Bourne shell also was the first to feature the convention of using file descriptor 2> for error messages, allowing much greater programmatic control during scripting by keeping error messages separate from data.
Other innovations in this shell included:

Command substitution using back quotes: `command`.
Here documents using << to embed a block of input text within a script.
"for ~ do ~ done" loops, in particular the use of $* to loop over arguments.
"case ~ in ~ esac" selection mechanism, primarily intended to assist argument parsing.
sh provided support for environment variables using keyword parameters and exportable variables.

Over the years, the Bourne shell was enhanced at AT&T. The various variants are thus called like the respective AT&T Unix version it was released with (some important variants being Version7, SystemIII, SVR2, SVR3, SVR4). As the shell was never versioned, the only way to identify it was testing its features.
Stephen Bourne carried into this shell some aspects of the ALGOL 68C compiler that he had been working on at Cambridge University. Notably he reused portions of ALGOL 68's "if ~ then ~ elif ~ else ~ fi", "case ~ in ~ out ~ esac" and "for ~ while ~ do ~ od" clauses in the common Unix Bourne shell syntax. Moreover - although the v7 shell is written in C - Bourne took advantage of some macros[1] to give the C source code an ALGOL 68 flavor. These macros (along with the finger command distributed in Unix version 4.2BSD) inspired the IOCCC - International Obfuscated C Code Contest[2].

[edit] Descendants
The Korn shell (ksh) written by David Korn, was a middle road between the Bourne shell and the C shell (which itself was derived from the Thompson shell). Its syntax was chiefly drawn from the Bourne shell, while its job control features resembled those of the C shell. The functionality of the original Korn Shell (known as ksh88 from the year of its introduction) was used as a basis for the POSIX shell standard. A newer version, ksh93, has been open source since 2000 and is used on some Linux distributions. There is also a clone of ksh88 known as pdksh, and this is the default shell for all users of OpenBSD.
rc was created at Bell Labs by Tom Duff as a replacement for sh for Version 10 Unix. It is the default shell for Plan 9 from Bell Labs. It has been ported to UNIX as part of Plan 9 from User Space.
Bash, also known as the Bourne-Again shell, was later developed for the GNU project and takes features from the Bourne shell, csh and ksh.
Due to copyright issues surrounding the Bourne Shell as it was used in historic CSRG BSD releases, Kenneth Almquist developed a clone of the Bourne Shell, known by some as the Almquist Shell and available under the BSD license, which is in use today on some BSD descendants and in low-memory situations. The Almquist Shell was ported to Linux, and the port renamed the Debian Almquist shell, or dash. This shell provides much faster execution of standard sh scripts with a smaller memory footprint than its more common counterpart, bash. Its use tends to expose bashisms - bash-centric assumptions made in scripts meant to run on sh.

[edit] Usage
The Bourne shell was once standard on all branded Unix systems, although historically BSD based systems had many scripts written in csh. Bourne shell scripts can typically be run with bash or dash on Linux or other Unix-like systems.

[edit] Quotes

"Nobody really knows what the Bourne shell's grammar is. Even examination of the source code is little help."
– Tom Duff [3]


[edit] See also

Comparison of computer shells
Bash
rc


[edit] References


^ Bourne, Steve (1979-01-12). "mac.h - Macros used by Bourne to structure C like Algol68C". AT&T. http://minnie.tuhs.org/UnixTree/V7/usr/src/cmd/sh/mac.h.html. Retrieved on September 9 2006. 
^ Landon Curt Noll, Simon Cooper, Peter Seebach and Leonid A. Broukhis (2004). "The IOCCC FAQ - Q/A: How did the IOCCC get started?". www.ioccc.org. http://www.ioccc.org/faq.html. Retrieved on September 9 2006. 
^ Ramey, Chet. "Bash - the GNU shell (Reflections and Lessons Learned)". http://www.wing.rug.nl/info/programs/bash/article.html#6. Retrieved on 2008-01-15. 



[edit] External links



Wikibooks has a book on the topic of
Bourne Shell Scripting




UNIX Shell Script Tutorials & Reference
UNIX/Linux Bourne/Bash Shell Scripting Tutorial
The individual members of "The Traditional Bourne Shell Family"
Actual C source code for the Bourne shell using mac.h macros
Original Bourne Shell documentation from 1978
A port of the "heirloom" SVR4 Bourne shell from OpenSolaris to other Unix-like systems




Retrieved from "http://en.wikipedia.org/wiki/Bourne_shell"
Categories: Text-oriented programming languages | Scripting languages | Unix shells | Unix software | POSIX standardsHidden categories: Articles needing additional references from January 2008 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Català
Česky
Deutsch
Español
Esperanto
Français
한국어
Italiano
日本語
‪Norsk (bokmål)‬
‪Norsk (nynorsk)‬
Polski
Português
Русский
Slovenčina
Svenska
ไทย
Українська
中文









 This page was last modified on 6 March 2009, at 07:55.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
