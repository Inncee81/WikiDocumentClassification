













Game development - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Game_development";
		var wgTitle = "Game development";
		var wgAction = "view";
		var wgArticleId = "700265";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 282105225;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Game development

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
This article is about video game development, and does not deal with the development of other forms of game, such as board games and card games.





Part of a series on:


Video game industry




Activities/Jobs


Game art / Game artist
Game design / Game designer
Game development / Game developer
Game modification
Game producer
Game programming / Game programmer
Game publisher
Game studies
Game testing / Game tester
Game journalism
Level design / Level designer








Types


Adult game
Casual game
Non-game

Interactive art
Interactive movie


Nonviolent video game
Serious game

Advergame
Art game
Edugame
Exergame
Militainment


Traditional game








Topics


DRM
EULA
Outsourcing
Software license








Lists


List of indie game developers
List of video game companies
List of video game industry people
List of video game publishers







v • d • e







The XGS PIC 16-Bit game development board


Game development is the process by which a game is produced. Today this term most commonly refers to the development of video games.




Contents


1 Overview
2 Roles
3 The development process

3.1 Pre-production
3.2 Production
3.3 Milestones
3.4 Nearing completion

3.4.1 Testing


3.5 Completion
3.6 Maintenance


4 Culture
5 Duration
6 Locales
7 Learning
8 Stability
9 See also
10 References
11 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Overview
Development of games is undertaken by a developer, which may be a single person or a large business. Typically, large-scale commercial games are created by development teams within a company specializing in computer or console games. A typical modern video game can cost from USD$1,000,000 to over $20,000,000 to develop.[1] Development is normally funded by a publisher. A contemporary game can take from one to three years to develop, though there are exceptions.

[edit] Roles
In the early era of home computers and video game consoles in the early 1980s, a single programmer could handle almost all the tasks of developing a game. However the development of a modern, commercially-viable video game involves a wide variety of skill-sets and support staff. As a result, entire teams are often required to work on a single project. A typical present-day development team usually includes:

One or more producers to oversee production
At least one game designer
Artists
Programmers
Level designers
Sound engineers (composers, and for sound effects and voice acting)
Testers

Some members of the team may handle more than one role. For example, the producer may also be the designer, or the lead programmer may also be the producer. However, while common in the early video game era, this is increasingly more uncommon now for professional games.
Often in bigger game companies the development team is overseen by managers such as art directors, technical directors and design directors. Directors work mainly as personnel managers and usually do not directly influence the product, but more to ensure that everyone in the team works coherently. Directors usually do resourcing but can also be considered people to consult with regarding various issues during game development.

[edit] The development process
The development process of a game varies depending on the company and project. However development of a commercial game usually includes the following stages.

[edit] Pre-production




Early phases of game development are often characterized by poor quality of graphics. This is especially true of various game prototypes.


Normally before any game can begin development, the idea for the game is created and must be approved (given the "green light") by the publisher/developer.
In the common case in which developer and publisher are separate companies, pitches are made to management at the developer, and then it needs to be shopped around to publishers. Demos are often used but sometimes unnecessary for established developers with good track records. Production can begin once (and if) an interested publisher is found. Games rarely progress far without an interested publisher.
If the developer is also a publisher, or both are subsidiaries of a single company, only the upper management needs to give approval. Depending on the size of the publisher, this may require several rounds of pitches as the idea makes its way up through the layers of management.
Game designers often present the project, but the presenter could be any role in the video game industry. Before full-scale production begins, the development team produces a design document, which describes the concept and major gameplay elements in detail. Design documents may also include preliminary sketches of various aspects of the game. These are sometimes accompanied by functional prototypes of some sections of the game. Design documents generally incorporate all or most of the material from the initial pitch. Design documents are always "living documents"—it is never truly complete while the game is in development. It often changes weekly or even daily. So while the design document needs to exist in some form before full-scale production begins, it is almost never a complete design, though most elements of the projected game are described (in varying level of detail).
Before an approved design is completed, a skeleton crew of programmers and artists usually begins work. Programmers may develop "quick and dirty" prototypes showcasing one or more features some stakeholders would like to see incorporated in the game. Or they may begin developing the technical framework the game will eventually use. Artists may develop volumes of sketches as a springboard for developing real game assets. Producers may work part-time on the game at this point, scaling up for full time commitment as development progresses. Game Producers work during pre-production is commonly related to planning the schedule, budget & estimating tasks with the team. Doing these Producer aims to create a solid production plan so that production can be started when needed without delays.

[edit] Production
Mainstream production is usually defined as the period of time when the project is fully staffed. Programmers write much new source code, artists develop game assets such as sprites or, more often today, 3D models of game elements. Sound engineers develop sound effects and composers develop music for the game. Level designers create advanced and eye-catching levels, and writers write dialog for cutscenes and NPCs.
All the while, the game designer implements and modifies the game design to reflect the current vision of the game. Features and levels are often removed or added. The art treatment may evolve and the backstory may change. A new platform may be targeted as well as a new demographic. All these changes need to be documented and dispersed to the rest of the team. Most changes occur as updates to the design document.
From a time standpoint, the game's first level takes the longest to develop. As level designers and artists use the tools for level building, they request features and changes to the in-house tools that allow for quicker and higher quality development. Newly introduced features may cause old levels to become obsolete, so the levels developed early on may be repeatedly developed and discarded. Because of the dynamic environment of game development, the design of early levels may also change over time. It is not uncommon to spend upwards of twelve months on one level of a game developed over the course of three years. Later levels can be developed much more quickly as the feature set is more complete and the game vision is clearer and more stable.
Testers start work once anything is playable. This may be one level or subset of the game software that can be used to any reasonable extent. Early on, testing a game occupies a relatively small amount of time. Testers may work on several games at once. As development draws to a close, a single game usually employs many testers full time (and often with overtime). They strive to test new features and regression test existing ones. Testing is vital for modern, complex games as single changes may lead to catastrophic consequences.

[edit] Milestones
Commercial game development projects are usually required to meet milestones. Milestones represent interim project goals while also being synonymous with deadlines. Milestones include a pre-release version of the game with an agreed upon set of features. The consequences of missing a milestone vary from project to project, but usually delay installment payments (in the case of third-party developers).
Shortly before a milestone, many development teams go into "crunch mode"—extended overtime work weeks meant to catch up on any work that has slipped during regular development or to fix "killer bugs" that could jeopardize the future of the project. During these periods, many team members may put in long hours. After a deliverable is completed, some companies give their teams "comp time" (compensation time) of a few paid days off.
There are many types of deliverables, but one for an installment payment described above is the most common. For example, one major milestone may be an E3 demo. E3 — which, up until 2006 used to be the game industry's biggest trade show before downgrading to a more intimate showing of individual press screenings — is the place to market an upcoming game. The E3 demo is such a major effort that it may halt all normal development as the team prepares a small-scale, polished version of the game. Special assets are usually required for such a demo and team members are normally pulled off mainstream production for the demo development. As time draws nearer to the trade show, more team members may be drawn in to complete the demo on time. Later, this demo may be used as the game's official demo when the game is released.

[edit] Nearing completion
The weeks leading to completion of a game are intense, with most team members putting in a great deal of—mostly unpaid—overtime. Unsurprisingly, this may lead to short tempers and a great deal of exhaustion. The extra effort is required for most games as unforeseen problems regularly arise and last-minute features are hastily added.

[edit] Testing
The testing staff is most heavily relied upon at the end of a project, as they not only need to test newly added features, levels and bug fixes, but they also need to carry out regression testing to make sure that features that have been in place for months still operate correctly. This is also often the time when features and levels are being finished at the highest rate, so there is more new material to be tested than any other time in the project.
Regression testing is one of the most vital tasks required for effective software development. As new features are added, subtle changes to the codebase can impact seemingly unrelated portions of the game. This task is often overlooked, for several reasons. Some inexperienced developers may feel that once a feature works, it will always work. Also, since features are often added late in development, there isn't sufficient time to test existing features: testing new features takes precedence. Proper regression testing is also increasingly expensive and often not scheduled for correctly ahead of time.
Despite the dangers of not completely regression testing, many game developers and publishers fail to regression test a game’s full feature suite. One recent high-profile case of insufficient regression testing occurred with Firaxis’ Civilization III. Though the game worked for weeks before going gold, late changes to the code made the game unplayable past the industrial age. Understandably, this angered customers and fans of the game. Firaxis was quick to release a patch for the game, but not before suffering blows to their reputation.

[edit] Completion
After the game goes gold and ships, some developers will give team members comp time (perhaps up to a week or two) to compensate for the overtime put in to complete the game, though this compensation is not standard.

[edit] Maintenance
Console games used to be considered 100% complete when shipped and could not be changed. However, with the introduction of online-enabled consoles such as the Xbox 360, PlayStation 3 and Wii a large proportion of games are receiving patches and fixes after the game shipped due to bugs and glitches, much like PC games.
While console games can be developed for a finite set of components, PC games can have conflicts with the numerous hardware configurations users may employ. Developers try to account for the most prevalent configurations, but cannot anticipate all systems that their game may be tried on. It is common practice for computer game developers to release patches for games after they ship (often months or even years later). These patches used to be mailed to users via floppy disk, but are now generally available for download via the developer's website. If a game goes into a second printing, the patched version is used as the new master.

[edit] Culture
Game development culture always has been and continues to be very casual by normal business standards. Many game developers are strongly individualistic and usually tolerant of divergent personalities[citation needed]. Despite the casual culture, game development is taken seriously by its practitioners, who may take offense if it is suggested that they don't have "a real job."

[edit] Duration


What's an asset?


Game assets are the "things" that go into a game. Some examples of assets are artwork (including textures and 3D models), sound effects and music, text, dialogue and anything else that is presented to the user. Sometimes the terms content or objects are used interchangeably with the term assets.


Most modern games take from one to three years to complete. The length of development depends on a number of factors, such as genre, scale, development platform and amount of assets.
For example, a simple puzzle game using 2D graphics will take far less time to develop than a computer role-playing game with a full-blown 3D engine.
Another consideration is the use of middleware game engines. Developing a 3D engine from the ground up takes far more time than using a COTS (commercial, off-the-shelf) existing middleware package (such as Gamebryo or RenderWare). For example, Gas Powered Games developed a custom 3D engine for their game Dungeon Siege. Development took three years. Firaxis used the Gamebryo game engine for their game Sid Meier's Pirates! which was developed in just under two years.
The number of assets heavily impacts game development time. A puzzle game, for example, will normally have far fewer assets than a 3D role-playing game. Sometimes it is possible to use assets originally developed for another game (that the developer owns the copyright to) or assets that are in the public domain.
So, for the example puzzle game, developing it from the ground up with no pre-existing code or assets, could take a year. However, using a middleware package and existing assets, development could be sliced down to six months or less.
Some games, however, can take much longer than the average time frame to complete. The most famous example of this is 3D Realms' Duke Nukem Forever. It was announced to be in production in April 1997 but as of April 2009, has yet to be released. Planning for Maxis' game Spore began in late 1999 and was released nine years later in September 2008.

[edit] Locales





The examples and perspective in this section may not represent a worldwide view of the subject. Please improve this article or discuss the issue on the talk page. (September 2008)


Due to its software-based nature, game development can occur in almost any locale. Despite this, in the United States a few game programming "hot spots" have developed with a high concentration of game development ventures. Often these areas are adjacent to major universities such as Stanford, the University of Texas at Austin and the University of Washington.
In the very early days of video games, almost the only locale for game development was the corridor from San Francisco to Silicon Valley in California due to the era's high-tech growth in the area, and it remains an important development center. Currently, nearly another 10 more US States and areas have seen a large increase of game development companies including Dallas, Texas and Los Angeles. Smaller hot spots exist in other areas of the US and Canada, including suburban areas such as Marin County, California (in particular San Rafael), where Lucasfilm was headquartered from 1980-2005. In the late 1990s, Boston, Massachusetts and Salt Lake City, Utah had a number of game development companies, but this number has since declined.

[edit] Learning
Many universities and design schools are offering classes specifically focused on game development. Some are even offering comprehensive courses in game development and have built strategic alliances with major game development companies. These alliances ensure that students have access to the latest technologies and are provided the opportunity to find jobs within the gaming industry once qualified.

[edit] Stability
Video game industry employment is fairly volatile, similar to other artistic industries including television, music, etc. Scores of game development studios crop up, work on one game, and then quickly go under. This may be one reason why game developers tend to congregate geographically; if their current studio goes under, they can flock to an adjacent one or start another from the ground up.
In an industry where only the top 5% of products make a profit[2], it's easy to understand this fluctuation. Numerous games may start development and are canceled, or perhaps even completed but never published. Experienced game developers may work for years and yet never ship a title: such is the nature of the business. This volatility is likely inherent to the artistic nature of games.

[edit] See also

Software development
Software development process
Agile software development
List of gaming topics
Scrum
Video game controversy
XGS AVR 8-Bit
Open source video games


[edit] References





This article includes a list of references or external links, but its sources remain unclear because it lacks inline citations. Please improve this article by introducing more precise citations where appropriate. (February 2008)




^ "Cost of making games set to soar" from BBC News
^ Getting Into Gear from BizTech Magazine



Salen, Katie; Eric Zimmerman (2005). The Game Design Reader: A Rules of Play Anthology. The MIT Press. ISBN 0-262-19536-4. 
Salen, Katie; Eric Zimmerman (2003). Rules of Play: Game Design Fundamentals. The MIT Press. ISBN 978-0-262-24045-1. 


[edit] External links

FreeGameDev, a community for free/open source game development
International Game Developers Association (IGDA)
Gamasutra.com, articles on game development
GameDev.net, a leading resource for game development
DevMaster.net, a game development resource








v • d • e

Video game industry









Activities
Jobs
Platforms
Companies







Game design
Game development
Game programming
Game testing
Journalism
Level design




Game producer
Game designer
Game programmer
Game artist
Game tester
Level designer




Arcade game
Personal computer game
Console game
Handheld game
Mobile game
Online game



Video game developer
Video game publisher
List of video game companies
List of publishers










Lists of video games
List of video game industry people








Retrieved from "http://en.wikipedia.org/wiki/Game_development"
Categories: Video game developmentHidden categories: All articles with unsourced statements | Articles with unsourced statements since September 2008 | Articles with limited geographic scope | Articles lacking in-text citations from February 2008 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Česky
Español
日本語
Português
Русский
Slovenščina
Svenska









 This page was last modified on 6 April 2009, at 13:23.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
