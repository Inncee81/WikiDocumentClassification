













Punycode - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Punycode";
		var wgTitle = "Punycode";
		var wgAction = "view";
		var wgArticleId = "380586";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 277980307;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Punycode

From Wikipedia, the free encyclopedia

Jump to: navigation, search 





This article may require copy-editing for grammar, style, cohesion, tone or spelling. You can assist by editing it now. A how-to guide is available. (November 2008)




Unicode


Character encodings

Comparison
UTF-7, UTF-1
UTF-8, CESU-8
UTF-16/UCS-2
UTF-32/UCS-4
UTF-EBCDIC
SCSU, BOCU-1
Punycode (IDN)
GB 18030




UCS


Mapping


Bi-directional text


BOM


Han unification


Unicode and HTML


Unicode and E-mail


Unicode typefaces


Punycode is a computer programming encoding syntax by which a Unicode string of characters can be translated into the more-limited character set permitted in network host names. The encoding syntax is published on the Internet in Request for Comments 3492.
The encoding is used as part of IDNA, which is a system enabling the use of internationalized domain names in all scripts that are supported by Unicode, where the burden of translation lies entirely with the user application (a web browser for example). IDNA performs some significant pre- and post-processing in addition to its use of Punycode. For further information on IDNA including the pre- and post-processing and the spoofing concerns see the Internationalized domain name article.




Contents


1 Encoding procedure

1.1 Separation of ASCII characters
1.2 Encoding of non-ASCII character insertions as code numbers
1.3 Re-encoding of code numbers as ASCII sequences


2 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Encoding procedure
This section demonstrates the procedure for Punycode encoding, showing how the string "bücher" is encoded as "bcher-kva".

[edit] Separation of ASCII characters
First all basic (ASCII) characters in the string are copied directly from input to output skipping over other characters (e.g. "bücher" → "bcher"). If and only if there was one or more basic characters copied, an ASCII hyphen is added to the output next (e.g. "bücher" → "bcher-") .

[edit] Encoding of non-ASCII character insertions as code numbers
To understand the next part of the encoding process we first need to understand the behavior of the decoder. The decoder is a state machine with two state variables i and n. i is an index into the string ranging from zero (representing a potential insertion at the start) to the current length of the extended string (representing a potential insertion at the end).
i starts at zero while n starts at 128 (the first non-ASCII code point). The state progression is monotonic. A state change either increments i or if i is at its maximum resets i to zero and increments n. At each state change either the code point denoted by n is inserted or it is not inserted.
The code numbers generated by the encoder encode how many possibilities the decoder should skip before an insertion is made. "ü" has code point 252. So before we get to the possibility of inserting ü in position one it is necessary to skip over six potential insertions of each of the 124 preceding non-ASCII code points (252 - 128, the upper limit of ASCII) and one possible insertion (at position zero) of code point 252. That is why it is necessary to tell the decoder to skip a total of (6 × 124) + 1 = 745 possible insertions before getting to the one required.

[edit] Re-encoding of code numbers as ASCII sequences
Punycode uses generalized variable-length integers to represent these values. For example, this is how "kva" is used to represent the code number 745:
A number system with little-endian ordering is used which allows variable-length codes without separate delimiters: a digit lower than a threshold value marks that it is the most-significant digit, hence the end of the number. The threshold value depends on the position in the number and also on previous insertions, to increase efficiency. Correspondingly the weights of the digits vary.
In this case a number system with 36 "digits" is used, with the case-insensitive 'a' through 'z' equal to the numbers 0 through 25, and '0' through '9' equal to 26 through 35. Thus "kva", corresponds to "10 21 0".
To decode this string of "digits", the threshold starts out as 1 and the weight is 1. The first digit is the units digit; 10 with a weight of 1 equals 10. After this, the threshold value is adjusted. For the sake of simplicity, let's assume it is now 2. The second digit has a weight of 36 minus the previous threshold value, in this case, 35. Therefore the sum of the first two "digits" is 10 × 1 + 21 × 35. Since the second "digit" is not less than the threshold value of 2, there is more to come. The weight for the third "digit" is the previous weight times 36 minus the new threshold value; 35 × 34. The third "digit" in this example is 0, which is less than 2, meaning that it is the last (most significant) part of the number. Therefore "kva" represents the number 10 × 1 + 21 × 35 + 0 × 35 × 34 = 745.
For the insertion of a second special character in "bücher", the first possibility is "büücher" with code "bcher-kvaa", the second "bücüher" with code "bcher-kvab", etc. After "bücherü" with code "bcher-kvae" comes "ýbücher" with code "bcher-kvaf", etc.
To make the encoding and decoding algorithms simple, no attempt has been made to prevent some encoded values from encoding inadmissible Unicode values: however, these should be checked for and detected during decoding.
Compare an ASCII 'punycoded' URL http://xn--tdali-d8a8w.lv/ that includes the Unicode representation of the Latvian "u with a macron", and "n with cedilla", instead of the unmarked base characters: http://tūdaliņ.lv.
Punycode is designed to work across all scripts, and to be self-optimizing by attempting to adapt to the character set ranges within the string as it operates. It is optimized for the case where the string is composed of zero or more ASCII characters and in addition characters from only one other script system, but will cope with any arbitrary Unicode string. Note that for DNS use, the domain name string is assumed to have been normalized using Nameprep and (for top-level domains) filtered against an officially registered language table before being punycoded, and that the DNS protocol sets limits on the acceptable lengths of the output Punycode string.

[edit] External links

RFC 3492 (see also a slightly clarified 3492bis draft)
Punycode encoding and decoding
Online Punycode/IDN Decoder/Encoder
GNU IDN Library—Libidn
ICU IDNA Demonstration An online demonstration of how ICU performs IDN operations
Punycode for Domains Convert Unicode to Punycode
List of TLDs considered by the Mozilla developers to have an effective anti-spoofing policy for name registration
IDN and Punycode in IE7
Punycode converter for Korean




Retrieved from "http://en.wikipedia.org/wiki/Punycode"
Categories: Unicode | Domain name systemHidden categories: Wikipedia articles needing copy edit from November 2008 | All articles needing copy edit 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Česky
Deutsch
Español
Français
한국어
Italiano
日本語
Polski
Português
Svenska
中文









 This page was last modified on 17 March 2009, at 23:15.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
