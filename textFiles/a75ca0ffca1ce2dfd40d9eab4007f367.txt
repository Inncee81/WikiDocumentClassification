













Delaunay triangulation - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Delaunay_triangulation";
		var wgTitle = "Delaunay triangulation";
		var wgAction = "view";
		var wgArticleId = "8864";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 280502622;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Delaunay triangulation

From Wikipedia, the free encyclopedia

Jump to: navigation, search 




A Delaunay triangulation in the plane with circumcircles shown


In mathematics, and computational geometry, a Delaunay triangulation for a set P of points in the plane is a triangulation DT(P) such that no point in P is inside the circumcircle of any triangle in DT(P). Delaunay triangulations maximize the minimum angle of all the angles of the triangles in the triangulation; they tend to avoid skinny triangles. The triangulation was invented by Boris Delaunay in 1934 [1].
Based on Delaunay's definition[1], the circumcircle of a triangle formed by three points from the original point set is empty if it does not contain vertices other than the three that define it (other points are permitted only on the very perimeter, not inside).
The Delaunay condition states that a triangle net is a Delaunay triangulation if all the circumcircles of all the triangles in the net are empty. This is the original definition for two-dimensional spaces. It is possible to use it in three-dimensional spaces by using a circumscribed sphere in place of the circumcircle.
For a set of points on the same line there is no Delaunay triangulation (in fact, the notion of triangulation is undefined for this case).
For 4 points on the same circle (e.g., the vertices of a rectangle) the Delaunay triangulation is not unique: clearly, the two possible triangulations that split the quadrangle into two triangles satisfy the Delaunay condition.
Generalizations are possible to metrics other than Euclidean. However in these cases a Delaunay triangulation is not guaranteed to exist or be unique.




Contents


1 Relationship with the Voronoi diagram
2 n-dimensional Delaunay
3 Properties
4 Visual Delaunay definition: Flipping
5 Algorithms

5.1 Flip algorithms
5.2 Incremental
5.3 Divide and conquer
5.4 Sweepline


6 Applications
7 See also
8 References
9 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Relationship with the Voronoi diagram
The Delaunay triangulation of a discrete point set P in general position corresponds to the dual graph of the Voronoi tessellation for P. Special cases include the existence of three points on a line and four points on circle.








The Delaunay triangulation with all the circumcircles and their centers (in red).









Connecting the centers of the circumcircles produces the Voronoi diagram (in red).






[edit] n-dimensional Delaunay
For a set P of points in the (d-dimensional) Euclidean space, a Delaunay triangulation is a triangulation DT(P) such that no point in P is inside the circum-hypersphere of any simplex in DT(P).
It is known that there exists a unique Delaunay triangulation for P, if P is a set of points in general position; that is, no three points are on the same line and no four are on the same circle, for a two dimensional set of points, or no n + 1 points are on the same hyperplane and no n + 2 points are on the same hypersphere, for an n-dimensional set of points. An elegant proof of this fact is outlined below. It is worth mentioning, because it reveals connections between the two constructs fundamental for computational and combinatorial geometry.
The problem of finding the Delaunay triangulation of a set of points in n-dimensional Euclidean space can be converted to the problem of finding the convex hull of a set of points in (n + 1)-dimensional space, by giving each point p an extra coordinate equal to | p | 2, taking the bottom side of the convex hull, and mapping back to n-dimensional space by deleting the last coordinate. As the convex hull is unique, so is the triangulation, assuming all facets of the convex hull are simplices. A facet not being a simplex implies that n + 2 of the original points lay on the same d-hypersphere, and the points were not in general position.

[edit] Properties
Let n be the number of points and d the number of dimensions.

The union of all simplices in the triangulation is the convex hull of the points.
The Delaunay triangulation contains at most  simplices.
In the plane (d = 2), if there are b vertices on the convex hull, then any triangulation of the points has at most 2n − 2 − b triangles, plus one exterior face (see Euler characteristic).
In the plane, each vertex has on average six surrounding triangles.
In the plane, the Delaunay triangulation maximizes the minimum angle. Compared to any other triangulation of the points, the smallest angle in the Delaunay triangulation is at least as large as the smallest angle in any other. However, the Delaunay triangulation does not necessarily minimize the maximum angle.
A circle circumscribing any Delaunay triangle does not contain any other input points in its interior.
If a circle passing through two of the input points doesn't contain any other of them in its interior, then the segment connecting the two points is an edge of a Delaunay triangulation of the given points.
The Delaunay triangulation of a set of points in d-dimensional spaces is the projection of the convex hull of the projections of the points onto a (d+1)-dimensional paraboloid.


[edit] Visual Delaunay definition: Flipping
From the above properties an important feature arises: Looking at two triangles ABD and BCD with the common edge BD (see figures), if the sum of the angles α and γ is less than or equal to 180°, the triangles meet the Delaunay condition.
This is an important property because it allows the use of a flipping technique. If two triangles do not meet the Delaunay condition, switching the common edge BD for the common edge AC produces two triangles that do meet the Delaunay condition :








This triangulation does not meet the Delaunay condition (the sum of α and γ is bigger than 180°).









This triangulation does not meet the Delaunay condition (the circumferences contain more than 3 points).









Flipping the common edge produces a Delaunay triangulation for the four points.






[edit] Algorithms
All algorithms for computing Delaunay triangulations rely on fast operations for detecting when a point is within a triangle's circumcircle and an efficient data structure for storing triangles and edges. In two dimensions, one way to detect if point D lies in the circumcircle of A, B, C is to evaluate the determinant:



Assuming A, B and C to lie counter-clockwise, this is positive if and only if D lies in the circumcircle.

[edit] Flip algorithms
As mentioned above, if a triangle is non-Delaunay, we can flip one of its edges. This leads to a straightforward algorithm: construct any triangulation of the points, and then flip edges until no triangle is non-Delaunay. Unfortunately, this can take O(n2) edge flips, and does not extend to three dimensions or higher[2].

[edit] Incremental
The most straightforward way of efficiently computing the Delaunay triangulation is to repeatedly add one vertex at a time, retriangulating the affected parts of the graph. When a vertex v is added, we split in three the triangle that contains v, then we apply the flip algorithm. Done naively, this will take O(n) time: we search through all the triangles to find the one that contains v, then we potentially flip away every triangle. Then the overall runtime is O(n2).
If we insert vertices in random order, it turns out (by a somewhat intricate proof) that each insertion will flip, on average, only O(1) triangles -- although sometimes it will flip many more[3]. This still leaves the point location time to improve. We can store the history of the splits and flips performed: each triangle stores a pointer to the two or three triangles that replaced it. To find the triangle that contains v, we start at a root triangle, and follow the pointer that points to a triangle that contains v, until we find a triangle that has not yet been replaced. On average, this will also take O(log n) time. Over all vertices, then, this takes O(n log n) time[2]. While the technique extends to higher dimension (as proved by Edelsbrunner and Shah[4]), the runtime can be exponential in the dimension even if the final Delaunay triangulation is small.

[edit] Divide and conquer
A divide and conquer algorithm for triangulations in two dimensions is due to Lee and Schachter which was improved by Guibas and Stolfi[5] and later by Dwyer. In this algorithm, one recursively draws a line to split the vertices into two sets. The Delaunay triangulation is computed for each set, and then the two sets are merged along the splitting line. Using some clever tricks, the merge operation can be done in time O(n), so the total running time is O(n log n).[6]
For certain types of point sets, such as a uniform random distribution, by intelligently picking the splitting lines the expected time can be reduced to O(n log log n) while still maintaining worst-case performance.
A divide and conquer paradigm to performing a triangulation in d-dimensions is presented in "DeWall: A fast divide and conquer Delaunay triangulation algorithm in Ed" by P. Cignoni, C. Montani, R. Scopigno.[7]

[edit] Sweepline
Fortune's Algorithm uses a sweepline technique to achieve O(n log n) runtime in the planar case. In some experimental evaluations,[citation needed] the sweepline is the fastest in practice.

[edit] Applications
The Euclidean minimum spanning tree of a set of points is a subset of the Delaunay triangulation of the same points, and this can be exploited to compute it efficiently.
For modeling terrain or other objects given a set of sample points, the Delaunay triangulation gives a nice set of triangles to use as polygons in the model. In particular, the Delaunay triangulation avoids narrow triangles (as they have large circumcircles compared to their area).




The Delaunay triangulation of a random set of 100 points in a plane.


Delaunay triangulations are often used to build meshes for the finite element method, because of the angle guarantee and because fast triangulation algorithms have been developed. Typically, the domain to be meshed is specified as a coarse simplicial complex; for the mesh to be numerically stable, it must be refined, for instance by using Ruppert's algorithm. This has been implemented by Jonathan Shewchuk in the freely available Triangle package.

[edit] See also

Voronoi diagram
Gabriel graph
Pitteway triangulation
Gradient Pattern Analysis


[edit] References

^ a b B. Delaunay: Sur la sphère vide, Izvestia Akademii Nauk SSSR, Otdelenie Matematicheskikh i Estestvennykh Nauk, 7:793-800, 1934
^ a b de Berg, Mark; Otfried Cheong, Marc van Kreveld, Mark Overmars (2008). Computational Geometry: Algorithms and Applications. Springer-Verlag. ISBN 978-3-540-77973-5. 
^ Guibas, L.; D. Knuth; M. Sharir (1992). "Randomized incremental construction of Delaunay and Voronoi diagrams". Algorithmica 7: 381-413. http://www.springerlink.com/content/p8377h68j82l6860. 
^ Edelsbrunner, Herbert; Nimish Shah (1996). "Incremental Topological Flipping Works for Regular Triangulations". Algorithmica 15: 223–241. http://www.springerlink.com/content/4gdja72vx1qmg44x/?p=a74909a339d9498cbff326f08b084b4c&pi=1. 
^ Computing Constrained Delaunay Triangulations
^ G. Leach: Improving Worst-Case Optimal Delaunay Triangulation Algorithms. June 1992
^ Cignoni, P.; C. Montani; R. Scopigno (1998). "DeWall: A fast divide and conquer Delaunay triangulation algorithm in Ed". Computer-Aided Design 30 (5): 333–341. doi:10.1016/S0010-4485(97)00082-1. 


[edit] External links

2D, 3D, and higher dimensional Delaunay triangulation in CGAL, the Computational Geometry Algorithms Library
Mathworld on Delaunay triangulation
Qhull for computing Delaunay triangulations in 2-d, 3-d, etc.




Retrieved from "http://en.wikipedia.org/wiki/Delaunay_triangulation"
Categories: Discrete geometry | Geometric algorithms | Triangles | Geometric graphsHidden categories: All articles with unsourced statements | Articles with unsourced statements since December 2008 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


العربية
Deutsch
Español
Français
עברית
日本語
Polski
Русский
Slovenščina
Українська









 This page was last modified on 29 March 2009, at 21:27.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
