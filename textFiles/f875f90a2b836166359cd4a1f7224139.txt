











Linux kernel - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Linux_kernel";
		var wgTitle = "Linux kernel";
		var wgAction = "view";
		var wgArticleId = "21347315";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 279933824;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = ["autoconfirmed"];
		var wgRestrictionMove = ["sysop"];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Linux kernel

From Wikipedia, the free encyclopedia

Jump to: navigation, search 

Linux





Linux kernel 2.6.25.17 booting


Design by
Linus Torvalds


Developed by
Linus Torvalds (author) and Andrew Morton. Thousands of collaborators


Initial release
1991


Latest release
2.6.29 / 2009-3-23; 11 days ago[1]


Written in
C


Operating system
Unix-like


Available in
English


Type
Kernel


License
GNU General Public License version 2 (only)[2][3]


Website
www.kernel.org


The Linux kernel is an operating system kernel used by a family of Unix-like[4] operating systems. The term Linux distribution is used to refer to the various operating systems that run on top of the Linux Kernel.
The Linux kernel is released under the GNU General Public License version 2 (GPLv2)[3] and developed by contributors worldwide; Linux is one of the most prominent examples of Free / Open Source software.[5]
The Linux kernel was initially conceived and created by Finnish software engineer Linus Torvalds in 1991. Early on, the MINIX community contributed code and ideas to the Linux kernel. At the time, the GNU Project had created many of the components required for a free software operating system, but its own kernel, GNU Hurd, was incomplete and unavailable. The BSD operating system had not yet freed itself from legal encumbrances. This meant that despite the limited functionality of the early versions, Linux rapidly accumulated developers and users who adopted code from those projects for use with the new operating system.[6] Today the Linux kernel has received contributions from thousands of programmers.




Contents


1 History
2 Legal aspects

2.1 Licensing terms

2.1.1 GPL version 3


2.2 Loadable Kernel Modules and firmware
2.3 Trademark
2.4 SCO litigation


3 Technical features

3.1 Architecture

3.1.1 Build Options
3.1.2 Kernel panic
3.1.3 Tanenbaum-Torvalds debate


3.2 Programming languages
3.3 Portability

3.3.1 Cooperative Linux
3.3.2 Virtual machine architectures


3.4 Estimated cost to redevelop


4 Versions

4.1 Version numbering
4.2 Development model
4.3 Maintenance
4.4 Revision control
4.5 Stable version history


5 Kernel resources

5.1 Kernel items
5.2 Kernel headers


6 See also
7 References
8 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


History
See also: History of Linux
In April 1991, Linus Torvalds, then 21 years old, started working on some simple ideas for an operating system. He started with a task switcher in Intel 80386 assembly language and a terminal driver. Then, on 26 August 1991, Torvalds posted to comp.os.minix:


“
I'm doing a (free) operating system (just a hobby, won't be big and professional like gnu) for 386(486) AT clones. This has been brewing since April, and is starting to get ready. I'd like any feedback on things people like/dislike in minix, as my OS resembles it somewhat (same physical layout of the file-system (due to practical reasons) among other things).
I've currently ported bash(1.08) and gcc(1.40), and things seem to work. This implies that I'll get something practical within a few months [...] Yes - it's free of any minix code, and it has a multi-threaded fs. It is NOT portable (uses 386 task switching etc), and it probably never will support anything other than AT-harddisks, as that's all I have :-(.
[...] It's mostly in C, but most people wouldn't call what I write C. It uses every conceivable feature of the 386 I could find, as it was also a project to teach me about the 386. As already mentioned, it uses a MMU, for both paging (not to disk yet) and segmentation. It's the segmentation that makes it REALLY 386 dependent (every task has a 64Mb segment for code & data - max 64 tasks in 4Gb. Anybody who needs more than 64Mb/task - tough cookies). [...] Some of my "C"-files (specifically mm.c) are almost as much assembler as C. [...] Unlike minix, I also happen to LIKE interrupts, so interrupts are handled without trying to hide the reason behind them.[7]

”


After that, many people contributed code to the project. By September 1991, Linux version 0.01 was released. It had 10,239 lines of code. In October 1991, Linux version 0.02 was released.[8]
In December 1991, Linux 0.11 was released. This version was the first to be self-hosted - Linux 0.11 could be compiled by a computer running Linux 0.11. When he released version 0.12 in February 1992, Torvalds adopted the GNU General Public License (GPL) over his previous self-drafted license, which did not permit commercial redistribution.[9]
A newsgroup alt.os.linux was started, and on 19 January 1992, the first post to alt.os.linux was made.[10] On 31 March 1992, alt.os.linux became comp.os.linux.[11]
The X Window System was soon ported to Linux. In March 1992, Linux version 0.95 was the first to be capable of running X. This large version number jump (from 0.1x to 0.9x) was due to a feeling that a version 1.0 with no major missing pieces was imminent. However, this proved to be somewhat overoptimistic, and from 1993 to early 1994, 15 development versions of version 0.99 appeared.
On 14 March 1994, Linux 1.0.0 was released, with 176,250 lines of code. In March 1995, Linux 1.2.0 was released (310,950 lines of code).
Version 2 of Linux, released on 9 June 1996, was followed by additional major versions under the version 2 header:

25 January 1999 - Linux 2.2.0 was released (1,800,847 lines of code).
18 December 1999 - IBM mainframe patches for 2.2.13 were published, allowing Linux to be used on enterprise-class machines.
4 January 2001 - Linux 2.4.0 was released (3,377,902 lines of code).
17 December 2003 - Linux 2.6.0 was released (5,929,913 lines of code).
23 March 2009 - Linux 2.6.29 was released (11,010,647 lines of code).[12]


Legal aspects

Licensing terms
Initially, Torvalds released Linux under a license which forbade any commercial exploitation. This was soon changed to the GNU General Public License (GPL), as of version 0.12. This license allows distribution and sale of possibly modified and unmodified versions of Linux but requires that all those copies be released under the same license and be accompanied by the complete corresponding source code.
Torvalds has described licensing Linux under the GPL as the "best thing I ever did."[13]

GPL version 3
Main article: GNU General Public License: Version 3
Currently, Linux is licensed only under version 2 of the GPL,[3] with (unlike much GPL software) no option to use a later version, and there is some controversy over how easily it could be changed to use later GPL versions such as the new version 3 (and whether this is desirable).[14] Torvalds himself specifically indicated upon the release of version 2.4.0 that his own code is only under version 2.[15] However, the terms of the GPL state that if no version is specified, then any version may be used, and Alan Cox pointed out that very few other Linux contributors have specified a particular version of the GPL.[16] One blogger concluded that around 40% of Linux code is specifically "GPL2 or above", and another approximately 10% is "GPL" (with no version specified), making for about half of the kernel, put together.[citation needed] In September of 2006, a survey of 29 key kernel programmers indicated 28 preferred GPLv2 to the then-current GPLv3 draft.[citation needed] Torvalds commented, "I think a number of outsiders...believed that I personally was just the odd man out, because I've been so publicly not a huge fan of the GPLv3."[17]

Loadable Kernel Modules and firmware
It is debated whether Loadable Kernel Modules (LKMs) should be considered derivative works under copyright law, and thereby fall under the terms of the GPL. Torvalds has stated his belief that LKMs using only a limited, "public" subset of the kernel interfaces can sometimes be non-derived works, thus allowing some binary-only drivers and other LKMs that are not licensed under the GPL. Not all Linux contributors agree with this interpretation, however, and even Torvalds agrees that many LKMs are clearly derived works, and indeed he writes that "kernel modules ARE derivative 'by default'". On the other hand Torvalds has also said that "one gray area in particular is something like a driver that was originally written for another operating system (ie. clearly not a derived work of Linux in origin). [...] THAT is a gray area, and _that_ is the area where I personally believe that some modules may be considered to not be derived works simply because they weren't designed for Linux and don't depend on any special Linux behaviour."[18] Proprietary graphics drivers, in particular, are heavily discussed. Ultimately, it is likely that such questions can only be resolved by a court.
One point of licensing controversy is Linux's use of firmware "binary blobs" to support some hardware devices. Richard Stallman claims that these blobs make Linux partially non-free software, and that distributing Linux may even be violating the GPL (which requires "complete corresponding source code" to be available).[19]

Trademark
Linux is a registered trademark of Linus Torvalds in the United States and some other countries. This is the result of an incident in which William Della Croce, Jr., who was not involved in the Linux project, trademarked the name and subsequently demanded royalties for its use. Several Linux backers retained legal counsel and filed suit against Della Croce, who agreed in 1998 to assign the trademark to Torvalds.

SCO litigation
For more details on this topic, see SCO-Linux controversies.
In March 2003, the SCO Group (SCO) filed a lawsuit against IBM claiming that IBM had violated copyrights that SCO claimed to hold over the Unix source code, by contributing portions of that code to Linux. Additionally, SCO sent letters to a number of companies warning that their use of Linux without a license from SCO may be a violation of copyright law, and claimed in the press that they would be suing individual Linux users. IBM then promised to defend its Linux customers on their behalf. This controversy has generated lawsuits by SCO against Novell, DaimlerChrysler (partially dismissed in July, 2004), and AutoZone, and retaliatory lawsuits by Red Hat and others against SCO.
In early 2007 SCO filed the specific details of the purported copyright infringement. Despite previous claims that SCO was the rightful owner of 1 million lines of code, they specified only 326 lines of code, most of which were uncopyrightable.[20] In August 2007, the court in the Novell case ruled that SCO did not actually own the Unix copyrights to begin with.[21]

Technical features
Linux supports true preemptive multitasking (both in user mode and kernel mode), virtual memory, shared libraries, demand loading, shared copy-on-write executables, memory management, the Internet protocol suite, and threading.

Architecture




Linux kernel map and bigger Interactive map


Linux is a monolithic kernel. Device drivers and kernel extensions run in kernel space (ring 0 in many CPU architectures), with full access to the hardware, although some exceptions run in user space. The graphics system most people use with Linux doesn't run in the kernel, in contrast to that found in Microsoft Windows.
Kernel mode preemption allows device drivers to be preempted under certain conditions. This feature was added to handle hardware interrupts correctly and improve support for symmetric multiprocessing (SMP). Preemption also improves latency, increasing responsiveness and making Linux more suitable for real-time applications.

Build Options
The Linux kernel has configurable Linux build options that enable specific features to be added or removed from the kernel during initial compilation. Customized default parameters may also be configured during the initial compilation, such as with make menuconfig.[4]

Kernel panic




Kernel Panic


Main article: Kernel panic
In Linux, a "panic" is an unrecoverable system error detected by the kernel as opposed to similar errors detected by user space code. It is possible for kernel code to indicate such a condition by calling the panic function located in the header file sys/system.h. However, most panics are the result of unhandled processor exceptions in kernel code, such as references to invalid memory addresses. These are typically indicative of a bug somewhere in the call chain leading to the panic. They can also indicate a failure of hardware, such as a failed RAM cell or errors in arithmetic functions in the processor caused by a processor bug, overheating/damaged processor, or a soft error.

Tanenbaum-Torvalds debate
See also: Tanenbaum–Torvalds debate
The fact that Linux is a monolithic kernel rather than a microkernel was the topic of the Tanenbaum–Torvalds debate between Andrew S. Tanenbaum and Linus Torvalds.[22] The debate started in 1992 about Linux and kernel architecture in general on the Usenet discussion group comp.os.minix.[23] Tanenbaum argued that microkernels are superior to monolithic kernels and that therefore Linux is obsolete. Unlike traditional monolithic kernels, device drivers are easily configured as Loadable Kernel Modules, and loaded or unloaded while running the system. This subject was revisited on 9 May 2006,[24] and on 12 May 2006 Tanenbaum wrote a position statement.[25]

Programming languages
Linux is written in the version of the C programming language supported by GCC (which has introduced a number of extensions and changes to standard C), together with a number of short sections of code written in the assembly language (in GCC's "AT&T-style" syntax) of the target architecture. Because of the extensions to C it supports, GCC was for a long time the only compiler capable of correctly building Linux. In 2004, Intel claimed to have modified the kernel so that its C compiler also was capable of compiling it.[26] There was another such reported success in 2009 with a modified 2.6.22.[27][28]
Many other languages are used in some way, primarily in connection with the kernel build process (the methods whereby the bootable image is created from the sources). These include Perl, Python, and various shell scripting languages. Some drivers may also be written in C++, Fortran, or other languages, but this is strongly discouraged. Linux's build system only officially supports GCC as a kernel and driver compiler.

Portability




iPodLinux booting Linux


Main article: Linux kernel portability and supported architectures
While not originally designed to be portable, Linux is now one of the most widely ported operating system kernels, running on a diverse range of systems from the iPAQ (a handheld computer) to the IBM System z9 (a massive mainframe server that can run hundreds or even thousands of concurrent Linux instances). Linux runs as the main operating system on IBM's Blue Gene supercomputers. As of November 2008[update], Linux is the OS on more than 87% of systems on the Top 500 supercomputers list.[29] Also, Linux has been ported to various handheld devices such as TuxPhone and Apple's iPod.

Cooperative Linux
Main article: Cooperative Linux




CoLinux running on Windows


Cooperative Linux, abbreviated as coLinux, is software which allows Microsoft Windows and the Linux kernel to run simultaneously in parallel on the same machine.[30]
Cooperative Linux utilizes the concept of a Cooperative Virtual Machine (CVM). In contrast to traditional VMs, the CVM shares resources that already exist in the host OS. In traditional (host) VMs, resources are virtualized for every (guest) OS. The CVM gives both OSs complete control of the host machine while the traditional VM sets every guest OS in an unprivileged state to access the real machine.

Virtual machine architectures

See Comparison of platform virtual machines for more details on product support for Linux.


See Hypervisor for more details on terminology used with virtual machines.

The Linux kernel has extensive support for and runs on many virtual machine architectures both as the host operating system and as a client operating system. The virtual machines usually emulate Intel x86 family of processors, though in a few cases PowerPC or AMD processors are also emulated.

Estimated cost to redevelop
The cost to redevelop the Linux kernel version 2.6.0 in a traditional proprietary development setting has been estimated to be $612 million USD (€467 million euro) in 2004 prices using the COCOMO man-month estimation model.[31] In 2006, a study funded by the European Union put the redevelopment cost of kernel version 2.6.8 higher, at €882 million euro ($1.14 billion USD).[32]

Versions
Further developing his own code and integrating changes made by other programmers, Linus Torvalds keeps releasing new versions of the Linux kernel. These are called "vanilla" kernels, meaning they have not been further modified by anyone. Many Linux operating system vendors modify the kernels of their product, mainly in order to add support for drivers or features which have not officially been released as stable, while some distributions rely on vanilla kernels.

Version numbering
The Linux kernel has had three different numbering schemes.
Early versions:

The first version of the kernel was 0.01. This was followed by 0.02, 0.03, 0.10, 0.11, 0.12 (the first GPL version), 0.95, 0.96, 0.97, 0.98, 0.99 and then 1.0.[33] From 0.95 on there were many patch releases between versions.

The old scheme (after 1.0 and prior to version 2.6):

The A number denotes the kernel version. It is rarely changed, and only when major changes in the code and the concept of the kernel occur. It has been changed twice in the history of the kernel: In 1994 (version 1.0) and in 1996 (version 2.0).


The B number denotes the major revision of the kernel

The kernel used the traditional even-odd system version numbering system.


The C number indicates the minor revision of the kernel. This number was changed when security patches, bug fixes, new features or drivers were implemented in the kernel.

After the release of 2.6.0 (Dec 2003[34]) it was realized that a much shorter release cycle would be beneficial. Since then:

A and B are largely irrelevant


C is the version of the kernel


D counts from and bug and security fixes (only) to the C version (all development occurs on release candidates—'rc')

A D number first occurred when a grave error, which required immediate fixing, was encountered in 2.6.8's NFS code. However, there were not enough other changes to legitimize the release of a new minor revision (which would have been 2.6.9). So, 2.6.8.1 was released, with the only change being the fix of that error. With 2.6.11, this was adopted as the new official versioning policy. Some bug-fixes and security patches are back-ported to released kernels and managed by the fourth, D number. Development only occurs under the C number.
Also, sometimes after the version there will be some more letters such as 'rc1' or 'mm2'. The 'rc' refers to release candidate and indicates a non-official pre-release. Other letters are usually (but not always) the initials of a person. This indicates a development branch of the kernel by that person. e.g. ck stands for Con Kolivas, ac stands for Alan Cox, whereas mm stood for Andrew Morton. Sometimes, the letters are related to the primary development area of the branch the kernel is built from, for example, wl indicates a wireless networking test build. Also, distributors may have different numbering systems for their own versions (appended to the official numbering, at least to C) and for back-ports to their "Enterprise" (ie, old versions) of Linux.

Development model
The development model for Linux 2.6 was a significant change from the development model for Linux 2.5. Previously there was a stable branch (2.4) where only relatively minor and safe changes were merged, and an unstable branch (2.5), where bigger changes and cleanups were allowed. This meant that users would always have a well-tested 2.4 version with the latest security and bug fixes to use, though they would have to wait for the features which went into the 2.5 branch. The downside of this was that the "stable" kernel ended up so far behind that it no longer supported recent hardware and lacked needed features. In the late 2.5.x series kernel some maintainers elected to try and back port their changes to the stable series kernel which resulted in bugs being introduced into the 2.4.x series kernel. The 2.5 branch was then eventually declared stable and renamed to 2.6. But instead of opening an unstable 2.7 branch, the kernel developers elected to continue putting major changes into the 2.6 "stable" branch. This had the desirable effect of breaking changes into smaller and easier to test batches, making new features quickly available, and getting more testing of the latest code.
However, the new 2.6 development model also meant that there was no stable branch for people just wanting security and bug fixes, and not needing the latest features. Fixes were only put into the latest version, so if a user wanted a version with all known bugs fixed they would also get all the latest features, which had not been well tested, and risked breaking things which had previously worked. A partial fix for this was the previously mentioned fourth version number digit (y in 2.6.x.y), which are series of point releases created by the stable team (Greg Kroah-Hartman, Chris Wright, maybe others). The stable team only released updates for the most recent kernel however, so this did not solve the problem of the missing stable kernel series. Linux distribution vendors, such as Red Hat and Debian, maintain the kernels which ship with their releases, so a solution for some people is to just follow a vendor kernel.
As a response to the lack of a stable kernel tree where people could coordinate the collection of bug fixes, in December 2005 Adrian Bunk announced that he would keep releasing 2.6.16.y kernels when the stable team moved on to 2.6.17.[35] He also plans to include driver updates, making the maintenance of the 2.6.16 series very similar to the old rules for maintenance of a stable series such as 2.4.[36] Recently, Adrian Bunk announced that he will maintain 2.6.27 for a few years as a replacement of 2.6.16.[37]

As of 24 December 2008, the latest stable kernel version is 2.6.28.[38]
In February 2008, the developers also responded to the lack of what one might call an unstable kernel tree - the linux-next tree was created to serve as a place where patches aimed to be merged during the next development cycle are gathered.[39]

Maintenance
While Linus Torvalds supervises code changes and releases to the latest kernel versions, he has delegated the maintenance of older versions to other programmers. Major releases as old as 2.0 (officially obsoleted with the kernel 2.2.0 release in January 1999) are maintained as needed, although at a very slow pace.


Kernel series
Current version
Maintainer


2.0
2.0.40
David Weinehall[40]


2.2
2.2.27-rc2
Marc-Christian Petersen[41] (former maintainer Alan Cox)


2.4
2.4.37
Willy Tarreau[42] (former maintainer Marcelo Tosatti)


2.6.16
2.6.16.62
Adrian Bunk[43]


2.6.x (current only)
(releases every three months)
Linus Torvalds


2.6.x-linux-next
latest development version



2.6.x-mm
(changes rapidly)
Andrew Morton


Other Linux kernel programmers include Robert Love and Ingo Molnár.[44]

Revision control
The Linux kernel source code used to be maintained without the help of an automated source code management system, mostly because of Linus Torvalds' dislike of centralized SCM systems.
In 2002, Linux kernel development switched to BitKeeper, a SCM system which satisfied Linus Torvalds' technical requirements. BitKeeper was made available to Linus and several others free of charge, but was not free software, which was a source of controversy. The system did provide some interoperability with free SCM systems such as CVS and Subversion.
In April 2005, however, efforts to reverse-engineer the BitKeeper system by Andrew Tridgell led BitMover, the company which maintained BitKeeper, to stop supporting the Linux development community. In response, Linus Torvalds and others wrote a new source code control system for the purpose, called Git. The new system was written within weeks, and in two months the first official kernel release was made using git[45]. Git soon developed into a separate project in its own right and gained wider adoption in the free software community.

Stable version history
There were two major stable versions of the 1.x Linux kernel: 1.0 and 1.2. Version 1.0 of the Linux kernel was released on 14 March 1994[46] This release of the Linux kernel only supported single-processor i386-based computer systems. Portability became a concern, and so version 1.2 (released 7 March 1995[47]) gained support for computer systems based on the DEC Alpha, Sparc, and MIPS architectures. This was the last stable release in the 1.x series of the Linux kernel.
Version 2.x of the Linux kernel has seen a great number of changes, notably in the 2.6 series and how it is now developed, maintained, and released. Versions 2.0, 2.2, and 2.4 were done using the old system of development wherein each one of the kernels were a stable release tree that was based on previous development. Version 2.0 was released 9 June 1996[48]. There were 41 releases in the series. The major feature of 2.0 was SMP support (that is, support for multiple processors in a single system) and support for more types of processors. Version 2.2 (released 26 January 1999[49]) removed the global spinlock and provided improved SMP support, and added support for the m68k and PowerPC architectures as well as new filesystems (including read-only support for Microsoft’s NTFS filesystem).[50]
Development for 2.4.x changed a bit in that more features were made available throughout the duration of the series. Version 2.4.0, released on 4 January 2001,[51] contained support for ISA Plug and Play, USB, and PC Cards.[52] It also included support for the PA-RISC processor from Hewlett-Packard. Throughout the 2.4.x series new features were added including: support for Bluetooth, Logical Volume Manager (LVM) version 1, RAID support, InterMezzo and ext3 filesystems.
With the coming of 2.6.x of the Linux kernel, the versioning has changed such that there can now be four numbers to the kernel version, giving releases the format of 2.6.x.y (where .y is optional). Features are now added between x releases, and y releases usually consist of bugfixes. Version 2.6.0 was released on 18 December 2003.[53] The 2.6 series of kernels is still the active series of stable kernels as of 1 January 2009. Among the changes that have been made in the 2.6 series are: integration of µClinux into the mainline kernel sources, PAE support, support for several new lines of CPUs, integration of ALSA into the mainline kernel sources, support for up to 232 users (up from 216), support for up to 229 process IDs (up from 215), substantially increased the number of device types and the number of devices of each type, improved 64-bit support, support for filesystems of up to 16 terabytes, in-kernel preemption, support for the Native POSIX Thread Library, User-mode Linux integration into the mainline kernel sources, SELinux integration into the mainline kernel sources, Infiniband support, and considerably more. Also notable are the addition of several filesystems throughout the 2.6.x releases: FUSE, JFS, XFS, ext4 and more. Details on the history of the 2.6 kernel series can be found in the ChangeLog files on the 2.6 kernel series source code release area of kernel.org.

Kernel resources

Kernel items
Kernel items are functions, variables, header files, and macros.[54]

Kernel headers
Kernel headers are C header files which provide some definitions of the low-level kernel ABI, to be shared between the kernel and userspace programs. Most userspace programs should not include kernel headers; they are only intended to be used directly by system libraries and low-level tools and daemons.[55]
The "make headers_install" command, when executed in the kernel's source tree, exports the kernel's header files in a form suitable for use by userspace programs.[56]
When exported, most kernel headers reside in the /usr/include/asm and /usr/include/linux directories.

See also




Free software portal




menuconfig, an ncurses-based target for the Linux kernel Makefile
Git (software)
Ksplice - Linux Kernel Update invented by Massachusetts Institute of Technology
List of Linux kernel names
Modprobe
System.map
User space


References


^ Linus Torvalds (2009-03-23). "Linux 2.6.29". linux-kernel mailing list. http://lkml.org/lkml/2009/3/23/449. Retrieved on 2009-03-23. 
^ InfoWorld. "Linux creator Torvalds still no fan of GPLv3". http://www.infoworld.com/article/06/07/28/HNtorvaldsnofan_1.html. 
^ a b c COPYING
^ a b README
^ Linus Torvalds (2006-09-25). "Re: GPLv3 Position Statement". http://lkml.org/lkml/2006/9/25/161. 
^ Free as in Freedom by Sam Williams. O'Reilly books, 2002
^ "What would you like to see most in minix?". comp.os.minix. (Web link).
^ "Free minix-like kernel sources for 386-AT". comp.os.minix. (Web link).
^ Torvalds, Linus. "Release Notes for Linux v0.12". The Linux Kernel Archives. http://www.kernel.org/pub/linux/kernel/Historic/old-versions/RELNOTES-0.12. Retrieved on 2007-02-21. 
^  (19 January 1992). "Troubles with Partitions". comp.os.minix. (Web link). Retrieved on 2007-01-07.
^  (31 March 1992). "It's here!". comp.os.linux. (Web link). Retrieved on 2007-01-07.
^ "Linux Kernel Data."
^ Yamagata, Hiroo (1997). "The Pragmatist of Free Software". HotWired. http://hotwired.goo.ne.jp/matrix/9709/5_linus.html. Retrieved on 2007-02-21. 
^ Corbet, Jonathan (2006-01-31). "GPLv3 and the kernel". LWN.net. http://lwn.net/Articles/169797/. Retrieved on 2007-02-21. 
^ Torvalds, Linus (2000-09-08). "Linux-2.4.0-test8". Linux-kernel mailing list archive. Unix Systems Support Group of Indiana University. http://www.uwsg.iu.edu/hypermail/linux/kernel/0009.1/0096.html. Retrieved on 2007-02-21. 
^ Cox, Alan (2006-01-20). "Re: GPL V3 and Linux". Linux-kernel mailing list archive. LWN.net. http://lwn.net/Articles/169831/. Retrieved on 2007-02-21. 
^ Shankland, Stephen (25 September 2006). "Top Linux programmers pan GPL 3". News.com. http://news.com.com/Top+Linux+programmers+pan+GPL+3/2100-7344_3-6119372.html. Retrieved on 2007-02-21. 
^ Re: Linux GPL and binary module exception clause?
^ Stallman, Richard (2006-10-11). "Linux, GNU, and freedom". Free Software Foundation. http://www.gnu.org/philosophy/linux-gnu-freedom.html. Retrieved on 2007-02-21. 
^ "Report from the Courthouse 7 March". http://www.groklaw.net/articlebasic.php?story=20070308014847709.  Groklaw article
^ "Court Rules: Novell owns the UNIX and UnixWare copyrights". http://www.groklaw.net/article.php?story=20070810165237718.  Groklaw article
^ O'Reilly (1999). "The Tanenbaum-Torvalds Debate". O'Reilly. http://www.oreilly.com/catalog/opensources/book/appa.html. Retrieved on 2006-11-22. 
^  (29 January 1992). "LINUX is obsolete". comp.os.minix. (Web link). Retrieved on 2006-05-10.
^ Torvalds, Linus (9 May 2006). "Hybrid kernel, not NT". http://www.realworldtech.com/forums/index.cfm?action=detail&id=66630&threadid=66595&roomid=11. Retrieved on 2007-01-06. 
^ Tanenbaum, Andy (12 May 2006). "Tanenbaum-Torvalds Debate: Part II". http://www.cs.vu.nl/~ast/reliable-os/. Retrieved on 2007-01-06. 
^ Linux kernel patch for Intel Compiler
^ http://linux.slashdot.org/article.pl?sid=09/02/26/2216241
^ http://www.linuxjournal.com/content/linuxdna-supercharges-linux-intel-cc-compiler
^ "Operating system Family". Top 500 Supercomputer Sites. November 2008. http://www.top500.org/stats/list/32/osfam/. 
^ coLinux main website
^ David A. Wheeler. "Linux Kernel 2.6: It's Worth More!". http://www.dwheeler.com/essays/linux-kernel-cost.html. 
^ Economic impact of FLOSS on innovation and competitiveness of the EU ICT sector, Table 3 on page 50.
^ Linux Kernel Archives - Volume 1 (Riley Williams)
^ http://www.kernel.org/pub/linux/kernel/v2.6/
^ http://kerneltrap.org/node/6930
^ http://kerneltrap.org/node/6386
^ http://marc.info/?l=linux-kernel&m=122375909403298&w=2
^ http://kernel.org/
^ http://lwn.net/Articles/269120/
^ David Weinehall (2004-02-08). "[ANNOUNCE] Linux-kernel 2.0.40 aka ``The Moss-covered Tortoise''". http://kerneltrap.org/node/2279. 
^ Marc-Christian Petersen (2005-01-13). "Linux 2.2.27-rc2". http://kerneltrap.org/node/2279. 
^ Willy Tarreau (2008-09-07). "Linux 2.4.37-rc1". linux-kernel mailing list. http://marc.info/?l=linux-kernel&m=122080661925779. 
^ Adrian Bunk (2008-07-21). "Linux 2.6.16.62". linux-kernel mailing list. http://marc.info/?l=linux-kernel&m=121667337007967. 
^ See the Linux MAINTAINERS file.
^ Linux Kernel Mailing List (2005-06-17). "Linux 2.6.12". http://marc.info/?l=git-commits-head&m=111904216911731. 
^ Kernel 1.0 Source Code Release (last checked 2008-10-27)
^ Kernel 1.2 Source Code Release (last checked 2008-10-27)
^ Kernel 2.0.x Source Code Releases (last checked 2008-10-27)
^ Kernel 2.2.x Source Code Releases (last checked 2008-10-27
^ The Wonderful World of Linux 2.2 (last checked 2008-10-27)
^ Kernel 2.4.x Source Code Releases (last checked 2008-10-27)
^ The Wonderful World of Linux 2.4 (last checked 2008-10-27)
^ Kernel 2.6.x.y Source Code Releases (last checked 2008-10-27)
^ Linux Device Drivers, 2nd Edition: Chapter 2: Building and Running Modules
^ Gmane Loom
^ Linux Kernel Documentation :: make : headers_install.txt




Torvalds, Linus; Diamond, David (2001). Just for Fun: The Story of an Accidental Revolutionary. HarperBusiness. ISBN 0-06-662072-4 (hardcover); HarperAudio ISBN 0-694-52539-1.  (audio tape, abridged ed., read by David Diamond) - on the beginnings of the Linux kernel
Nikolai Bezroukov, Portraits of Open Source Pioneers. Ch 4: A benevolent dictator (Softpanorama e-book).
"LinkSys and binary modules". LWN.net Weekly Edition. 16 October 2003. http://lwn.net/Articles/53780/. 
FreeBSD/Linux kernel source code cross-reference. Browsable Linux (and other operating system) kernel source cross-reference.
LXR: The Linux Cross-Reference project. Browsable Linux kernel source.
KernelHQ - a browsable kernel source tree - with all versions present, and with browsable diffs
The LWN 2001 Linux Timeline
Everyone's Favorite Linux Mascot
Linux Timeline
History of Linux
Upgrade to 2.6 kernel
The Wonderful World of Linux 2.6; Joseph Pranevich; December 2003
Understanding the Linux 2.6.8.1 CPU Scheduler; Josh Aas, 17 February 2005
LinuxChanges
Seminar Paper on Linux Kernel 2.6
Linux Device Drivers, 3rd Edition
Understanding the Linux Kernel, 3rd Edition (Book)
Linux: The GPL And Binary Modules
Anatomy of the Linux kernel



External links

Linux Kernel Archives, the official kernel repository
Kernel Newbies Site - Excellent source of information for people new to kernel
Linus' kernel tree for 2.6
An article about kernel memory management internals




Wikibooks has a book on the topic of
Linux kernel






Wikibooks has a book on the topic of
Inside Linux Kernel






Wikimedia Commons has media related to: Linux kernel









v • d • e

The Linux operating system





General

Adoption · Comparison of Windows and Linux · Criticism · GNU Project · History · Free Software Foundation · Linux Foundation · Kernel (portability) · Linus's Law · GNU/Linux naming controversy · Tux · GNU General Public License · GNU packages






Linux
portal









Distribution

Distribution (comparison) · Live CD · Live USB · Mini Linux · Package formats






Applications

Desktop · Devices · Embedded · Gaming · LAMP · Thin client






People

Jono Bacon · Alan Cox · Jon 'Mad Dog' Hall · Benjamin Mako Hill · Ari Lemmke · Andrew Morton · Ian Murdock · Hans Reiser · Scott James Remnant · Daniel Robbins · Mark Shuttleworth · Richard Stallman · Linus Torvalds · Theodore Ts'o · Patrick Volkerding · Matt Zimmerman






Media

Free Software Magazine · Linux.com · Linux Format · Linux Gazette · Linux Journal · Linux-Magazin · Linux Magazine · LWN.net · O3 Magazine · Phoronix · LugRadio · Linux Outlaws






Lists

Devices · Distributions · Live CDs






Mobile

Access Linux Platform · Android · LiMo Foundation · LiMo Platform · Linux Phone Standards Forum · Mobilinux · Moblin project · Open Handset Alliance · Openmoko · palm webOS · Ubuntu Mobile






Other topics

Linux malware · Linux User Group (LUG) · Linux Standard Base · Revolution OS · SCO and Linux · Tanenbaum–Torvalds debate









Retrieved from "http://en.wikipedia.org/wiki/Linux_kernel"
Categories: 1991 software | Free system software | Free software programmed in C | Linux kernel | Monolithic kernels | Computing timelines | LinuxHidden categories: All articles with unsourced statements | Articles with unsourced statements since January 2009 | Articles containing potentially dated statements from November 2008 | All articles containing potentially dated statements 






Views


Article
Discussion
View source
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


العربية
Català
Česky
Deutsch
Español
فارسی
Français
Ilokano
Bahasa Indonesia
Italiano
עברית
Kaszëbsczi
Lietuvių
Magyar
Bahasa Melayu
Nederlands
日本語
‪Norsk (bokmål)‬
‪Norsk (nynorsk)‬
Polski
Português
Română
Русский
Sicilianu
Slovenčina
Suomi
Svenska
தமிழ்
ไทย
Tiếng Việt
Türkçe
Українська
中文









 This page was last modified on 27 March 2009, at 03:05.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
