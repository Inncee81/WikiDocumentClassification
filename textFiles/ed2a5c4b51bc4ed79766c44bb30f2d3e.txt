













Web Services Description Language - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Web_Services_Description_Language";
		var wgTitle = "Web Services Description Language";
		var wgAction = "view";
		var wgArticleId = "4030790";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 272359215;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
/*<![CDATA[*/
.source-xml {line-height: normal;}
.source-xml li, .source-xml pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for xml
 * CSS class: source-xml, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-xml .de1, .source-xml .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-xml  {}
.source-xml .head {}
.source-xml .foot {}
.source-xml .imp {font-weight: bold; color: red;}
.source-xml .ln-xtra {color: #cc0; background-color: #ffc;}
.source-xml li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-xml li.li2 {font-weight: bold;}
.source-xml .coMULTI {color: #808080; font-style: italic;}
.source-xml .es0 {color: #000099; font-weight: bold;}
.source-xml .br0 {color: #66cc66;}
.source-xml .st0 {color: #ff0000;}
.source-xml .nu0 {color: #cc66cc;}
.source-xml .sc0 {color: #00bbdd;}
.source-xml .sc1 {color: #ddbb00;}
.source-xml .sc2 {color: #339933;}
.source-xml .sc3 {color: #009900;}
.source-xml .re0 {color: #000066;}
.source-xml .re1 {font-weight: bold; color: black;}
.source-xml .re2 {font-weight: bold; color: black;}

/*]]>*/

/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
 <!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Web Services Description Language

From Wikipedia, the free encyclopedia

Jump to: navigation, search 

Web Services Description Language




Filename extension
.wsdl


Internet media type
application/wsdl+xml


Developed by
World Wide Web Consortium


Contained by
XML


Standard(s)
2.0 Recommendation


The Web Services Description Language (WSDL, pronounced 'wiz-d…ôl' or spelled out, 'W-S-D-L') is an XML-based language that provides a model for describing Web services.




Contents


1 Description
2 Objects in a 1.1 WSDL
3 Example WSDL file
4 History
5 References
6 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Description
The current version of the specification is 2.0; version 1.1 has not been endorsed by the W3C but version 2.0 is a W3C recommendation. [1] WSDL 1.2 was renamed WSDL 2.0 because of its substantial differences from WSDL 1.1. By accepting binding to all the HTTP request methods (not only GET and POST as in version 1.1) WSDL 2.0 specification offers better support for RESTful web services, and is much simpler to implement [2][3]. However support for this specification is still poor in software development kits for Web Services which often offer tools only for WSDL 1.1.




A representation of concepts defined by a WSDL 1.1 document.


The WSDL defines services as collections of network endpoints, or ports. The WSDL specification provides an XML format for documents for this purpose. The abstract definition of ports and messages are separated from their concrete use or instance, allowing the reuse of these definitions. A port is defined by associating a network address with a reusable binding, and a collection of ports define a service. Messages are abstract descriptions of the data being exchanged, and port types are abstract collections of supported operations. The concrete protocol and data format specifications for a particular port type constitutes a reusable binding, where the operations and messages are then bound to a concrete network protocol and message format. In this way, WSDL describes the public interface to the web service.
WSDL is often used in combination with SOAP and XML Schema to provide web services over the Internet. A client program connecting to a web service can read the WSDL to determine what functions are available on the server. Any special datatypes used are embedded in the WSDL file in the form of XML Schema. The client can then use SOAP to actually call one of the functions listed in the WSDL.
XLang is an extension of the WSDL such that "an XLANG service description is a WSDL service description with an extension element that describes the behavior of the service as a part of a business process" [1].
Resources or services are exposed using WSDL by both Web Services Interoperability (WS-I Basic Profile) and WSRF framework.

[edit] Objects in a 1.1 WSDL




The hierarchy of objects in a WSDL 1.1 document.


Service: The service can be thought of as a container for a set of system functions that have been exposed to the web based protocols.
Port: The port does nothing more than define the address or connection point to a web service. This typically is a represented by a simple http url string.
Binding: Specifies the port type, defines the soap binding style (RPC/Document) and transport (SOAP Protocol). The binding section also defines the operations.
Port Type: The <portType> element defines a web service, the operations that can be performed, and the messages that are used to perform the operation.
Operation: Each operation can be compared to a method or function call in a traditional programming language. Here the soap actions are defined and the way the message is encoded for example, "literal."
Message: Typically, a message corresponds to an operation. The message contains the information needed to perform the operation. Each message consist of one or more logical parts. Each part is associated with a message-typing attribute. The message name attribute provides a unique name among all messages. The part name attribute provides a unique name among all the parts of the enclosing message. Parts are a description of the logical content of a message. In RPC binding, a binding may reference the name of a part in order to specify binding-specific information about the part. A part may represent a parameter in the message, the bindings define the actual meaning of the part.
Element: Elements are defined with in the <types> tag. An element consists of a unique name, and data type. The purpose of a an element WSDL is to describe the data and define the tag which delimits the data sent in the message parameters. Elements can be simple types such as strings or integers. Simple Types can have enumerations (lists of acceptable values) or restrictions defined (length not to exceed 10 characters). In addition, elements can have complex types. Complex types can nest other elements with in them.
XSD Files: Elements are often defined in an XML Schema Definition (XSD) file. The XSD can be in the same WSDL file or in a separate file. The XSD is imported to the WSDL through the use of the wsdl import tag with a reference to the namespace of the XSD document. When an XSD refers to elements defined in another XSD file, the external XSD namespace must be imported into the XSD referencing the element. If the XSD is not defined directly in the WSDL, the namespace specifies the location of the XSD file in URL syntax.

[edit] Example WSDL file
Here is an example of a structured WSDL 2.0 document:


<?xml version="1.0" encoding="UTF-8"?>
<description xmlns="http://www.w3.org/ns/wsdl" 
             xmlns:tns="http://www.example.com/wsdl20sample" 
             xmlns:whttp="http://www.w3.org/ns/wsdl/http"
             xmlns:wsoap="http://www.w3.org/ns/wsdl/soap"
 
             targetNamespace="http://www.example.com/wsdl20sample">
 
 
<!-- Abstract types -->
   <types>
      <xs:schema xmlns="http://www.example.com/wsdl20sample"
                 xmlns:xs="http://www.w3.org/2001/XMLSchema" 
                 targetNamespace="http://www.example.com/wsdl20sample">
 
         <xs:element name="request">
            <xs:complexType>
               <xs:sequence>
                  <xs:element name="header" maxOccurs="unbounded">
                     <xs:complexType>
                        <xs:simpleContent>
                           <xs:extension base="xs:string">
                              <xs:attribute name="name" type="xs:string" use="required"/>
                           </xs:extension>
                        </xs:simpleContent>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="body" type="xs:anyType" minOccurs="0"/>
               </xs:sequence>
               <xs:attribute name="method" type="xs:string" use="required"/>
               <xs:attribute name="uri" type="xs:anyURI" use="required"/>
            </xs:complexType>
         </xs:element>
 
         <xs:element name="response">
            <xs:complexType>
               <xs:sequence>
                  <xs:element name="header" maxOccurs="unbounded">
                     <xs:complexType>
                        <xs:simpleContent>
                           <xs:extension base="xs:string">
                              <xs:attribute name="name" type="xs:string" use="required"/>
                           </xs:extension>
                        </xs:simpleContent>
                     </xs:complexType>
                  </xs:element>
                  <xs:element name="body" type="xs:anyType" minOccurs="0"/>
               </xs:sequence>
               <xs:attribute name="status-code" type="xs:anySimpleType" use="required"/>
               <xs:attribute name="response-phrase" use="required"/>
            </xs:complexType>
         </xs:element>
      </xs:schema>
   </types>
 
 
<!-- Abstract interfaces -->
   <interface name="RESTfulInterface">
      <fault name="ClientError" element="tns:response"/>
      <fault name="ServerError" element="tns:response"/>
      <fault name="Redirection" element="tns:response"/>
      <operation name="Get" pattern="http://www.w3.org/ns/wsdl/in-out">
         <input messageLabel="GetMsg" element="tns:request"/>
         <output messageLabel="SuccessfulMsg" element="tns:response"/>
      </operation>
      <operation name="Post" pattern="http://www.w3.org/ns/wsdl/in-out">
         <input messageLabel="PostMsg" element="tns:request"/>
         <output messageLabel="SuccessfulMsg" element="tns:response"/>
      </operation>
      <operation name="Put" pattern="http://www.w3.org/ns/wsdl/in-out">
         <input messageLabel="PutMsg" element="tns:request"/>
         <output messageLabel="SuccessfulMsg" element="tns:response"/>
      </operation>
      <operation name="Delete" pattern="http://www.w3.org/ns/wsdl/in-out">
         <input messageLabel="DeleteMsg" element="tns:request"/>
         <output messageLabel="SuccessfulMsg" element="tns:response"/>
      </operation>
   </interface>
 
 
 
<!-- Concrete Binding Over HTTP -->
   <binding name="RESTfulInterfaceHttpBinding" interface="tns:RESTfulInterface" 
            type="http://www.w3.org/ns/wsdl/http">
      <operation ref="tns:Get" whttp:method="GET"/>
      <operation ref="tns:Post" whttp:method="POST" 
                 whttp:inputSerialization="application/x-www-form-urlencoded"/>
      <operation ref="tns:Put" whttp:method="PUT" 
                 whttp:inputSerialization="application/x-www-form-urlencoded"/>
      <operation ref="tns:Delete" whttp:method="DELETE"/>
   </binding>
 
<!-- Concrete Binding with SOAP-->
   <binding name="RESTfulInterfaceSoapBinding" interface="tns:RESTfulInterface" 
            type="http://www.w3.org/ns/wsdl/soap" 
            wsoap:protocol="http://www.w3.org/2003/05/soap/bindings/HTTP/"
            wsoap:mepDefault="http://www.w3.org/2003/05/soap/mep/request-response">
      <operation ref="tns:Get" />
      <operation ref="tns:Post" />
      <operation ref="tns:Put" />
      <operation ref="tns:Delete" />
   </binding>
 
 
<!-- Web Service offering endpoints for both the bindings-->
   <service name="RESTfulService" interface="tns:RESTfulInterface">
      <endpoint name="RESTfulServiceHttpEndpoint" 
                binding="tns:RESTfulInterfaceHttpBinding" 
                address="http://www.example.com/rest/"/>
      <endpoint name="RESTfulServiceSoapEndpoint" 
                binding="tns:RESTfulInterfaceSoapBinding" 
                address="http://www.example.com/soap/"/>
   </service>
</description>


[edit] History
WSDL 1.0 (Sept. 2000) has been developed by IBM, Microsoft and Ariba to describe Web Services for their SOAP toolkit.
WSDL 1.1, published on March 2001, is the formalization of WSDL 1.0. No major changes were introduced between 1.0 and 1.1.
WSDL 1.2 (June 2003) is still a working draft at W3C. According to W3C: WSDL 1.2 is easier and more flexible for developers than the previous version. WSDL 1.2 attempts to remove non-interoperable features and also defined the better HTTP 1.1 binding. WSDL 1.2 was not supported by most of the SOAP servers/vendors.
WSDL 2.0 became a W3C recommendation on June 2007. WSDL 1.2 was renamed to WSDL 2.0 because it has substantial differences from WSDL 1.1. The changes are:

Adding further semantics to the description language
Removal of message constructs
No support for operator overloading
PortTypes renamed to interfaces
Ports renamed to endpoints.


[edit] References


^ "Web Services Description Language (WSDL) Version 2.0 Part 1: Core Language". http://www.w3.org/TR/wsdl20/. Retrieved on 2007-06-27.¬†
^ "Web Services Description Language (WSDL) Version 2.0 Part 2: Adjuncts". http://www.w3.org/TR/2007/REC-wsdl20-adjuncts-20070626/#_http_binding_default_rule_method.¬†
^ "WITW WSDL 2.0 HTTP Binding". http://www.pacificspirit.com/blog/2005/05/16/witw_wsdl_20_http_binding.¬†



[edit] External links

WSDL 1.1 Specification
WSDL 2.0 Specification Part 0: Primer (Latest Version)
WSDL 2.0 Specification Part 1: Core (Latest Version)
WSDL 2.0 Specification Part 2: Adjuncts (Latest Version)
Web Services Description Working Group
XML protocol activity
JSR-110: Java APIs for WSDL
JSR 172: Java ME Web Services Specification
Online WSDL Validator
W3Schools WSDL tutorial
WSDL programmatic visualization with Linguine Maps
SSDL - The SOAP Service Description Language
Google Search WSDL example
WSDL Java Bindings for XMLBeans and JAXB.









v¬†‚Ä¢¬†d¬†‚Ä¢¬†e

Standards of the World Wide Web Consortium





Recommendations

Canonical XML¬†¬∑ CDF¬†¬∑ CSS¬†¬∑ DOM¬†¬∑ HTML¬†¬∑ MathML¬†¬∑ OWL¬†¬∑ P3P¬†¬∑ PLS¬†¬∑ RDF¬†¬∑ RDF Schema¬†¬∑ SISR¬†¬∑ SMIL¬†¬∑ SOAP¬†¬∑ SRGS¬†¬∑ SSML¬†¬∑ SVG¬†¬∑ SPARQL¬†¬∑ Timed Text¬†¬∑ VoiceXML¬†¬∑ WSDL¬†¬∑ XForms¬†¬∑ XHTML¬†¬∑ XLink¬†¬∑ XML¬†¬∑ XML Base¬†¬∑ XML Encryption¬†¬∑ XML Events¬†¬∑ XML Information Set¬†¬∑ XML Schema¬†¬∑ XML Signature¬†¬∑ XPath¬†¬∑ XPointer¬†¬∑ XQuery¬†¬∑ XSL¬†¬∑ XSL-FO¬†¬∑ XSLT






Notes

XAdES¬†¬∑ XHTML+SMIL






Working Drafts

CCXML¬†¬∑ CURIE¬†¬∑ HTML 5¬†¬∑ InkML¬†¬∑ WICD¬†¬∑ XFDL¬†¬∑ XFrames¬†¬∑ XBL¬†¬∑ XHTML+MathML+SVG¬†¬∑ XProc ¬†¬∑ OWL 2






Guidelines

Web Content Accessibility Guidelines






deprecated

HDML¬†¬∑ JSSS¬†¬∑ PGML¬†¬∑ VML









Retrieved from "http://en.wikipedia.org/wiki/Web_Services_Description_Language"
Categories: XML-based standards | Web service specifications | Web services | World Wide Web Consortium standards 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




¬†
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


–ë—ä–ª–≥–∞—Ä—Å–∫–∏
Catal√†
ƒåesky
Deutsch
Espa√±ol
ŸÅÿßÿ±ÿ≥€å
Fran√ßais
ÌïúÍµ≠Ïñ¥
Bahasa Indonesia
√çslenska
Italiano
◊¢◊ë◊®◊ô◊™
Magyar
Nederlands
Êó•Êú¨Ë™û
‚Ä™Norsk (bokm√•l)‚Ä¨
Polski
Portugu√™s
Rom√¢nƒÉ
–†—É—Å—Å–∫–∏–π
Slovenƒçina
Svenska
–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞
‰∏≠Êñá









 This page was last modified on 21 February 2009, at 22:28 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia¬Æ is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
