













log4j - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Log4j";
		var wgTitle = "Log4j";
		var wgAction = "view";
		var wgArticleId = "3291868";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 279600729;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
/*<![CDATA[*/
.source-xml {line-height: normal;}
.source-xml li, .source-xml pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for xml
 * CSS class: source-xml, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-xml .de1, .source-xml .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-xml  {}
.source-xml .head {}
.source-xml .foot {}
.source-xml .imp {font-weight: bold; color: red;}
.source-xml .ln-xtra {color: #cc0; background-color: #ffc;}
.source-xml li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-xml li.li2 {font-weight: bold;}
.source-xml .coMULTI {color: #808080; font-style: italic;}
.source-xml .es0 {color: #000099; font-weight: bold;}
.source-xml .br0 {color: #66cc66;}
.source-xml .st0 {color: #ff0000;}
.source-xml .nu0 {color: #cc66cc;}
.source-xml .sc0 {color: #00bbdd;}
.source-xml .sc1 {color: #ddbb00;}
.source-xml .sc2 {color: #339933;}
.source-xml .sc3 {color: #009900;}
.source-xml .re0 {color: #000066;}
.source-xml .re1 {font-weight: bold; color: black;}
.source-xml .re2 {font-weight: bold; color: black;}

/*]]>*/

/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
 <!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); log4j

From Wikipedia, the free encyclopedia

Jump to: navigation, search 

Apache log4j

Developed by
Apache Software Foundation


Latest release
1.2.15 / 2007-09-29; 552 days ago


Written in
Java


Operating system
Cross-platform


Type
Logging Tool


License
Apache License 2.0


Website
logging.apache.org/log4j


Apache log4j is a Java-based logging utility. It was originally written by Ceki Gülcü and is now a project of the Apache Software Foundation. log4j is one of several Java Logging Frameworks.
Ceki Gülcü has since started the SLF4J[1] and Logback projects, with the intention of offering a compatible successor to log4j.




Contents


1 Log Level
2 Configuration

2.1 Example


3 Log4j in application servers

3.1 Apache Tomcat


4 Log viewer
5 See also
6 External links

6.1 Ports







//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Log Level
The following table defines the log levels and messages in Log4j, in decreasing order of severity. The left column lists the log level designation in Log4j and the right column provides a brief description of each log level.


Level
Description


FATAL
Severe errors that cause premature termination. Expect these to be immediately visible on a status console.


ERROR
Other runtime errors or unexpected conditions. Expect these to be immediately visible on a status console.


WARN
Use of deprecated APIs, poor use of API, 'almost' errors, other runtime situations that are undesirable or unexpected, but not necessarily "wrong". Expect these to be immediately visible on a status console.


INFO
Interesting runtime events (startup/shutdown). Expect these to be immediately visible on a console, so be conservative and keep to a minimum.


DEBUG
Detailed information on the flow through the system. Expect these to be written to logs only.


TRACE
More detailed information. Expect these to be written to logs only.



[edit] Configuration
There are two ways to configure log4j. One is with a properties file and the other is with an XML file. Within either you can define 3 main components: Loggers, Appenders and Layouts. Configuring logging via a file has the advantage of turning logging on or off without modifying the application that uses log4j. The application can be allowed to run with logging off until there's a problem, for example, and then logging can be turned back on simply by modifying the configuration file.
Loggers are logical log file names. They are the names that are known to the Java application. Each logger is independently configurable as to what level of logging (FATAL, ERROR, etc) it currently logs. In early versions of log4j, these were called category and priority, but now they're called logger and level, respectively.
The actual outputs are done by Appenders. There are numerous Appenders available, with descriptive names, such as FileAppender, ConsoleAppender, SocketAppender, SyslogAppender, NTEventLogAppender and even SMTPAppender. Multiple Appenders can be attached to any Logger, so it's possible to log the same information to a file locally and to a socket listener on another computer, for example.
Appenders use Layouts to format log entries. A popular way to format one-line-at-a-time log files is PatternLayout, which uses a pattern string, much like the C / C++ function printf. There are also HTMLLayout and XMLLayout formatters for use when HTML or XML formats are more convenient, respectively.
To debug a misbehaving configuration use the Java VM Property -Dlog4j.debug which will output to standard out. To find out where a log4j.properties was loaded from inspect getClass().getResource("/log4j.properties").

[edit] Example


<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration PUBLIC
"http://logging.apache.org/log4j/docs/api/org/apache/log4j/xml/log4j.dtd">
<log4j:configuration>
    <!-- an appender is an output destination, such as e.g. the console or a file;
    names of appenders are arbitrarily chosen-->
    <appender name="stdout" class="org.apache.log4j.ConsoleAppender">
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern"
                value="%d{ABSOLUTE} %5p %c{1}:%L - %m%n" />
        </layout>
    </appender>
 
    <!-- loggers of category 'org.springframework' will only log messages of level info or higher;
    if you retrieve Loggers by using the class name (e.g. Logger.getLogger(AClass.class))
    and if AClass is part of the springframework.org package, it will belong to this category -->
    <logger name="org.springframework">
        <level value="info"/>
    </logger>
 
    <!-- everything of spring was set to info but for class PropertyEditorRegistrySupport we do want
debug logging -->
    <logger name="org.springframework.beans.PropertyEditorRegistrySupport">
        <level value="debug"/>
    </logger>
 
    <logger name="org.acegisecurity">
        <level value="info"/>
    </logger>
 
    <root><!-- the root category -->
        <!-- all log messages of level debug or more serious will be logged, unless defined otherwise -->
        <!-- all log messages will be logged to the appender 'stdout', unless defined otherwise -->
        <level value="debug" />
        <appender-ref ref="stdout" />
    </root>
</log4j:configuration>



[edit] Log4j in application servers

[edit] Apache Tomcat





This section is written like a manual or guidebook. Please help rewrite this section from a neutral point of view. (January 2009)


To activate logging on a Tomcat 5.5 server, perform the following steps:

Shut the server down if it is running.
Place a log4j jar file in $CATALINA_HOME/common/lib
Place a commons-logging jar file in $CATALINA_HOME/common/lib (the actual name of this jar does not matter)
Place a log4j configuration file in $CATALINA_HOME/common/classes
Start the server

Jar files placed in $CATALINA_HOME/common/lib are made visible to both Tomcat internal classes and to all web applications. By placing the two logging jar files there, the logging from within Tomcat's code can be made visible.

[edit] Log viewer
Apache has another project named Chainsaw which was intended to use log4j generated log files. Chainsaw is a java-based GUI viewer with a lot of functionality. Chainsaw also uses similar configuration file as log4j. Other log viewing tools can be used with log4j too, for example log2web, which is open source and web-based, but has fewer features than Chainsaw. Another .NET based viewer with lots of functionality is Log4View, which is a commercial product but also offers a free Community Edition. Log4J log file contain semi structured information about application problems, in some cases you would run log analysis on the logs in order to detect bugs, errors and generate statistics.

[edit] See also




Free software portal




SLF4J
Chainsaw
log4eclipse


[edit] External links

Short introduction to log4j
Official log4j Homepage
Log4View
Log Viewer: a commercial, log4j log viewer and log monitor
log4j Javadocs
Setting up a log4j Socket Server to Email You Errors From Your Java Programs
Simple real-time log4j demonstration


[edit] Ports

log5j - A 'modern' log4j that supports printf and has additional performance features.
dlib C++ library Homepage - A port for C++
Log4cxx Homepage - Apache port for C++
Log4cplus Homepage - Another port for C++ (outdated)
Log4cpp Homepage - Yet another port for C++ (outdated)
Log4plsql HomePage - A port to the Oracle PL/SQL
Log4c - A port for C
Log4perl - A port for Perl
log4js - A port for JavaScript
log4javascript - Another port for JavaScript
logging - The official logging module for Python inspired by log4j.
Log4r - Ruby logging module inspired by log4j
Log4net - A port to the Microsoft .NET Framework
log4php a port for PHP
logback a purported successor to log4j, designed by log4j's founder
log4sh a port for various Unix shells including sh, bash, dash and ksh
Log4Cocoa - A Port for Cocoa
Log4D - A Port for Delphi
Microlog - A logging framework for Java ME and Android inspired by Log4j.








v • d • e

Apache Software Foundation





Top level projects

ActiveMQ · Ant · Apache HTTP Server · APR · Beehive · Buildr · Camel · Cayenne · Cocoon · Commons · CouchDB · CXF · Derby · Directory · Excalibur · Felix · Forrest · Geronimo · Gump · Hadoop · Harmony · HiveMind · iBATIS · Jackrabbit · James · Lenya · Maven · mod_perl · MyFaces · OFBiz · OpenEJB · OpenJPA · POI · Roller · Shale · SpamAssassin · stdcxx · Struts · Tapestry · Tomcat · Tuscany · Velocity · Wicket · XMLBeans






Other projects

Jakarta Project · Apache Lucene · Apache XML · Apache Incubator






Sub-projects

BCEL · BSF · Cactus · Chainsaw · JMeter · Slide · Xerces · Batik · FOP · Log4j · XAP · River · ServiceMix · Log4Net · Abdera · Ivy · ODE · JSPWiki






License: Apache License · Website: http://apache.org/








Retrieved from "http://en.wikipedia.org/wiki/Log4j"
Categories: Apache Software Foundation | Free software programmed in JavaHidden categories: Wikipedia articles needing style editing from January 2009 | All articles needing style editing 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Català
Deutsch
Español
한국어
日本語
Polski
Português
Русский









 This page was last modified on 25 March 2009, at 15:43.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
