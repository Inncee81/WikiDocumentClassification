













COMEFROM - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "COMEFROM";
		var wgTitle = "COMEFROM";
		var wgAction = "view";
		var wgArticleId = "994284";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 283267681;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
/*<![CDATA[*/
.source-qbasic {line-height: normal;}
.source-qbasic li, .source-qbasic pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for qbasic
 * CSS class: source-qbasic, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-qbasic .de1, .source-qbasic .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-qbasic  {}
.source-qbasic .head {}
.source-qbasic .foot {}
.source-qbasic .imp {font-weight: bold; color: red;}
.source-qbasic .ln-xtra {color: #cc0; background-color: #ffc;}
.source-qbasic li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-qbasic li.li2 {font-weight: bold;}
.source-qbasic .kw1 {color: #a1a100;}
.source-qbasic .kw3 {color: #000066;}
.source-qbasic .co1 {color: #808080;}
.source-qbasic .co2 {color: #808080;}
.source-qbasic .co3 {color: #808080;}
.source-qbasic .es0 {color: #000099;}
.source-qbasic .br0 {color: #66cc66;}
.source-qbasic .st0 {color: #ff0000;}
.source-qbasic .nu0 {color: #cc66cc;}

/*]]>*/

/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
/*<![CDATA[*/
.source-python {line-height: normal;}
.source-python li, .source-python pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for python
 * CSS class: source-python, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-python .de1, .source-python .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-python  {}
.source-python .head {}
.source-python .foot {}
.source-python .imp {font-weight: bold; color: red;}
.source-python .ln-xtra {color: #cc0; background-color: #ffc;}
.source-python li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-python li.li2 {font-weight: bold;}
.source-python .kw1 {color: #ff7700;font-weight:bold;}
.source-python .kw2 {color: #008000;}
.source-python .kw3 {color: #dc143c;}
.source-python .kw4 {color: #0000cd;}
.source-python .co1 {color: #808080; font-style: italic;}
.source-python .coMULTI {color: #808080; font-style: italic;}
.source-python .es0 {color: #000099; font-weight: bold;}
.source-python .br0 {color: #66cc66;}
.source-python .st0 {color: #483d8b;}
.source-python .nu0 {color: #ff4500;}
.source-python .me1 {color: black;}

/*]]>*/

/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
/*<![CDATA[*/
.source-ruby {line-height: normal;}
.source-ruby li, .source-ruby pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for ruby
 * CSS class: source-ruby, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-ruby .de1, .source-ruby .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-ruby  {}
.source-ruby .head {}
.source-ruby .foot {}
.source-ruby .imp {font-weight: bold; color: red;}
.source-ruby .ln-xtra {color: #cc0; background-color: #ffc;}
.source-ruby li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-ruby li.li2 {font-weight: bold;}
.source-ruby .kw1 {color:#9966CC; font-weight:bold;}
.source-ruby .kw2 {color:#0000FF; font-weight:bold;}
.source-ruby .kw3 {color:#CC0066; font-weight:bold;}
.source-ruby .kw4 {color:#CC00FF; font-weight:bold;}
.source-ruby .co1 {color:#008000; font-style:italic;}
.source-ruby .coMULTI {color:#000080; font-style:italic;}
.source-ruby .es0 {color:#000099;}
.source-ruby .br0 {color:#006600; font-weight:bold;}
.source-ruby .st0 {color:#996600;}
.source-ruby .nu0 {color:#006666;}
.source-ruby .me1 {color:#9900CC;}
.source-ruby .sc0 {}
.source-ruby .sc1 {}
.source-ruby .sc2 {}
.source-ruby .re0 {color:#ff6633; font-weight:bold;}
.source-ruby .re1 {color:#0066ff; font-weight:bold;}
.source-ruby .re2 {color:#6666ff; font-weight:bold;}
.source-ruby .re3 {color:#ff3333; font-weight:bold;}

/*]]>*/

/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
/*<![CDATA[*/
.source-fortran {line-height: normal;}
.source-fortran li, .source-fortran pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for fortran
 * CSS class: source-fortran, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-fortran .de1, .source-fortran .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-fortran  {}
.source-fortran .head {}
.source-fortran .foot {}
.source-fortran .imp {font-weight: bold; color: red;}
.source-fortran .ln-xtra {color: #cc0; background-color: #ffc;}
.source-fortran li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-fortran li.li2 {font-weight: bold;}
.source-fortran .kw1 {color: #b1b100;}
.source-fortran .kw2 {color: #000000; font-weight: bold;}
.source-fortran .kw3 {color: #000066;}
.source-fortran .kw4 {color: #993333;}
.source-fortran .co1 {color: #808080; font-style: italic;}
.source-fortran .co2 {color: #339933;}
.source-fortran .coMULTI {color: #808080; font-style: italic;}
.source-fortran .es0 {color: #000099; font-weight: bold;}
.source-fortran .br0 {color: #66cc66;}
.source-fortran .st0 {color: #ff0000;}
.source-fortran .nu0 {color: #cc66cc;}
.source-fortran .me1 {color: #202020;}
.source-fortran .me2 {color: #202020;}

/*]]>*/

/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
 <!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); COMEFROM

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
In computer programming, COMEFROM (or COME FROM) is an obscure control flow structure used in some programming languages, primarily as a joke.
COMEFROM is roughly the opposite of GOTO in that it can take the execution state from any arbitrary point in code to a COMEFROM statement. The point in code where the state transfer happens is usually given as a parameter to COMEFROM. Whether the transfer happens before or after the instruction at the specified transfer point depends on the language used. Depending on the language used, multiple COMEFROMs referencing the same departure point may be invalid, be non-deterministic, be executed in some sort of defined priority, or even induce parallel or otherwise concurrent execution as seen in Threaded Intercal.
A simple example of a "COMEFROM x" statement is a label x (which does not need to be physically located anywhere near its corresponding COMEFROM) that acts as a "trap door". When code execution reaches the label, control gets passed to the statement following the COMEFROM. The effect of this is primarily to make debugging (and understanding the control flow of the program) extremely difficult, since there is no indication near the label that control will mysteriously jump to another point of the program.




Contents


1 History
2 Practical uses

2.1 Examples


3 Hardware implementation
4 See also
5 References
6 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] History
COMEFROM was initially seen in lists of joke assembly language instructions (as 'CMFRM'). It was elaborated upon in a Datamation article by R. Lawrence Clark in 1973, [1] written in response to Edsger Dijkstra's letter Go To Statement Considered Harmful. COMEFROM was eventually implemented in the C-INTERCAL variant of the esoteric programming language INTERCAL along with the even more obscure 'computed COMEFROM'. There were also Fortran proposals for 'assigned COME FROM' and a 'DONT' keyword (to complement the existing 'DO' loop).
On 1 April 2004, Richie Hindle published an implementation of both GOTO and COMEFROM for the Python programming language.[2] In spite of being released on April Fools' Day, the syntax is valid and the implementation fully working (just not intended for serious use).

[edit] Practical uses
Although COMEFROM is syntactically and semantically valid, and capable of replacing GOTO in some programs, it is considerably more difficult to visualise in program design and actually implement in a programming language. The most practical known use of a COMEFROM-like structure is as a breakpoint during debugging. One implementation of FORTRAN included it, under the name "AT", as a debugging aid, with dire warnings against using it in production code. In addition, many modern CPUs have hardware support for breakpoints.
Some elements of aspect-oriented programming have been compared to the COMEFROM statement.[3]
In compilers using SSA, a phi node is essentially similar to a come from statement. It lists which basic blocks the current basic block could have been reached from and the associated value to use if it did.

[edit] Examples
The following is an example of a program in a hypothetical BASIC dialect with "COMEFROM" instead of "GOTO". An actual example in INTERCAL would be too difficult to read.


10 COMEFROM 40
20 INPUT "WHAT IS YOUR NAME? "; A$
30 PRINT "HELLO, "; A$
40 REM

The program (hypothetically) works by asking the user for their name, then greeting them with the same name, and continuing all over again. The instruction "REM" on line 40 is simply a NOP — the "COMEFROM" statement on line 10 causes a branch back to that line when execution reaches line 40, regardless of its contents.
A fully runnable example in Python with the joke goto module installed (which uses debugger hooks to control program execution) looks like this:


from goto import comefrom, label
comefrom .repeat
name = raw_input('what is your name? ')
if name:
    print "Hello",name
    label .repeat
print "Goodbye!"



#
# Ruby implementation of the Intercal COME FROM statement
#
 
$come_from_labels = {}
 
def label(l)
    if $come_from_labels[l]
        $come_from_labels[l].call
    end
end
 
def come_from(l)
    callcc do |block|
        $come_from_labels[l] = block
    end
end

Some examples of the debug packet feature of the OS/360 Fortran G compiler:[4]


Example 1:
 
      INTEGER SOLON, GEAR, EWELL
         .
         .
         .
10    SOLON = GFAR * SQRT(FLOAT(EWELL))
11    IF (SOLON) 40, 50, 60
         .
         .
         .
      DEBUG UNIT(3)
      AT 11
      DISPLAY GFAR, SOLON, EWELL
      END
 
Example 2:
 
      DIMENSION STOCK(1000),OUT(1000)
         .
         .
         .
      DO 30 I=1, 1000
25    STOCK(I)=STOCK(I) - OUT(I)
30    CONTINUE
35    A = B + C
         .
         .
         .
      DEBUG UNIT(3)
      AT 35
      DISPLAY STOCK
      END
 
Example 3:
 
10    A = 1.5
12    L = 1
15    B = A + 1.5
20    DO 22 I = 1,5
         .
         .
         .
22    CONTINUE
25    C = B + 3.16
30    D = C/2
      STOP
         .
         .
         .
      DEBUG UNIT(3), TRACE
C     DEBUG PACKET NUMBER 1
      AT 10
      TRACE ON
C     DEBUG PACKET NUMBER 2
      AT 20
      TRACE OFF
      DO 35 I = 1,3
         .
         .
         .
35    CONTINUE
      TRACE ON
C     DEBUG PACKET NUMBER 3
      AT 30
      TRACE OFF
      END

In example 1, the values of SOLON, GEAR, and EWELL are examined as they were at the completion of statement 10. The AT statement indicates statement 11.
In example 2, all the values of STOCK are displayed when statement 35 is encountered.
In example 3, tracing begins at statement 10, at statement 20, tracing stops while the loop is executed, and resumes after the loop. Tracing stops just before statement 30 is executed.

[edit] Hardware implementation
The SHARC DSP supports a DO..UNTIL instruction, intended for do..while loops, that is essentially a COMEFROM. Example:

    LCNTR=42;
    DO x UNTIL LCE;  /* COMEFROM x, unless the loop counter is zero */
    F12=F0*F4, F8=F8+F12, F0=dm(I0,M3), F4=pm(I8,M9);
    IF NZ dm(I2,M2) = F12;
    IF ZF dm(I2,M2) = F1;
x:  R2 = R3 + 76;   /* the label "x" does not exist in the machine code */

Note that the loop termination condition, here specified as LCE (loop counter expired), can be set to other values including always-true and always-false. With an always-true condition, we have a genuine COMEFROM. The hardware supports up to six simultaneously active COMEFROMs.
A similar feature exists in Microchip dsPIC's for (unnested) loops provided by the 'DO' assembly instruction. It's interruptible and trivial nesting goes up to one level with an additional 5 levels in software.

[edit] See also

F. X. Reid, an expert on the semantics of COMEFROM.[5]
Action at a distance.


[edit] References


^ Clarke's Datamation Article
^ goto for Python - Richie Hindle (1 April 2004)
^ C2:ComeFrom
^ IBM System/360 and System/370 Fortran IV Language, GC28-6515-10, May 1974
^ F. X. Reid, On the Formal Semantics of the COMEFROM Statement. FACS FACTS, Issue 2006-1, pages 18–20, March 2006.



[edit] External links

COMEFROM Information Page
Datamation Article
Joke Assembler Instruction List Including CMFRM
comefrom support for Perl




Retrieved from "http://en.wikipedia.org/wiki/COMEFROM"
Categories: Computer humor | Control flow 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Polski









 This page was last modified on 11 April 2009, at 23:32 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
