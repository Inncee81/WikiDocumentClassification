













BitTorrent (protocol) - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "BitTorrent_(protocol)";
		var wgTitle = "BitTorrent (protocol)";
		var wgAction = "view";
		var wgArticleId = "239098";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281321714;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); BitTorrent (protocol)

From Wikipedia, the free encyclopedia

Jump to: navigation, search 





This article may require cleanup to meet Wikipedia's quality standards. Please improve this article if you can. (March 2009)






The BitTorrent logo


BitTorrent is a peer-to-peer file sharing protocol used for distributing large amounts of data. BitTorrent is one of the most common protocols for transferring large files, and by some estimates it accounts for about 35% of all traffic on the entire Internet.[1]
The protocol works initially when a file provider makes his file (or group of files) available to the network. This is called a seed and allows others, named peers, to connect and download the file. Each peer who downloads a part of the data makes it available to other peers to download. After the file is successfully downloaded by a peer, many continue to make the data available, becoming additional seeds. This distributed nature of BitTorrent leads to a viral spreading of a file throughout peers. As more seeds get added, the likelihood of a successful connection increases exponentially. Relative to standard Internet hosting, this provides a significant reduction in the original distributor's hardware and bandwidth resource costs. It also provides redundancy against system problems and reduces dependence on the original distributor.
Programmer Bram Cohen designed the protocol in April 2001 and released a first implementation on July 2, 2001.[2] It is now maintained by Cohen's company BitTorrent, Inc. There are numerous BitTorrent clients available for a variety of computing platforms. According to isoHunt, the total amount of shared content is currently more than 1.1 petabytes.[3]




Contents


1 Operation

1.1 Creating and publishing torrents
1.2 Downloading torrents and sharing files


2 Adoption

2.1 Film, video and music
2.2 Broadcasters
2.3 Personal material
2.4 Software


3 Network impact
4 Indexing
5 Limitations and security vulnerabilities

5.1 Lack of anonymity
5.2 The leech problem
5.3 The cheater problem


6 Technologies built on BitTorrent

6.1 Distributed trackers
6.2 Web seeding
6.3 RSS feeds
6.4 Encryption
6.5 Multitracker
6.6 Decentralized keyword search
6.7 GIT-Torrent
6.8 Sandvine TCP/IP hangup exploit


7 Implementations
8 Development
9 Legal issues
10 See also
11 References
12 Further reading
13 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Operation




In this animation, the coloured bars beneath all of the 7 clients in the upper region above represent individual pieces of the file. After the initial pieces transfer from the seed (large system at the bottom), the pieces are individually transferred from client to client. The original seeder only needs to send out one copy of the file for all the clients to receive a copy.


A BitTorrent client is any program that implements the BitTorrent protocol. Each client is capable of preparing, requesting, and transmitting any type of computer file over a network, using the protocol. A peer is any computer running an instance of a client.
To share a file or group of files, a peer first creates a small file called a "torrent" (e.g. MyFile.torrent). This file contains metadata about the files to be shared and about the tracker, the computer that coordinates the file distribution. Peers that want to download the file must first obtain a torrent file for it, and connect to the specified tracker, which tells them from which other peers to download the pieces of the file.
Though both ultimately transfer files over a network, a BitTorrent download differs from a classic full-file HTTP request in several fundamental ways:

BitTorrent makes many small data requests over different TCP sockets, while web browsers typically make a single HTTP GET request over a single TCP socket.
BitTorrent downloads in a random or in a "rarest-first"[4] approach that ensures high availability, while HTTP downloads in a sequential manner.

Taken together, these differences allow BitTorrent to achieve much lower cost to the content provider, much higher redundancy, and much greater resistance to abuse or to "flash crowds" than a regular HTTP server. However, this protection comes at a cost: downloads can take time to rise to full speed because it may take time for enough peer connections to be established, and it takes time for a node to receive sufficient data to become an effective uploader. As such, a typical BitTorrent download will gradually rise to very high speeds, and then slowly fall back down toward the end of the download. This contrasts with an HTTP server that, while more vulnerable to overload and abuse, rises to full speed very quickly and maintains this speed throughout.
In general, BitTorrent's non-contiguous download methods have prevented it from supporting "progressive downloads" or "streaming playback". But comments made by Bram Cohen in January 2007 suggest that streaming torrent downloads will soon be commonplace and ad supported streaming appears to be the result of those comments.

[edit] Creating and publishing torrents
The peer distributing a data file treats the file as a number of identically sized pieces, typically between 64 KB and 4 MB each. The peer creates a checksum for each piece, using the SHA1 hashing algorithm, and records it in the torrent file. Pieces with sizes greater than 512 KB will reduce the size of a torrent file for a very large payload, but is claimed to reduce the efficiency of the protocol [1]. When another peer later receives a particular piece, the checksum of the piece is compared to the recorded checksum to test that the piece is error-free.[5] Peers that provide a complete file are called seeders, and the peer providing the initial copy is called the initial seeder.
The exact information contained in the torrent file depends on the version of the BitTorrent protocol. By convention, the name of a torrent file has the suffix .torrent. Torrent files have an "announce" section, which specifies the URL of the tracker, and an "info" section, containing (suggested) names for the files, their lengths, the piece length used, and a SHA-1 hash code for each piece, all of which is used by clients to verify the integrity of the data they receive.
Torrent files are typically published on websites or elsewhere, and registered with a tracker. The tracker maintains lists of the clients currently participating in the torrent.[5] Alternatively, in a trackerless system (decentralized tracking) every peer acts as a tracker. This is implemented by the BitTorrent, µTorrent, rTorrent, KTorrent, BitComet, and Deluge clients through the distributed hash table (DHT) method. Vuze also supports a trackerless method that is incompatible (as of April 2007) with the DHT offered by all other supporting clients although it did develop DHT first.

[edit] Downloading torrents and sharing files
Users browse the web to find a torrent of interest, download it, and open it with a BitTorrent client. The client connects to the tracker(s) specified in the torrent file, from which it receives a list of peers currently transferring pieces of the file(s) specified in the torrent. The client connects to those peers to obtain the various pieces. If the swarm contains only the initial seeder, the client connects directly to it and begins to request pieces.
Clients incorporate mechanisms to optimize their download and upload rates; for example they download pieces in a random order to increase the opportunity to exchange data, which is only possible if two peers have different pieces of the file.
The effectiveness of this data exchange depends largely on the policies that clients use to determine to whom to send data. Clients may prefer to send data to peers who send data back to them (a tit for tat scheme), which encourages fair trading. But strict policies often result in suboptimal situations, such as when newly joined peers are unable to receive any data because they don't have any pieces yet to trade themselves or when two peers with a good connection between them do not exchange data simply because neither of them wants to take the initiative. To counter these effects, the official BitTorrent client program uses a mechanism called “optimistic unchoking”, where the client reserves a portion of its available bandwidth for sending pieces to random peers (not necessarily known-good partners, so called preferred peers), in hopes of discovering even better partners and to ensure that newcomers get a chance to join the swarm.[6]

[edit] Adoption
A growing number of individuals and organizations are using BitTorrent to distribute their own or licensed material. Independent adopters report[7] that without using BitTorrent technology and its dramatically reduced demands on networking hardware and bandwidth, they could not afford to distribute their files.

[edit] Film, video and music

BitTorrent Inc. has amassed a number of licenses from Hollywood studios for distributing popular content at the company's website.
Sub Pop Records releases tracks and videos via BitTorrent Inc.[8] to distribute its 1000+ albums. The band Ween uses the website Browntracker.net[9] to distribute free audio and video recordings of live shows. Furthermore, Babyshambles and The Libertines (both bands associated with Pete Doherty) have extensively used torrents to distribute hundreds of demos and live videos.
Podcasting software is starting to integrate BitTorrent to help podcasters deal with the download demands of their MP3 "radio" programs. Specifically, Juice and Miro (formerly known as Democracy Player) support automatic processing of .torrent files from RSS feeds. Similarly, some BitTorrent clients, such as µTorrent, are able to process web feeds and automatically download content found within them.
DGM Live! purchases are provided via BitTorrent[10].


[edit] Broadcasters

In 2008, the CBC became the first public broadcaster in North America to make a full show (Canada's Next Great Prime Minister) available for download using BitTorrent.[11]
The Norwegian Broadcasting Corporation (NRK) has since March 2008 experimented with bittorrent distribution from this site. Only selected material in which NRK owns all royalties are published. Responses have been very positive, and NRK is planning to offer more content.


[edit] Personal material

The Amazon S3 "Simple Storage Service" is a scalable Internet-based storage service with a simple web service interface, equipped with built-in BitTorrent support.
Blog Torrent offers a simplified BitTorrent tracker to enable bloggers and non-technical users to host a tracker on their site. Blog Torrent also allows visitors to download a "stub" loader, which acts as a BitTorrent client to download the desired file, allowing users without BitTorrent software to use the protocol.[12] This is similar to the concept of a self-extracting archive.


[edit] Software

Blizzard Entertainment uses BitTorrent (via a proprietary client called the "Blizzard Downloader") to distribute most content for World of Warcraft, including the game itself.[13]
Many major open source and free software projects encourage BitTorrent as well as conventional downloads (HTTP, FTP...) of their products to increase availability and reduce load on their own servers, especially when dealing with larger files.


[edit] Network impact
CableLabs, the research organization of the North American cable industry, estimates that BitTorrent represents 18% of all broadband traffic.[14] In 2004, CacheLogic put that number at roughly 35% of all traffic on the Internet.[15] The discrepancies in these numbers are caused by differences in the method used to measure P2P traffic on the Internet.[16]
Routers that use NAT, Network address translation, must maintain tables of source and destination IP addresses and ports. Typical home routers are limited to about 2000 table entries while some more expensive routers have larger table capacities. BitTorrent frequently contacts 300-500 servers per second rapidly filling the NAT tables. This is a common cause of home routers locking up.[17]

[edit] Indexing
The BitTorrent protocol provides no way to index torrent files. As a result, a comparatively small number of websites have hosted the large majority of torrents linking to (possibly) copyrighted material, rendering those sites especially vulnerable to lawsuits. Several types of websites support the discovery and distribution of data on the BitTorrent network.
Public tracker sites such as The Pirate Bay allow users to search in and download from their collection of torrent files; they also run BitTorrent trackers for those files. Users can typically also upload torrent files for content they wish to distribute.
Private tracker sites such as Demonoid operate like public ones except that they restrict access to registered users and keep track of the amount of data each user uploads and downloads, in an attempt to reduce leeching.
There are specialized tracker sites such as FlixFlux for films, MVGroup for educational content, Metal-Torrents.com for metal music, cheggit.net for pornographic content, and tv torrents for television series. Often these will also be private.
Search engines allow the discovery of torrent files that are hosted and tracked on other sites; examples include Mininova, Monova, BTJunkie, Torrentz and isoHunt. These sites allow the user to ask for content meeting specific criteria (such as containing a given word or phrase) and retrieve a list of links to torrent files matching those criteria. This list is often sorted with respect to relevance or number of seeders. Bram Cohen launched a BitTorrent search engine on http://search.bittorrent.com that commingles licensed content with search results.[18] Metasearch engines allow to search several BitTorrent indices and search engines at once.

[edit] Limitations and security vulnerabilities

[edit] Lack of anonymity
BitTorrent does not offer its users anonymity. It is possible to obtain the IP addresses of all current, and possibly previous, participants in a swarm from the tracker. This may expose users with insecure systems to attacks.[6]

[edit] The leech problem
A BitTorrent user may often choose to leave the swarm as soon as they have a complete copy of the file they are downloading, freeing up their outbound bandwidth for other uses. If enough users follow this pattern, torrent swarms gradually die out, meaning a lower possibility of obtaining older torrents. Some BitTorrent websites have attempted to address this by recording each user's download and upload ratio for all or just the user to see, as well as the provision of access to newer torrent files to people with better ratios. Users who have low upload ratios may see slower download speeds until they upload more. This prevents (statistical) leeching, since after a while they become unable to download at even a fraction of the theoretical bandwidth of their connection. Some trackers exempt dial-up users from this policy, because their uploading capabilities are limited.

[edit] The cheater problem
There are "cheating" clients like BitThief which claim to be able to download without uploading. Such exploitation negatively affects the cooperative nature of the BitTorrent protocol, although it might prove useful for people in countries where uploading copyrighted material is illegal, but downloading is not.

[edit] Technologies built on BitTorrent
The BitTorrent protocol is still under development and therefore may still acquire new features and other enhancements such as improved efficiency.

[edit] Distributed trackers
In June 2005, BitTorrent, Inc. released version 4.2.0 of the Mainline BitTorrent client. This release supported "trackerless" torrents, featuring a DHT implementation which allowed the client to use torrents that do not have a working BitTorrent tracker. Current versions of the official BitTorrent client, µTorrent, BitComet, and BitSpirit all share a compatible DHT implementation that is based on Kademlia.[19] Vuze uses its own incompatible DHT system called the "distributed database", but a plugin is available which allows use of the mainline DHT.
Another idea that has surfaced in Vuze is that of virtual torrents. This idea is based on the distributed tracker approach and is used to describe some web resource. Currently, it is used for instant messaging. It is implemented using a special messaging protocol and requires an appropriate plugin. Anatomic P2P is another approach, which uses a decentralized network of nodes that route traffic to dynamic trackers.
Most BitTorrent clients also use Peer exchange (PEX) to gather peers in addition to trackers and DHT. Peer exchange checks with known peers to see if they know of any other peers. With the 3.0.5.0 release of Azureus, now known as Vuze, all major BitTorrent clients now have compatible peer exchange.

[edit] Web seeding
Web seeding was implemented in 2006 as the ability of BitTorrent clients to download torrent pieces from an HTTP source in addition to the swarm. The advantage of this feature is that a site may distribute a torrent for a particular file or batch of files and make those files available for download from that same web server; this can simplify seeding and load balancing greatly once support for this feature is implemented in the various BitTorrent clients. In theory, this would make using BitTorrent almost as easy for a web publisher as simply creating a direct download while allowing some of the upload bandwidth demands to be placed upon the downloaders (who normally use only a very small portion of their upload bandwidth capacity). This feature was created by John "TheSHAD0W" Hoffman, who created BitTornado.[20]. From version 5.0 onward the Mainline BitTorrent client also supports web seeds and the BitTorrent web site has a simple publishing tool that creates web seeded torrents. µTorrent added support for web seeds in version 1.7. The latest version of the popular download manager GetRight supports downloading a file from HTTP, FTP, and BitTorrent protocols.

[edit] RSS feeds
A technique called Broadcatching combines RSS with the BitTorrent protocol to create a content delivery system, further simplifying and automating content distribution. Steve Gillmor explained the concept in a column for Ziff-Davis in December, 2003.[21] The discussion spread quickly among bloggers (Techdirt, Ernest Miller, Chris Pirillo, etc.). In an article entitled Broadcatching with BitTorrent, Scott Raymond explained:


I want RSS feeds of BitTorrent files. A script would periodically check the feed for new items, and use them to start the download. Then, I could find a trusted publisher of an Alias RSS feed, and 'subscribe' to all new episodes of the show, which would then start downloading automatically — like the 'season pass' feature of the TiVo.

—[22]

The RSS feed will track the content, while BitTorrent ensures content integrity with cryptographic hashing of all data, so feed subscribers will receive uncorrupted content.
One of the first software clients (free and open source) for broadcatching is Miro. Other free software clients such as PenguinTV and KatchTV are also now supporting broadcatching.
The BitTorrent web-service MoveDigital has the ability to make torrents available to any web application capable of parsing XML through its standard Representational State Transfer (REST) based interface.[23] Additionally, Torrenthut is developing a similar torrent API that will provide the same features, as well as further intuition to help bring the torrent community to Web 2.0 standards. Alongside this release is a first PHP application built using the API called PEP, which will parse any Really Simple Syndication (RSS 2.0) feed and automatically create and seed a torrent for each enclosure found in that feed.[24]

[edit] Encryption
Main article: BitTorrent protocol encryption
Since BitTorrent makes up a large proportion of total traffic, some ISPs have chosen to throttle (slow down) BitTorrent transfers to ensure network capacity remains available for other uses. For this reason methods have been developed to disguise BitTorrent traffic in an attempt to thwart these efforts.[25]
Protocol header encrypt (PHE) and Message stream encryption/Protocol encryption (MSE/PE) are features of some BitTorrent clients that attempt to make BitTorrent hard to detect and throttle. At the moment Vuze, Bitcomet, KTorrent, Transmission, Deluge, µTorrent, MooPolice, Halite, rTorrent and the latest official BitTorrent client (v6) support MSE/PE encryption.
In September 2006 it was reported that some software could detect and throttle BitTorrent traffic masquerading as HTTP traffic.[26]
Reports in August 2007 indicated that Comcast was preventing BitTorrent seeding by monitoring and interfering with the communication between peers. Protection against these efforts is provided by proxying the client-tracker traffic through the Tor anonymity network or, via an encrypted tunnel to a point outside of the Comcast network.[27] Comcast has more recently called a 'truce' with BitTorrent, Inc. with the intention of shaping traffic in a protocol-agnostic manner.[28] Questions about the ethics and legality of Comcast's behavior have led to renewed debate about Net neutrality in the United States.[29]
In general, although encryption can make it difficult to determine what is being shared, BitTorrent is vulnerable to traffic analysis. Thus even with MSE/PE, it may be possible for an ISP to recognize BitTorrent and also to determine that a system is no longer downloading, only uploading, information and terminate its connection by injecting TCP RST (reset flag) packets.

[edit] Multitracker
Another unofficial feature is an extension to the BitTorrent metadata format proposed by John Hoffman[30] and implemented by several indexing websites. It allows the use of multiple trackers per file, so if one tracker fails, others can continue supporting file transfer. It is implemented in several clients, such as Vuze, BitComet, BitTornado, KTorrent and µTorrent. Trackers are placed in groups, or tiers, with a tracker randomly chosen from the top tier and tried, moving to the next tier if all the trackers in the top tier fail.
Torrents with multiple trackers[31] can decrease the time it takes to download a file, but also has a few consequences:

Users have to contact more trackers, leading to more overhead-traffic.
Torrents from closed trackers suddenly become downloadable by non-members, as they can connect to a seed via an open tracker.


[edit] Decentralized keyword search
Even with distributed trackers, a third party is still required to find a specific torrent. This is usually done in the form of a direct hyperlink from the website of the content owner or through indexing websites like The Pirate Bay or Torrentz.
In May 2007 Cornell University published a paper proposing a new approach to searching a peer-to-peer network for inexact strings[32] which could replace the functionality of a central indexing site. A year later, the same team implemented the system as a plugin for Vuze called Cubit[33] and published a follow-up paper reporting its success[34].

[edit] GIT-Torrent
The GitTorrent Protocol (GTP)[35] is an, as of 2008, alpha-version of a protocol designed for collaborative git repository distribution across the Internet.

[edit] Sandvine TCP/IP hangup exploit
The Sandvine traffic shaping hardware / software system is able to (via a man in the middle attack) send IP hangup packets to the sender and receiver -- allowing BitTorrent to be completely throttled. It must be pointed out that BitTorrent protocol behavior is easily spotted by this and other traffic shaping packages, as BitTorrent protocol setup is very dependent on a few very predictable signaling behaviors.

[edit] Implementations
Main article: Comparison of BitTorrent software
Because the BitTorrent specification is free to use and many clients are open source, BitTorrent clients have been created for all common operating systems using a variety of programming languages. The official BitTorrent client, uTorrent, Vuze, and BitComet are some of the most popular clients.[citation needed]
Some clients, like Torrentflux and TorrentVolve, can be run directly from a server, allowing hosting companies to offer speeds unavailable to most users. Services such as TorrentRelay, Instant Torrents, and ImageShack can download files on BitTorrent for the user, allowing them to download the entire file by HTTP once it is finished.
The Opera web browser supports BitTorrent[36], as does Wyzo. BitLet allows users to download Torrents directly from their browser using a Java applet.
An increasing number of hardware devices are being made to support BitTorrent. These include routers and NAS devices that use BitTorrent-capable firmware like OpenWrt or Openslug.
Proprietary versions of the protocol which implement DRM, encryption, and authentication are found within managed clients such as Pando.

[edit] Development
An as-yet (2 February 2008) unimplemented unofficial feature is Similarity Enhanced Transfer (SET), a technique for improving the speed at which peer-to-peer file sharing and content distribution systems can share data. SET, proposed by researchers Pucha, Andersen, and Kaminsky, works by spotting chunks of identical data in files that are an exact or near match to the one needed and transferring these data to the client if the 'exact' data are not present. Their experiments suggested that SET will help greatly with less popular files, but not as much for popular data, where many peers are already downloading it.[37] Andersen believes that this technique could be immediately used by developers with the BitTorrent file sharing system.[38]
The BitTorrent client μTorrent implemented the UDP Torrent Protocol, beginning with version 1.8.2. This protocol is believed to be more resilient against traffic analysis while offering more control over the connection between peers.
December 2008 - BitTorrent, Inc. is working with Oversi on new Policy Discover Protocols that query the ISP for capabilities and network architecture information. Oversi's ISP hosted NetEnhancer box is designed to "improve peer selection" by helping peers find local nodes, improving download speeds while reducing the loads into and out of the ISP's network. [39]

[edit] Legal issues
Main article: Legal issues with BitTorrent
There has been much controversy over the use of BitTorrent trackers. BitTorrent metafiles themselves do not store copyrighted data, hence BitTorrent itself is not illegal—it is the use of it to copy copyrighted material that contravenes laws in some locations.
Various jurisdictions have pursued legal action against websites that host BitTorrent trackers. High-profile examples include the closing of Suprnova.org, Torrentspy, LokiTorrent, Demonoid, OiNK.cd and EliteTorrents.org. The Pirate Bay torrent website, formed by a Swedish group, is noted for the "legal" section of its website in which letters and replies on the subject of alleged copyright infringements are publicly displayed. On 31 May 2006, The Pirate Bay's servers in Sweden were raided by Swedish police on allegations by the MPAA of copyright infringement;[40] however, the tracker was up and running again three days later.
HBO, in an effort to combat the distribution of its programming on BitTorrent networks, has sent cease and desist letters to the Internet Service Providers of BitTorrent users. Many users have reported receiving letters from their ISPs that threatened to cut off their Internet service if the alleged infringement continues.[41] HBO, unlike the RIAA, has not been reported to have filed suit against anyone for sharing files as of April 2007. In 2005 HBO began "poisoning" torrents of its show Rome, by providing bad chunks of data to clients.[42]
On 23 November 2005, the movie industry and BitTorrent Inc. CEO Bram Cohen, signed a deal they hoped would reduce the number of unlicensed copies available through bittorrent.com's search engine, run by BitTorrent, Inc. It meant BitTorrent.com had to remove any links to unlicensed copies of films made by seven of Hollywood's major movie studios.
More recently, the BitTorrent network has been subject to scrutiny by the British Phonographic Industry (BPI). There are suggestions that they are using the network to obtain the IP addresses of those currently connected to the tracker. The information is then used to contact the ISP of each downloader so that notifications can be made (this was given sizeable coverage in the UK press with regard to Virgin Media sending letters out to customers suspected of using P2P networks).
There are two major differences between BitTorrent and many other peer-to-peer file-trading systems, which advocates suggest make it less useful to those sharing copyrighted material without authorization. First, BitTorrent itself does not offer a search facility to find files by name. A user must find the initial torrent file by other means, such as a web search. Second, BitTorrent makes no attempt to conceal the host ultimately responsible for facilitating the sharing: a person who wishes to make a file available must run a tracker on a specific host or hosts and distribute the tracker address(es) in the .torrent file. Because it is possible to operate a tracker on a server that is located in a jurisdiction where the copyright holder cannot take legal action, the protocol does offer some vulnerability that other protocols lack. It is far easier to request that the server's ISP shut down the site than it is to find and identify every user sharing a file on a peer-to-peer network. However, with the use of a distributed hash table (DHT), trackers are no longer required, though often used for client software that does not support DHT to connect to the stream.

[edit] See also




Free software portal




Terminology of BitTorrent
Super-seeding
Segmented downloading
Comparison of BitTorrent clients
Magnet URI scheme
Similarity Enhanced Transfer
UDP Torrent Protocol
Bencode
.sfv files in .torrents
Anti-Counterfeiting Trade Agreement


[edit] References


^ http://www.dslreports.com/shownews/56403
^ Cohen, Bram (2001-07-02). "BitTorrent — a new P2P app". Yahoo eGroups. http://finance.groups.yahoo.com/group/decentralization/message/3160. Retrieved on 2007-04-15. 
^ "1.1 Petabytes of files on BitTorrent, network issues". isohunt. 2008-10-19. http://isohunt.com/forum/viewtopic.php?t=145853. Retrieved on 2008-10-28. 
^ Urvoy-Keller (December 2006). "Rarest First and Choke Algorithms Are Enough" (PDF). imconf.net. http://www.imconf.net/imc-2006/papers/p20-legout.pdf. Retrieved on 2007-11-10. 
^ a b Cohen, Bram (October 2002). "BitTorrent Protocol 1.0". BitTorrent.org. http://www.bittorrent.org/beps/bep_0003.html. Retrieved on 2008-10-27. 
^ a b Tamilmani, Karthik (2003-10-25). "Studying and enhancing the BitTorrent protocol" (DOC). Stony Brook University. http://web.archive.org/web/20041119150847/http://mnl.cs.stonybrook.edu/home/karthik/BitTorrent/Robustness_of_BT.doc. Retrieved on 2006-05-06. 
^ See, for example, Why Bit Torrent at tasvideos.org
^ "Sub Pop page on BitTorrent.com". http://www.bittorrent.com/users/subpoprecords/. Retrieved on 2006-12-13. 
^ "www.browntracker.net, the website used by Ween". http://www.browntracker.net. Retrieved on 2006-12-13. 
^ http://www.dgmlive.com/help.htm#whatisbittorrent
^ "CBC to BitTorrent Canada's Next Great Prime Minister:". 2008-03-19. http://www.cbc.ca/nextprimeminister/blog/2008/03/canadas_next_great_prime_minis.html. Retrieved on 2008-03-19. 
^ Rustad, Roger E. (2004-08-26). "Blog Torrent and Participatory Culture". Grep Law. http://grep.law.harvard.edu/article.pl?sid=04/08/26/0236209. Retrieved on 2006-05-09. 
^ "Blizzard Downloader". - WoWWiki - Your guide to the World of Warcraft. 2008-10-15. http://www.wowwiki.com/Blizzard_Downloader. Retrieved on 2008-10-30. 
^ Ellis, Leslie (8 May 2006). "BitTorrent’s Swarms Have a Deadly Bite On Broadband Nets". Multichannel News. http://www.multichannel.com/article/CA6332098.html. Retrieved on 2006-05-08. 
^ Pasick, Adam (2004-11-04). "LIVEWIRE — File-sharing network thrives beneath the radar". Yahoo! News. http://www.interesting-people.org/archives/interesting-people/200411/msg00078.html. Retrieved on 2006-05-09. 
^ Sevcik, Peter (1 November 2005). "Peer-to-Peer Traffic: Another Internet Myth Is Born". Business Communication Review. http://www.bcr.com/opinion/next_generation_networks/peer-to-peer_traffic_internet_myth_born_20051101647.htm. Retrieved on 2006-05-09. 
^ "uTorrent's FAQ page". http://www.utorrent.com/faq.php#Modems_routers_that_are_known_to_have_problems_with_P2P. 
^ Worthington, David; Nate Mook (25 May 2005). "BitTorrent Creator Opens Online Search". BetaNews. http://www.betanews.com/article/BitTorrent_Creator_Opens_Online_Search/1117065427. Retrieved on 2006-05-09. 
^ Khashmir Sourceforge
^ "HTTP-Based Seeding Specification" (TXT). http://bittornado.com/docs/webseed-spec.txt. Retrieved on 2006-05-09. 
^ Gillmore, Steve. BitTorrent and RSS Create Disruptive Revolution EWeek.com, 13 December 2003. Retrieved on 2007-04-22.
^ Raymond, Scott: Broadcatching with BitTorrent. scottraymond.net: 2003-12-16.
^ "Move Digital REST API". Move Digital. http://www.movedigital.com/docs/index.php/MoveDigital_API. Retrieved on 2006-05-09.  Documentation.
^ "Prodigem Enclosure Puller(pep.txt)" (TXT). Prodigem.com. http://web.archive.org/web/20060526130219/http://prodigem.com/code/pep/pep.txt. Retrieved on 2006-05-09.  via Internet Wayback Machine
^ "Encrypting Bittorrent to take out traffic shapers". Torrentfreak.com. 2006-02-05. http://torrentfreak.com/encrypting-bittorrent-to-take-out-traffic-shapers/. Retrieved on 2006-05-09. 
^ Sales, Ben (September 2006). ""ResTech solves network issues"". studlife.com. http://media.www.studlife.com/media/storage/paper337/news/2006/09/27/News/Restech.Solves.Network.Issues-2310692.shtml. 
^ Comcast Throttles BitTorrent Traffic, Seeding Impossible, TorrentFreak, 17 August 2007
^ Comcast and Bittorrent Agree to Collaborate
^ Is Comcast's BitTorrent filtering violating the law?
^ "MULTITRACKER METADATA ENTRY SPECIFICATION" (TXT). Bittornado.com. http://www.bittornado.com/docs/multitracker-spec.txt. Retrieved on 2006-05-09. 
^ called MultiTorrents by indexing website myBittorrent.com
^ "Hyperspaces for Object Clustering and Approximate Matching in Peer-to-Peer Overlays" (PDF). Cornell University. http://www.cs.cornell.edu/People/egs/papers/hyperspaces.pdf. Retrieved on 2008-05-26. 
^ "Cubit: Approximate Matching for Peer-to-Peer Overlays" (HTML). Cornell University. http://www.cs.cornell.edu/~bwong/cubit/index.html. Retrieved on 2008-05-26. 
^ "Approximate Matching for Peer-to-Peer Overlays with Cubit" (PDF). Cornell University. http://www.cs.cornell.edu/~bwong/cubit/tr-cubit.pdf. Retrieved on 2008-05-26. 
^ "gittorrent, Peer-to-peer Protocol for Synchronizing of Git Repositories" (html). Hosted by google-code. http://code.google.com/p/gittorrent/. Retrieved on 2009-02-04. 
^ Anderson, Nate (1 February 2007). "Does network neutrality mean an end to BitTorrent throttling?". Ars Technica, LLC. http://arstechnica.com/news.ars/post/20070201-8750.html. Retrieved on 2007-02-09. 
^ Himabindu Pucha, David G. Andersen, Michael Kaminsky (April 2007). "Exploiting Similarity for Multi-Source Downloads Using File Handprints". Purdue Univ., Carnegie Mellon Univ., Intel Research Pittsburgh. http://www.cs.cmu.edu/~dga/papers/nsdi2007-set/. Retrieved on 2007-04-15. 
^ "Speed boost plan for file-sharing". BBC News. 2007-04-12. http://news.bbc.co.uk/2/hi/technology/6544919.stm. Retrieved on 2007-04-21. 
^ http://arstechnica.com/news.ars/post/20081209-bittorrent-has-new-plan-to-shape-up-p2p-behavior.html
^ "The Piratebay is Down: Raided by the Swedish Police". TorrentFreak. 31.05.2006. http://torrentfreak.com/the-piratebay-is-down-raided-by-the-swedish-police/. Retrieved on 2007-05-20. 
^ Henderson, Maryanne (2006-03-21). "Safenet (for HBO) Letter to Charter Communications - Part 2.jpg". Tallin Wordpress. http://tallin.wordpress.com/files/2006/04/Charter%20Letter%20-%20Part%202.jpg. Retrieved on 2007-04-22. 
^ Torkington, Nat (4 October 2005). "HBO Attacking BitTorrent". O'Reilly.com. http://radar.oreilly.com/archives/2005/10/hbo_attacking_bittorrent.html. Retrieved on 2007-04-22. 



[edit] Further reading

Pouwelse, Johan; et al. (2005). "The Bittorrent P2P File-Sharing System: Measurements and Analysis". Peer-to-Peer Systems IV. Berlin: Springer. pp. 205–216. doi:10.1007/11558989_19. ISBN 9783540290681. 


[edit] External links



Wikimedia Commons has media related to: BitTorrent 



Official BitTorrent Website
Official BitTorrent Specification
BitTorrent at the Open Directory Project
Interview with chief executive Ashwin Navin
Unofficial BitTorrent Protocol Specification v1.0 at wiki.theory.org
Unofficial BitTorrent Location-aware Protocol 1.0 Specification at wiki.theory.org
Interview with Bram Cohen about Bittorrent and The Pirate Bay








v • d • e

BitTorrent





Companies

BitTorrent, Inc. · Vuze, Inc.






Individuals

Ashwin Navin · Bram Cohen






Technology

Broadcatching · Distributed hash tables · DNA · index · Peer exchange · Protocol encryption · Super-seeding · Terminology · Tracker






Clients

BitTorrent (original client) · aria2 · ABC · BitComet · BitTornado · Deluge · KTorrent · Shareaza · Transmission · µTorrent · Vuze (formerly Azureus) · All Clients (comparison)






Libraries

BTSharp · Libtorrent (Rakshasa) · Libtorrent (Rasterbar) · MonoTorrent






Search engines

BTJunkie · Demonoid · isoHunt · LokiTorrent (defunct) · Mininova · myBittorrent · Seedpeer · ShareReactor · Suprnova.org · The Pirate Bay · TorrentSpy (defunct)






Metasearch engines

FlixFlux · Torrentz · YouTorrent






Trackers

OiNK (defunct) · The Pirate Bay






Related topics

aXXo · BitTorrent Open Source License













v • d • e

File sharing networks and protocols





Decentralized networks

Ares · BitTorrent · eDonkey · FastTrack · Freenet · Gnutella · Gnutella2 · Kad · OneSwarm • OpenFT • Overnet · Soulseek · WASTE






Semi-centralized

Applejuice






Centralized

Audiogalaxy · Direct Connect · Advanced Direct Connect · Napster · Opennap · Soribada






Comparisons of clients

BitTorrent · eD2k · Gnutella · Gnutella2 · file sharing






related

Peer-to-peer · Timeline of file sharing · Ethics of file sharing









Retrieved from "http://en.wikipedia.org/wiki/BitTorrent_(protocol)"
Categories: Application layer protocols | BitTorrent | Computer file formats | File sharing networksHidden categories: Cleanup from March 2009 | All pages needing cleanup | All articles with unsourced statements | Articles with unsourced statements since March 2009 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


العربية
Bosanski
Български
Català
Česky
Dansk
Deutsch
Ελληνικά
Español
Esperanto
فارسی
Français
Galego
한국어
Hrvatski
Ilokano
Bahasa Indonesia
Italiano
עברית
ქართული
Kurdî / كوردی
Latviešu
Lietuvių
Magyar
മലയാളം
मराठी
Bahasa Melayu
日本語
Nederlands
‪Norsk (bokmål)‬
‪Norsk (nynorsk)‬
Polski
Português
Română
Русский
Shqip
Simple English
Slovenčina
Slovenščina
Suomi
Svenska
தமிழ்
ไทย
Tiếng Việt
Türkçe
Українська
اردو
粵語
中文









 This page was last modified on 2 April 2009, at 17:05.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
