













de Casteljau's algorithm - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "De_Casteljau\'s_algorithm";
		var wgTitle = "De Casteljau\'s algorithm";
		var wgAction = "view";
		var wgArticleId = "656099";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 274666147;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); de Casteljau's algorithm

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
In the mathematical subfield of numerical analysis the de Casteljau's algorithm, named after its inventor Paul de Casteljau, is a recursive method to evaluate polynomials in Bernstein form or Bézier curves. The de Casteljau's algorithm can also be used to split a single Bézier curve into two Bézier curves at an arbitrary parameter value.
Although the algorithm is slower for most architectures when compared with the direct approach it is numerically more stable.




Contents


1 Definition
2 Notes
3 Example
4 Bézier curve
5 Geometric interpretation
6 References
7 See also





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Definition
Given a polynomial B in Bernstein form of degree n



where b is a Bernstein basis polynomial, the polynomial at point t0 can be evaluated with the recurrence relation




with




[edit] Notes
When doing the calculation by hand it is useful to write down the coefficients in a triangle scheme as



When choosing a point t0 to evaluate a Bernstein polynomial we can use the two diagonals of the triangle scheme to construct a division of the polynomial



into



and




[edit] Example
We want to evaluate the Bernstein polynomial of degree 2 with the Bernstein coefficients





at the point t0.
We start the recursion with




and with the second iteration the recursion stops with



which is the expected Bernstein polynomial of degree n.

[edit] Bézier curve
When evaluating a Bézier curve of degree n in 3 dimensional space with n+1 control points Pi



with

.

we split the Bézier curve into three separate equations





which we evaluate individually using de Casteljau's algorithm.

[edit] Geometric interpretation
The geometric interpretation of de Casteljau algorithm is straightforward.

Consider a Bézier curve with control points P0,...,Pn. Connecting the consecutive points we create the control polygon of the curve.
Subdivide now each line segment of this polygon with the ratio t:1-t and connect the points you get. This way you arrive at the new polygon having one less segment.
Repeat the process till you arrive at the single point - this is the point of the curve corresponding to the parameter t.

The following picture shows this process for a cubic Bézier curve:

Note that the intermediate points that were constructed are in fact the control points for two new Bezier curves, both exactly coincident with the old one. This algorithm not only evaluates the curve at t, but splits the curve into two pieces at t, and provides the equations of the two sub-curves in Bezier form.
The interpretation given above is valid for a nonrational Bezier curve. To evaluate a rational Bezier curve in , we may project the point into ; for example, a curve in three dimensions may have its control points {(xi,yi,zi)} and weights {wi} projected to the weighted control points {(wixi,wiyi,wizi,wi)}. The algorithm then proceeds as usual, interpolating in . The resulting four-dimensional points may be projected back into three-space with a perspective divide.
In general, operations on a rational curve (or surface) are equivalent to operations on a nonrational curve in a projective space. This representation as the "weighted control points" and weights is often convenient when evaluating rational curves.

[edit] References

Farin, Gerald & Hansford, Dianne (2000). The Essentials of CAGD. Natic, MA: A K Peters, Ltd. ISBN 1-56881-123-3


[edit] See also

De Boor's algorithm
Horner scheme to evaluate polynomials in Monomial form
Clenshaw algorithm to evaluate polynomials in Chebyshev form




Retrieved from "http://en.wikipedia.org/wiki/De_Casteljau%27s_algorithm"
Categories: Geometric algorithms | Numerical analysis 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Česky
Deutsch
Français
Español
Italiano
Polski
中文









 This page was last modified on 3 March 2009, at 11:54.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
