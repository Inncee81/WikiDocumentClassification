













QVT - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "QVT";
		var wgTitle = "QVT";
		var wgAction = "view";
		var wgArticleId = "4672713";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 271125689;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); QVT

From Wikipedia, the free encyclopedia

Jump to: navigation, search 




QVT Architecture


QVT (Query/View/Transformation), in the model-driven architecture, is a standard for model transformation defined by the Object Management Group.




Contents


1 Overview
2 Implementations
3 See also
4 References
5 Further reading
6 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] Overview
Model transformation is the process of converting a model Ma conforming to metamodel MMa into a model Mb conforming to metamodel MMb. If MMa=MMb, then the transformation is endogenous, otherwise it is an exogenous transformation. Model transformation is a critical component of model-driven architectures (MDA). Recognizing this, a Request for proposal (RFP) has been issued by OMG on MOF Query/View/Transformation to seek a standard compatible with the MDA recommendation suite (UML, MOF, OCL, etc.).
Several replies were given by a number of companies and research institutions that evolved during three years to produce a common proposal that was submitted and approved.
Presently there are several products (commercial or open source) that claim compliance to the QVT standard. QVT defines a standard way to transform source models into target models. There are several ideas in this proposal. One is that the source and target models may conform to arbitrary MOF metamodels. Another one is that the transformation program is considered itself as a model, and as a consequence also conforms to a MOF metamodel. This means more precisely that the abstract syntax of QVT should conform to a MOF 2.0 metamodel.
As a matter of fact, this is a bit more complex. First the QVT language integrates the OCL 2.0 standard and also extends it to imperative OCL. Second QVT defines not one but three domain-specific languages named Relations, Core and Operational Mappings and these languages are organized in a layered architecture. Relations and Core are declarative languages at two different levels of abstraction, with a normative mapping between them. The Relations language has a textual and a graphical concrete syntax. The QVT/OperationalMapping language is an imperative language that extends both QVT/Relations and QVT/Core. The syntax of the QVT/OperationalMappings language provides constructs commonly found in imperative languages (loops, conditions, etc.).
Finally a mechanism called QVT/BlackBox for invoking transformation facilities expressed in other languages (XSLT, XQuery) is also an important part of the specification. It is especially useful for integrating existing non-QVT libraries and transformations.
For the time being the QVT standard only addresses model to model transformations, model meaning some entity conforming to any MOF 2.0 metamodel. All transformations of type model to text or text to model, whatever the text is (XML, Code, SQL, etc.), are presently outside the scope of QVT and possibly subject to other standardization initiatives. They may be viewed as alternative transformation DSLs in the MDA technical space.

[edit] Implementations
QVT-Operational:

Borland Together is a component in the M2M Eclipse project. Partially QVT-compliant.
SmartQVT: an Eclipse open source implementation (Orange Labs) of the QVT-Operational language. QVT compliant and high potential.
Eclipse M2M official Eclipse open source implementation of QVT operational (Relation and Core will be developed on another subproject) M2M QVT operational Wiki

QVT-Relation:

ModelMorf : a transformation engine from TRDDC a subsidiary of Tata Consultancy Services, India; Also partially QVT-relations compliant, but proprietary, non open source implementation. Release plan now very outdated: appears to have been abandoned.
medini QVT : QVT-Relations implementation from ikv++ technologies ag in Berlin, Germany. The eclipse based RCP includes an editor with code assistant and a debugger. License: free for non-commercial use.

QVT-Core:

OptimalJ: Early access implementation of the QVT-Core language was in OptimalJ version 3.4 from Compuware. However, OptimalJ has been discontinued.


QVT-Like:

MTF : an IBM initial Alphaworks prototype for model transformations also partially QVT-compliant (based on IBM's submission to the original QVT RFP). Open source.
Tefkat : an open source implementation of Tefkat language which is also similar to QVT. High potential. Open source.
ATL : a component in the M2M Eclipse project. ATL is a QVT-like transformation language and engine with a large user community and an open source library of transformations.
MOFLON : based on the CASE-Tool Fujaba. Implements Triple Graph Grammars which can also be used for bi-directional model transformations. Open source.


[edit] See also

list of available transformation languages
Model-driven engineering (MDE)
Model Driven Architecture (MDA): OMG's vision of MDE
Domain-specific language (DSL)
Meta-Object Facility (MOF): a language to write metamodels
Object Constraint Language (OCL): a model constraint (and query) language
Model transformation
Model Transformation Language
Metamodel


[edit] References





This article does not cite any references or sources. Please help improve this article by adding citations to reliable sources (ideally, using inline citations). Unsourced material may be challenged and removed. (February 2009)



[edit] Further reading

The MDA Journal: Model Driven Architecture Straight From The Masters
David S. Frankel Model Driven Architecture: Applying MDA to Enterprise Computing. John Wiley & Sons, ISBN 0-471-31920-1


[edit] External links





This article's external links may not follow Wikipedia's content policies or guidelines. Please improve this article by removing excessive or inappropriate external links.



Object Management Group: MOF QVT Final Adopted Specification. Webpublished .pdf


Object Management Group: Model-Driven Architecture - Vision, Standards And Emerging Technologies. Webpublished .pdf


Object Management Group: MDA Guide Version 1.0.1. Webpublished .pdf


Brown, A: An Introduction to Model Driven Architecture. In: The Rational Edge, Feb. 2004 (IBM developerWorks eZine). Webpublished .html (first article in a series of three)


Bohlen, M: QVT and multi metamodel transformation in MDA. Webpublished .pdf (en), (ger)


Wagelaar, D: MDE Case Study: Using Model Transformations for UML and DSLs. Webpublished .pdf


Czarnecki, K, and Helsen, S : Classification of Model Transformation Approaches. In: Proceedings of the OOPSLA'03 Workshop on the Generative Techniques in the Context Of Model-Driven Architecture. Anaheim (CA, USA). Webpublished .pdf


Planet-MDE. MDA Tools. Website
ModelBaset.net. MDA Tools. Website
SoftwareMag.com. MDA Tools. Webpublished .html


Gronmo, R, and Oldevik, J : An Empirical Study of the UML Model Transformation Tool (UMT). In: INTEROP-ESA'05, Feb. 2005. Webpublished .pdf


Voelter, M: Model Driven Software Development. Webpublished .pdf


Portal site MDA and Model Transformation: site access




Retrieved from "http://en.wikipedia.org/wiki/QVT"
Categories: Systems engineering | Unified Modeling LanguageHidden categories: Articles lacking sources from February 2009 | All articles lacking sources | Wikipedia external links cleanup 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Deutsch
Français
Galego
日本語
中文









 This page was last modified on 16 February 2009, at 15:06.
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
