













BD-J - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "BD-J";
		var wgTitle = "BD-J";
		var wgAction = "view";
		var wgArticleId = "6033983";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 281480173;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
/*<![CDATA[*/
.source-java {line-height: normal;}
.source-java li, .source-java pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for java
 * CSS class: source-java, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie (http://qbnz.com/highlighter)
 */
.source-java .de1, .source-java .de2 {font-family: 'Courier New', Courier, monospace; font-weight: normal;}
.source-java  {}
.source-java .head {}
.source-java .foot {}
.source-java .imp {font-weight: bold; color: red;}
.source-java .ln-xtra {color: #cc0; background-color: #ffc;}
.source-java li {font-family: 'Courier New', Courier, monospace; color: black; font-weight: normal; font-style: normal;}
.source-java li.li2 {font-weight: bold;}
.source-java .kw1 {color: #b1b100;}
.source-java .kw2 {color: #000000; font-weight: bold;}
.source-java .kw3 {color: #aaaadd; font-weight: bold;}
.source-java .kw4 {color: #993333;}
.source-java .co1 {color: #808080; font-style: italic;}
.source-java .co2 {color: #a1a100;}
.source-java .coMULTI {color: #808080; font-style: italic;}
.source-java .es0 {color: #000099; font-weight: bold;}
.source-java .br0 {color: #66cc66;}
.source-java .st0 {color: #ff0000;}
.source-java .nu0 {color: #cc66cc;}
.source-java .me1 {color: #006600;}
.source-java .me2 {color: #006600;}

/*]]>*/

/*<![CDATA[*/
@import "/w/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=2678400";
/*]]>*/
 <!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); BD-J

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
BD-J, or Blu-ray Disc Java, is a specification supporting Java ME (specifically the Personal Basis Profile of the Connected Device Configuration or CDC) Xlets for advanced content on Blu-ray Disc and the Packaged Media profile of Globally Executable MHP (GEM).
BD-J allows bonus content on Blu-ray Disc titles to be far more sophisticated than bonus content provided by standard DVD, including network access, picture-in-picture and access to expanded local storage. Collectively, these features (other than internet access) are referred to as "Bonus View", and the addition of internet access is called "BD Live." BD-J was developed by the Blu-ray Disc Association. All Blu-ray Disc players supporting video content are required by the specification to support BD-J.[1] Starting on October 31, 2007, all new players are required to have hardware support for the "Bonus View" features, but the players may require future firmware updates to enable the features. "BD Live" support is always optional for a BD player.[2]
Sony's PlayStation 3 has been the de facto leader in compliance and support of BD-J. The PlayStation 3 added Blu-ray Profile 1.1 support with a firmware upgrade and was used to showcase BD-Live at CES 2008 in January. BD-J is also emerging as a possible de facto high-end standard for the interactive television industry.[3]




Contents


1 BD-J Xlet Capabilities
2 Content development
3 BD-J Sample Code
4 BD-J Enhanced Movie Titles
5 BD-J Upcoming Titles
6 Related publication
7 See also
8 References
9 External links





//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>


[edit] BD-J Xlet Capabilities

The invocation of BD-J Xlets are triggered by events occurring around them - for example, by the selection of a movie title, or by the insertion of a new disc. Xlets in turn can then call other Xlets into play.


Security in BDJ is based on the Java platform security model. That is, signed applications in JARs can perform more tasks than a non-signed, such as Read/Write access to local storage, network access, selection of other titles on the BD-ROM disc, and control of other running BD-J applications.


Xlets (as part of the CDC Personal Basis Profile) have no GUI (i.e. no AWT widgets such as java.awt.Button), so additional classes are called into play for generating animation and GUI. The BD-J uses the Havi UI device model and widget set for remote control use, but it is extended to allow for the BD supported resolutions and BD supported A/V controls.


BD-J has classes that allow you to synchronize accurately to specific frames in the movie.


There are two type of video synchronizations allowed, one called "loose synchronization", which uses a call back method and is accurate to within several frames of the event, and the other being "tight synchronization", which uses the package org.bluray. Tight synchronization allows applications to synchronize accurately to the exact frame using timecodes from the package javax.media.Time of JMF (Java Media Framework).


A BD-J application’s GUI can be operated with a remote control with a required set of keys and an optional pointing device. The set of required keys includes at least the keys needed to support the User Operations in HDMV applications.


The GUI framework in BD-J includes the HAVi(6) UI framework mandated by [GEM]; it is not a desktop GUI framework like Swing or AWT. The GUI framework is based on the core of AWT as specified by PBP, but the widget set includes mechanisms for remote control navigation from GEM and easy customization of look and feel from HAVi.


BD-J includes a media framework similar to JMF for the playback of media content related to the BD-ROM disc. It is assumed that the BD-ROM disc will be the prime source for media files, but it will not be the only one; other sources could be the studio’s web server and local storage.


BD-J includes standard Java libraries for decoding and displaying images in JFIF (JPEG), PNG and other image formats. These images can be displayed on the Java graphics plane using standard Java graphics functions. An image can also be rendered in the background plane using a BD-J specific package.


Text can be rendered using standard Java text functions. These text-rendering functions are extended with a more advanced text layout manager that integrates with the BD-J UI framework. The text is rendered using a vector-based font either coming from the disc, the player (default font) or downloaded from the network.


Button sounds from HDMV can also be used by the Java UI framework. Sound files can be loaded and rendered as a reaction to the user pressing a key, or as a reaction on a marked event related to the movie - or as a reaction to any event generated by a BD-J Application.


Authenticated applications can use a (signed) permission request file to acquire permissions that go beyond the BD-J sandbox. Permissions can be acquired for:

Reading and writing to local and system storage
Using the network connection (to connect to defined servers)
Access of the file system on the BD-ROM disc
Title selection of other titles on the BD-ROM disc
Control of other running BD-J applications




BD-J applications can use the java.net package to connect to servers on the Internet. The physical connection might differ between implementations e.g. Ethernet, telephone line, etc. At the network level, TCP/IP is supported and the HTTP protocol may be used. Moreover, the Java package for secure connections is included (JSSE) as part of the BD-J platform. Before a BD-J application can use the network connection, it must be authenticated and have suitable permission to use the network.


The web sites to which the application will go are under full control of the Content Provider. This control is guaranteed in two ways:

Only (disc) authenticated BD-J applications are allowed to run when the disc is played. The application controls the use of the network connection.
In addition, permissions defined on the disc can restrict the use of the (TCP/IP) network connection to certain sites.




BD-J will include support for storage. Two flavors of storage are included – mandatory System Storage and optional Local Storage. All storage is accessed using methods from the Java IO package. The path for local storage is as specified by [GEM].


System storage is storage that will be present in all BD-J players. The required minimum size of this system storage will permit storage of application data like settings, high-scores etc. It will not be big enough to store downloaded AV material. For this purpose, optional local storage is available. Typically system storage will be implemented using Flash memory and the optional local storage will be implemented on a HDD.


Since storage is a shared resource between all discs played on the player, Java access control is part of BD-J. BD-J applications can only access a disc specific part of the storage space and cannot access the part belonging to other discs.


[edit] Content development
Content authors have a variety of development strategies available, including the use of traditional Integrated Development Environments (IDE's) like NetBeans or Eclipse, non-programming graphical environments similar to Macromedia Director, or via rendering engines which consume standard data formats such as HTML, XML, or SVG. Having a full programming environment available on every Blu-ray Disc player provides developers with a platform for creating content types not bound by the restrictions of standard DVD. In addition to the standard BD-J APIs, developers may make use of existing Java libraries and application frameworks, assuming they do not use features outside the constraints of the BD-J platform, include that Java ME only supports Java version 1.3 class files.
A set of freely-available tools that allow Java developers to produce complete disc images incorporating BD-J is available from the HD Cookbook Project.[4] In order to test content in a typical development environment (MS Windows), one needs either a Playstation 3 or a third-party software player for Windows, paying attention to player versions to ensure that the player supports BD-J.[5][6][7]
Because of the many different standards and components involved, creating unified documentation on BD-J has proven to be a challenge.[8][9][10]

[edit] BD-J Sample Code
The BD-J environment is designed to run Xlets with non-javax.* packages available to take advantage of the features peculiar to this platform beyond that defined by Java TV.
Even a simple example such as FirstBDJApp.[11]
A developer might choose to use not javax.* packages and instead use:

HAVi classes in package tree org.havi.* : alternative classes to obtain, for example, an org.havi.ui.HScene far beyond what is provided by javax.tv.graphics.TVContainer (they are both extensions of java.awt.Container)
Digital Video Broadcasting (DVB) classes in package tree org.dvb.* : alternative classes to, for example, the org.dvb.event.UserEventListener interface rather than java.awt.event.KeyListener for support for key presses and keycodes specific to popular CDC devices.
Blu-ray Disc classes in the package tree org.bluray.*: the DAVIC and DVB classes depend upon to recognize additional events peculiar to the BD-J platform such as popup menus and to locate media on the Blu-ray disc.
DAVIC API classes in package tree org.davic.*: A small set of classes wrapping or extending other network and media resources peculiar to interactive TV the HAVi, DVB and Blu-ray classes use for locators and specialized exceptions beyond the realm of JMF (such as content authorization).

A working example of a program using some features from each of the class trees would be the BdjGunBunny Xlet (a very simple version of Space Invaders using an image of a rabbit as the shooter and turtles as the targets) provided as an example in the Java ME 3.0 SDK.



import javax.tv.xlet.XletContext;
 
import org.havi.ui.HScene;
import org.havi.ui.HSceneFactory;
 
import java.awt.Container;
import javax.tv.graphics.TVContainer;
 
// Getting a container for the screen could be
 
public void initXlet(XletContext context) {
 
//Java TV API to be compatible with Java TV
TVContainer scene = TVContainer.getRootContainer(context);
 
// Or for BD-J, to utilize HAVi features not avaialble in Java TV
HScene scene = HSceneFactory.getInstance().getDefaultHScene();
 
// Or perhaps more generally...
Container container = null;
boolean realBDJ = true;
if(realBDJ)
	container = HSceneFactory.getInstance().getDefaultHScene();
else
	container = TVContainer.getRootContainer(context);
...
 
}

and the same for the other non-javax.* packages. Likewise, when trying to play a video, one might call the Blu-ray and DAVIC utility rather than using generic JMF:


import javax.media.Player;
import org.bluray.net.BDLocator;
import org.davic.media.MediaLocator;
 
   MediaLocator stars = new MediaLocator(new BDLocator("bd://0.PLAYLIST:00003"));
   Player player = Manager.createPlayer(stars);
 
// rather than traditional and portable but more limited pure JMF
 
import java.net.URL;
import javax.media.Manager;
import javax.media.Player;
 
    Player mediaPlayer = Manager.createRealizedPlayer( new URL("file:/mymovie.mov" ));


[edit] BD-J Enhanced Movie Titles
This list is incomplete; you can help by expanding it.
In alphabetical order, here are some titles that already use the features that the BD-J platform offers:

3:10 To Yuma (Complete BD-J enhanced interactive menu)
Batman Begins ("In-Movie Experience" picture in picture commentary [Profile 1.1])
Behind Enemy Lines (enhanced menu)
The Beyoncé Experience Live! (Complete BD-J enhanced interactive menu)
Big Fish (enhanced menu)
Cars (Enhanced menus, CarFinder In-movie game)
Chicken Little (Game, filmmaker Q&A)
Crank (enhanced menu, Interactive PiP video commentary)
The Day After Tomorrow (Also D-Box Enhanced, "Global Warming Interactive Trivia" game and "Global Warming Trivia Track.")
The Descent( PiP video commentary , enhanced menus)
Doctor Strange (enhanced menu)
Dragon's Lair (Game, Authored entirely in BD-J, PiP Video Commentary)
Fantastic Four: Rise of the Silver Surfer (Also D-Box Enhanced, Games - "Who Dares Defy Galactus?" and "The World’s Greatest Comic Magazine.")
Ghost in the Shell (Anime - in-movie menu)
Good Luck Chuck (Complete BD-J enhanced interactive menu)
Guardian (Filmmaker Q & A)
League of Extraordinary Gentlemen (enhanced menu, game)
Mad Men: Season One (enhanced menus, bookmarking, on-screen AV controls)
Mamma Mia! The Movie (PIP Behind the scenes & Behind the Songs)
Men In Black (trivia game, BD-Live information and features)
The Patriot (in-movie menu)
Pirates of the Caribbean: Curse of the Black Pearl (enhanced menu, Interactive in-movie feature)
Pirates of the Caribbean: Dead Man's Chest (Game)
Pirates of the Caribbean: At World's End (enhanced menu)
Ratatouille (enhanced menus, game , Behind the scene PiP)
Space Ace (Game, Authored entirely in BD-J, PiP Video Commentary)
Speed (enhanced menu, game)
Spider-man (enhanced menus)
Spider-Man 3 (enhanced menus)
Sunshine (pip, A Brilliant Vision, D-Box Motion Sensor Track)
Surf's Up
Transformers (enhanced menu, first disc of two)
Ultimate Avengers (enhanced menu)
National Lampoon's Van Wilder (enhanced menu, Interactive Games, Commentary)
Waiting... Unrated & Raw (enhanced menu, In-Movie remote, Interactive PiP video commentary)
Walk Hard: The Dewey Cox Story (enchanced menu)
V for Vendetta ("In-Movie Experience" picture in picture commentary [Profile 1.1])
War (Complete BD-J enhanced interactive menu, Bookmarks, Blu-line Slider, Interactive PiP video commentary, Trivia mode, Yakuza Fighter Game)
Weeds: Season One (enhanced menu, two discs)
Weeds: Season Two (enhanced menu, two discs, trivia tracks on all episodes, "Test Your Short-Term Memory” game)


[edit] BD-J Upcoming Titles
This list is incomplete; you can help by expanding it.
Note: Special features and release dates are subject to change.
Pirates, Digital Playground Adult Film (enhanced menu, bookmarking, bd-live access)

[edit] Related publication

Programming HD DVD and Blu-ray Disc The HD Cookbook (2008) by Michael Zink, Philip C. Starner, Bill Foote - ISBN 9780071496704 - book website


[edit] See also

Blu-ray Disc
Advanced Content, BD-J's counterpart on HD DVD


[edit] References


^ Blu-ray BD-J Application Development using Java ME
^ "Blu-ray Disc Assn. promotes new Bonus View". http://www.videobusiness.com/article/CA6495668.html. 
^ Biddle to Market Networked Blu-ray Content Service in U.S. by Mark Hefflinger, May 6, 2008
^ HDCookbook for BD-J
^ Blu-ray Disc Java and GEM/MHP/OCAP Authoring Notes and Guidelines
^ Getting (BD-J) PC Player software - mentions that special "developer versions" of the play might be required
^ HelloWorld BD-J Application: Your first cup for the next generation DVD - includes notes on enabling remote debugging or logging with PC players
^ Unified Developer Documentation for BD-J now possible
^ Building Javadoc API Reference Documentation for Blu-ray Disc Application Development
^ Getting a BD-J Platform Definition
^ Blu-ray Disc Application Development with Java ME, Part 1: Creating Your First Application Bruce Hopkins, September 2008



[edit] External links




Blu-ray portal




Official java.net BD-J Forums - Official Sun java.net Forums for Blu-ray Disc Java.
bdjforum.com - Unofficial forum for BD-J developers and issues surround HD authoring.
JavaOne 2007 Technical Sessions: Producing Blu-ray Java Software Titles for Hollywood
Official website for DVB-MHP and DVB-GEM - Open Middleware for Interactive TV
TV Without Borders - MHP/OCAP Website from Steven Morris.
HD Cookbook source repository - Code and other recipies for Blu-Ray Java, GEM, MHP and OCAP
Alticast BD-J solutions








v • d • e

High definition media





Media formats

Blu-ray Disc (List of titles) · HD DVD (List of titles)






Promoter

Blu-ray Disc Association · HD DVD Promotion Group






Interactivity

BD-Java · HDi






Recordable formats

BD-R • BD-RE · HD DVD-R · HD DVD-RW  · HD DVD-RAM






Comparison

Comparison of high definition optical disc formats






Copy protection

AACS (both)  · HDCP (both)  · BD+ (BD)  · ROM-Mark (BD)






Blu-ray Disc players

PlayStation 3 · Sony BDP-S1 · Panasonic DMP-BD10






HD DVD players

Xbox 360 HD DVD Drive · Toshiba HD-A1 · Toshiba HD-XA1













v • d • e

Java





Java platform

Java ME · Java SE · Java EE · Java Card







Sun technologies

Java programming language · Squawk · Java Development Kit · OpenJDK · Java Virtual Machine · JavaFX






Major third-party technologies

JRockit · GNU Classpath · Kaffe · TopLink · Apache Harmony · Apache Struts · Spring framework · Hibernate · JBoss application server · Processing · Tapestry · Thinwire






History

Java version history · Criticism of Java · Java Community Process · Sun Microsystems · Free Java implementations






Language features

Bytecode · Syntax · Applets · Servlets · MIDlets · jsp · Web Start (jnlp)






Scripting languages

Java Tcl · Jython · JRuby · BeanShell · Groovy · Judoscript · Sleep · Bean Scripting Framework · Yoix · Rhino






Java conferences

JavaOne









Retrieved from "http://en.wikipedia.org/wiki/BD-J"
Categories: Blu-ray Disc | Interactive television | Java platform | 120 mm discs | High-definition television | Video storageHidden categories: Incomplete lists 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Deutsch
Español
Français
Italiano
日本語
中文









 This page was last modified on 3 April 2009, at 11:06 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
