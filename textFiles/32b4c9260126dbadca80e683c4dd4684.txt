













Electric Sheep - Wikipedia, the free encyclopedia














/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/skins-1.5";
		var wgArticlePath = "/wiki/$1";
		var wgScriptPath = "/w";
		var wgScript = "/w/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://en.wikipedia.org";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "Electric_Sheep";
		var wgTitle = "Electric Sheep";
		var wgAction = "view";
		var wgArticleId = "399367";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 280654591;
		var wgVersion = "1.15alpha";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgMWSuggestTemplate = "http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest";
		var wgDBname = "enwiki";
		var wgSearchNamespaces = [0];
		var wgMWSuggestMessages = ["with suggestions", "no suggestions"];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/
<!-- wikibits js -->



/*<![CDATA[*/
var wgNotice='';var wgNoticeLocal='';
/*]]>*/ 
<!-- site js -->






if (wgNotice != '') document.writeln(wgNotice); Electric Sheep

From Wikipedia, the free encyclopedia

Jump to: navigation, search 
For other uses, see Electric Sheep (disambiguation).

Electric Sheep




Developed by
Scott Draves


Latest release
2.6.X - 2.7.X BETA


Operating system
Linux, Mac OS X, Microsoft Windows


Type
Screensaver


License
GNU General Public License


Website
www.electricsheep.org






Another sample sheep.


Electric Sheep is a distributed computing project for animating and evolving fractal flames, which are in turn distributed to the networked computers, which display them as a screensaver on the individual node computers of the distributed network. The process is transparent to the casual user, who can simply install the software as a screensaver. Alternatively, the user may become more involved with the project, manually creating sheep (video files of animated fractal flames) for upload to the server.
According to Mitchell Whitelaw in his Metacreation: Art and Artificial Life, "On the screen they are luminous, twisting, elastic shapes, abstract tangles and loops of glowing filaments."[1]
The name "Electric Sheep" is taken from the title of Philip K. Dick's novel Do Androids Dream of Electric Sheep?. The title mirrors the nature of the project: computers (androids) who have started running the screensaver begin rendering (dreaming) the fractal movies (sheep).
The sheep motif is carried over into other aspects of the project: the 100 or so sheep stored on the server at any time is referred to as 'the flock'; creating a new fractal by interpolating or combining the sheep's fractal code with that of another sheep is called mating/breeding; changes to the code are called mutations, etc.
The parameters that generate these movies (sheep) can be created in a few ways: they can be created and submitted by members of the electricsheep mailing list, members of the mailing list can download the parameters of existing sheep and tweak them, or sheep can be mated together automatically by the server or manually by server admins (nicknamed shepherds).
Users may vote on sheep that they like or dislike, and this voting is used for the genetic algorithm which generates new sheep. Each movie is a fractal flame with several of its parameters changed over time. The individual frames of which these movies consist are rendered using 'spare' processing cycles from idle computers on the distributed network of those running the screensaver application, and finished sheep (in the form of .mpg files) are distributed to the network using BitTorrent, a Peer-to-peer filesharing application which is included as part of the Electric Sheep application.
All sheep parameters and movies are distributed under the Creative Commons Attribution license and automatically downloaded by the screen saver.
The screensaver was created and released as Free Software by Scott Draves in 1999 and continues to be developed by him and a team of about five engineers.
The beta version differs from the old versions. It has a new logo, higher quality sheep and other features.

[edit] See also

List of distributed computing projects
Software art
Evolutionary art


[edit] References


Draves, Scott (March 31, 2005). "The Electric Sheep Screen-Saver: A Case Study in Aesthetic Evolution" (pdf) in EvoMusArt05. Applications of Evolutionary Computing, the proceedings of EvoMusArt05.  -- Technical paper about the project.



^ Mitchell Whitelaw (2004). Metacreation: Art and Artificial Life. MIT Press. pp 155.


[edit] External links



Wikimedia Commons has media related to: Electric Sheep 



The Electric Sheep project's main page
Wikispaces has a wiki about: Electric Sheep




Retrieved from "http://en.wikipedia.org/wiki/Electric_Sheep"
Categories: Distributed computing projects | Screensavers | Computer art 






Views


Article
Discussion
Edit this page
History 



Personal tools


Log in / create account






 if (window.isMSIE55) fixalpha(); 

Navigation


Main page
Contents
Featured content
Current events
Random article




Search




 
				




Interaction


About Wikipedia
Community portal
Recent changes
Contact Wikipedia
Donate to Wikipedia
Help




Toolbox


What links here
Related changes
Upload file
Special pages
Printable version Permanent linkCite this page 



Languages


Česky
Deutsch
Italiano
日本語









 This page was last modified on 30 March 2009, at 14:48 (UTC).
All text is available under the terms of the GNU Free Documentation License. (See Copyrights for details.)  Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a U.S. registered 501(c)(3) tax-deductible nonprofit charity.
Privacy policy
About Wikipedia
Disclaimers



if (window.runOnloadHook) runOnloadHook();
